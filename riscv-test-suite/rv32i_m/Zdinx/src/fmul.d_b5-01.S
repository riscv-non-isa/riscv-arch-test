
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Fri Aug 25 06:12:14 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fmul.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmul.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fmul.d_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fmul.d_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x28, rs2==x26, rd==x30,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fee97d52f73d2ed; valaddr_reg:x3; op2:x26; op2val:0x0000000000000000
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f73d2ed, 0x7fee97d5,0x00000000,0x00000000,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 == rd != rs2, rs1==x26, rs2==x30, rd==x26,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x26; dest:x26; op1val:0x7fee97d52f73d2ed; valaddr_reg:x3; op2:x30; op2val:0x0000000000000000
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x26, x27, x26, x27,x30,x31,32, 0, 0, 0x2f73d2ed, 0x7fee97d5,0x00000000,0x00000000,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 == rs2 == rd, rs1==x24, rs2==x24, rd==x24,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x24; dest:x24; op1val:0x7fee97d52f73d2ed; valaddr_reg:x3; op2:x24; op2val:0x7fee97d52f73d2ed
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x24, x25, x24, x25,x24,x25,64, 0, 0, 0x2f73d2ed, 0x7fee97d5,0x2f73d2ed,0x7fee97d5,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1 == rs2 != rd, rs1==x22, rs2==x22, rd==x28,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x22; dest:x28; op1val:0x7fee97d52f73d2ed; valaddr_reg:x3; op2:x22; op2val:0x7fee97d52f73d2ed
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x28, x29, x22, x23,x22,x23,96, 0, 0, 0x2f73d2ed, 0x7fee97d5,0x2f73d2ed,0x7fee97d5,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs2 == rd != rs1, rs1==x30, rs2==x20, rd==x20,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x30; dest:x20; op1val:0x7fee97d52f73d2ed; valaddr_reg:x3; op2:x20; op2val:0x0000000000000000
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x20, x21, x30, x31,x20,x21,128, 0, 0, 0x2f73d2ed, 0x7fee97d5,0x00000000,0x00000000,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x20, rs2==x28, rd==x22,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xcf44d05dc866f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x20; dest:x22; op1val:0x7facf44d05dc866f; valaddr_reg:x3; op2:x28; op2val:0x0000000000000000
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x22, x23, x20, x21,x28,x29,0, 0, 0, 0x05dc866f, 0x7facf44d,0x00000000,0x00000000,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x14, rd==x18,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xcf44d05dc866f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x16; dest:x18; op1val:0x7facf44d05dc866f; valaddr_reg:x3; op2:x14; op2val:0x0000000000000000
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x18, x19, x16, x17,x14,x15,32, 0, 0, 0x05dc866f, 0x7facf44d,0x00000000,0x00000000,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x14, rs2==x18, rd==x16,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xcf44d05dc866f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x14; dest:x16; op1val:0x7facf44d05dc866f; valaddr_reg:x3; op2:x18; op2val:0x0000000000000000
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x16, x17, x14, x15,x18,x19,64, 0, 0, 0x05dc866f, 0x7facf44d,0x00000000,0x00000000,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x18, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xcf44d05dc866f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x18; dest:x14; op1val:0x7facf44d05dc866f; valaddr_reg:x3; op2:x16; op2val:0x0000000000000000
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x14, x15, x18, x19,x16,x17,96, 0, 0, 0x05dc866f, 0x7facf44d,0x00000000,0x00000000,x3, 16*SIGALIGN, x4,x1, x2)

inst_9:// rs1==x10, rs2==x8, rd==x12,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xcf44d05dc866f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x10; dest:x12; op1val:0x7facf44d05dc866f; valaddr_reg:x3; op2:x8; op2val:0x0000000000000000
offset:18*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x12, x13, x10, x11,x8,x9,128, 0, 0, 0x05dc866f, 0x7facf44d,0x00000000,0x00000000,x3, 18*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x15,test_dataset_1)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x8; dest:x10; op1val:0x7feabc6824ad2440; valaddr_reg:x15; op2:x12; op2val:0x0000000000000000
offset:0*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0x24ad2440, 0x7feabc68,0x00000000,0x00000000,x15, 0*SIGALIGN, x16,x1, x14)

inst_11:// rs1==x12, rs2==x10, rd==x8,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x12; dest:x8; op1val:0x7feabc6824ad2440; valaddr_reg:x15; op2:x10; op2val:0x0000000000000000
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x8, x9, x12, x13,x10,x11,32, 0, 0, 0x24ad2440, 0x7feabc68,0x00000000,0x00000000,x15, 2*SIGALIGN, x16,x1, x14)

inst_12:// rs1==x4, rs2==x2, rd==x6,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x4; dest:x6; op1val:0x7feabc6824ad2440; valaddr_reg:x15; op2:x2; op2val:0x0000000000000000
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x6, x7, x4, x5,x2,x3,64, 0, 0, 0x24ad2440, 0x7feabc68,0x00000000,0x00000000,x15, 4*SIGALIGN, x16,x1, x14)

inst_13:// rs1==x2, rs2==x6, rd==x4,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x2; dest:x4; op1val:0x7feabc6824ad2440; valaddr_reg:x15; op2:x6; op2val:0x0000000000000000
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x4, x5, x2, x3,x6,x7,96, 0, 0, 0x24ad2440, 0x7feabc68,0x00000000,0x00000000,x15, 6*SIGALIGN, x16,x1, x14)

inst_14:// rs1==x6, rs2==x4, rd==x2,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x6; dest:x2; op1val:0x7feabc6824ad2440; valaddr_reg:x15; op2:x4; op2val:0x0000000000000000
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x2, x3, x6, x7,x4,x5,128, 0, 0, 0x24ad2440, 0x7feabc68,0x00000000,0x00000000,x15, 8*SIGALIGN, x16,x1, x14)

inst_15:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x56e6e736a538e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe56e6e736a538e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x736a538e, 0x7fe56e6e,0x00000000,0x00000000,x15, 10*SIGALIGN, x16,x1, x14)

inst_16:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x56e6e736a538e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe56e6e736a538e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x736a538e, 0x7fe56e6e,0x00000000,0x00000000,x15, 12*SIGALIGN, x16,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x56e6e736a538e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe56e6e736a538e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x736a538e, 0x7fe56e6e,0x00000000,0x00000000,x15, 14*SIGALIGN, x16,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x56e6e736a538e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe56e6e736a538e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x736a538e, 0x7fe56e6e,0x00000000,0x00000000,x15, 16*SIGALIGN, x16,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x56e6e736a538e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe56e6e736a538e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x736a538e, 0x7fe56e6e,0x00000000,0x00000000,x15, 18*SIGALIGN, x16,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe363e504d94fe2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x04d94fe2, 0x7fe363e5,0x00000000,0x00000000,x15, 20*SIGALIGN, x16,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe363e504d94fe2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x04d94fe2, 0x7fe363e5,0x00000000,0x00000000,x15, 22*SIGALIGN, x16,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe363e504d94fe2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x04d94fe2, 0x7fe363e5,0x00000000,0x00000000,x15, 24*SIGALIGN, x16,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe363e504d94fe2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x04d94fe2, 0x7fe363e5,0x00000000,0x00000000,x15, 26*SIGALIGN, x16,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe363e504d94fe2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x04d94fe2, 0x7fe363e5,0x00000000,0x00000000,x15, 28*SIGALIGN, x16,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe299392ab99898; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2ab99898, 0x7fe29939,0x00000000,0x00000000,x15, 30*SIGALIGN, x16,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe299392ab99898; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2ab99898, 0x7fe29939,0x00000000,0x00000000,x15, 32*SIGALIGN, x16,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe299392ab99898; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2ab99898, 0x7fe29939,0x00000000,0x00000000,x15, 34*SIGALIGN, x16,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe299392ab99898; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2ab99898, 0x7fe29939,0x00000000,0x00000000,x15, 36*SIGALIGN, x16,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe299392ab99898; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2ab99898, 0x7fe29939,0x00000000,0x00000000,x15, 38*SIGALIGN, x16,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdb9017651b96db; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x651b96db, 0x7fdb9017,0x00000000,0x00000000,x15, 40*SIGALIGN, x16,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdb9017651b96db; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x651b96db, 0x7fdb9017,0x00000000,0x00000000,x15, 42*SIGALIGN, x16,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdb9017651b96db; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x651b96db, 0x7fdb9017,0x00000000,0x00000000,x15, 44*SIGALIGN, x16,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdb9017651b96db; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x651b96db, 0x7fdb9017,0x00000000,0x00000000,x15, 46*SIGALIGN, x16,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdb9017651b96db; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x651b96db, 0x7fdb9017,0x00000000,0x00000000,x15, 48*SIGALIGN, x16,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x00000000,0x00000000,x15, 50*SIGALIGN, x16,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x00000000,0x00000000,x15, 52*SIGALIGN, x16,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x00000000,0x00000000,x15, 54*SIGALIGN, x16,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x00000000,0x00000000,x15, 56*SIGALIGN, x16,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x00000000,0x00000000,x15, 58*SIGALIGN, x16,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fee61729d7cfd5e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x00000000,0x00000000,x15, 60*SIGALIGN, x16,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fee61729d7cfd5e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x00000000,0x00000000,x15, 62*SIGALIGN, x16,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fee61729d7cfd5e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x00000000,0x00000000,x15, 64*SIGALIGN, x16,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fee61729d7cfd5e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x00000000,0x00000000,x15, 66*SIGALIGN, x16,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fee61729d7cfd5e; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x00000000,0x00000000,x15, 68*SIGALIGN, x16,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb4043bd9, 0x7fdc787d,0x00000000,0x00000000,x15, 70*SIGALIGN, x16,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb4043bd9, 0x7fdc787d,0x00000000,0x00000000,x15, 72*SIGALIGN, x16,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb4043bd9, 0x7fdc787d,0x00000000,0x00000000,x15, 74*SIGALIGN, x16,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb4043bd9, 0x7fdc787d,0x00000000,0x00000000,x15, 76*SIGALIGN, x16,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb4043bd9, 0x7fdc787d,0x00000000,0x00000000,x15, 78*SIGALIGN, x16,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x77bf010f, 0x7fa264ac,0x00000000,0x00000000,x15, 80*SIGALIGN, x16,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x77bf010f, 0x7fa264ac,0x00000000,0x00000000,x15, 82*SIGALIGN, x16,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x77bf010f, 0x7fa264ac,0x00000000,0x00000000,x15, 84*SIGALIGN, x16,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x77bf010f, 0x7fa264ac,0x00000000,0x00000000,x15, 86*SIGALIGN, x16,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x77bf010f, 0x7fa264ac,0x00000000,0x00000000,x15, 88*SIGALIGN, x16,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x00000000,0x00000000,x15, 90*SIGALIGN, x16,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x00000000,0x00000000,x15, 92*SIGALIGN, x16,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x00000000,0x00000000,x15, 94*SIGALIGN, x16,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x00000000,0x00000000,x15, 96*SIGALIGN, x16,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x00000000,0x00000000,x15, 98*SIGALIGN, x16,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1b638e23, 0x7fd8522a,0x00000000,0x00000000,x15, 100*SIGALIGN, x16,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1b638e23, 0x7fd8522a,0x00000000,0x00000000,x15, 102*SIGALIGN, x16,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1b638e23, 0x7fd8522a,0x00000000,0x00000000,x15, 104*SIGALIGN, x16,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1b638e23, 0x7fd8522a,0x00000000,0x00000000,x15, 106*SIGALIGN, x16,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1b638e23, 0x7fd8522a,0x00000000,0x00000000,x15, 108*SIGALIGN, x16,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0x00000000,0x00000000,x15, 110*SIGALIGN, x16,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0x00000000,0x00000000,x15, 112*SIGALIGN, x16,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0x00000000,0x00000000,x15, 114*SIGALIGN, x16,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0x00000000,0x00000000,x15, 116*SIGALIGN, x16,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0x00000000,0x00000000,x15, 118*SIGALIGN, x16,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb3b08c6b, 0x7fce394a,0x00000000,0x00000000,x15, 120*SIGALIGN, x16,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb3b08c6b, 0x7fce394a,0x00000000,0x00000000,x15, 122*SIGALIGN, x16,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb3b08c6b, 0x7fce394a,0x00000000,0x00000000,x15, 124*SIGALIGN, x16,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb3b08c6b, 0x7fce394a,0x00000000,0x00000000,x15, 126*SIGALIGN, x16,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb3b08c6b, 0x7fce394a,0x00000000,0x00000000,x15, 128*SIGALIGN, x16,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4963827f, 0x7fd4cf24,0x00000000,0x00000000,x15, 130*SIGALIGN, x16,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4963827f, 0x7fd4cf24,0x00000000,0x00000000,x15, 132*SIGALIGN, x16,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4963827f, 0x7fd4cf24,0x00000000,0x00000000,x15, 134*SIGALIGN, x16,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4963827f, 0x7fd4cf24,0x00000000,0x00000000,x15, 136*SIGALIGN, x16,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4963827f, 0x7fd4cf24,0x00000000,0x00000000,x15, 138*SIGALIGN, x16,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf57052f0, 0x7fe053c0,0x00000000,0x00000000,x15, 140*SIGALIGN, x16,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf57052f0, 0x7fe053c0,0x00000000,0x00000000,x15, 142*SIGALIGN, x16,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf57052f0, 0x7fe053c0,0x00000000,0x00000000,x15, 144*SIGALIGN, x16,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf57052f0, 0x7fe053c0,0x00000000,0x00000000,x15, 146*SIGALIGN, x16,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf57052f0, 0x7fe053c0,0x00000000,0x00000000,x15, 148*SIGALIGN, x16,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x723d53e2, 0x7fe59556,0x00000000,0x00000000,x15, 150*SIGALIGN, x16,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x723d53e2, 0x7fe59556,0x00000000,0x00000000,x15, 152*SIGALIGN, x16,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x723d53e2, 0x7fe59556,0x00000000,0x00000000,x15, 154*SIGALIGN, x16,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x723d53e2, 0x7fe59556,0x00000000,0x00000000,x15, 156*SIGALIGN, x16,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x723d53e2, 0x7fe59556,0x00000000,0x00000000,x15, 158*SIGALIGN, x16,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x55c85538, 0x7fec9823,0x00000000,0x00000000,x15, 160*SIGALIGN, x16,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x55c85538, 0x7fec9823,0x00000000,0x00000000,x15, 162*SIGALIGN, x16,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x55c85538, 0x7fec9823,0x00000000,0x00000000,x15, 164*SIGALIGN, x16,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x55c85538, 0x7fec9823,0x00000000,0x00000000,x15, 166*SIGALIGN, x16,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x55c85538, 0x7fec9823,0x00000000,0x00000000,x15, 168*SIGALIGN, x16,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfa19f977, 0x7fe78037,0x00000000,0x00000000,x15, 170*SIGALIGN, x16,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xfa19f977, 0x7fe78037,0x00000000,0x00000000,x15, 172*SIGALIGN, x16,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xfa19f977, 0x7fe78037,0x00000000,0x00000000,x15, 174*SIGALIGN, x16,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfa19f977, 0x7fe78037,0x00000000,0x00000000,x15, 176*SIGALIGN, x16,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xfa19f977, 0x7fe78037,0x00000000,0x00000000,x15, 178*SIGALIGN, x16,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd174ff65, 0x7fe8698e,0x00000000,0x00000000,x15, 180*SIGALIGN, x16,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd174ff65, 0x7fe8698e,0x00000000,0x00000000,x15, 182*SIGALIGN, x16,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd174ff65, 0x7fe8698e,0x00000000,0x00000000,x15, 184*SIGALIGN, x16,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd174ff65, 0x7fe8698e,0x00000000,0x00000000,x15, 186*SIGALIGN, x16,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd174ff65, 0x7fe8698e,0x00000000,0x00000000,x15, 188*SIGALIGN, x16,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x22e524ad, 0x7fd6a472,0x00008000,0x00000000,x15, 190*SIGALIGN, x16,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x22e524ad, 0x7fd6a472,0x00008000,0x00000000,x15, 192*SIGALIGN, x16,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x22e524ad, 0x7fd6a472,0x00008000,0x00000000,x15, 194*SIGALIGN, x16,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x22e524ad, 0x7fd6a472,0x00008000,0x00000000,x15, 196*SIGALIGN, x16,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x22e524ad, 0x7fd6a472,0x00008000,0x00000000,x15, 198*SIGALIGN, x16,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x79c877a7, 0x7feec7e4,0x00008000,0x00000000,x15, 200*SIGALIGN, x16,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x79c877a7, 0x7feec7e4,0x00008000,0x00000000,x15, 202*SIGALIGN, x16,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x79c877a7, 0x7feec7e4,0x00008000,0x00000000,x15, 204*SIGALIGN, x16,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x79c877a7, 0x7feec7e4,0x00008000,0x00000000,x15, 206*SIGALIGN, x16,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x79c877a7, 0x7feec7e4,0x00008000,0x00000000,x15, 208*SIGALIGN, x16,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x259975cf, 0x7fe820cd,0x00008000,0x00000000,x15, 210*SIGALIGN, x16,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x259975cf, 0x7fe820cd,0x00008000,0x00000000,x15, 212*SIGALIGN, x16,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x259975cf, 0x7fe820cd,0x00008000,0x00000000,x15, 214*SIGALIGN, x16,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x259975cf, 0x7fe820cd,0x00008000,0x00000000,x15, 216*SIGALIGN, x16,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x259975cf, 0x7fe820cd,0x00008000,0x00000000,x15, 218*SIGALIGN, x16,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf53d41f5, 0x7fdd87af,0x00008000,0x00000000,x15, 220*SIGALIGN, x16,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf53d41f5, 0x7fdd87af,0x00008000,0x00000000,x15, 222*SIGALIGN, x16,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf53d41f5, 0x7fdd87af,0x00008000,0x00000000,x15, 224*SIGALIGN, x16,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf53d41f5, 0x7fdd87af,0x00008000,0x00000000,x15, 226*SIGALIGN, x16,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf53d41f5, 0x7fdd87af,0x00008000,0x00000000,x15, 228*SIGALIGN, x16,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0x00008000,0x00000000,x15, 230*SIGALIGN, x16,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0x00008000,0x00000000,x15, 232*SIGALIGN, x16,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0x00008000,0x00000000,x15, 234*SIGALIGN, x16,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0x00008000,0x00000000,x15, 236*SIGALIGN, x16,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0x00008000,0x00000000,x15, 238*SIGALIGN, x16,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x00008000,0x00000000,x15, 240*SIGALIGN, x16,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x00008000,0x00000000,x15, 242*SIGALIGN, x16,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x00008000,0x00000000,x15, 244*SIGALIGN, x16,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x00008000,0x00000000,x15, 246*SIGALIGN, x16,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x00008000,0x00000000,x15, 248*SIGALIGN, x16,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x00008000,0x00000000,x15, 250*SIGALIGN, x16,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x00008000,0x00000000,x15, 252*SIGALIGN, x16,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x00008000,0x00000000,x15, 254*SIGALIGN, x16,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x00008000,0x00000000,x15, 256*SIGALIGN, x16,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x00008000,0x00000000,x15, 258*SIGALIGN, x16,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe39cda56, 0x7fecca58,0x00008000,0x00000000,x15, 260*SIGALIGN, x16,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe39cda56, 0x7fecca58,0x00008000,0x00000000,x15, 262*SIGALIGN, x16,x1, x14)

inst_142:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe39cda56, 0x7fecca58,0x00008000,0x00000000,x15, 264*SIGALIGN, x16,x1, x14)

inst_143:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe39cda56, 0x7fecca58,0x00008000,0x00000000,x15, 266*SIGALIGN, x16,x1, x14)

inst_144:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe39cda56, 0x7fecca58,0x00008000,0x00000000,x15, 268*SIGALIGN, x16,x1, x14)

inst_145:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x00008000,0x00000000,x15, 270*SIGALIGN, x16,x1, x14)

inst_146:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x00008000,0x00000000,x15, 272*SIGALIGN, x16,x1, x14)

inst_147:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x00008000,0x00000000,x15, 274*SIGALIGN, x16,x1, x14)

inst_148:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x00008000,0x00000000,x15, 276*SIGALIGN, x16,x1, x14)

inst_149:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x00008000,0x00000000,x15, 278*SIGALIGN, x16,x1, x14)

inst_150:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe5d38221, 0x7fe72925,0x00008000,0x00000000,x15, 280*SIGALIGN, x16,x1, x14)

inst_151:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe5d38221, 0x7fe72925,0x00008000,0x00000000,x15, 282*SIGALIGN, x16,x1, x14)

inst_152:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe5d38221, 0x7fe72925,0x00008000,0x00000000,x15, 284*SIGALIGN, x16,x1, x14)

inst_153:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe5d38221, 0x7fe72925,0x00008000,0x00000000,x15, 286*SIGALIGN, x16,x1, x14)

inst_154:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe5d38221, 0x7fe72925,0x00008000,0x00000000,x15, 288*SIGALIGN, x16,x1, x14)

inst_155:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x00008000,0x00000000,x15, 290*SIGALIGN, x16,x1, x14)

inst_156:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x00008000,0x00000000,x15, 292*SIGALIGN, x16,x1, x14)

inst_157:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x00008000,0x00000000,x15, 294*SIGALIGN, x16,x1, x14)

inst_158:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x00008000,0x00000000,x15, 296*SIGALIGN, x16,x1, x14)

inst_159:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x00008000,0x00000000,x15, 298*SIGALIGN, x16,x1, x14)

inst_160:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0f571128, 0x7fe662e4,0x00008000,0x00000000,x15, 300*SIGALIGN, x16,x1, x14)

inst_161:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0f571128, 0x7fe662e4,0x00008000,0x00000000,x15, 302*SIGALIGN, x16,x1, x14)

inst_162:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0f571128, 0x7fe662e4,0x00008000,0x00000000,x15, 304*SIGALIGN, x16,x1, x14)

inst_163:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0f571128, 0x7fe662e4,0x00008000,0x00000000,x15, 306*SIGALIGN, x16,x1, x14)

inst_164:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0f571128, 0x7fe662e4,0x00008000,0x00000000,x15, 308*SIGALIGN, x16,x1, x14)

inst_165:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3a77236c, 0x7fed0dd9,0x00008000,0x00000000,x15, 310*SIGALIGN, x16,x1, x14)

inst_166:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3a77236c, 0x7fed0dd9,0x00008000,0x00000000,x15, 312*SIGALIGN, x16,x1, x14)

inst_167:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3a77236c, 0x7fed0dd9,0x00008000,0x00000000,x15, 314*SIGALIGN, x16,x1, x14)

inst_168:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3a77236c, 0x7fed0dd9,0x00008000,0x00000000,x15, 316*SIGALIGN, x16,x1, x14)

inst_169:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3a77236c, 0x7fed0dd9,0x00008000,0x00000000,x15, 318*SIGALIGN, x16,x1, x14)

inst_170:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x00008000,0x00000000,x15, 320*SIGALIGN, x16,x1, x14)

inst_171:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x00008000,0x00000000,x15, 322*SIGALIGN, x16,x1, x14)

inst_172:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x00008000,0x00000000,x15, 324*SIGALIGN, x16,x1, x14)

inst_173:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x00008000,0x00000000,x15, 326*SIGALIGN, x16,x1, x14)

inst_174:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x00008000,0x00000000,x15, 328*SIGALIGN, x16,x1, x14)

inst_175:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea2b5073270ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feea2b5073270ea; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x073270ea, 0x7feea2b5,0x00008000,0x00000000,x15, 330*SIGALIGN, x16,x1, x14)

inst_176:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea2b5073270ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feea2b5073270ea; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x073270ea, 0x7feea2b5,0x00008000,0x00000000,x15, 332*SIGALIGN, x16,x1, x14)

inst_177:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea2b5073270ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feea2b5073270ea; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x073270ea, 0x7feea2b5,0x00008000,0x00000000,x15, 334*SIGALIGN, x16,x1, x14)

inst_178:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea2b5073270ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feea2b5073270ea; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x073270ea, 0x7feea2b5,0x00008000,0x00000000,x15, 336*SIGALIGN, x16,x1, x14)

inst_179:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea2b5073270ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feea2b5073270ea; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x073270ea, 0x7feea2b5,0x00008000,0x00000000,x15, 338*SIGALIGN, x16,x1, x14)

inst_180:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x022ce6a3fae64 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe022ce6a3fae64; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6a3fae64, 0x7fe022ce,0x00008000,0x00000000,x15, 340*SIGALIGN, x16,x1, x14)

inst_181:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x022ce6a3fae64 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe022ce6a3fae64; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6a3fae64, 0x7fe022ce,0x00008000,0x00000000,x15, 342*SIGALIGN, x16,x1, x14)

inst_182:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x022ce6a3fae64 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe022ce6a3fae64; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6a3fae64, 0x7fe022ce,0x00008000,0x00000000,x15, 344*SIGALIGN, x16,x1, x14)

inst_183:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x022ce6a3fae64 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe022ce6a3fae64; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6a3fae64, 0x7fe022ce,0x00008000,0x00000000,x15, 346*SIGALIGN, x16,x1, x14)

inst_184:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x022ce6a3fae64 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe022ce6a3fae64; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6a3fae64, 0x7fe022ce,0x00008000,0x00000000,x15, 348*SIGALIGN, x16,x1, x14)

inst_185:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d8630276966c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe4d8630276966c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0276966c, 0x7fe4d863,0x00008000,0x00000000,x15, 350*SIGALIGN, x16,x1, x14)

inst_186:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d8630276966c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe4d8630276966c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0276966c, 0x7fe4d863,0x00008000,0x00000000,x15, 352*SIGALIGN, x16,x1, x14)

inst_187:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d8630276966c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe4d8630276966c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0276966c, 0x7fe4d863,0x00008000,0x00000000,x15, 354*SIGALIGN, x16,x1, x14)

inst_188:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d8630276966c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe4d8630276966c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0276966c, 0x7fe4d863,0x00008000,0x00000000,x15, 356*SIGALIGN, x16,x1, x14)

inst_189:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d8630276966c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe4d8630276966c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0276966c, 0x7fe4d863,0x00008000,0x00000000,x15, 358*SIGALIGN, x16,x1, x14)

inst_190:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f541e5d8f1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd3f541e5d8f1c1; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe5d8f1c1, 0x7fd3f541,0x00008000,0x00000000,x15, 360*SIGALIGN, x16,x1, x14)

inst_191:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f541e5d8f1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd3f541e5d8f1c1; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe5d8f1c1, 0x7fd3f541,0x00008000,0x00000000,x15, 362*SIGALIGN, x16,x1, x14)

inst_192:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f541e5d8f1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd3f541e5d8f1c1; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe5d8f1c1, 0x7fd3f541,0x00008000,0x00000000,x15, 364*SIGALIGN, x16,x1, x14)

inst_193:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f541e5d8f1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd3f541e5d8f1c1; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe5d8f1c1, 0x7fd3f541,0x00008000,0x00000000,x15, 366*SIGALIGN, x16,x1, x14)

inst_194:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f541e5d8f1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd3f541e5d8f1c1; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe5d8f1c1, 0x7fd3f541,0x00008000,0x00000000,x15, 368*SIGALIGN, x16,x1, x14)

inst_195:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0616a9d776586 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0616a9d776586; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9d776586, 0x7fe0616a,0x00008000,0x00000000,x15, 370*SIGALIGN, x16,x1, x14)

inst_196:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0616a9d776586 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0616a9d776586; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9d776586, 0x7fe0616a,0x00008000,0x00000000,x15, 372*SIGALIGN, x16,x1, x14)

inst_197:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0616a9d776586 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0616a9d776586; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9d776586, 0x7fe0616a,0x00008000,0x00000000,x15, 374*SIGALIGN, x16,x1, x14)

inst_198:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0616a9d776586 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0616a9d776586; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9d776586, 0x7fe0616a,0x00008000,0x00000000,x15, 376*SIGALIGN, x16,x1, x14)

inst_199:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0616a9d776586 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0616a9d776586; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9d776586, 0x7fe0616a,0x00008000,0x00000000,x15, 378*SIGALIGN, x16,x1, x14)

inst_200:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f1c99f873d3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe3f1c99f873d3c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9f873d3c, 0x7fe3f1c9,0x00008000,0x00000000,x15, 380*SIGALIGN, x16,x1, x14)

inst_201:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f1c99f873d3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe3f1c99f873d3c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9f873d3c, 0x7fe3f1c9,0x00008000,0x00000000,x15, 382*SIGALIGN, x16,x1, x14)

inst_202:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f1c99f873d3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe3f1c99f873d3c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9f873d3c, 0x7fe3f1c9,0x00008000,0x00000000,x15, 384*SIGALIGN, x16,x1, x14)

inst_203:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f1c99f873d3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe3f1c99f873d3c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9f873d3c, 0x7fe3f1c9,0x00008000,0x00000000,x15, 386*SIGALIGN, x16,x1, x14)

inst_204:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f1c99f873d3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe3f1c99f873d3c; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9f873d3c, 0x7fe3f1c9,0x00008000,0x00000000,x15, 388*SIGALIGN, x16,x1, x14)

inst_205:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa40b77d5da767 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fea40b77d5da767; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7d5da767, 0x7fea40b7,0x00008000,0x00000000,x15, 390*SIGALIGN, x16,x1, x14)

inst_206:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa40b77d5da767 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fea40b77d5da767; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7d5da767, 0x7fea40b7,0x00008000,0x00000000,x15, 392*SIGALIGN, x16,x1, x14)

inst_207:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa40b77d5da767 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fea40b77d5da767; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7d5da767, 0x7fea40b7,0x00008000,0x00000000,x15, 394*SIGALIGN, x16,x1, x14)

inst_208:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa40b77d5da767 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fea40b77d5da767; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7d5da767, 0x7fea40b7,0x00008000,0x00000000,x15, 396*SIGALIGN, x16,x1, x14)

inst_209:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa40b77d5da767 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fea40b77d5da767; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7d5da767, 0x7fea40b7,0x00008000,0x00000000,x15, 398*SIGALIGN, x16,x1, x14)

inst_210:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fee97d52f73d2ed; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2f73d2ed, 0x7fee97d5,0x00000000,0x00000000,x15, 400*SIGALIGN, x16,x1, x14)

inst_211:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fee97d52f73d2ed; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2f73d2ed, 0x7fee97d5,0x00000000,0x00000000,x15, 402*SIGALIGN, x16,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x2f73d2ed,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f73d2ed,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f73d2ed,64,FLEN)
NAN_BOXED(0x2f73d2ed,64,FLEN)
NAN_BOXED(0x2f73d2ed,64,FLEN)
NAN_BOXED(0x2f73d2ed,64,FLEN)
NAN_BOXED(0x2f73d2ed,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x05dc866f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x05dc866f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x05dc866f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x05dc866f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x05dc866f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
test_dataset_1:
NAN_BOXED(0x24ad2440,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x24ad2440,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x24ad2440,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x24ad2440,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x24ad2440,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x736a538e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x736a538e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x736a538e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x736a538e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x736a538e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x04d94fe2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x04d94fe2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x04d94fe2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x04d94fe2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x04d94fe2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2ab99898,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2ab99898,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2ab99898,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2ab99898,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2ab99898,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x651b96db,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x651b96db,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x651b96db,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x651b96db,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x651b96db,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x073270ea,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x073270ea,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x073270ea,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x073270ea,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x073270ea,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x6a3fae64,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x6a3fae64,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x6a3fae64,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x6a3fae64,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x6a3fae64,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0276966c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0276966c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0276966c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0276966c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x0276966c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d8f1c1,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d8f1c1,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d8f1c1,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d8f1c1,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0xe5d8f1c1,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9d776586,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9d776586,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9d776586,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9d776586,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9d776586,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f873d3c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f873d3c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f873d3c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f873d3c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x9f873d3c,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x7d5da767,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x7d5da767,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x7d5da767,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x7d5da767,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x7d5da767,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x2f73d2ed,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f73d2ed,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 20*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 404*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
