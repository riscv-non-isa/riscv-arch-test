
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Fri Aug 25 05:36:11 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fsub.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fsub.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fsub.d_b13 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fsub.d_b13)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x132d8f91b7583 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x30; dest:x30; op1val:0x7fc132d8f91b7583; valaddr_reg:x3; op2:x30; op2val:0x7fc132d8f91b7583
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x30, x31,x30,x31,0, 0, 0, 0xf91b7583, 0x7fc132d8,0xf91b7583,0x7fc132d8,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x26, rs2==x24, rd==x28,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x870d778409f12 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x870d778409f12 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x26; dest:x28; op1val:0x7fe870d778409f12; valaddr_reg:x3; op2:x24; op2val:0x7fe870d778409f12
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x28, x29, x26, x27,x24,x25,0, 0, 0, 0x78409f12, 0x7fe870d7,0x78409f12,0x7fe870d7,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 == rd != rs2, rs1==x24, rs2==x28, rd==x24,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfb5355e167379 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfb5355e167379 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x24; dest:x24; op1val:0x7fdfb5355e167379; valaddr_reg:x3; op2:x28; op2val:0x7fdfb5355e167379
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x24, x25, x24, x25,x28,x29,0, 0, 0, 0x5e167379, 0x7fdfb535,0x5e167379,0x7fdfb535,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs2 == rd != rs1, rs1==x28, rs2==x26, rd==x26,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d9d98184b9d9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4d9d98184b9d9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x26; op1val:0x7fe4d9d98184b9d9; valaddr_reg:x3; op2:x26; op2val:0x7fe4d9d98184b9d9
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x26, x27, x28, x29,x26,x27,0, 0, 0, 0x8184b9d9, 0x7fe4d9d9,0x8184b9d9,0x7fe4d9d9,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs1 == rs2 != rd, rs1==x20, rs2==x20, rd==x22,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8072e8f9c858f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x8072e8f9c858f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x20; dest:x22; op1val:0x7fb8072e8f9c858f; valaddr_reg:x3; op2:x20; op2val:0x7fb8072e8f9c858f
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x22, x23, x20, x21,x20,x21,0, 0, 0, 0x8f9c858f, 0x7fb8072e,0x8f9c858f,0x7fb8072e,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabe96758f2a09 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xabe96758f2a09 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x22; dest:x20; op1val:0x7feabe96758f2a09; valaddr_reg:x3; op2:x18; op2val:0x7feabe96758f2a09
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x20, x21, x22, x23,x18,x19,0, 0, 0, 0x758f2a09, 0x7feabe96,0x758f2a09,0x7feabe96,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x22, rd==x18,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x86499331191c4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x86499331191c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x16; dest:x18; op1val:0x7fe86499331191c4; valaddr_reg:x3; op2:x22; op2val:0x7fe86499331191c4
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x18, x19, x16, x17,x22,x23,0, 0, 0, 0x331191c4, 0x7fe86499,0x331191c4,0x7fe86499,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc81394a2171e9 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xc81394a2171e9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x18; dest:x16; op1val:0x7fdc81394a2171e9; valaddr_reg:x3; op2:x14; op2val:0x7fdc81394a2171e9
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x16, x17, x18, x19,x14,x15,0, 0, 0, 0x4a2171e9, 0x7fdc8139,0x4a2171e9,0x7fdc8139,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd481499755d4b and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xd481499755d4b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x12; dest:x14; op1val:0x7fcd481499755d4b; valaddr_reg:x3; op2:x16; op2val:0x7fcd481499755d4b
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x14, x15, x12, x13,x16,x17,0, 0, 0, 0x99755d4b, 0x7fcd4814,0x99755d4b,0x7fcd4814,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd87e65450c45 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xcd87e65450c45 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x14; dest:x12; op1val:0x7fecd87e65450c45; valaddr_reg:x16; op2:x10; op2val:0x7fecd87e65450c45
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x12, x13, x14, x15,x10,x11,0, 0, 0, 0x65450c45, 0x7fecd87e,0x65450c45,0x7fecd87e,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa0e7ad32453df and fs2 == 0 and fe2 == 0x7f9 and fm2 == 0xa0e7ad32453df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x8; dest:x10; op1val:0x7f9a0e7ad32453df; valaddr_reg:x16; op2:x12; op2val:0x7f9a0e7ad32453df
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0xd32453df, 0x7f9a0e7a,0xd32453df,0x7f9a0e7a,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0d828b86622a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe0d828b86622a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x10; dest:x8; op1val:0x7fee0d828b86622a; valaddr_reg:x16; op2:x6; op2val:0x7fee0d828b86622a
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x8, x9, x10, x11,x6,x7,0, 0, 0, 0x8b86622a, 0x7fee0d82,0x8b86622a,0x7fee0d82,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbb9876f8130c3 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xbb9876f8130c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x4; dest:x6; op1val:0x7fcbb9876f8130c3; valaddr_reg:x16; op2:x8; op2val:0x7fcbb9876f8130c3
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x6, x7, x4, x5,x8,x9,0, 0, 0, 0x6f8130c3, 0x7fcbb987,0x6f8130c3,0x7fcbb987,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdbcde43895c3f and fs2 == 0 and fe2 == 0x7f9 and fm2 == 0xdbcde43895c3f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x6; dest:x4; op1val:0x7f9dbcde43895c3f; valaddr_reg:x16; op2:x2; op2val:0x7f9dbcde43895c3f
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x4, x5, x6, x7,x2,x3,0, 0, 0, 0x43895c3f, 0x7f9dbcde,0x43895c3f,0x7f9dbcde,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc0659af8369fd and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xc0659af8369fd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x2; dest:x30; op1val:0x7fdc0659af8369fd; valaddr_reg:x16; op2:x28; op2val:0x7fdc0659af8369fd
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x2, x3,x28,x29,0, 0, 0, 0xaf8369fd, 0x7fdc0659,0xaf8369fd,0x7fdc0659,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdd5b61587fd27 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xdd5b61587fd27 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcdd5b61587fd27; valaddr_reg:x16; op2:x4; op2val:0x7fcdd5b61587fd27
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x4,x5,0, 0, 0, 0x1587fd27, 0x7fcdd5b6,0x1587fd27,0x7fcdd5b6,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc01045c2cd787 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xc01045c2cd787 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x30; dest:x2; op1val:0x7fcc01045c2cd787; valaddr_reg:x16; op2:x28; op2val:0x7fcc01045c2cd787
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x2, x3, x30, x31,x28,x29,0, 0, 0, 0x5c2cd787, 0x7fcc0104,0x5c2cd787,0x7fcc0104,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x28bc82f697c4d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x28bc82f697c4d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd28bc82f697c4d; valaddr_reg:x16; op2:x26; op2val:0x7fd28bc82f697c4d
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f697c4d, 0x7fd28bc8,0x2f697c4d,0x7fd28bc8,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xacd7053aa42a2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xacd7053aa42a2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feacd7053aa42a2; valaddr_reg:x16; op2:x26; op2val:0x7feacd7053aa42a2
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x53aa42a2, 0x7feacd70,0x53aa42a2,0x7feacd70,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48dace8666677 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x48dace8666677 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe48dace8666677; valaddr_reg:x16; op2:x26; op2val:0x7fe48dace8666677
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe8666677, 0x7fe48dac,0xe8666677,0x7fe48dac,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc2ea66e5019e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xfc2ea66e5019e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fefc2ea66e5019e; valaddr_reg:x16; op2:x26; op2val:0x7fefc2ea66e5019e
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x66e5019e, 0x7fefc2ea,0x66e5019e,0x7fefc2ea,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xef2a4f7c7db7f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xef2a4f7c7db7f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbef2a4f7c7db7f; valaddr_reg:x16; op2:x26; op2val:0x7fbef2a4f7c7db7f
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf7c7db7f, 0x7fbef2a4,0xf7c7db7f,0x7fbef2a4,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7166677e49c3c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x7166677e49c3c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe7166677e49c3c; valaddr_reg:x16; op2:x26; op2val:0x7fe7166677e49c3c
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x77e49c3c, 0x7fe71666,0x77e49c3c,0x7fe71666,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdf7523fde6c5d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xdf7523fde6c5d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fedf7523fde6c5d; valaddr_reg:x16; op2:x26; op2val:0x7fedf7523fde6c5d
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3fde6c5d, 0x7fedf752,0x3fde6c5d,0x7fedf752,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa8fa703a4078c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa8fa703a4078c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea8fa703a4078c; valaddr_reg:x16; op2:x26; op2val:0x7fea8fa703a4078c
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x03a4078c, 0x7fea8fa7,0x03a4078c,0x7fea8fa7,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x36a63c245f557 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x36a63c245f557 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd36a63c245f557; valaddr_reg:x16; op2:x26; op2val:0x7fd36a63c245f557
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc245f557, 0x7fd36a63,0xc245f557,0x7fd36a63,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc3d4499ff58c3 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xc3d4499ff58c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec3d4499ff58c3; valaddr_reg:x16; op2:x26; op2val:0x7fec3d4499ff58c3
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x99ff58c3, 0x7fec3d44,0x99ff58c3,0x7fec3d44,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02b48f992cb49 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x02b48f992cb49 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe02b48f992cb49; valaddr_reg:x16; op2:x26; op2val:0x7fe02b48f992cb49
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf992cb49, 0x7fe02b48,0xf992cb49,0x7fe02b48,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x1ad5e9ebc09df and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x1ad5e9ebc09df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa1ad5e9ebc09df; valaddr_reg:x16; op2:x26; op2val:0x7fa1ad5e9ebc09df
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9ebc09df, 0x7fa1ad5e,0x9ebc09df,0x7fa1ad5e,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x98455e99dfdb1 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x98455e99dfdb1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe98455e99dfdb1; valaddr_reg:x16; op2:x26; op2val:0x7fe98455e99dfdb1
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe99dfdb1, 0x7fe98455,0xe99dfdb1,0x7fe98455,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6251b45dfbd3b and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x6251b45dfbd3b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc6251b45dfbd3b; valaddr_reg:x16; op2:x26; op2val:0x7fc6251b45dfbd3b
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x45dfbd3b, 0x7fc6251b,0x45dfbd3b,0x7fc6251b,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x67f4f571a752e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x67f4f571a752e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe67f4f571a752e; valaddr_reg:x16; op2:x26; op2val:0x7fe67f4f571a752e
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x571a752e, 0x7fe67f4f,0x571a752e,0x7fe67f4f,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7fb2260b115e9 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x7fb2260b115e9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd7fb2260b115e9; valaddr_reg:x16; op2:x26; op2val:0x7fd7fb2260b115e9
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x60b115e9, 0x7fd7fb22,0x60b115e9,0x7fd7fb22,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x04507a06e8587 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x04507a06e8587 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe04507a06e8587; valaddr_reg:x16; op2:x26; op2val:0x7fe04507a06e8587
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa06e8587, 0x7fe04507,0xa06e8587,0x7fe04507,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ab870b5c1c40 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0ab870b5c1c40 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0ab870b5c1c40; valaddr_reg:x16; op2:x26; op2val:0x7fe0ab870b5c1c40
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0b5c1c40, 0x7fe0ab87,0x0b5c1c40,0x7fe0ab87,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf57237ddcb451 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xf57237ddcb451 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdf57237ddcb451; valaddr_reg:x16; op2:x26; op2val:0x7fdf57237ddcb451
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7ddcb451, 0x7fdf5723,0x7ddcb451,0x7fdf5723,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x643f753bef22f and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x643f753bef22f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa643f753bef22f; valaddr_reg:x16; op2:x26; op2val:0x7fa643f753bef22f
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x53bef22f, 0x7fa643f7,0x53bef22f,0x7fa643f7,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf7646167590ef and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf7646167590ef and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fef7646167590ef; valaddr_reg:x16; op2:x26; op2val:0x7fef7646167590ef
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x167590ef, 0x7fef7646,0x167590ef,0x7fef7646,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x930bcbd2d6035 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd930bcbd2d6035; valaddr_reg:x16; op2:x26; op2val:0x7fd930bcbd2d6035
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbd2d6035, 0x7fd930bc,0xbd2d6035,0x7fd930bc,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0125698e86242 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0125698e86242 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0125698e86242; valaddr_reg:x16; op2:x26; op2val:0x7fe0125698e86242
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x98e86242, 0x7fe01256,0x98e86242,0x7fe01256,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x8a82024cc4e03 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe8a82024cc4e03; valaddr_reg:x16; op2:x26; op2val:0x7fe8a82024cc4e03
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x24cc4e03, 0x7fe8a820,0x24cc4e03,0x7fe8a820,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb877e6e317fa2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb877e6e317fa2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feb877e6e317fa2; valaddr_reg:x16; op2:x26; op2val:0x7feb877e6e317fa2
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6e317fa2, 0x7feb877e,0x6e317fa2,0x7feb877e,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x070d1456013e3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe070d1456013e3; valaddr_reg:x16; op2:x26; op2val:0x7fe070d1456013e3
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x456013e3, 0x7fe070d1,0x456013e3,0x7fe070d1,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x27d4b8969c0b2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x27d4b8969c0b2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe27d4b8969c0b2; valaddr_reg:x16; op2:x26; op2val:0x7fe27d4b8969c0b2
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8969c0b2, 0x7fe27d4b,0x8969c0b2,0x7fe27d4b,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x13bdffd461269 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd13bdffd461269; valaddr_reg:x16; op2:x26; op2val:0x7fd13bdffd461269
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfd461269, 0x7fd13bdf,0xfd461269,0x7fd13bdf,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea0b252eae7e0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xea0b252eae7e0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feea0b252eae7e0; valaddr_reg:x16; op2:x26; op2val:0x7feea0b252eae7e0
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x52eae7e0, 0x7feea0b2,0x52eae7e0,0x7feea0b2,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x913b4236d8411 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x913b4236d8411 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe913b4236d8411; valaddr_reg:x16; op2:x26; op2val:0x7fe913b4236d8411
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x236d8411, 0x7fe913b4,0x236d8411,0x7fe913b4,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc5b9547c0fb71 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xc5b9547c0fb71 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec5b9547c0fb71; valaddr_reg:x16; op2:x26; op2val:0x7fec5b9547c0fb71
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x47c0fb71, 0x7fec5b95,0x47c0fb71,0x7fec5b95,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x9e4795c8459f5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe9e4795c8459f5; valaddr_reg:x16; op2:x26; op2val:0x7fe9e4795c8459f5
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5c8459f5, 0x7fe9e479,0x5c8459f5,0x7fe9e479,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1f6a4c4d26ab9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x1f6a4c4d26ab9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe1f6a4c4d26ab9; valaddr_reg:x16; op2:x26; op2val:0x7fe1f6a4c4d26ab9
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc4d26ab9, 0x7fe1f6a4,0xc4d26ab9,0x7fe1f6a4,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xcbc315eca5f3f and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xcbc315eca5f3f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7facbc315eca5f3f; valaddr_reg:x16; op2:x26; op2val:0x7facbc315eca5f3f
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5eca5f3f, 0x7facbc31,0x5eca5f3f,0x7facbc31,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x23d6f3e37b4f1 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x23d6f3e37b4f1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe23d6f3e37b4f1; valaddr_reg:x16; op2:x26; op2val:0x7fe23d6f3e37b4f1
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3e37b4f1, 0x7fe23d6f,0x3e37b4f1,0x7fe23d6f,x16, 80*SIGALIGN, x17,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x026ab89a75256 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x026ab89a75256 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe026ab89a75256; valaddr_reg:x16; op2:x26; op2val:0x7fe026ab89a75256
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x89a75256, 0x7fe026ab,0x89a75256,0x7fe026ab,x16, 82*SIGALIGN, x17,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d5a59350bdcb and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x6d5a59350bdcb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd6d5a59350bdcb; valaddr_reg:x16; op2:x26; op2val:0x7fd6d5a59350bdcb
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9350bdcb, 0x7fd6d5a5,0x9350bdcb,0x7fd6d5a5,x16, 84*SIGALIGN, x17,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x13b37e2291279 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x13b37e2291279 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe13b37e2291279; valaddr_reg:x16; op2:x26; op2val:0x7fe13b37e2291279
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe2291279, 0x7fe13b37,0xe2291279,0x7fe13b37,x16, 86*SIGALIGN, x17,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39935e95315b1 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x39935e95315b1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe39935e95315b1; valaddr_reg:x16; op2:x26; op2val:0x7fe39935e95315b1
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe95315b1, 0x7fe39935,0xe95315b1,0x7fe39935,x16, 88*SIGALIGN, x17,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x7f9 and fm2 == 0xca57966fc21ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9ca57966fc21ff; valaddr_reg:x16; op2:x26; op2val:0x7f9ca57966fc21ff
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x66fc21ff, 0x7f9ca579,0x66fc21ff,0x7f9ca579,x16, 90*SIGALIGN, x17,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6aedbc8cfe5cb and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x6aedbc8cfe5cb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc6aedbc8cfe5cb; valaddr_reg:x16; op2:x26; op2val:0x7fc6aedbc8cfe5cb
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc8cfe5cb, 0x7fc6aedb,0xc8cfe5cb,0x7fc6aedb,x16, 92*SIGALIGN, x17,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb8d62745dccc1 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb8d62745dccc1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feb8d62745dccc1; valaddr_reg:x16; op2:x26; op2val:0x7feb8d62745dccc1
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x745dccc1, 0x7feb8d62,0x745dccc1,0x7feb8d62,x16, 94*SIGALIGN, x17,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x981d2bf67b45e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x981d2bf67b45e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe981d2bf67b45e; valaddr_reg:x16; op2:x26; op2val:0x7fe981d2bf67b45e
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbf67b45e, 0x7fe981d2,0xbf67b45e,0x7fe981d2,x16, 96*SIGALIGN, x17,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x056bcd04279ed and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd056bcd04279ed; valaddr_reg:x16; op2:x26; op2val:0x7fd056bcd04279ed
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd04279ed, 0x7fd056bc,0xd04279ed,0x7fd056bc,x16, 98*SIGALIGN, x17,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x58a25604824f3 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x58a25604824f3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe58a25604824f3; valaddr_reg:x16; op2:x26; op2val:0x7fe58a25604824f3
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x604824f3, 0x7fe58a25,0x604824f3,0x7fe58a25,x16, 100*SIGALIGN, x17,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x7f9 and fm2 == 0x1175939fbdd3f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f91175939fbdd3f; valaddr_reg:x16; op2:x26; op2val:0x7f91175939fbdd3f
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x39fbdd3f, 0x7f911759,0x39fbdd3f,0x7f911759,x16, 102*SIGALIGN, x17,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x82dc4511ff204 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x82dc4511ff204 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe82dc4511ff204; valaddr_reg:x16; op2:x26; op2val:0x7fe82dc4511ff204
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x511ff204, 0x7fe82dc4,0x511ff204,0x7fe82dc4,x16, 104*SIGALIGN, x17,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc07725983617f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xc07725983617f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbc07725983617f; valaddr_reg:x16; op2:x26; op2val:0x7fbc07725983617f
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5983617f, 0x7fbc0772,0x5983617f,0x7fbc0772,x16, 106*SIGALIGN, x17,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x60b0632528095 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x60b0632528095 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd60b0632528095; valaddr_reg:x16; op2:x26; op2val:0x7fd60b0632528095
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x32528095, 0x7fd60b06,0x32528095,0x7fd60b06,x16, 108*SIGALIGN, x17,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x46e9bf4155d7b and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x46e9bf4155d7b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc46e9bf4155d7b; valaddr_reg:x16; op2:x26; op2val:0x7fc46e9bf4155d7b
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf4155d7b, 0x7fc46e9b,0xf4155d7b,0x7fc46e9b,x16, 110*SIGALIGN, x17,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x585c60a81aa3f and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x585c60a81aa3f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc585c60a81aa3f; valaddr_reg:x16; op2:x26; op2val:0x7fc585c60a81aa3f
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0a81aa3f, 0x7fc585c6,0x0a81aa3f,0x7fc585c6,x16, 112*SIGALIGN, x17,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6c5583d2d8f82 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x6c5583d2d8f82 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe6c5583d2d8f82; valaddr_reg:x16; op2:x26; op2val:0x7fe6c5583d2d8f82
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3d2d8f82, 0x7fe6c558,0x3d2d8f82,0x7fe6c558,x16, 114*SIGALIGN, x17,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x49bad4bf8d1a9 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x49bad4bf8d1a9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd49bad4bf8d1a9; valaddr_reg:x16; op2:x26; op2val:0x7fd49bad4bf8d1a9
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4bf8d1a9, 0x7fd49bad,0x4bf8d1a9,0x7fd49bad,x16, 116*SIGALIGN, x17,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x833a9a7efc6ff and fs2 == 0 and fe2 == 0x7f9 and fm2 == 0x833a9a7efc6ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9833a9a7efc6ff; valaddr_reg:x16; op2:x26; op2val:0x7f9833a9a7efc6ff
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa7efc6ff, 0x7f9833a9,0xa7efc6ff,0x7f9833a9,x16, 118*SIGALIGN, x17,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaf054e65e9fad and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xaf054e65e9fad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdaf054e65e9fad; valaddr_reg:x16; op2:x26; op2val:0x7fdaf054e65e9fad
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe65e9fad, 0x7fdaf054,0xe65e9fad,0x7fdaf054,x16, 120*SIGALIGN, x17,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbd7ce681c543f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xbd7ce681c543f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbbd7ce681c543f; valaddr_reg:x16; op2:x26; op2val:0x7fbbd7ce681c543f
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x681c543f, 0x7fbbd7ce,0x681c543f,0x7fbbd7ce,x16, 122*SIGALIGN, x17,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x052debfe82e13 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x052debfe82e13 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe052debfe82e13; valaddr_reg:x16; op2:x26; op2val:0x7fe052debfe82e13
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbfe82e13, 0x7fe052de,0xbfe82e13,0x7fe052de,x16, 124*SIGALIGN, x17,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3617941ba03e8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x3617941ba03e8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe3617941ba03e8; valaddr_reg:x16; op2:x26; op2val:0x7fe3617941ba03e8
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x41ba03e8, 0x7fe36179,0x41ba03e8,0x7fe36179,x16, 126*SIGALIGN, x17,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x551579cd90e3f and fs2 == 0 and fe2 == 0x7f9 and fm2 == 0x551579cd90e3f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7f9551579cd90e3f; valaddr_reg:x16; op2:x26; op2val:0x7f9551579cd90e3f
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9cd90e3f, 0x7f955157,0x9cd90e3f,0x7f955157,x16, 128*SIGALIGN, x17,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2bf422090b207 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x2bf422090b207 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc2bf422090b207; valaddr_reg:x16; op2:x26; op2val:0x7fc2bf422090b207
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2090b207, 0x7fc2bf42,0x2090b207,0x7fc2bf42,x16, 130*SIGALIGN, x17,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x482567721754b and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x482567721754b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc482567721754b; valaddr_reg:x16; op2:x26; op2val:0x7fc482567721754b
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7721754b, 0x7fc48256,0x7721754b,0x7fc48256,x16, 132*SIGALIGN, x17,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5b39db9b4e7ac and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x5b39db9b4e7ac and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe5b39db9b4e7ac; valaddr_reg:x16; op2:x26; op2val:0x7fe5b39db9b4e7ac
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb9b4e7ac, 0x7fe5b39d,0xb9b4e7ac,0x7fe5b39d,x16, 134*SIGALIGN, x17,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc3c9ccfa1b1bb and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xc3c9ccfa1b1bb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcc3c9ccfa1b1bb; valaddr_reg:x16; op2:x26; op2val:0x7fcc3c9ccfa1b1bb
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcfa1b1bb, 0x7fcc3c9c,0xcfa1b1bb,0x7fcc3c9c,x16, 136*SIGALIGN, x17,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x987aaa2c7bb6a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x987aaa2c7bb6a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe987aaa2c7bb6a; valaddr_reg:x16; op2:x26; op2val:0x7fe987aaa2c7bb6a
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa2c7bb6a, 0x7fe987aa,0xa2c7bb6a,0x7fe987aa,x16, 138*SIGALIGN, x17,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc91ade861e02b and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xc91ade861e02b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcc91ade861e02b; valaddr_reg:x16; op2:x26; op2val:0x7fcc91ade861e02b
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe861e02b, 0x7fcc91ad,0xe861e02b,0x7fcc91ad,x16, 140*SIGALIGN, x17,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x946024d663351 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x946024d663351 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd946024d663351; valaddr_reg:x16; op2:x26; op2val:0x7fd946024d663351
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4d663351, 0x7fd94602,0x4d663351,0x7fd94602,x16, 142*SIGALIGN, x17,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x48f4a954751bd and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x48f4a954751bd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd48f4a954751bd; valaddr_reg:x16; op2:x26; op2val:0x7fd48f4a954751bd
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x954751bd, 0x7fd48f4a,0x954751bd,0x7fd48f4a,x16, 144*SIGALIGN, x17,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe19152f3266af and fs2 == 0 and fe2 == 0x7fa and fm2 == 0xe19152f3266af and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fae19152f3266af; valaddr_reg:x16; op2:x26; op2val:0x7fae19152f3266af
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f3266af, 0x7fae1915,0x2f3266af,0x7fae1915,x16, 146*SIGALIGN, x17,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xef9105cd9390b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xef9105cd9390b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feef9105cd9390b; valaddr_reg:x16; op2:x26; op2val:0x7feef9105cd9390b
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5cd9390b, 0x7feef910,0x5cd9390b,0x7feef910,x16, 148*SIGALIGN, x17,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x39bd6a090d93f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x39bd6a090d93f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd39bd6a090d93f; valaddr_reg:x16; op2:x26; op2val:0x7fd39bd6a090d93f
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa090d93f, 0x7fd39bd6,0xa090d93f,0x7fd39bd6,x16, 150*SIGALIGN, x17,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3dcff67566087 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x3dcff67566087 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd3dcff67566087; valaddr_reg:x16; op2:x26; op2val:0x7fd3dcff67566087
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x67566087, 0x7fd3dcff,0x67566087,0x7fd3dcff,x16, 152*SIGALIGN, x17,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7cd8dfca2011d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x7cd8dfca2011d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe7cd8dfca2011d; valaddr_reg:x16; op2:x26; op2val:0x7fe7cd8dfca2011d
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfca2011d, 0x7fe7cd8d,0xfca2011d,0x7fe7cd8d,x16, 154*SIGALIGN, x17,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x026a2990b0a7f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x026a2990b0a7f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd026a2990b0a7f; valaddr_reg:x16; op2:x26; op2val:0x7fd026a2990b0a7f
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x990b0a7f, 0x7fd026a2,0x990b0a7f,0x7fd026a2,x16, 156*SIGALIGN, x17,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1e74ff66f075 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xc1e74ff66f075 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec1e74ff66f075; valaddr_reg:x16; op2:x26; op2val:0x7fec1e74ff66f075
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xff66f075, 0x7fec1e74,0xff66f075,0x7fec1e74,x16, 158*SIGALIGN, x17,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa38a3f0decfff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa38a3f0decfff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea38a3f0decfff; valaddr_reg:x16; op2:x26; op2val:0x7fea38a3f0decfff
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf0decfff, 0x7fea38a3,0xf0decfff,0x7fea38a3,x16, 160*SIGALIGN, x17,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x23fbd09d7e9b6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x23fbd09d7e9b6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe23fbd09d7e9b6; valaddr_reg:x16; op2:x26; op2val:0x7fe23fbd09d7e9b6
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x09d7e9b6, 0x7fe23fbd,0x09d7e9b6,0x7fe23fbd,x16, 162*SIGALIGN, x17,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc4dccb7ac380 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xbc4dccb7ac380 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7febc4dccb7ac380; valaddr_reg:x16; op2:x26; op2val:0x7febc4dccb7ac380
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcb7ac380, 0x7febc4dc,0xcb7ac380,0x7febc4dc,x16, 164*SIGALIGN, x17,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6875b8a7de9f5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x6875b8a7de9f5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe6875b8a7de9f5; valaddr_reg:x16; op2:x26; op2val:0x7fe6875b8a7de9f5
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8a7de9f5, 0x7fe6875b,0x8a7de9f5,0x7fe6875b,x16, 166*SIGALIGN, x17,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x830a4319a6f37 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x830a4319a6f37 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd830a4319a6f37; valaddr_reg:x16; op2:x26; op2val:0x7fd830a4319a6f37
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x319a6f37, 0x7fd830a4,0x319a6f37,0x7fd830a4,x16, 168*SIGALIGN, x17,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa5666b92c9353 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xa5666b92c9353 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fca5666b92c9353; valaddr_reg:x16; op2:x26; op2val:0x7fca5666b92c9353
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb92c9353, 0x7fca5666,0xb92c9353,0x7fca5666,x16, 170*SIGALIGN, x17,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbb5746cbb34cd and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xbb5746cbb34cd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdbb5746cbb34cd; valaddr_reg:x16; op2:x26; op2val:0x7fdbb5746cbb34cd
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6cbb34cd, 0x7fdbb574,0x6cbb34cd,0x7fdbb574,x16, 172*SIGALIGN, x17,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xabb8bbe03b7df and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xabb8bbe03b7df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbabb8bbe03b7df; valaddr_reg:x16; op2:x26; op2val:0x7fbabb8bbe03b7df
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbe03b7df, 0x7fbabb8b,0xbe03b7df,0x7fbabb8b,x16, 174*SIGALIGN, x17,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2f2dacc08696f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x2f2dacc08696f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd2f2dacc08696f; valaddr_reg:x16; op2:x26; op2val:0x7fd2f2dacc08696f
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcc08696f, 0x7fd2f2da,0xcc08696f,0x7fd2f2da,x16, 176*SIGALIGN, x17,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d27694e5a38b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x4d27694e5a38b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd4d27694e5a38b; valaddr_reg:x16; op2:x26; op2val:0x7fd4d27694e5a38b
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x94e5a38b, 0x7fd4d276,0x94e5a38b,0x7fd4d276,x16, 178*SIGALIGN, x17,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca2a15201aa9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xcca2a15201aa9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fecca2a15201aa9; valaddr_reg:x16; op2:x26; op2val:0x7fecca2a15201aa9
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x15201aa9, 0x7fecca2a,0x15201aa9,0x7fecca2a,x16, 180*SIGALIGN, x17,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b58d2db8786f and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x9b58d2db8786f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc9b58d2db8786f; valaddr_reg:x16; op2:x26; op2val:0x7fc9b58d2db8786f
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2db8786f, 0x7fc9b58d,0x2db8786f,0x7fc9b58d,x16, 182*SIGALIGN, x17,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf95e94a40dc56 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf95e94a40dc56 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fef95e94a40dc56; valaddr_reg:x16; op2:x26; op2val:0x7fef95e94a40dc56
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4a40dc56, 0x7fef95e9,0x4a40dc56,0x7fef95e9,x16, 184*SIGALIGN, x17,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5b3be3b6f1597 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x5b3be3b6f1597 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd5b3be3b6f1597; valaddr_reg:x16; op2:x26; op2val:0x7fd5b3be3b6f1597
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3b6f1597, 0x7fd5b3be,0x3b6f1597,0x7fd5b3be,x16, 186*SIGALIGN, x17,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59522cc62b803 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x59522cc62b803 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe59522cc62b803; valaddr_reg:x16; op2:x26; op2val:0x7fe59522cc62b803
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcc62b803, 0x7fe59522,0xcc62b803,0x7fe59522,x16, 188*SIGALIGN, x17,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdd47ad230c500 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xdd47ad230c500 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fedd47ad230c500; valaddr_reg:x16; op2:x26; op2val:0x7fedd47ad230c500
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd230c500, 0x7fedd47a,0xd230c500,0x7fedd47a,x16, 190*SIGALIGN, x17,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc3c90ab59cc1f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xc3c90ab59cc1f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec3c90ab59cc1f; valaddr_reg:x16; op2:x26; op2val:0x7fec3c90ab59cc1f
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xab59cc1f, 0x7fec3c90,0xab59cc1f,0x7fec3c90,x16, 192*SIGALIGN, x17,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf0206ee24c395 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xf0206ee24c395 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdf0206ee24c395; valaddr_reg:x16; op2:x26; op2val:0x7fdf0206ee24c395
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xee24c395, 0x7fdf0206,0xee24c395,0x7fdf0206,x16, 194*SIGALIGN, x17,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe08b2a10b8fdf and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe08b2a10b8fdf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fce08b2a10b8fdf; valaddr_reg:x16; op2:x26; op2val:0x7fce08b2a10b8fdf
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa10b8fdf, 0x7fce08b2,0xa10b8fdf,0x7fce08b2,x16, 196*SIGALIGN, x17,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ad9a8441acdf and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x5ad9a8441acdf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fb5ad9a8441acdf; valaddr_reg:x16; op2:x26; op2val:0x7fb5ad9a8441acdf
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8441acdf, 0x7fb5ad9a,0x8441acdf,0x7fb5ad9a,x16, 198*SIGALIGN, x17,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd26cfda272030 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd26cfda272030 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fed26cfda272030; valaddr_reg:x16; op2:x26; op2val:0x7fed26cfda272030
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xda272030, 0x7fed26cf,0xda272030,0x7fed26cf,x16, 200*SIGALIGN, x17,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x84aae05543502 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x84aae05543502 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe84aae05543502; valaddr_reg:x16; op2:x26; op2val:0x7fe84aae05543502
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x05543502, 0x7fe84aae,0x05543502,0x7fe84aae,x16, 202*SIGALIGN, x17,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaea8e11056b0f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xaea8e11056b0f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feaea8e11056b0f; valaddr_reg:x16; op2:x26; op2val:0x7feaea8e11056b0f
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x11056b0f, 0x7feaea8e,0x11056b0f,0x7feaea8e,x16, 204*SIGALIGN, x17,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c73bb8e94b2b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x5c73bb8e94b2b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd5c73bb8e94b2b; valaddr_reg:x16; op2:x26; op2val:0x7fd5c73bb8e94b2b
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb8e94b2b, 0x7fd5c73b,0xb8e94b2b,0x7fd5c73b,x16, 206*SIGALIGN, x17,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc1e737c6a698 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xbc1e737c6a698 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7febc1e737c6a698; valaddr_reg:x16; op2:x26; op2val:0x7febc1e737c6a698
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x37c6a698, 0x7febc1e7,0x37c6a698,0x7febc1e7,x16, 208*SIGALIGN, x17,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe89afcadc456f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe89afcadc456f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fee89afcadc456f; valaddr_reg:x16; op2:x26; op2val:0x7fee89afcadc456f
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcadc456f, 0x7fee89af,0xcadc456f,0x7fee89af,x16, 210*SIGALIGN, x17,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x153045947810b and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x153045947810b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc153045947810b; valaddr_reg:x16; op2:x26; op2val:0x7fc153045947810b
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5947810b, 0x7fc15304,0x5947810b,0x7fc15304,x16, 212*SIGALIGN, x17,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xab1c42a43630f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xab1c42a43630f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbab1c42a43630f; valaddr_reg:x16; op2:x26; op2val:0x7fbab1c42a43630f
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2a43630f, 0x7fbab1c4,0x2a43630f,0x7fbab1c4,x16, 214*SIGALIGN, x17,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2bccdcc2ad897 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x2bccdcc2ad897 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fb2bccdcc2ad897; valaddr_reg:x16; op2:x26; op2val:0x7fb2bccdcc2ad897
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcc2ad897, 0x7fb2bccd,0xcc2ad897,0x7fb2bccd,x16, 216*SIGALIGN, x17,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9383ffc96dd3f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x9383ffc96dd3f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe9383ffc96dd3f; valaddr_reg:x16; op2:x26; op2val:0x7fe9383ffc96dd3f
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfc96dd3f, 0x7fe9383f,0xfc96dd3f,0x7fe9383f,x16, 218*SIGALIGN, x17,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5d14398eae23f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x5d14398eae23f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd5d14398eae23f; valaddr_reg:x16; op2:x26; op2val:0x7fd5d14398eae23f
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x98eae23f, 0x7fd5d143,0x98eae23f,0x7fd5d143,x16, 220*SIGALIGN, x17,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9055ab3b464b5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x9055ab3b464b5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe9055ab3b464b5; valaddr_reg:x16; op2:x26; op2val:0x7fe9055ab3b464b5
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb3b464b5, 0x7fe9055a,0xb3b464b5,0x7fe9055a,x16, 222*SIGALIGN, x17,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x243d79e337b38 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x243d79e337b38 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe243d79e337b38; valaddr_reg:x16; op2:x26; op2val:0x7fe243d79e337b38
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9e337b38, 0x7fe243d7,0x9e337b38,0x7fe243d7,x16, 224*SIGALIGN, x17,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x4ed205e78cd0f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x4ed205e78cd0f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fb4ed205e78cd0f; valaddr_reg:x16; op2:x26; op2val:0x7fb4ed205e78cd0f
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5e78cd0f, 0x7fb4ed20,0x5e78cd0f,0x7fb4ed20,x16, 226*SIGALIGN, x17,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc812c292ea556 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xc812c292ea556 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec812c292ea556; valaddr_reg:x16; op2:x26; op2val:0x7fec812c292ea556
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x292ea556, 0x7fec812c,0x292ea556,0x7fec812c,x16, 228*SIGALIGN, x17,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd9a2688750f46 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd9a2688750f46 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fed9a2688750f46; valaddr_reg:x16; op2:x26; op2val:0x7fed9a2688750f46
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x88750f46, 0x7fed9a26,0x88750f46,0x7fed9a26,x16, 230*SIGALIGN, x17,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1bd5cc8dca1e5 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x1bd5cc8dca1e5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd1bd5cc8dca1e5; valaddr_reg:x16; op2:x26; op2val:0x7fd1bd5cc8dca1e5
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc8dca1e5, 0x7fd1bd5c,0xc8dca1e5,0x7fd1bd5c,x16, 232*SIGALIGN, x17,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa7d13a52ed5ec and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa7d13a52ed5ec and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea7d13a52ed5ec; valaddr_reg:x16; op2:x26; op2val:0x7fea7d13a52ed5ec
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa52ed5ec, 0x7fea7d13,0xa52ed5ec,0x7fea7d13,x16, 234*SIGALIGN, x17,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x574031c0ee5b5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x574031c0ee5b5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe574031c0ee5b5; valaddr_reg:x16; op2:x26; op2val:0x7fe574031c0ee5b5
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1c0ee5b5, 0x7fe57403,0x1c0ee5b5,0x7fe57403,x16, 236*SIGALIGN, x17,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd775b7a6f9327 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xd775b7a6f9327 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbd775b7a6f9327; valaddr_reg:x16; op2:x26; op2val:0x7fbd775b7a6f9327
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7a6f9327, 0x7fbd775b,0x7a6f9327,0x7fbd775b,x16, 238*SIGALIGN, x17,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x47df70c06ea5f and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x47df70c06ea5f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa47df70c06ea5f; valaddr_reg:x16; op2:x26; op2val:0x7fa47df70c06ea5f
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0c06ea5f, 0x7fa47df7,0x0c06ea5f,0x7fa47df7,x16, 240*SIGALIGN, x17,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf9efe9258e03a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf9efe9258e03a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fef9efe9258e03a; valaddr_reg:x16; op2:x26; op2val:0x7fef9efe9258e03a
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9258e03a, 0x7fef9efe,0x9258e03a,0x7fef9efe,x16, 242*SIGALIGN, x17,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd95388e6dd7e7 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xd95388e6dd7e7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbd95388e6dd7e7; valaddr_reg:x16; op2:x26; op2val:0x7fbd95388e6dd7e7
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8e6dd7e7, 0x7fbd9538,0x8e6dd7e7,0x7fbd9538,x16, 244*SIGALIGN, x17,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xee6dc228b09a7 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xee6dc228b09a7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcee6dc228b09a7; valaddr_reg:x16; op2:x26; op2val:0x7fcee6dc228b09a7
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x228b09a7, 0x7fcee6dc,0x228b09a7,0x7fcee6dc,x16, 246*SIGALIGN, x17,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa5356adec5cbf and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xa5356adec5cbf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fba5356adec5cbf; valaddr_reg:x16; op2:x26; op2val:0x7fba5356adec5cbf
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xadec5cbf, 0x7fba5356,0xadec5cbf,0x7fba5356,x16, 248*SIGALIGN, x17,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x835b1de73afa3 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x835b1de73afa3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd835b1de73afa3; valaddr_reg:x16; op2:x26; op2val:0x7fd835b1de73afa3
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xde73afa3, 0x7fd835b1,0xde73afa3,0x7fd835b1,x16, 250*SIGALIGN, x17,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd185a4345fd91 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd185a4345fd91 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fed185a4345fd91; valaddr_reg:x16; op2:x26; op2val:0x7fed185a4345fd91
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4345fd91, 0x7fed185a,0x4345fd91,0x7fed185a,x16, 252*SIGALIGN, x17,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x037df25b16113 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x037df25b16113 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd037df25b16113; valaddr_reg:x16; op2:x26; op2val:0x7fd037df25b16113
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x25b16113, 0x7fd037df,0x25b16113,0x7fd037df,x16, 254*SIGALIGN, x17,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a21046a4c767 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9a21046a4c767 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fb9a21046a4c767; valaddr_reg:x16; op2:x26; op2val:0x7fb9a21046a4c767
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x46a4c767, 0x7fb9a210,0x46a4c767,0x7fb9a210,x16, 256*SIGALIGN, x17,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x44919c1beab5f and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x44919c1beab5f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa44919c1beab5f; valaddr_reg:x16; op2:x26; op2val:0x7fa44919c1beab5f
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc1beab5f, 0x7fa44919,0xc1beab5f,0x7fa44919,x16, 258*SIGALIGN, x17,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf715337b3d172 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf715337b3d172 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fef715337b3d172; valaddr_reg:x16; op2:x26; op2val:0x7fef715337b3d172
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x37b3d172, 0x7fef7153,0x37b3d172,0x7fef7153,x16, 260*SIGALIGN, x17,x1, x14)

inst_142:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3171b5147eff2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x3171b5147eff2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe3171b5147eff2; valaddr_reg:x16; op2:x26; op2val:0x7fe3171b5147eff2
offset:266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5147eff2, 0x7fe3171b,0x5147eff2,0x7fe3171b,x16, 262*SIGALIGN, x17,x1, x14)

inst_143:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x40ccb2b303daf and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x40ccb2b303daf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd40ccb2b303daf; valaddr_reg:x16; op2:x26; op2val:0x7fd40ccb2b303daf
offset:268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2b303daf, 0x7fd40ccb,0x2b303daf,0x7fd40ccb,x16, 264*SIGALIGN, x17,x1, x14)

inst_144:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3a81e544f745 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd3a81e544f745 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fed3a81e544f745; valaddr_reg:x16; op2:x26; op2val:0x7fed3a81e544f745
offset:270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe544f745, 0x7fed3a81,0xe544f745,0x7fed3a81,x16, 266*SIGALIGN, x17,x1, x14)

inst_145:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf0892add2cc6e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf0892add2cc6e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fef0892add2cc6e; valaddr_reg:x16; op2:x26; op2val:0x7fef0892add2cc6e
offset:272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xadd2cc6e, 0x7fef0892,0xadd2cc6e,0x7fef0892,x16, 268*SIGALIGN, x17,x1, x14)

inst_146:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xb8b73fc8fea5b and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xb8b73fc8fea5b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcb8b73fc8fea5b; valaddr_reg:x16; op2:x26; op2val:0x7fcb8b73fc8fea5b
offset:274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfc8fea5b, 0x7fcb8b73,0xfc8fea5b,0x7fcb8b73,x16, 270*SIGALIGN, x17,x1, x14)

inst_147:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5bc627909931 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf5bc627909931 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fef5bc627909931; valaddr_reg:x16; op2:x26; op2val:0x7fef5bc627909931
offset:276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x27909931, 0x7fef5bc6,0x27909931,0x7fef5bc6,x16, 272*SIGALIGN, x17,x1, x14)

inst_148:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x605a6a1e02c96 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x605a6a1e02c96 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe605a6a1e02c96; valaddr_reg:x16; op2:x26; op2val:0x7fe605a6a1e02c96
offset:278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa1e02c96, 0x7fe605a6,0xa1e02c96,0x7fe605a6,x16, 274*SIGALIGN, x17,x1, x14)

inst_149:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x094dd69773d7b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x094dd69773d7b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd094dd69773d7b; valaddr_reg:x16; op2:x26; op2val:0x7fd094dd69773d7b
offset:280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x69773d7b, 0x7fd094dd,0x69773d7b,0x7fd094dd,x16, 276*SIGALIGN, x17,x1, x14)

inst_150:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3ab263197fe7f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x3ab263197fe7f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd3ab263197fe7f; valaddr_reg:x16; op2:x26; op2val:0x7fd3ab263197fe7f
offset:282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3197fe7f, 0x7fd3ab26,0x3197fe7f,0x7fd3ab26,x16, 278*SIGALIGN, x17,x1, x14)

inst_151:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x4d4955a3d407f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x4d4955a3d407f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fb4d4955a3d407f; valaddr_reg:x16; op2:x26; op2val:0x7fb4d4955a3d407f
offset:284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5a3d407f, 0x7fb4d495,0x5a3d407f,0x7fb4d495,x16, 280*SIGALIGN, x17,x1, x14)

inst_152:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf77d273035d94 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xf77d273035d94 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fef77d273035d94; valaddr_reg:x16; op2:x26; op2val:0x7fef77d273035d94
offset:286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x73035d94, 0x7fef77d2,0x73035d94,0x7fef77d2,x16, 282*SIGALIGN, x17,x1, x14)

inst_153:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4dd45324c2409 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4dd45324c2409 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe4dd45324c2409; valaddr_reg:x16; op2:x26; op2val:0x7fe4dd45324c2409
offset:288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x324c2409, 0x7fe4dd45,0x324c2409,0x7fe4dd45,x16, 284*SIGALIGN, x17,x1, x14)

inst_154:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe1a7f48e8e26b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe1a7f48e8e26b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fee1a7f48e8e26b; valaddr_reg:x16; op2:x26; op2val:0x7fee1a7f48e8e26b
offset:290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x48e8e26b, 0x7fee1a7f,0x48e8e26b,0x7fee1a7f,x16, 286*SIGALIGN, x17,x1, x14)

inst_155:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3a25a98541333 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x3a25a98541333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd3a25a98541333; valaddr_reg:x16; op2:x26; op2val:0x7fd3a25a98541333
offset:292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x98541333, 0x7fd3a25a,0x98541333,0x7fd3a25a,x16, 288*SIGALIGN, x17,x1, x14)

inst_156:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x445637e5783c3 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x445637e5783c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd445637e5783c3; valaddr_reg:x16; op2:x26; op2val:0x7fd445637e5783c3
offset:294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7e5783c3, 0x7fd44563,0x7e5783c3,0x7fd44563,x16, 290*SIGALIGN, x17,x1, x14)

inst_157:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc978dd3af76c1 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xc978dd3af76c1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec978dd3af76c1; valaddr_reg:x16; op2:x26; op2val:0x7fec978dd3af76c1
offset:296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd3af76c1, 0x7fec978d,0xd3af76c1,0x7fec978d,x16, 292*SIGALIGN, x17,x1, x14)

inst_158:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x565b7f0cebd9f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x565b7f0cebd9f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd565b7f0cebd9f; valaddr_reg:x16; op2:x26; op2val:0x7fd565b7f0cebd9f
offset:298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf0cebd9f, 0x7fd565b7,0xf0cebd9f,0x7fd565b7,x16, 294*SIGALIGN, x17,x1, x14)

inst_159:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2870c773af305 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x2870c773af305 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe2870c773af305; valaddr_reg:x16; op2:x26; op2val:0x7fe2870c773af305
offset:300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x773af305, 0x7fe2870c,0x773af305,0x7fe2870c,x16, 296*SIGALIGN, x17,x1, x14)

inst_160:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf5f5f1385c1af and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xf5f5f1385c1af and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcf5f5f1385c1af; valaddr_reg:x16; op2:x26; op2val:0x7fcf5f5f1385c1af
offset:302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1385c1af, 0x7fcf5f5f,0x1385c1af,0x7fcf5f5f,x16, 298*SIGALIGN, x17,x1, x14)

inst_161:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf3381366daa33 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xf3381366daa33 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcf3381366daa33; valaddr_reg:x16; op2:x26; op2val:0x7fcf3381366daa33
offset:304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x366daa33, 0x7fcf3381,0x366daa33,0x7fcf3381,x16, 300*SIGALIGN, x17,x1, x14)

inst_162:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1a3782778609c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x1a3782778609c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe1a3782778609c; valaddr_reg:x16; op2:x26; op2val:0x7fe1a3782778609c
offset:306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2778609c, 0x7fe1a378,0x2778609c,0x7fe1a378,x16, 302*SIGALIGN, x17,x1, x14)

inst_163:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x33bb4c0b03e47 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x33bb4c0b03e47 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fb33bb4c0b03e47; valaddr_reg:x16; op2:x26; op2val:0x7fb33bb4c0b03e47
offset:308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc0b03e47, 0x7fb33bb4,0xc0b03e47,0x7fb33bb4,x16, 304*SIGALIGN, x17,x1, x14)

inst_164:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x29cd1fe017e0f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x29cd1fe017e0f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd29cd1fe017e0f; valaddr_reg:x16; op2:x26; op2val:0x7fd29cd1fe017e0f
offset:310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfe017e0f, 0x7fd29cd1,0xfe017e0f,0x7fd29cd1,x16, 306*SIGALIGN, x17,x1, x14)

inst_165:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf9196c3c02c3d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xf9196c3c02c3d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdf9196c3c02c3d; valaddr_reg:x16; op2:x26; op2val:0x7fdf9196c3c02c3d
offset:312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc3c02c3d, 0x7fdf9196,0xc3c02c3d,0x7fdf9196,x16, 308*SIGALIGN, x17,x1, x14)

inst_166:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3bc28319d6d6f and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x3bc28319d6d6f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc3bc28319d6d6f; valaddr_reg:x16; op2:x26; op2val:0x7fc3bc28319d6d6f
offset:314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x319d6d6f, 0x7fc3bc28,0x319d6d6f,0x7fc3bc28,x16, 310*SIGALIGN, x17,x1, x14)

inst_167:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97081394ff7c0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x97081394ff7c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe97081394ff7c0; valaddr_reg:x16; op2:x26; op2val:0x7fe97081394ff7c0
offset:316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x394ff7c0, 0x7fe97081,0x394ff7c0,0x7fe97081,x16, 312*SIGALIGN, x17,x1, x14)

inst_168:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe60134aa9369f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe60134aa9369f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fee60134aa9369f; valaddr_reg:x16; op2:x26; op2val:0x7fee60134aa9369f
offset:318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4aa9369f, 0x7fee6013,0x4aa9369f,0x7fee6013,x16, 314*SIGALIGN, x17,x1, x14)

inst_169:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8d6b438992705 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x8d6b438992705 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe8d6b438992705; valaddr_reg:x16; op2:x26; op2val:0x7fe8d6b438992705
offset:320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x38992705, 0x7fe8d6b4,0x38992705,0x7fe8d6b4,x16, 316*SIGALIGN, x17,x1, x14)

inst_170:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4a2387765198 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa4a2387765198 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea4a2387765198; valaddr_reg:x16; op2:x26; op2val:0x7fea4a2387765198
offset:322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x87765198, 0x7fea4a23,0x87765198,0x7fea4a23,x16, 318*SIGALIGN, x17,x1, x14)

inst_171:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb5c56d6b2c837 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xb5c56d6b2c837 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbb5c56d6b2c837; valaddr_reg:x16; op2:x26; op2val:0x7fbb5c56d6b2c837
offset:324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd6b2c837, 0x7fbb5c56,0xd6b2c837,0x7fbb5c56,x16, 320*SIGALIGN, x17,x1, x14)

inst_172:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd6b5f3e68568b and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd6b5f3e68568b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fed6b5f3e68568b; valaddr_reg:x16; op2:x26; op2val:0x7fed6b5f3e68568b
offset:326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3e68568b, 0x7fed6b5f,0x3e68568b,0x7fed6b5f,x16, 322*SIGALIGN, x17,x1, x14)

inst_173:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc99ac0cd3b3ca and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xc99ac0cd3b3ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec99ac0cd3b3ca; valaddr_reg:x16; op2:x26; op2val:0x7fec99ac0cd3b3ca
offset:328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0cd3b3ca, 0x7fec99ac,0x0cd3b3ca,0x7fec99ac,x16, 324*SIGALIGN, x17,x1, x14)

inst_174:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd22aa76e3f8bc and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xd22aa76e3f8bc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fed22aa76e3f8bc; valaddr_reg:x16; op2:x26; op2val:0x7fed22aa76e3f8bc
offset:330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x76e3f8bc, 0x7fed22aa,0x76e3f8bc,0x7fed22aa,x16, 326*SIGALIGN, x17,x1, x14)

inst_175:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x43a781e917815 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x43a781e917815 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd43a781e917815; valaddr_reg:x16; op2:x26; op2val:0x7fd43a781e917815
offset:332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1e917815, 0x7fd43a78,0x1e917815,0x7fd43a78,x16, 328*SIGALIGN, x17,x1, x14)

inst_176:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b930ceb054c0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x9b930ceb054c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe9b930ceb054c0; valaddr_reg:x16; op2:x26; op2val:0x7fe9b930ceb054c0
offset:334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xceb054c0, 0x7fe9b930,0xceb054c0,0x7fe9b930,x16, 330*SIGALIGN, x17,x1, x14)

inst_177:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae72a87c61e34 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xae72a87c61e34 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feae72a87c61e34; valaddr_reg:x16; op2:x26; op2val:0x7feae72a87c61e34
offset:336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x87c61e34, 0x7feae72a,0x87c61e34,0x7feae72a,x16, 332*SIGALIGN, x17,x1, x14)

inst_178:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x61129e8d25d53 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x61129e8d25d53 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe61129e8d25d53; valaddr_reg:x16; op2:x26; op2val:0x7fe61129e8d25d53
offset:338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe8d25d53, 0x7fe61129,0xe8d25d53,0x7fe61129,x16, 334*SIGALIGN, x17,x1, x14)

inst_179:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbb0574c4cc8c3 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xbb0574c4cc8c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdbb0574c4cc8c3; valaddr_reg:x16; op2:x26; op2val:0x7fdbb0574c4cc8c3
offset:340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4c4cc8c3, 0x7fdbb057,0x4c4cc8c3,0x7fdbb057,x16, 336*SIGALIGN, x17,x1, x14)

inst_180:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6dfd78772ca12 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x6dfd78772ca12 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe6dfd78772ca12; valaddr_reg:x16; op2:x26; op2val:0x7fe6dfd78772ca12
offset:342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8772ca12, 0x7fe6dfd7,0x8772ca12,0x7fe6dfd7,x16, 338*SIGALIGN, x17,x1, x14)

inst_181:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x02a602e38e2e5 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x02a602e38e2e5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd02a602e38e2e5; valaddr_reg:x16; op2:x26; op2val:0x7fd02a602e38e2e5
offset:344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2e38e2e5, 0x7fd02a60,0x2e38e2e5,0x7fd02a60,x16, 340*SIGALIGN, x17,x1, x14)

inst_182:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed40ea1c96a68 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xed40ea1c96a68 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feed40ea1c96a68; valaddr_reg:x16; op2:x26; op2val:0x7feed40ea1c96a68
offset:346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa1c96a68, 0x7feed40e,0xa1c96a68,0x7feed40e,x16, 342*SIGALIGN, x17,x1, x14)

inst_183:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1939e8900399e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x1939e8900399e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe1939e8900399e; valaddr_reg:x16; op2:x26; op2val:0x7fe1939e8900399e
offset:348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8900399e, 0x7fe1939e,0x8900399e,0x7fe1939e,x16, 344*SIGALIGN, x17,x1, x14)

inst_184:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb3dca1e26f92c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xb3dca1e26f92c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feb3dca1e26f92c; valaddr_reg:x16; op2:x26; op2val:0x7feb3dca1e26f92c
offset:350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1e26f92c, 0x7feb3dca,0x1e26f92c,0x7feb3dca,x16, 346*SIGALIGN, x17,x1, x14)

inst_185:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x95351e6b0b955 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x95351e6b0b955 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd95351e6b0b955; valaddr_reg:x16; op2:x26; op2val:0x7fd95351e6b0b955
offset:352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe6b0b955, 0x7fd95351,0xe6b0b955,0x7fd95351,x16, 348*SIGALIGN, x17,x1, x14)

inst_186:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x08290cbe2e23f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x08290cbe2e23f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd08290cbe2e23f; valaddr_reg:x16; op2:x26; op2val:0x7fd08290cbe2e23f
offset:354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcbe2e23f, 0x7fd08290,0xcbe2e23f,0x7fd08290,x16, 350*SIGALIGN, x17,x1, x14)

inst_187:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4afa083bb05d4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4afa083bb05d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe4afa083bb05d4; valaddr_reg:x16; op2:x26; op2val:0x7fe4afa083bb05d4
offset:356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x83bb05d4, 0x7fe4afa0,0x83bb05d4,0x7fe4afa0,x16, 352*SIGALIGN, x17,x1, x14)

inst_188:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x242628c135d65 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x242628c135d65 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe242628c135d65; valaddr_reg:x16; op2:x26; op2val:0x7fe242628c135d65
offset:358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8c135d65, 0x7fe24262,0x8c135d65,0x7fe24262,x16, 354*SIGALIGN, x17,x1, x14)

inst_189:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6b764b4a3fc09 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x6b764b4a3fc09 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd6b764b4a3fc09; valaddr_reg:x16; op2:x26; op2val:0x7fd6b764b4a3fc09
offset:360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb4a3fc09, 0x7fd6b764,0xb4a3fc09,0x7fd6b764,x16, 356*SIGALIGN, x17,x1, x14)

inst_190:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0043a4237475b and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x0043a4237475b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc0043a4237475b; valaddr_reg:x16; op2:x26; op2val:0x7fc0043a4237475b
offset:362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4237475b, 0x7fc0043a,0x4237475b,0x7fc0043a,x16, 358*SIGALIGN, x17,x1, x14)

inst_191:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa86a1651b8f6d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xa86a1651b8f6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea86a1651b8f6d; valaddr_reg:x16; op2:x26; op2val:0x7fea86a1651b8f6d
offset:364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x651b8f6d, 0x7fea86a1,0x651b8f6d,0x7fea86a1,x16, 360*SIGALIGN, x17,x1, x14)

inst_192:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9ab5479609cdf and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x9ab5479609cdf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd9ab5479609cdf; valaddr_reg:x16; op2:x26; op2val:0x7fd9ab5479609cdf
offset:366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x79609cdf, 0x7fd9ab54,0x79609cdf,0x7fd9ab54,x16, 362*SIGALIGN, x17,x1, x14)

inst_193:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xde44cb7c6a477 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xde44cb7c6a477 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcde44cb7c6a477; valaddr_reg:x16; op2:x26; op2val:0x7fcde44cb7c6a477
offset:368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb7c6a477, 0x7fcde44c,0xb7c6a477,0x7fcde44c,x16, 364*SIGALIGN, x17,x1, x14)

inst_194:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb1fe944dafc and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0eb1fe944dafc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0eb1fe944dafc; valaddr_reg:x16; op2:x26; op2val:0x7fe0eb1fe944dafc
offset:370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe944dafc, 0x7fe0eb1f,0xe944dafc,0x7fe0eb1f,x16, 366*SIGALIGN, x17,x1, x14)

inst_195:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4c34b3fae86a6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4c34b3fae86a6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe4c34b3fae86a6; valaddr_reg:x16; op2:x26; op2val:0x7fe4c34b3fae86a6
offset:372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3fae86a6, 0x7fe4c34b,0x3fae86a6,0x7fe4c34b,x16, 368*SIGALIGN, x17,x1, x14)

inst_196:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5f7ea628e7311 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x5f7ea628e7311 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe5f7ea628e7311; valaddr_reg:x16; op2:x26; op2val:0x7fe5f7ea628e7311
offset:374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x628e7311, 0x7fe5f7ea,0x628e7311,0x7fe5f7ea,x16, 370*SIGALIGN, x17,x1, x14)

inst_197:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe830fb501fc6b and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe830fb501fc6b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fce830fb501fc6b; valaddr_reg:x16; op2:x26; op2val:0x7fce830fb501fc6b
offset:376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb501fc6b, 0x7fce830f,0xb501fc6b,0x7fce830f,x16, 372*SIGALIGN, x17,x1, x14)

inst_198:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea51987a6fe4b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xea51987a6fe4b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdea51987a6fe4b; valaddr_reg:x16; op2:x26; op2val:0x7fdea51987a6fe4b
offset:378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x87a6fe4b, 0x7fdea519,0x87a6fe4b,0x7fdea519,x16, 374*SIGALIGN, x17,x1, x14)

inst_199:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa623d9ab2139f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xa623d9ab2139f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fda623d9ab2139f; valaddr_reg:x16; op2:x26; op2val:0x7fda623d9ab2139f
offset:380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9ab2139f, 0x7fda623d,0x9ab2139f,0x7fda623d,x16, 376*SIGALIGN, x17,x1, x14)

inst_200:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x132d8f91b7583 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x132d8f91b7583 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc132d8f91b7583; valaddr_reg:x16; op2:x26; op2val:0x7fc132d8f91b7583
offset:382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf91b7583, 0x7fc132d8,0xf91b7583,0x7fc132d8,x16, 378*SIGALIGN, x17,x1, x14)

inst_201:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8072e8f9c858f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x8072e8f9c858f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fb8072e8f9c858f; valaddr_reg:x16; op2:x26; op2val:0x7fb8072e8f9c858f
offset:384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8f9c858f, 0x7fb8072e,0x8f9c858f,0x7fb8072e,x16, 380*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0xf91b7583,64,FLEN)
NAN_BOXED(0xf91b7583,64,FLEN)
NAN_BOXED(0x78409f12,64,FLEN)
NAN_BOXED(0x78409f12,64,FLEN)
NAN_BOXED(0x5e167379,64,FLEN)
NAN_BOXED(0x5e167379,64,FLEN)
NAN_BOXED(0x8184b9d9,64,FLEN)
NAN_BOXED(0x8184b9d9,64,FLEN)
NAN_BOXED(0x8f9c858f,64,FLEN)
NAN_BOXED(0x8f9c858f,64,FLEN)
NAN_BOXED(0x758f2a09,64,FLEN)
NAN_BOXED(0x758f2a09,64,FLEN)
NAN_BOXED(0x331191c4,64,FLEN)
NAN_BOXED(0x331191c4,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0x99755d4b,64,FLEN)
NAN_BOXED(0x99755d4b,64,FLEN)
test_dataset_1:
NAN_BOXED(0x65450c45,64,FLEN)
NAN_BOXED(0x65450c45,64,FLEN)
NAN_BOXED(0xd32453df,64,FLEN)
NAN_BOXED(0xd32453df,64,FLEN)
NAN_BOXED(0x8b86622a,64,FLEN)
NAN_BOXED(0x8b86622a,64,FLEN)
NAN_BOXED(0x6f8130c3,64,FLEN)
NAN_BOXED(0x6f8130c3,64,FLEN)
NAN_BOXED(0x43895c3f,64,FLEN)
NAN_BOXED(0x43895c3f,64,FLEN)
NAN_BOXED(0xaf8369fd,64,FLEN)
NAN_BOXED(0xaf8369fd,64,FLEN)
NAN_BOXED(0x1587fd27,64,FLEN)
NAN_BOXED(0x1587fd27,64,FLEN)
NAN_BOXED(0x5c2cd787,64,FLEN)
NAN_BOXED(0x5c2cd787,64,FLEN)
NAN_BOXED(0x2f697c4d,64,FLEN)
NAN_BOXED(0x2f697c4d,64,FLEN)
NAN_BOXED(0x53aa42a2,64,FLEN)
NAN_BOXED(0x53aa42a2,64,FLEN)
NAN_BOXED(0xe8666677,64,FLEN)
NAN_BOXED(0xe8666677,64,FLEN)
NAN_BOXED(0x66e5019e,64,FLEN)
NAN_BOXED(0x66e5019e,64,FLEN)
NAN_BOXED(0xf7c7db7f,64,FLEN)
NAN_BOXED(0xf7c7db7f,64,FLEN)
NAN_BOXED(0x77e49c3c,64,FLEN)
NAN_BOXED(0x77e49c3c,64,FLEN)
NAN_BOXED(0x3fde6c5d,64,FLEN)
NAN_BOXED(0x3fde6c5d,64,FLEN)
NAN_BOXED(0x03a4078c,64,FLEN)
NAN_BOXED(0x03a4078c,64,FLEN)
NAN_BOXED(0xc245f557,64,FLEN)
NAN_BOXED(0xc245f557,64,FLEN)
NAN_BOXED(0x99ff58c3,64,FLEN)
NAN_BOXED(0x99ff58c3,64,FLEN)
NAN_BOXED(0xf992cb49,64,FLEN)
NAN_BOXED(0xf992cb49,64,FLEN)
NAN_BOXED(0x9ebc09df,64,FLEN)
NAN_BOXED(0x9ebc09df,64,FLEN)
NAN_BOXED(0xe99dfdb1,64,FLEN)
NAN_BOXED(0xe99dfdb1,64,FLEN)
NAN_BOXED(0x45dfbd3b,64,FLEN)
NAN_BOXED(0x45dfbd3b,64,FLEN)
NAN_BOXED(0x571a752e,64,FLEN)
NAN_BOXED(0x571a752e,64,FLEN)
NAN_BOXED(0x60b115e9,64,FLEN)
NAN_BOXED(0x60b115e9,64,FLEN)
NAN_BOXED(0xa06e8587,64,FLEN)
NAN_BOXED(0xa06e8587,64,FLEN)
NAN_BOXED(0x0b5c1c40,64,FLEN)
NAN_BOXED(0x0b5c1c40,64,FLEN)
NAN_BOXED(0x7ddcb451,64,FLEN)
NAN_BOXED(0x7ddcb451,64,FLEN)
NAN_BOXED(0x53bef22f,64,FLEN)
NAN_BOXED(0x53bef22f,64,FLEN)
NAN_BOXED(0x167590ef,64,FLEN)
NAN_BOXED(0x167590ef,64,FLEN)
NAN_BOXED(0xbd2d6035,64,FLEN)
NAN_BOXED(0xbd2d6035,64,FLEN)
NAN_BOXED(0x98e86242,64,FLEN)
NAN_BOXED(0x98e86242,64,FLEN)
NAN_BOXED(0x24cc4e03,64,FLEN)
NAN_BOXED(0x24cc4e03,64,FLEN)
NAN_BOXED(0x6e317fa2,64,FLEN)
NAN_BOXED(0x6e317fa2,64,FLEN)
NAN_BOXED(0x456013e3,64,FLEN)
NAN_BOXED(0x456013e3,64,FLEN)
NAN_BOXED(0x8969c0b2,64,FLEN)
NAN_BOXED(0x8969c0b2,64,FLEN)
NAN_BOXED(0xfd461269,64,FLEN)
NAN_BOXED(0xfd461269,64,FLEN)
NAN_BOXED(0x52eae7e0,64,FLEN)
NAN_BOXED(0x52eae7e0,64,FLEN)
NAN_BOXED(0x236d8411,64,FLEN)
NAN_BOXED(0x236d8411,64,FLEN)
NAN_BOXED(0x47c0fb71,64,FLEN)
NAN_BOXED(0x47c0fb71,64,FLEN)
NAN_BOXED(0x5c8459f5,64,FLEN)
NAN_BOXED(0x5c8459f5,64,FLEN)
NAN_BOXED(0xc4d26ab9,64,FLEN)
NAN_BOXED(0xc4d26ab9,64,FLEN)
NAN_BOXED(0x5eca5f3f,64,FLEN)
NAN_BOXED(0x5eca5f3f,64,FLEN)
NAN_BOXED(0x3e37b4f1,64,FLEN)
NAN_BOXED(0x3e37b4f1,64,FLEN)
NAN_BOXED(0x89a75256,64,FLEN)
NAN_BOXED(0x89a75256,64,FLEN)
NAN_BOXED(0x9350bdcb,64,FLEN)
NAN_BOXED(0x9350bdcb,64,FLEN)
NAN_BOXED(0xe2291279,64,FLEN)
NAN_BOXED(0xe2291279,64,FLEN)
NAN_BOXED(0xe95315b1,64,FLEN)
NAN_BOXED(0xe95315b1,64,FLEN)
NAN_BOXED(0x66fc21ff,64,FLEN)
NAN_BOXED(0x66fc21ff,64,FLEN)
NAN_BOXED(0xc8cfe5cb,64,FLEN)
NAN_BOXED(0xc8cfe5cb,64,FLEN)
NAN_BOXED(0x745dccc1,64,FLEN)
NAN_BOXED(0x745dccc1,64,FLEN)
NAN_BOXED(0xbf67b45e,64,FLEN)
NAN_BOXED(0xbf67b45e,64,FLEN)
NAN_BOXED(0xd04279ed,64,FLEN)
NAN_BOXED(0xd04279ed,64,FLEN)
NAN_BOXED(0x604824f3,64,FLEN)
NAN_BOXED(0x604824f3,64,FLEN)
NAN_BOXED(0x39fbdd3f,64,FLEN)
NAN_BOXED(0x39fbdd3f,64,FLEN)
NAN_BOXED(0x511ff204,64,FLEN)
NAN_BOXED(0x511ff204,64,FLEN)
NAN_BOXED(0x5983617f,64,FLEN)
NAN_BOXED(0x5983617f,64,FLEN)
NAN_BOXED(0x32528095,64,FLEN)
NAN_BOXED(0x32528095,64,FLEN)
NAN_BOXED(0xf4155d7b,64,FLEN)
NAN_BOXED(0xf4155d7b,64,FLEN)
NAN_BOXED(0x0a81aa3f,64,FLEN)
NAN_BOXED(0x0a81aa3f,64,FLEN)
NAN_BOXED(0x3d2d8f82,64,FLEN)
NAN_BOXED(0x3d2d8f82,64,FLEN)
NAN_BOXED(0x4bf8d1a9,64,FLEN)
NAN_BOXED(0x4bf8d1a9,64,FLEN)
NAN_BOXED(0xa7efc6ff,64,FLEN)
NAN_BOXED(0xa7efc6ff,64,FLEN)
NAN_BOXED(0xe65e9fad,64,FLEN)
NAN_BOXED(0xe65e9fad,64,FLEN)
NAN_BOXED(0x681c543f,64,FLEN)
NAN_BOXED(0x681c543f,64,FLEN)
NAN_BOXED(0xbfe82e13,64,FLEN)
NAN_BOXED(0xbfe82e13,64,FLEN)
NAN_BOXED(0x41ba03e8,64,FLEN)
NAN_BOXED(0x41ba03e8,64,FLEN)
NAN_BOXED(0x9cd90e3f,64,FLEN)
NAN_BOXED(0x9cd90e3f,64,FLEN)
NAN_BOXED(0x2090b207,64,FLEN)
NAN_BOXED(0x2090b207,64,FLEN)
NAN_BOXED(0x7721754b,64,FLEN)
NAN_BOXED(0x7721754b,64,FLEN)
NAN_BOXED(0xb9b4e7ac,64,FLEN)
NAN_BOXED(0xb9b4e7ac,64,FLEN)
NAN_BOXED(0xcfa1b1bb,64,FLEN)
NAN_BOXED(0xcfa1b1bb,64,FLEN)
NAN_BOXED(0xa2c7bb6a,64,FLEN)
NAN_BOXED(0xa2c7bb6a,64,FLEN)
NAN_BOXED(0xe861e02b,64,FLEN)
NAN_BOXED(0xe861e02b,64,FLEN)
NAN_BOXED(0x4d663351,64,FLEN)
NAN_BOXED(0x4d663351,64,FLEN)
NAN_BOXED(0x954751bd,64,FLEN)
NAN_BOXED(0x954751bd,64,FLEN)
NAN_BOXED(0x2f3266af,64,FLEN)
NAN_BOXED(0x2f3266af,64,FLEN)
NAN_BOXED(0x5cd9390b,64,FLEN)
NAN_BOXED(0x5cd9390b,64,FLEN)
NAN_BOXED(0xa090d93f,64,FLEN)
NAN_BOXED(0xa090d93f,64,FLEN)
NAN_BOXED(0x67566087,64,FLEN)
NAN_BOXED(0x67566087,64,FLEN)
NAN_BOXED(0xfca2011d,64,FLEN)
NAN_BOXED(0xfca2011d,64,FLEN)
NAN_BOXED(0x990b0a7f,64,FLEN)
NAN_BOXED(0x990b0a7f,64,FLEN)
NAN_BOXED(0xff66f075,64,FLEN)
NAN_BOXED(0xff66f075,64,FLEN)
NAN_BOXED(0xf0decfff,64,FLEN)
NAN_BOXED(0xf0decfff,64,FLEN)
NAN_BOXED(0x09d7e9b6,64,FLEN)
NAN_BOXED(0x09d7e9b6,64,FLEN)
NAN_BOXED(0xcb7ac380,64,FLEN)
NAN_BOXED(0xcb7ac380,64,FLEN)
NAN_BOXED(0x8a7de9f5,64,FLEN)
NAN_BOXED(0x8a7de9f5,64,FLEN)
NAN_BOXED(0x319a6f37,64,FLEN)
NAN_BOXED(0x319a6f37,64,FLEN)
NAN_BOXED(0xb92c9353,64,FLEN)
NAN_BOXED(0xb92c9353,64,FLEN)
NAN_BOXED(0x6cbb34cd,64,FLEN)
NAN_BOXED(0x6cbb34cd,64,FLEN)
NAN_BOXED(0xbe03b7df,64,FLEN)
NAN_BOXED(0xbe03b7df,64,FLEN)
NAN_BOXED(0xcc08696f,64,FLEN)
NAN_BOXED(0xcc08696f,64,FLEN)
NAN_BOXED(0x94e5a38b,64,FLEN)
NAN_BOXED(0x94e5a38b,64,FLEN)
NAN_BOXED(0x15201aa9,64,FLEN)
NAN_BOXED(0x15201aa9,64,FLEN)
NAN_BOXED(0x2db8786f,64,FLEN)
NAN_BOXED(0x2db8786f,64,FLEN)
NAN_BOXED(0x4a40dc56,64,FLEN)
NAN_BOXED(0x4a40dc56,64,FLEN)
NAN_BOXED(0x3b6f1597,64,FLEN)
NAN_BOXED(0x3b6f1597,64,FLEN)
NAN_BOXED(0xcc62b803,64,FLEN)
NAN_BOXED(0xcc62b803,64,FLEN)
NAN_BOXED(0xd230c500,64,FLEN)
NAN_BOXED(0xd230c500,64,FLEN)
NAN_BOXED(0xab59cc1f,64,FLEN)
NAN_BOXED(0xab59cc1f,64,FLEN)
NAN_BOXED(0xee24c395,64,FLEN)
NAN_BOXED(0xee24c395,64,FLEN)
NAN_BOXED(0xa10b8fdf,64,FLEN)
NAN_BOXED(0xa10b8fdf,64,FLEN)
NAN_BOXED(0x8441acdf,64,FLEN)
NAN_BOXED(0x8441acdf,64,FLEN)
NAN_BOXED(0xda272030,64,FLEN)
NAN_BOXED(0xda272030,64,FLEN)
NAN_BOXED(0x05543502,64,FLEN)
NAN_BOXED(0x05543502,64,FLEN)
NAN_BOXED(0x11056b0f,64,FLEN)
NAN_BOXED(0x11056b0f,64,FLEN)
NAN_BOXED(0xb8e94b2b,64,FLEN)
NAN_BOXED(0xb8e94b2b,64,FLEN)
NAN_BOXED(0x37c6a698,64,FLEN)
NAN_BOXED(0x37c6a698,64,FLEN)
NAN_BOXED(0xcadc456f,64,FLEN)
NAN_BOXED(0xcadc456f,64,FLEN)
NAN_BOXED(0x5947810b,64,FLEN)
NAN_BOXED(0x5947810b,64,FLEN)
NAN_BOXED(0x2a43630f,64,FLEN)
NAN_BOXED(0x2a43630f,64,FLEN)
NAN_BOXED(0xcc2ad897,64,FLEN)
NAN_BOXED(0xcc2ad897,64,FLEN)
NAN_BOXED(0xfc96dd3f,64,FLEN)
NAN_BOXED(0xfc96dd3f,64,FLEN)
NAN_BOXED(0x98eae23f,64,FLEN)
NAN_BOXED(0x98eae23f,64,FLEN)
NAN_BOXED(0xb3b464b5,64,FLEN)
NAN_BOXED(0xb3b464b5,64,FLEN)
NAN_BOXED(0x9e337b38,64,FLEN)
NAN_BOXED(0x9e337b38,64,FLEN)
NAN_BOXED(0x5e78cd0f,64,FLEN)
NAN_BOXED(0x5e78cd0f,64,FLEN)
NAN_BOXED(0x292ea556,64,FLEN)
NAN_BOXED(0x292ea556,64,FLEN)
NAN_BOXED(0x88750f46,64,FLEN)
NAN_BOXED(0x88750f46,64,FLEN)
NAN_BOXED(0xc8dca1e5,64,FLEN)
NAN_BOXED(0xc8dca1e5,64,FLEN)
NAN_BOXED(0xa52ed5ec,64,FLEN)
NAN_BOXED(0xa52ed5ec,64,FLEN)
NAN_BOXED(0x1c0ee5b5,64,FLEN)
NAN_BOXED(0x1c0ee5b5,64,FLEN)
NAN_BOXED(0x7a6f9327,64,FLEN)
NAN_BOXED(0x7a6f9327,64,FLEN)
NAN_BOXED(0x0c06ea5f,64,FLEN)
NAN_BOXED(0x0c06ea5f,64,FLEN)
NAN_BOXED(0x9258e03a,64,FLEN)
NAN_BOXED(0x9258e03a,64,FLEN)
NAN_BOXED(0x8e6dd7e7,64,FLEN)
NAN_BOXED(0x8e6dd7e7,64,FLEN)
NAN_BOXED(0x228b09a7,64,FLEN)
NAN_BOXED(0x228b09a7,64,FLEN)
NAN_BOXED(0xadec5cbf,64,FLEN)
NAN_BOXED(0xadec5cbf,64,FLEN)
NAN_BOXED(0xde73afa3,64,FLEN)
NAN_BOXED(0xde73afa3,64,FLEN)
NAN_BOXED(0x4345fd91,64,FLEN)
NAN_BOXED(0x4345fd91,64,FLEN)
NAN_BOXED(0x25b16113,64,FLEN)
NAN_BOXED(0x25b16113,64,FLEN)
NAN_BOXED(0x46a4c767,64,FLEN)
NAN_BOXED(0x46a4c767,64,FLEN)
NAN_BOXED(0xc1beab5f,64,FLEN)
NAN_BOXED(0xc1beab5f,64,FLEN)
NAN_BOXED(0x37b3d172,64,FLEN)
NAN_BOXED(0x37b3d172,64,FLEN)
NAN_BOXED(0x5147eff2,64,FLEN)
NAN_BOXED(0x5147eff2,64,FLEN)
NAN_BOXED(0x2b303daf,64,FLEN)
NAN_BOXED(0x2b303daf,64,FLEN)
NAN_BOXED(0xe544f745,64,FLEN)
NAN_BOXED(0xe544f745,64,FLEN)
NAN_BOXED(0xadd2cc6e,64,FLEN)
NAN_BOXED(0xadd2cc6e,64,FLEN)
NAN_BOXED(0xfc8fea5b,64,FLEN)
NAN_BOXED(0xfc8fea5b,64,FLEN)
NAN_BOXED(0x27909931,64,FLEN)
NAN_BOXED(0x27909931,64,FLEN)
NAN_BOXED(0xa1e02c96,64,FLEN)
NAN_BOXED(0xa1e02c96,64,FLEN)
NAN_BOXED(0x69773d7b,64,FLEN)
NAN_BOXED(0x69773d7b,64,FLEN)
NAN_BOXED(0x3197fe7f,64,FLEN)
NAN_BOXED(0x3197fe7f,64,FLEN)
NAN_BOXED(0x5a3d407f,64,FLEN)
NAN_BOXED(0x5a3d407f,64,FLEN)
NAN_BOXED(0x73035d94,64,FLEN)
NAN_BOXED(0x73035d94,64,FLEN)
NAN_BOXED(0x324c2409,64,FLEN)
NAN_BOXED(0x324c2409,64,FLEN)
NAN_BOXED(0x48e8e26b,64,FLEN)
NAN_BOXED(0x48e8e26b,64,FLEN)
NAN_BOXED(0x98541333,64,FLEN)
NAN_BOXED(0x98541333,64,FLEN)
NAN_BOXED(0x7e5783c3,64,FLEN)
NAN_BOXED(0x7e5783c3,64,FLEN)
NAN_BOXED(0xd3af76c1,64,FLEN)
NAN_BOXED(0xd3af76c1,64,FLEN)
NAN_BOXED(0xf0cebd9f,64,FLEN)
NAN_BOXED(0xf0cebd9f,64,FLEN)
NAN_BOXED(0x773af305,64,FLEN)
NAN_BOXED(0x773af305,64,FLEN)
NAN_BOXED(0x1385c1af,64,FLEN)
NAN_BOXED(0x1385c1af,64,FLEN)
NAN_BOXED(0x366daa33,64,FLEN)
NAN_BOXED(0x366daa33,64,FLEN)
NAN_BOXED(0x2778609c,64,FLEN)
NAN_BOXED(0x2778609c,64,FLEN)
NAN_BOXED(0xc0b03e47,64,FLEN)
NAN_BOXED(0xc0b03e47,64,FLEN)
NAN_BOXED(0xfe017e0f,64,FLEN)
NAN_BOXED(0xfe017e0f,64,FLEN)
NAN_BOXED(0xc3c02c3d,64,FLEN)
NAN_BOXED(0xc3c02c3d,64,FLEN)
NAN_BOXED(0x319d6d6f,64,FLEN)
NAN_BOXED(0x319d6d6f,64,FLEN)
NAN_BOXED(0x394ff7c0,64,FLEN)
NAN_BOXED(0x394ff7c0,64,FLEN)
NAN_BOXED(0x4aa9369f,64,FLEN)
NAN_BOXED(0x4aa9369f,64,FLEN)
NAN_BOXED(0x38992705,64,FLEN)
NAN_BOXED(0x38992705,64,FLEN)
NAN_BOXED(0x87765198,64,FLEN)
NAN_BOXED(0x87765198,64,FLEN)
NAN_BOXED(0xd6b2c837,64,FLEN)
NAN_BOXED(0xd6b2c837,64,FLEN)
NAN_BOXED(0x3e68568b,64,FLEN)
NAN_BOXED(0x3e68568b,64,FLEN)
NAN_BOXED(0x0cd3b3ca,64,FLEN)
NAN_BOXED(0x0cd3b3ca,64,FLEN)
NAN_BOXED(0x76e3f8bc,64,FLEN)
NAN_BOXED(0x76e3f8bc,64,FLEN)
NAN_BOXED(0x1e917815,64,FLEN)
NAN_BOXED(0x1e917815,64,FLEN)
NAN_BOXED(0xceb054c0,64,FLEN)
NAN_BOXED(0xceb054c0,64,FLEN)
NAN_BOXED(0x87c61e34,64,FLEN)
NAN_BOXED(0x87c61e34,64,FLEN)
NAN_BOXED(0xe8d25d53,64,FLEN)
NAN_BOXED(0xe8d25d53,64,FLEN)
NAN_BOXED(0x4c4cc8c3,64,FLEN)
NAN_BOXED(0x4c4cc8c3,64,FLEN)
NAN_BOXED(0x8772ca12,64,FLEN)
NAN_BOXED(0x8772ca12,64,FLEN)
NAN_BOXED(0x2e38e2e5,64,FLEN)
NAN_BOXED(0x2e38e2e5,64,FLEN)
NAN_BOXED(0xa1c96a68,64,FLEN)
NAN_BOXED(0xa1c96a68,64,FLEN)
NAN_BOXED(0x8900399e,64,FLEN)
NAN_BOXED(0x8900399e,64,FLEN)
NAN_BOXED(0x1e26f92c,64,FLEN)
NAN_BOXED(0x1e26f92c,64,FLEN)
NAN_BOXED(0xe6b0b955,64,FLEN)
NAN_BOXED(0xe6b0b955,64,FLEN)
NAN_BOXED(0xcbe2e23f,64,FLEN)
NAN_BOXED(0xcbe2e23f,64,FLEN)
NAN_BOXED(0x83bb05d4,64,FLEN)
NAN_BOXED(0x83bb05d4,64,FLEN)
NAN_BOXED(0x8c135d65,64,FLEN)
NAN_BOXED(0x8c135d65,64,FLEN)
NAN_BOXED(0xb4a3fc09,64,FLEN)
NAN_BOXED(0xb4a3fc09,64,FLEN)
NAN_BOXED(0x4237475b,64,FLEN)
NAN_BOXED(0x4237475b,64,FLEN)
NAN_BOXED(0x651b8f6d,64,FLEN)
NAN_BOXED(0x651b8f6d,64,FLEN)
NAN_BOXED(0x79609cdf,64,FLEN)
NAN_BOXED(0x79609cdf,64,FLEN)
NAN_BOXED(0xb7c6a477,64,FLEN)
NAN_BOXED(0xb7c6a477,64,FLEN)
NAN_BOXED(0xe944dafc,64,FLEN)
NAN_BOXED(0xe944dafc,64,FLEN)
NAN_BOXED(0x3fae86a6,64,FLEN)
NAN_BOXED(0x3fae86a6,64,FLEN)
NAN_BOXED(0x628e7311,64,FLEN)
NAN_BOXED(0x628e7311,64,FLEN)
NAN_BOXED(0xb501fc6b,64,FLEN)
NAN_BOXED(0xb501fc6b,64,FLEN)
NAN_BOXED(0x87a6fe4b,64,FLEN)
NAN_BOXED(0x87a6fe4b,64,FLEN)
NAN_BOXED(0x9ab2139f,64,FLEN)
NAN_BOXED(0x9ab2139f,64,FLEN)
NAN_BOXED(0xf91b7583,64,FLEN)
NAN_BOXED(0xf91b7583,64,FLEN)
NAN_BOXED(0x8f9c858f,64,FLEN)
NAN_BOXED(0x8f9c858f,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 382*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
