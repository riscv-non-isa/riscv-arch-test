
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Fri Aug 25 05:36:11 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fsub.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fsub.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fsub.d_b12 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fsub.d_b12)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x132d8f91b7583 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6d1771ceea796 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x30; dest:x30; op1val:0x7fc132d8f91b7583; valaddr_reg:x3; op2:x30; op2val:0x7fc132d8f91b7583
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x30, x31,x30,x31,0, 0, 0, 0xf91b7583, 0x7fc132d8,0xf91b7583,0x7fc132d8,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x26, rs2==x24, rd==x28,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x870d778409f12 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x04750f3c7df65 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x26; dest:x28; op1val:0x7fe870d778409f12; valaddr_reg:x3; op2:x24; op2val:0x7fe04750f3c7df65
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x28, x29, x26, x27,x24,x25,0, 0, 0, 0x78409f12, 0x7fe870d7,0xf3c7df65,0x7fe04750,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 == rd != rs2, rs1==x24, rs2==x28, rd==x24,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfb5355e167379 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x785f9927a57c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x24; dest:x24; op1val:0x7fdfb5355e167379; valaddr_reg:x3; op2:x28; op2val:0x7fa785f9927a57c0
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x24, x25, x24, x25,x28,x29,0, 0, 0, 0x5e167379, 0x7fdfb535,0x927a57c0,0x7fa785f9,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs2 == rd != rs1, rs1==x28, rs2==x26, rd==x26,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d9d98184b9d9 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x18d7cfd491228 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x26; op1val:0x7fe4d9d98184b9d9; valaddr_reg:x3; op2:x26; op2val:0xffc18d7cfd491228
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x26, x27, x28, x29,x26,x27,0, 0, 0, 0x8184b9d9, 0x7fe4d9d9,0xfd491228,0xffc18d7c,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs1 == rs2 != rd, rs1==x20, rs2==x20, rd==x22,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8072e8f9c858f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x0c566d30677f7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x20; dest:x22; op1val:0x7fb8072e8f9c858f; valaddr_reg:x3; op2:x20; op2val:0x7fb8072e8f9c858f
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x22, x23, x20, x21,x20,x21,0, 0, 0, 0x8f9c858f, 0x7fb8072e,0x8f9c858f,0x7fb8072e,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabe96758f2a09 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x9cab846424ba1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x22; dest:x20; op1val:0x7feabe96758f2a09; valaddr_reg:x3; op2:x18; op2val:0x7fd9cab846424ba1
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x20, x21, x22, x23,x18,x19,0, 0, 0, 0x758f2a09, 0x7feabe96,0x46424ba1,0x7fd9cab8,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x22, rd==x18,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x86499331191c4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x853587c49095b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x16; dest:x18; op1val:0x7fe86499331191c4; valaddr_reg:x3; op2:x22; op2val:0x7fe853587c49095b
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x18, x19, x16, x17,x22,x23,0, 0, 0, 0x331191c4, 0x7fe86499,0x7c49095b,0x7fe85358,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc81394a2171e9 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x1ac7cf448b205 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x18; dest:x16; op1val:0x7fdc81394a2171e9; valaddr_reg:x3; op2:x14; op2val:0xffd1ac7cf448b205
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x16, x17, x18, x19,x14,x15,0, 0, 0, 0x4a2171e9, 0x7fdc8139,0xf448b205,0xffd1ac7c,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd481499755d4b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6eda32e0b56e8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x12; dest:x14; op1val:0x7fcd481499755d4b; valaddr_reg:x3; op2:x16; op2val:0xffe6eda32e0b56e8
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x14, x15, x12, x13,x16,x17,0, 0, 0, 0x99755d4b, 0x7fcd4814,0x2e0b56e8,0xffe6eda3,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd87e65450c45 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xbdde68d2e30aa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x14; dest:x12; op1val:0x7fecd87e65450c45; valaddr_reg:x16; op2:x10; op2val:0x7febdde68d2e30aa
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x12, x13, x14, x15,x10,x11,0, 0, 0, 0x65450c45, 0x7fecd87e,0x8d2e30aa,0x7febdde6,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa0e7ad32453df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x082cc69704a64 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x8; dest:x10; op1val:0x7f9a0e7ad32453df; valaddr_reg:x16; op2:x12; op2val:0xffe082cc69704a64
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0xd32453df, 0x7f9a0e7a,0x69704a64,0xffe082cc,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0d828b86622a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x1daaf50c76c8b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x10; dest:x8; op1val:0x7fee0d828b86622a; valaddr_reg:x16; op2:x6; op2val:0x7fe1daaf50c76c8b
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x8, x9, x10, x11,x6,x7,0, 0, 0, 0x8b86622a, 0x7fee0d82,0x50c76c8b,0x7fe1daaf,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbb9876f8130c3 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xa4e630c1be6d7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x4; dest:x6; op1val:0x7fcbb9876f8130c3; valaddr_reg:x16; op2:x8; op2val:0xffca4e630c1be6d7
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x6, x7, x4, x5,x8,x9,0, 0, 0, 0x6f8130c3, 0x7fcbb987,0x0c1be6d7,0xffca4e63,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdbcde43895c3f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x8a8c8b3c6f2ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x6; dest:x4; op1val:0x7f9dbcde43895c3f; valaddr_reg:x16; op2:x2; op2val:0xffc8a8c8b3c6f2ff
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x4, x5, x6, x7,x2,x3,0, 0, 0, 0x43895c3f, 0x7f9dbcde,0xb3c6f2ff,0xffc8a8c8,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc0659af8369fd and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xda84ca746bd30 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x2; dest:x30; op1val:0x7fdc0659af8369fd; valaddr_reg:x16; op2:x28; op2val:0xffada84ca746bd30
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x2, x3,x28,x29,0, 0, 0, 0xaf8369fd, 0x7fdc0659,0xa746bd30,0xffada84c,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdd5b61587fd27 and fs2 == 0 and fe2 == 0x7f6 and fm2 == 0x22b4aace78200 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fcdd5b61587fd27; valaddr_reg:x16; op2:x4; op2val:0x7f622b4aace78200
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x4,x5,0, 0, 0, 0x1587fd27, 0x7fcdd5b6,0xace78200,0x7f622b4a,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc01045c2cd787 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xed344f30f8d23 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x30; dest:x2; op1val:0x7fcc01045c2cd787; valaddr_reg:x16; op2:x28; op2val:0xffced344f30f8d23
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x2, x3, x30, x31,x28,x29,0, 0, 0, 0x5c2cd787, 0x7fcc0104,0xf30f8d23,0xffced344,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x28bc82f697c4d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x12bb1d4152629 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd28bc82f697c4d; valaddr_reg:x16; op2:x26; op2val:0x7fd12bb1d4152629
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f697c4d, 0x7fd28bc8,0xd4152629,0x7fd12bb1,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xacd7053aa42a2 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x1fdee0ff3e0e2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feacd7053aa42a2; valaddr_reg:x16; op2:x26; op2val:0x7fd1fdee0ff3e0e2
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x53aa42a2, 0x7feacd70,0x0ff3e0e2,0x7fd1fdee,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48dace8666677 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xd35766bc3e2c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe48dace8666677; valaddr_reg:x16; op2:x26; op2val:0x7fdd35766bc3e2c3
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe8666677, 0x7fe48dac,0x6bc3e2c3,0x7fdd3576,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc2ea66e5019e and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x0f8ef46d602a4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fefc2ea66e5019e; valaddr_reg:x16; op2:x26; op2val:0x7fc0f8ef46d602a4
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x66e5019e, 0x7fefc2ea,0x46d602a4,0x7fc0f8ef,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xef2a4f7c7db7f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xb1c6f0270591a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fbef2a4f7c7db7f; valaddr_reg:x16; op2:x26; op2val:0xffcb1c6f0270591a
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf7c7db7f, 0x7fbef2a4,0x0270591a,0xffcb1c6f,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7166677e49c3c and fs2 == 0 and fe2 == 0x7f8 and fm2 == 0x5144e78f2a6c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe7166677e49c3c; valaddr_reg:x16; op2:x26; op2val:0x7f85144e78f2a6c0
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x77e49c3c, 0x7fe71666,0x78f2a6c0,0x7f85144e,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdf7523fde6c5d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0756bb5d68556 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fedf7523fde6c5d; valaddr_reg:x16; op2:x26; op2val:0x7fe0756bb5d68556
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3fde6c5d, 0x7fedf752,0xb5d68556,0x7fe0756b,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa8fa703a4078c and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x472096b867e58 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fea8fa703a4078c; valaddr_reg:x16; op2:x26; op2val:0x7fc472096b867e58
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x03a4078c, 0x7fea8fa7,0x6b867e58,0x7fc47209,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x36a63c245f557 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x23087ed83ab89 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd36a63c245f557; valaddr_reg:x16; op2:x26; op2val:0xffd23087ed83ab89
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc245f557, 0x7fd36a63,0xed83ab89,0xffd23087,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc3d4499ff58c3 and fs2 == 0 and fe2 == 0x7fa and fm2 == 0x2937fe3bd9f20 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec3d4499ff58c3; valaddr_reg:x16; op2:x26; op2val:0x7fa2937fe3bd9f20
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x99ff58c3, 0x7fec3d44,0xe3bd9f20,0x7fa2937f,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02b48f992cb49 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x56e924eb7c838 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe02b48f992cb49; valaddr_reg:x16; op2:x26; op2val:0xffb56e924eb7c838
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf992cb49, 0x7fe02b48,0x4eb7c838,0xffb56e92,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x1ad5e9ebc09df and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xaa6c2d4374fa3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa1ad5e9ebc09df; valaddr_reg:x16; op2:x26; op2val:0xffcaa6c2d4374fa3
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9ebc09df, 0x7fa1ad5e,0xd4374fa3,0xffcaa6c2,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x98455e99dfdb1 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x8848cf5ea9657 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe98455e99dfdb1; valaddr_reg:x16; op2:x26; op2val:0x7fd8848cf5ea9657
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe99dfdb1, 0x7fe98455,0xf5ea9657,0x7fd8848c,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6251b45dfbd3b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x80cf7341ff72e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc6251b45dfbd3b; valaddr_reg:x16; op2:x26; op2val:0xffd80cf7341ff72e
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x45dfbd3b, 0x7fc6251b,0x341ff72e,0xffd80cf7,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x67f4f571a752e and fs2 == 0 and fe2 == 0x7f9 and fm2 == 0xd3d8104d0cdc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe67f4f571a752e; valaddr_reg:x16; op2:x26; op2val:0x7f9d3d8104d0cdc0
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x571a752e, 0x7fe67f4f,0x04d0cdc0,0x7f9d3d81,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7fb2260b115e9 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0734092792958 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd7fb2260b115e9; valaddr_reg:x16; op2:x26; op2val:0xffb0734092792958
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x60b115e9, 0x7fd7fb22,0x92792958,0xffb07340,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x04507a06e8587 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x147f1b87235fc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe04507a06e8587; valaddr_reg:x16; op2:x26; op2val:0xffd147f1b87235fc
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa06e8587, 0x7fe04507,0xb87235fc,0xffd147f1,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ab870b5c1c40 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x057ed5782c7d6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0ab870b5c1c40; valaddr_reg:x16; op2:x26; op2val:0x7fc057ed5782c7d6
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0b5c1c40, 0x7fe0ab87,0x5782c7d6,0x7fc057ed,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf57237ddcb451 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xd72951a1b8967 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fdf57237ddcb451; valaddr_reg:x16; op2:x26; op2val:0x7fdd72951a1b8967
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7ddcb451, 0x7fdf5723,0x1a1b8967,0x7fdd7295,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x643f753bef22f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x51ddbb228ba06 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fa643f753bef22f; valaddr_reg:x16; op2:x26; op2val:0xffe51ddbb228ba06
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x53bef22f, 0x7fa643f7,0xb228ba06,0xffe51ddb,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf7646167590ef and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x8f5d3484b0730 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fef7646167590ef; valaddr_reg:x16; op2:x26; op2val:0x7fd8f5d3484b0730
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x167590ef, 0x7fef7646,0x484b0730,0x7fd8f5d3,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x930bcbd2d6035 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xc9378d7a8307f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd930bcbd2d6035; valaddr_reg:x16; op2:x26; op2val:0x7fcc9378d7a8307f
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbd2d6035, 0x7fd930bc,0xd7a8307f,0x7fcc9378,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0125698e86242 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xeb5aac6486d0c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0125698e86242; valaddr_reg:x16; op2:x26; op2val:0xffdeb5aac6486d0c
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x98e86242, 0x7fe01256,0xc6486d0c,0xffdeb5aa,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8a82024cc4e03 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xd8e5154788b84 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe8a82024cc4e03; valaddr_reg:x16; op2:x26; op2val:0x7fcd8e5154788b84
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x24cc4e03, 0x7fe8a820,0x54788b84,0x7fcd8e51,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb877e6e317fa2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x41981cc935638 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feb877e6e317fa2; valaddr_reg:x16; op2:x26; op2val:0x7fe41981cc935638
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6e317fa2, 0x7feb877e,0xcc935638,0x7fe41981,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x070d1456013e3 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xc13973c0771d8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe070d1456013e3; valaddr_reg:x16; op2:x26; op2val:0xffdc13973c0771d8
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x456013e3, 0x7fe070d1,0x3c0771d8,0xffdc1397,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x27d4b8969c0b2 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xe60b40e314f0c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe27d4b8969c0b2; valaddr_reg:x16; op2:x26; op2val:0x7fbe60b40e314f0c
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8969c0b2, 0x7fe27d4b,0x0e314f0c,0x7fbe60b4,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x13bdffd461269 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x1d67f1f990c0b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fd13bdffd461269; valaddr_reg:x16; op2:x26; op2val:0xffd1d67f1f990c0b
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfd461269, 0x7fd13bdf,0x1f990c0b,0xffd1d67f,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea0b252eae7e0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xe71ed696201f1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7feea0b252eae7e0; valaddr_reg:x16; op2:x26; op2val:0x7fee71ed696201f1
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x52eae7e0, 0x7feea0b2,0x696201f1,0x7fee71ed,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x913b4236d8411 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x2db788640aba0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe913b4236d8411; valaddr_reg:x16; op2:x26; op2val:0xffa2db788640aba0
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x236d8411, 0x7fe913b4,0x8640aba0,0xffa2db78,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc5b9547c0fb71 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x2a58446d0baa8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fec5b9547c0fb71; valaddr_reg:x16; op2:x26; op2val:0x7fc2a58446d0baa8
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x47c0fb71, 0x7fec5b95,0x46d0baa8,0x7fc2a584,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x296ec52d097ea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe9e4795c8459f5; valaddr_reg:x16; op2:x26; op2val:0x7fd296ec52d097ea
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5c8459f5, 0x7fe9e479,0x52d097ea,0x7fd296ec,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1f6a4c4d26ab9 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x1506f64179e12 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe1f6a4c4d26ab9; valaddr_reg:x16; op2:x26; op2val:0x7fc1506f64179e12
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc4d26ab9, 0x7fe1f6a4,0x64179e12,0x7fc1506f,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x132d8f91b7583 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6d1771ceea796 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fc132d8f91b7583; valaddr_reg:x16; op2:x26; op2val:0xffe6d1771ceea796
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf91b7583, 0x7fc132d8,0x1ceea796,0xffe6d177,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8072e8f9c858f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x0c566d30677f7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fb8072e8f9c858f; valaddr_reg:x16; op2:x26; op2val:0x7fb0c566d30677f7
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8f9c858f, 0x7fb8072e,0xd30677f7,0x7fb0c566,x16, 80*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0xf91b7583,64,FLEN)
NAN_BOXED(0xf91b7583,64,FLEN)
NAN_BOXED(0x78409f12,64,FLEN)
NAN_BOXED(0xf3c7df65,64,FLEN)
NAN_BOXED(0x5e167379,64,FLEN)
NAN_BOXED(0x927a57c0,64,FLEN)
NAN_BOXED(0x8184b9d9,64,FLEN)
NAN_BOXED(0xfd491228,64,FLEN)
NAN_BOXED(0x8f9c858f,64,FLEN)
NAN_BOXED(0x8f9c858f,64,FLEN)
NAN_BOXED(0x758f2a09,64,FLEN)
NAN_BOXED(0x46424ba1,64,FLEN)
NAN_BOXED(0x331191c4,64,FLEN)
NAN_BOXED(0x7c49095b,64,FLEN)
NAN_BOXED(0x4a2171e9,64,FLEN)
NAN_BOXED(0xf448b205,64,FLEN)
NAN_BOXED(0x99755d4b,64,FLEN)
NAN_BOXED(0x2e0b56e8,64,FLEN)
test_dataset_1:
NAN_BOXED(0x65450c45,64,FLEN)
NAN_BOXED(0x8d2e30aa,64,FLEN)
NAN_BOXED(0xd32453df,64,FLEN)
NAN_BOXED(0x69704a64,64,FLEN)
NAN_BOXED(0x8b86622a,64,FLEN)
NAN_BOXED(0x50c76c8b,64,FLEN)
NAN_BOXED(0x6f8130c3,64,FLEN)
NAN_BOXED(0x0c1be6d7,64,FLEN)
NAN_BOXED(0x43895c3f,64,FLEN)
NAN_BOXED(0xb3c6f2ff,64,FLEN)
NAN_BOXED(0xaf8369fd,64,FLEN)
NAN_BOXED(0xa746bd30,64,FLEN)
NAN_BOXED(0x1587fd27,64,FLEN)
NAN_BOXED(0xace78200,64,FLEN)
NAN_BOXED(0x5c2cd787,64,FLEN)
NAN_BOXED(0xf30f8d23,64,FLEN)
NAN_BOXED(0x2f697c4d,64,FLEN)
NAN_BOXED(0xd4152629,64,FLEN)
NAN_BOXED(0x53aa42a2,64,FLEN)
NAN_BOXED(0x0ff3e0e2,64,FLEN)
NAN_BOXED(0xe8666677,64,FLEN)
NAN_BOXED(0x6bc3e2c3,64,FLEN)
NAN_BOXED(0x66e5019e,64,FLEN)
NAN_BOXED(0x46d602a4,64,FLEN)
NAN_BOXED(0xf7c7db7f,64,FLEN)
NAN_BOXED(0x0270591a,64,FLEN)
NAN_BOXED(0x77e49c3c,64,FLEN)
NAN_BOXED(0x78f2a6c0,64,FLEN)
NAN_BOXED(0x3fde6c5d,64,FLEN)
NAN_BOXED(0xb5d68556,64,FLEN)
NAN_BOXED(0x03a4078c,64,FLEN)
NAN_BOXED(0x6b867e58,64,FLEN)
NAN_BOXED(0xc245f557,64,FLEN)
NAN_BOXED(0xed83ab89,64,FLEN)
NAN_BOXED(0x99ff58c3,64,FLEN)
NAN_BOXED(0xe3bd9f20,64,FLEN)
NAN_BOXED(0xf992cb49,64,FLEN)
NAN_BOXED(0x4eb7c838,64,FLEN)
NAN_BOXED(0x9ebc09df,64,FLEN)
NAN_BOXED(0xd4374fa3,64,FLEN)
NAN_BOXED(0xe99dfdb1,64,FLEN)
NAN_BOXED(0xf5ea9657,64,FLEN)
NAN_BOXED(0x45dfbd3b,64,FLEN)
NAN_BOXED(0x341ff72e,64,FLEN)
NAN_BOXED(0x571a752e,64,FLEN)
NAN_BOXED(0x04d0cdc0,64,FLEN)
NAN_BOXED(0x60b115e9,64,FLEN)
NAN_BOXED(0x92792958,64,FLEN)
NAN_BOXED(0xa06e8587,64,FLEN)
NAN_BOXED(0xb87235fc,64,FLEN)
NAN_BOXED(0x0b5c1c40,64,FLEN)
NAN_BOXED(0x5782c7d6,64,FLEN)
NAN_BOXED(0x7ddcb451,64,FLEN)
NAN_BOXED(0x1a1b8967,64,FLEN)
NAN_BOXED(0x53bef22f,64,FLEN)
NAN_BOXED(0xb228ba06,64,FLEN)
NAN_BOXED(0x167590ef,64,FLEN)
NAN_BOXED(0x484b0730,64,FLEN)
NAN_BOXED(0xbd2d6035,64,FLEN)
NAN_BOXED(0xd7a8307f,64,FLEN)
NAN_BOXED(0x98e86242,64,FLEN)
NAN_BOXED(0xc6486d0c,64,FLEN)
NAN_BOXED(0x24cc4e03,64,FLEN)
NAN_BOXED(0x54788b84,64,FLEN)
NAN_BOXED(0x6e317fa2,64,FLEN)
NAN_BOXED(0xcc935638,64,FLEN)
NAN_BOXED(0x456013e3,64,FLEN)
NAN_BOXED(0x3c0771d8,64,FLEN)
NAN_BOXED(0x8969c0b2,64,FLEN)
NAN_BOXED(0x0e314f0c,64,FLEN)
NAN_BOXED(0xfd461269,64,FLEN)
NAN_BOXED(0x1f990c0b,64,FLEN)
NAN_BOXED(0x52eae7e0,64,FLEN)
NAN_BOXED(0x696201f1,64,FLEN)
NAN_BOXED(0x236d8411,64,FLEN)
NAN_BOXED(0x8640aba0,64,FLEN)
NAN_BOXED(0x47c0fb71,64,FLEN)
NAN_BOXED(0x46d0baa8,64,FLEN)
NAN_BOXED(0x5c8459f5,64,FLEN)
NAN_BOXED(0x52d097ea,64,FLEN)
NAN_BOXED(0xc4d26ab9,64,FLEN)
NAN_BOXED(0x64179e12,64,FLEN)
NAN_BOXED(0xf91b7583,64,FLEN)
NAN_BOXED(0x1ceea796,64,FLEN)
NAN_BOXED(0x8f9c858f,64,FLEN)
NAN_BOXED(0xd30677f7,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 82*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
