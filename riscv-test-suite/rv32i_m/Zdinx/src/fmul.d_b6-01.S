
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Fri Aug 25 06:12:14 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fmul.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmul.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fmul.d_b6 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fmul.d_b6)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x28, rs2==x26, rd==x30,fs1 == 0 and fe1 == 0x39a and fm1 == 0x4bd6158ab1629 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8afd6f4cb48b9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a4bd6158ab1629; valaddr_reg:x3; op2:x26; op2val:0x41d8afd6f4cb48b9
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x58ab1629, 0x39a4bd61,0xf4cb48b9,0x41d8afd6,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 == rd != rs2, rs1==x26, rs2==x30, rd==x26,fs1 == 0 and fe1 == 0x39a and fm1 == 0x4bd6158ab1629 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8afd6f4cb48b9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x26; dest:x26; op1val:0x39a4bd6158ab1629; valaddr_reg:x3; op2:x30; op2val:0x41d8afd6f4cb48b9
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x26, x27, x26, x27,x30,x31,32, 0, 0, 0x58ab1629, 0x39a4bd61,0xf4cb48b9,0x41d8afd6,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 == rs2 == rd, rs1==x24, rs2==x24, rd==x24,fs1 == 0 and fe1 == 0x39a and fm1 == 0x4bd6158ab1629 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8afd6f4cb48b9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x24; dest:x24; op1val:0x39a4bd6158ab1629; valaddr_reg:x3; op2:x24; op2val:0x39a4bd6158ab1629
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x24, x25, x24, x25,x24,x25,64, 0, 0, 0x58ab1629, 0x39a4bd61,0x58ab1629,0x39a4bd61,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1 == rs2 != rd, rs1==x22, rs2==x22, rd==x28,fs1 == 0 and fe1 == 0x39a and fm1 == 0x4bd6158ab1629 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8afd6f4cb48b9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x22; dest:x28; op1val:0x39a4bd6158ab1629; valaddr_reg:x3; op2:x22; op2val:0x39a4bd6158ab1629
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x28, x29, x22, x23,x22,x23,96, 0, 0, 0x58ab1629, 0x39a4bd61,0x58ab1629,0x39a4bd61,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs2 == rd != rs1, rs1==x30, rs2==x20, rd==x20,fs1 == 0 and fe1 == 0x39a and fm1 == 0x4bd6158ab1629 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8afd6f4cb48b9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x30; dest:x20; op1val:0x39a4bd6158ab1629; valaddr_reg:x3; op2:x20; op2val:0x41d8afd6f4cb48b9
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x20, x21, x30, x31,x20,x21,128, 0, 0, 0x58ab1629, 0x39a4bd61,0xf4cb48b9,0x41d8afd6,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x20, rs2==x28, rd==x22,fs1 == 0 and fe1 == 0x39a and fm1 == 0xfcb6e0e21d091 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x01a746ecaaba6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x20; dest:x22; op1val:0x39afcb6e0e21d091; valaddr_reg:x3; op2:x28; op2val:0x40f01a746ecaaba6
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x22, x23, x20, x21,x28,x29,0, 0, 0, 0x0e21d091, 0x39afcb6e,0x6ecaaba6,0x40f01a74,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x14, rd==x18,fs1 == 0 and fe1 == 0x39a and fm1 == 0xfcb6e0e21d091 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x01a746ecaaba6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x16; dest:x18; op1val:0x39afcb6e0e21d091; valaddr_reg:x3; op2:x14; op2val:0x40f01a746ecaaba6
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x18, x19, x16, x17,x14,x15,32, 0, 0, 0x0e21d091, 0x39afcb6e,0x6ecaaba6,0x40f01a74,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x14, rs2==x18, rd==x16,fs1 == 0 and fe1 == 0x39a and fm1 == 0xfcb6e0e21d091 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x01a746ecaaba6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x14; dest:x16; op1val:0x39afcb6e0e21d091; valaddr_reg:x3; op2:x18; op2val:0x40f01a746ecaaba6
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x16, x17, x14, x15,x18,x19,64, 0, 0, 0x0e21d091, 0x39afcb6e,0x6ecaaba6,0x40f01a74,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x18, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x39a and fm1 == 0xfcb6e0e21d091 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x01a746ecaaba6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x18; dest:x14; op1val:0x39afcb6e0e21d091; valaddr_reg:x3; op2:x16; op2val:0x40f01a746ecaaba6
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x14, x15, x18, x19,x16,x17,96, 0, 0, 0x0e21d091, 0x39afcb6e,0x6ecaaba6,0x40f01a74,x3, 16*SIGALIGN, x4,x1, x2)

inst_9:// rs1==x10, rs2==x8, rd==x12,fs1 == 0 and fe1 == 0x39a and fm1 == 0xfcb6e0e21d091 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x01a746ecaaba6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x10; dest:x12; op1val:0x39afcb6e0e21d091; valaddr_reg:x3; op2:x8; op2val:0x40f01a746ecaaba6
offset:18*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x12, x13, x10, x11,x8,x9,128, 0, 0, 0x0e21d091, 0x39afcb6e,0x6ecaaba6,0x40f01a74,x3, 18*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x15,test_dataset_1)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x39a and fm1 == 0x355440740a6f0 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x73944ae980930 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x8; dest:x10; op1val:0x39a355440740a6f0; valaddr_reg:x15; op2:x12; op2val:0x40773944ae980930
offset:0*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0x0740a6f0, 0x39a35544,0xae980930,0x40773944,x15, 0*SIGALIGN, x16,x1, x14)

inst_11:// rs1==x12, rs2==x10, rd==x8,fs1 == 0 and fe1 == 0x39a and fm1 == 0x355440740a6f0 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x73944ae980930 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x12; dest:x8; op1val:0x39a355440740a6f0; valaddr_reg:x15; op2:x10; op2val:0x40773944ae980930
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x8, x9, x12, x13,x10,x11,32, 0, 0, 0x0740a6f0, 0x39a35544,0xae980930,0x40773944,x15, 2*SIGALIGN, x16,x1, x14)

inst_12:// rs1==x4, rs2==x2, rd==x6,fs1 == 0 and fe1 == 0x39a and fm1 == 0x355440740a6f0 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x73944ae980930 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x4; dest:x6; op1val:0x39a355440740a6f0; valaddr_reg:x15; op2:x2; op2val:0x40773944ae980930
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x6, x7, x4, x5,x2,x3,64, 0, 0, 0x0740a6f0, 0x39a35544,0xae980930,0x40773944,x15, 4*SIGALIGN, x16,x1, x14)

inst_13:// rs1==x2, rs2==x6, rd==x4,fs1 == 0 and fe1 == 0x39a and fm1 == 0x355440740a6f0 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x73944ae980930 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x2; dest:x4; op1val:0x39a355440740a6f0; valaddr_reg:x15; op2:x6; op2val:0x40773944ae980930
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x4, x5, x2, x3,x6,x7,96, 0, 0, 0x0740a6f0, 0x39a35544,0xae980930,0x40773944,x15, 6*SIGALIGN, x16,x1, x14)

inst_14:// rs1==x6, rs2==x4, rd==x2,fs1 == 0 and fe1 == 0x39a and fm1 == 0x355440740a6f0 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x73944ae980930 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x6; dest:x2; op1val:0x39a355440740a6f0; valaddr_reg:x15; op2:x4; op2val:0x40773944ae980930
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x2, x3, x6, x7,x4,x5,128, 0, 0, 0x0740a6f0, 0x39a35544,0xae980930,0x40773944,x15, 8*SIGALIGN, x16,x1, x14)

inst_15:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26b31120173aa and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbcc3d3deff473 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b26b31120173aa; valaddr_reg:x15; op2:x26; op2val:0x400bcc3d3deff473
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x120173aa, 0x39b26b31,0x3deff473,0x400bcc3d,x15, 10*SIGALIGN, x16,x1, x14)

inst_16:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26b31120173aa and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbcc3d3deff473 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b26b31120173aa; valaddr_reg:x15; op2:x26; op2val:0x400bcc3d3deff473
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x120173aa, 0x39b26b31,0x3deff473,0x400bcc3d,x15, 12*SIGALIGN, x16,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26b31120173aa and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbcc3d3deff473 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b26b31120173aa; valaddr_reg:x15; op2:x26; op2val:0x400bcc3d3deff473
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x120173aa, 0x39b26b31,0x3deff473,0x400bcc3d,x15, 14*SIGALIGN, x16,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26b31120173aa and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbcc3d3deff473 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b26b31120173aa; valaddr_reg:x15; op2:x26; op2val:0x400bcc3d3deff473
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x120173aa, 0x39b26b31,0x3deff473,0x400bcc3d,x15, 16*SIGALIGN, x16,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26b31120173aa and fs2 == 0 and fe2 == 0x400 and fm2 == 0xbcc3d3deff473 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b26b31120173aa; valaddr_reg:x15; op2:x26; op2val:0x400bcc3d3deff473
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x120173aa, 0x39b26b31,0x3deff473,0x400bcc3d,x15, 18*SIGALIGN, x16,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6dd8b031ef3ab and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf8389087562f6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3996dd8b031ef3ab; valaddr_reg:x15; op2:x26; op2val:0x3fdf8389087562f6
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x031ef3ab, 0x3996dd8b,0x087562f6,0x3fdf8389,x15, 20*SIGALIGN, x16,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6dd8b031ef3ab and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf8389087562f6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3996dd8b031ef3ab; valaddr_reg:x15; op2:x26; op2val:0x3fdf8389087562f6
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x031ef3ab, 0x3996dd8b,0x087562f6,0x3fdf8389,x15, 22*SIGALIGN, x16,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6dd8b031ef3ab and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf8389087562f6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3996dd8b031ef3ab; valaddr_reg:x15; op2:x26; op2val:0x3fdf8389087562f6
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x031ef3ab, 0x3996dd8b,0x087562f6,0x3fdf8389,x15, 24*SIGALIGN, x16,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6dd8b031ef3ab and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf8389087562f6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3996dd8b031ef3ab; valaddr_reg:x15; op2:x26; op2val:0x3fdf8389087562f6
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x031ef3ab, 0x3996dd8b,0x087562f6,0x3fdf8389,x15, 26*SIGALIGN, x16,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6dd8b031ef3ab and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf8389087562f6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3996dd8b031ef3ab; valaddr_reg:x15; op2:x26; op2val:0x3fdf8389087562f6
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x031ef3ab, 0x3996dd8b,0x087562f6,0x3fdf8389,x15, 28*SIGALIGN, x16,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x91582c3a36f34 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x1e635d34c98fd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a91582c3a36f34; valaddr_reg:x15; op2:x26; op2val:0x3f91e635d34c98fd
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc3a36f34, 0x39a91582,0xd34c98fd,0x3f91e635,x15, 30*SIGALIGN, x16,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x91582c3a36f34 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x1e635d34c98fd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a91582c3a36f34; valaddr_reg:x15; op2:x26; op2val:0x3f91e635d34c98fd
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc3a36f34, 0x39a91582,0xd34c98fd,0x3f91e635,x15, 32*SIGALIGN, x16,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x91582c3a36f34 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x1e635d34c98fd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a91582c3a36f34; valaddr_reg:x15; op2:x26; op2val:0x3f91e635d34c98fd
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xc3a36f34, 0x39a91582,0xd34c98fd,0x3f91e635,x15, 34*SIGALIGN, x16,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x91582c3a36f34 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x1e635d34c98fd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a91582c3a36f34; valaddr_reg:x15; op2:x26; op2val:0x3f91e635d34c98fd
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc3a36f34, 0x39a91582,0xd34c98fd,0x3f91e635,x15, 36*SIGALIGN, x16,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x91582c3a36f34 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x1e635d34c98fd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a91582c3a36f34; valaddr_reg:x15; op2:x26; op2val:0x3f91e635d34c98fd
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xc3a36f34, 0x39a91582,0xd34c98fd,0x3f91e635,x15, 38*SIGALIGN, x16,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x273ac314740f2 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0x67df170d9b1fd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b273ac314740f2; valaddr_reg:x15; op2:x26; op2val:0x3f567df170d9b1fd
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x314740f2, 0x39b273ac,0x70d9b1fd,0x3f567df1,x15, 40*SIGALIGN, x16,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x273ac314740f2 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0x67df170d9b1fd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b273ac314740f2; valaddr_reg:x15; op2:x26; op2val:0x3f567df170d9b1fd
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x314740f2, 0x39b273ac,0x70d9b1fd,0x3f567df1,x15, 42*SIGALIGN, x16,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x273ac314740f2 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0x67df170d9b1fd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b273ac314740f2; valaddr_reg:x15; op2:x26; op2val:0x3f567df170d9b1fd
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x314740f2, 0x39b273ac,0x70d9b1fd,0x3f567df1,x15, 44*SIGALIGN, x16,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x273ac314740f2 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0x67df170d9b1fd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b273ac314740f2; valaddr_reg:x15; op2:x26; op2val:0x3f567df170d9b1fd
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x314740f2, 0x39b273ac,0x70d9b1fd,0x3f567df1,x15, 46*SIGALIGN, x16,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x273ac314740f2 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0x67df170d9b1fd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b273ac314740f2; valaddr_reg:x15; op2:x26; op2val:0x3f567df170d9b1fd
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x314740f2, 0x39b273ac,0x70d9b1fd,0x3f567df1,x15, 48*SIGALIGN, x16,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x06ee36ec8f9b3 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf2811a6726f5a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b06ee36ec8f9b3; valaddr_reg:x15; op2:x26; op2val:0x41cf2811a6726f5a
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6ec8f9b3, 0x39b06ee3,0xa6726f5a,0x41cf2811,x15, 50*SIGALIGN, x16,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x06ee36ec8f9b3 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf2811a6726f5a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b06ee36ec8f9b3; valaddr_reg:x15; op2:x26; op2val:0x41cf2811a6726f5a
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6ec8f9b3, 0x39b06ee3,0xa6726f5a,0x41cf2811,x15, 52*SIGALIGN, x16,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x06ee36ec8f9b3 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf2811a6726f5a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b06ee36ec8f9b3; valaddr_reg:x15; op2:x26; op2val:0x41cf2811a6726f5a
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6ec8f9b3, 0x39b06ee3,0xa6726f5a,0x41cf2811,x15, 54*SIGALIGN, x16,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x06ee36ec8f9b3 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf2811a6726f5a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b06ee36ec8f9b3; valaddr_reg:x15; op2:x26; op2val:0x41cf2811a6726f5a
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6ec8f9b3, 0x39b06ee3,0xa6726f5a,0x41cf2811,x15, 56*SIGALIGN, x16,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x06ee36ec8f9b3 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf2811a6726f5a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b06ee36ec8f9b3; valaddr_reg:x15; op2:x26; op2val:0x41cf2811a6726f5a
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6ec8f9b3, 0x39b06ee3,0xa6726f5a,0x41cf2811,x15, 58*SIGALIGN, x16,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x9298353ee5835 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x459177aa91173 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3999298353ee5835; valaddr_reg:x15; op2:x26; op2val:0x410459177aa91173
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x53ee5835, 0x39992983,0x7aa91173,0x41045917,x15, 60*SIGALIGN, x16,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x9298353ee5835 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x459177aa91173 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3999298353ee5835; valaddr_reg:x15; op2:x26; op2val:0x410459177aa91173
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x53ee5835, 0x39992983,0x7aa91173,0x41045917,x15, 62*SIGALIGN, x16,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x9298353ee5835 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x459177aa91173 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3999298353ee5835; valaddr_reg:x15; op2:x26; op2val:0x410459177aa91173
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x53ee5835, 0x39992983,0x7aa91173,0x41045917,x15, 64*SIGALIGN, x16,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x9298353ee5835 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x459177aa91173 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3999298353ee5835; valaddr_reg:x15; op2:x26; op2val:0x410459177aa91173
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x53ee5835, 0x39992983,0x7aa91173,0x41045917,x15, 66*SIGALIGN, x16,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x9298353ee5835 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x459177aa91173 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3999298353ee5835; valaddr_reg:x15; op2:x26; op2val:0x410459177aa91173
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x53ee5835, 0x39992983,0x7aa91173,0x41045917,x15, 68*SIGALIGN, x16,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x23b09041be1b8 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a0cc321c8999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b23b09041be1b8; valaddr_reg:x15; op2:x26; op2val:0x4068a0cc321c8999
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x041be1b8, 0x39b23b09,0x321c8999,0x4068a0cc,x15, 70*SIGALIGN, x16,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x23b09041be1b8 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a0cc321c8999 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b23b09041be1b8; valaddr_reg:x15; op2:x26; op2val:0x4068a0cc321c8999
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x041be1b8, 0x39b23b09,0x321c8999,0x4068a0cc,x15, 72*SIGALIGN, x16,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x23b09041be1b8 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a0cc321c8999 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b23b09041be1b8; valaddr_reg:x15; op2:x26; op2val:0x4068a0cc321c8999
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x041be1b8, 0x39b23b09,0x321c8999,0x4068a0cc,x15, 74*SIGALIGN, x16,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x23b09041be1b8 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a0cc321c8999 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b23b09041be1b8; valaddr_reg:x15; op2:x26; op2val:0x4068a0cc321c8999
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x041be1b8, 0x39b23b09,0x321c8999,0x4068a0cc,x15, 76*SIGALIGN, x16,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x23b09041be1b8 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a0cc321c8999 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b23b09041be1b8; valaddr_reg:x15; op2:x26; op2val:0x4068a0cc321c8999
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x041be1b8, 0x39b23b09,0x321c8999,0x4068a0cc,x15, 78*SIGALIGN, x16,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x32702a17a3a9e and fs2 == 0 and fe2 == 0x401 and fm2 == 0xabba390e36945 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a32702a17a3a9e; valaddr_reg:x15; op2:x26; op2val:0x401abba390e36945
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa17a3a9e, 0x39a32702,0x90e36945,0x401abba3,x15, 80*SIGALIGN, x16,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x32702a17a3a9e and fs2 == 0 and fe2 == 0x401 and fm2 == 0xabba390e36945 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a32702a17a3a9e; valaddr_reg:x15; op2:x26; op2val:0x401abba390e36945
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa17a3a9e, 0x39a32702,0x90e36945,0x401abba3,x15, 82*SIGALIGN, x16,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x32702a17a3a9e and fs2 == 0 and fe2 == 0x401 and fm2 == 0xabba390e36945 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a32702a17a3a9e; valaddr_reg:x15; op2:x26; op2val:0x401abba390e36945
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa17a3a9e, 0x39a32702,0x90e36945,0x401abba3,x15, 84*SIGALIGN, x16,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x32702a17a3a9e and fs2 == 0 and fe2 == 0x401 and fm2 == 0xabba390e36945 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a32702a17a3a9e; valaddr_reg:x15; op2:x26; op2val:0x401abba390e36945
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa17a3a9e, 0x39a32702,0x90e36945,0x401abba3,x15, 86*SIGALIGN, x16,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x32702a17a3a9e and fs2 == 0 and fe2 == 0x401 and fm2 == 0xabba390e36945 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a32702a17a3a9e; valaddr_reg:x15; op2:x26; op2val:0x401abba390e36945
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa17a3a9e, 0x39a32702,0x90e36945,0x401abba3,x15, 88*SIGALIGN, x16,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x19cb2b7a32264 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x474f387d7bc5d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a19cb2b7a32264; valaddr_reg:x15; op2:x26; op2val:0x3fd474f387d7bc5d
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb7a32264, 0x39a19cb2,0x87d7bc5d,0x3fd474f3,x15, 90*SIGALIGN, x16,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x19cb2b7a32264 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x474f387d7bc5d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a19cb2b7a32264; valaddr_reg:x15; op2:x26; op2val:0x3fd474f387d7bc5d
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb7a32264, 0x39a19cb2,0x87d7bc5d,0x3fd474f3,x15, 92*SIGALIGN, x16,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x19cb2b7a32264 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x474f387d7bc5d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a19cb2b7a32264; valaddr_reg:x15; op2:x26; op2val:0x3fd474f387d7bc5d
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb7a32264, 0x39a19cb2,0x87d7bc5d,0x3fd474f3,x15, 94*SIGALIGN, x16,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x19cb2b7a32264 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x474f387d7bc5d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a19cb2b7a32264; valaddr_reg:x15; op2:x26; op2val:0x3fd474f387d7bc5d
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb7a32264, 0x39a19cb2,0x87d7bc5d,0x3fd474f3,x15, 96*SIGALIGN, x16,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x19cb2b7a32264 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x474f387d7bc5d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a19cb2b7a32264; valaddr_reg:x15; op2:x26; op2val:0x3fd474f387d7bc5d
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb7a32264, 0x39a19cb2,0x87d7bc5d,0x3fd474f3,x15, 98*SIGALIGN, x16,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2849fda388473 and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x83eed77face58 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b2849fda388473; valaddr_reg:x15; op2:x26; op2val:0x3f883eed77face58
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xda388473, 0x39b2849f,0x77face58,0x3f883eed,x15, 100*SIGALIGN, x16,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2849fda388473 and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x83eed77face58 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b2849fda388473; valaddr_reg:x15; op2:x26; op2val:0x3f883eed77face58
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xda388473, 0x39b2849f,0x77face58,0x3f883eed,x15, 102*SIGALIGN, x16,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2849fda388473 and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x83eed77face58 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b2849fda388473; valaddr_reg:x15; op2:x26; op2val:0x3f883eed77face58
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xda388473, 0x39b2849f,0x77face58,0x3f883eed,x15, 104*SIGALIGN, x16,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2849fda388473 and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x83eed77face58 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b2849fda388473; valaddr_reg:x15; op2:x26; op2val:0x3f883eed77face58
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xda388473, 0x39b2849f,0x77face58,0x3f883eed,x15, 106*SIGALIGN, x16,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2849fda388473 and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x83eed77face58 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b2849fda388473; valaddr_reg:x15; op2:x26; op2val:0x3f883eed77face58
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xda388473, 0x39b2849f,0x77face58,0x3f883eed,x15, 108*SIGALIGN, x16,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x3598d7f9e9c57 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0x572bbcc5ce5ad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a3598d7f9e9c57; valaddr_reg:x15; op2:x26; op2val:0x3f6572bbcc5ce5ad
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7f9e9c57, 0x39a3598d,0xcc5ce5ad,0x3f6572bb,x15, 110*SIGALIGN, x16,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x3598d7f9e9c57 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0x572bbcc5ce5ad and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a3598d7f9e9c57; valaddr_reg:x15; op2:x26; op2val:0x3f6572bbcc5ce5ad
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7f9e9c57, 0x39a3598d,0xcc5ce5ad,0x3f6572bb,x15, 112*SIGALIGN, x16,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x3598d7f9e9c57 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0x572bbcc5ce5ad and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a3598d7f9e9c57; valaddr_reg:x15; op2:x26; op2val:0x3f6572bbcc5ce5ad
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7f9e9c57, 0x39a3598d,0xcc5ce5ad,0x3f6572bb,x15, 114*SIGALIGN, x16,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x3598d7f9e9c57 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0x572bbcc5ce5ad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a3598d7f9e9c57; valaddr_reg:x15; op2:x26; op2val:0x3f6572bbcc5ce5ad
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7f9e9c57, 0x39a3598d,0xcc5ce5ad,0x3f6572bb,x15, 116*SIGALIGN, x16,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x3598d7f9e9c57 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0x572bbcc5ce5ad and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a3598d7f9e9c57; valaddr_reg:x15; op2:x26; op2val:0x3f6572bbcc5ce5ad
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7f9e9c57, 0x39a3598d,0xcc5ce5ad,0x3f6572bb,x15, 118*SIGALIGN, x16,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x52236afc78e8d and fs2 == 0 and fe2 == 0x41e and fm2 == 0x83a0d96200227 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39952236afc78e8d; valaddr_reg:x15; op2:x26; op2val:0x41e83a0d96200227
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xafc78e8d, 0x39952236,0x96200227,0x41e83a0d,x15, 120*SIGALIGN, x16,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x52236afc78e8d and fs2 == 0 and fe2 == 0x41e and fm2 == 0x83a0d96200227 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39952236afc78e8d; valaddr_reg:x15; op2:x26; op2val:0x41e83a0d96200227
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xafc78e8d, 0x39952236,0x96200227,0x41e83a0d,x15, 122*SIGALIGN, x16,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x52236afc78e8d and fs2 == 0 and fe2 == 0x41e and fm2 == 0x83a0d96200227 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39952236afc78e8d; valaddr_reg:x15; op2:x26; op2val:0x41e83a0d96200227
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xafc78e8d, 0x39952236,0x96200227,0x41e83a0d,x15, 124*SIGALIGN, x16,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x52236afc78e8d and fs2 == 0 and fe2 == 0x41e and fm2 == 0x83a0d96200227 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39952236afc78e8d; valaddr_reg:x15; op2:x26; op2val:0x41e83a0d96200227
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xafc78e8d, 0x39952236,0x96200227,0x41e83a0d,x15, 126*SIGALIGN, x16,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x52236afc78e8d and fs2 == 0 and fe2 == 0x41e and fm2 == 0x83a0d96200227 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39952236afc78e8d; valaddr_reg:x15; op2:x26; op2val:0x41e83a0d96200227
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xafc78e8d, 0x39952236,0x96200227,0x41e83a0d,x15, 128*SIGALIGN, x16,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x64204f3ac913b and fs2 == 0 and fe2 == 0x40f and fm2 == 0x700c9e9287c4d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a64204f3ac913b; valaddr_reg:x15; op2:x26; op2val:0x40f700c9e9287c4d
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf3ac913b, 0x39a64204,0xe9287c4d,0x40f700c9,x15, 130*SIGALIGN, x16,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x64204f3ac913b and fs2 == 0 and fe2 == 0x40f and fm2 == 0x700c9e9287c4d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a64204f3ac913b; valaddr_reg:x15; op2:x26; op2val:0x40f700c9e9287c4d
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf3ac913b, 0x39a64204,0xe9287c4d,0x40f700c9,x15, 132*SIGALIGN, x16,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x64204f3ac913b and fs2 == 0 and fe2 == 0x40f and fm2 == 0x700c9e9287c4d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a64204f3ac913b; valaddr_reg:x15; op2:x26; op2val:0x40f700c9e9287c4d
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf3ac913b, 0x39a64204,0xe9287c4d,0x40f700c9,x15, 134*SIGALIGN, x16,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x64204f3ac913b and fs2 == 0 and fe2 == 0x40f and fm2 == 0x700c9e9287c4d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a64204f3ac913b; valaddr_reg:x15; op2:x26; op2val:0x40f700c9e9287c4d
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf3ac913b, 0x39a64204,0xe9287c4d,0x40f700c9,x15, 136*SIGALIGN, x16,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x64204f3ac913b and fs2 == 0 and fe2 == 0x40f and fm2 == 0x700c9e9287c4d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a64204f3ac913b; valaddr_reg:x15; op2:x26; op2val:0x40f700c9e9287c4d
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf3ac913b, 0x39a64204,0xe9287c4d,0x40f700c9,x15, 138*SIGALIGN, x16,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd31d73c58e5f0 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xec20dce896dad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39ad31d73c58e5f0; valaddr_reg:x15; op2:x26; op2val:0x406ec20dce896dad
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3c58e5f0, 0x39ad31d7,0xce896dad,0x406ec20d,x15, 140*SIGALIGN, x16,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd31d73c58e5f0 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xec20dce896dad and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39ad31d73c58e5f0; valaddr_reg:x15; op2:x26; op2val:0x406ec20dce896dad
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3c58e5f0, 0x39ad31d7,0xce896dad,0x406ec20d,x15, 142*SIGALIGN, x16,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd31d73c58e5f0 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xec20dce896dad and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39ad31d73c58e5f0; valaddr_reg:x15; op2:x26; op2val:0x406ec20dce896dad
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3c58e5f0, 0x39ad31d7,0xce896dad,0x406ec20d,x15, 144*SIGALIGN, x16,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd31d73c58e5f0 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xec20dce896dad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39ad31d73c58e5f0; valaddr_reg:x15; op2:x26; op2val:0x406ec20dce896dad
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3c58e5f0, 0x39ad31d7,0xce896dad,0x406ec20d,x15, 146*SIGALIGN, x16,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd31d73c58e5f0 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xec20dce896dad and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39ad31d73c58e5f0; valaddr_reg:x15; op2:x26; op2val:0x406ec20dce896dad
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3c58e5f0, 0x39ad31d7,0xce896dad,0x406ec20d,x15, 148*SIGALIGN, x16,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0bad7092ab68f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe9a9f35e937c9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b0bad7092ab68f; valaddr_reg:x15; op2:x26; op2val:0x400e9a9f35e937c9
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x092ab68f, 0x39b0bad7,0x35e937c9,0x400e9a9f,x15, 150*SIGALIGN, x16,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0bad7092ab68f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe9a9f35e937c9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b0bad7092ab68f; valaddr_reg:x15; op2:x26; op2val:0x400e9a9f35e937c9
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x092ab68f, 0x39b0bad7,0x35e937c9,0x400e9a9f,x15, 152*SIGALIGN, x16,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0bad7092ab68f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe9a9f35e937c9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b0bad7092ab68f; valaddr_reg:x15; op2:x26; op2val:0x400e9a9f35e937c9
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x092ab68f, 0x39b0bad7,0x35e937c9,0x400e9a9f,x15, 154*SIGALIGN, x16,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0bad7092ab68f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe9a9f35e937c9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b0bad7092ab68f; valaddr_reg:x15; op2:x26; op2val:0x400e9a9f35e937c9
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x092ab68f, 0x39b0bad7,0x35e937c9,0x400e9a9f,x15, 156*SIGALIGN, x16,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0bad7092ab68f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe9a9f35e937c9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b0bad7092ab68f; valaddr_reg:x15; op2:x26; op2val:0x400e9a9f35e937c9
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x092ab68f, 0x39b0bad7,0x35e937c9,0x400e9a9f,x15, 158*SIGALIGN, x16,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x391 and fm1 == 0x7bc450b8c1914 and fs2 == 0 and fe2 == 0x405 and fm2 == 0xe5bd183e19167 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3917bc450b8c1914; valaddr_reg:x15; op2:x26; op2val:0x405e5bd183e19167
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0b8c1914, 0x3917bc45,0x83e19167,0x405e5bd1,x15, 160*SIGALIGN, x16,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x391 and fm1 == 0x7bc450b8c1914 and fs2 == 0 and fe2 == 0x405 and fm2 == 0xe5bd183e19167 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3917bc450b8c1914; valaddr_reg:x15; op2:x26; op2val:0x405e5bd183e19167
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0b8c1914, 0x3917bc45,0x83e19167,0x405e5bd1,x15, 162*SIGALIGN, x16,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x391 and fm1 == 0x7bc450b8c1914 and fs2 == 0 and fe2 == 0x405 and fm2 == 0xe5bd183e19167 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3917bc450b8c1914; valaddr_reg:x15; op2:x26; op2val:0x405e5bd183e19167
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0b8c1914, 0x3917bc45,0x83e19167,0x405e5bd1,x15, 164*SIGALIGN, x16,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x391 and fm1 == 0x7bc450b8c1914 and fs2 == 0 and fe2 == 0x405 and fm2 == 0xe5bd183e19167 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3917bc450b8c1914; valaddr_reg:x15; op2:x26; op2val:0x405e5bd183e19167
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0b8c1914, 0x3917bc45,0x83e19167,0x405e5bd1,x15, 166*SIGALIGN, x16,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x391 and fm1 == 0x7bc450b8c1914 and fs2 == 0 and fe2 == 0x405 and fm2 == 0xe5bd183e19167 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3917bc450b8c1914; valaddr_reg:x15; op2:x26; op2val:0x405e5bd183e19167
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0b8c1914, 0x3917bc45,0x83e19167,0x405e5bd1,x15, 168*SIGALIGN, x16,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x198d9e5fdea7a and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x983c8952f329d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b198d9e5fdea7a; valaddr_reg:x15; op2:x26; op2val:0x3f8983c8952f329d
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe5fdea7a, 0x39b198d9,0x952f329d,0x3f8983c8,x15, 170*SIGALIGN, x16,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x198d9e5fdea7a and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x983c8952f329d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b198d9e5fdea7a; valaddr_reg:x15; op2:x26; op2val:0x3f8983c8952f329d
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe5fdea7a, 0x39b198d9,0x952f329d,0x3f8983c8,x15, 172*SIGALIGN, x16,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x198d9e5fdea7a and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x983c8952f329d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b198d9e5fdea7a; valaddr_reg:x15; op2:x26; op2val:0x3f8983c8952f329d
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe5fdea7a, 0x39b198d9,0x952f329d,0x3f8983c8,x15, 174*SIGALIGN, x16,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x198d9e5fdea7a and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x983c8952f329d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b198d9e5fdea7a; valaddr_reg:x15; op2:x26; op2val:0x3f8983c8952f329d
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe5fdea7a, 0x39b198d9,0x952f329d,0x3f8983c8,x15, 176*SIGALIGN, x16,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x198d9e5fdea7a and fs2 == 0 and fe2 == 0x3f8 and fm2 == 0x983c8952f329d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b198d9e5fdea7a; valaddr_reg:x15; op2:x26; op2val:0x3f8983c8952f329d
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe5fdea7a, 0x39b198d9,0x952f329d,0x3f8983c8,x15, 178*SIGALIGN, x16,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa623af927a048 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0xf75ceede0345d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x399a623af927a048; valaddr_reg:x15; op2:x26; op2val:0x3f6f75ceede0345d
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf927a048, 0x399a623a,0xede0345d,0x3f6f75ce,x15, 180*SIGALIGN, x16,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa623af927a048 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0xf75ceede0345d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x399a623af927a048; valaddr_reg:x15; op2:x26; op2val:0x3f6f75ceede0345d
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf927a048, 0x399a623a,0xede0345d,0x3f6f75ce,x15, 182*SIGALIGN, x16,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa623af927a048 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0xf75ceede0345d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x399a623af927a048; valaddr_reg:x15; op2:x26; op2val:0x3f6f75ceede0345d
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf927a048, 0x399a623a,0xede0345d,0x3f6f75ce,x15, 184*SIGALIGN, x16,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa623af927a048 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0xf75ceede0345d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x399a623af927a048; valaddr_reg:x15; op2:x26; op2val:0x3f6f75ceede0345d
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf927a048, 0x399a623a,0xede0345d,0x3f6f75ce,x15, 186*SIGALIGN, x16,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa623af927a048 and fs2 == 0 and fe2 == 0x3f6 and fm2 == 0xf75ceede0345d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x399a623af927a048; valaddr_reg:x15; op2:x26; op2val:0x3f6f75ceede0345d
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf927a048, 0x399a623a,0xede0345d,0x3f6f75ce,x15, 188*SIGALIGN, x16,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x398 and fm1 == 0xf009dd118d92e and fs2 == 0 and fe2 == 0x41f and fm2 == 0x083ccf519948f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x398f009dd118d92e; valaddr_reg:x15; op2:x26; op2val:0x41f083ccf519948f
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd118d92e, 0x398f009d,0xf519948f,0x41f083cc,x15, 190*SIGALIGN, x16,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x398 and fm1 == 0xf009dd118d92e and fs2 == 0 and fe2 == 0x41f and fm2 == 0x083ccf519948f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x398f009dd118d92e; valaddr_reg:x15; op2:x26; op2val:0x41f083ccf519948f
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd118d92e, 0x398f009d,0xf519948f,0x41f083cc,x15, 192*SIGALIGN, x16,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x398 and fm1 == 0xf009dd118d92e and fs2 == 0 and fe2 == 0x41f and fm2 == 0x083ccf519948f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x398f009dd118d92e; valaddr_reg:x15; op2:x26; op2val:0x41f083ccf519948f
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd118d92e, 0x398f009d,0xf519948f,0x41f083cc,x15, 194*SIGALIGN, x16,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x398 and fm1 == 0xf009dd118d92e and fs2 == 0 and fe2 == 0x41f and fm2 == 0x083ccf519948f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x398f009dd118d92e; valaddr_reg:x15; op2:x26; op2val:0x41f083ccf519948f
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd118d92e, 0x398f009d,0xf519948f,0x41f083cc,x15, 196*SIGALIGN, x16,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x398 and fm1 == 0xf009dd118d92e and fs2 == 0 and fe2 == 0x41f and fm2 == 0x083ccf519948f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x398f009dd118d92e; valaddr_reg:x15; op2:x26; op2val:0x41f083ccf519948f
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd118d92e, 0x398f009d,0xf519948f,0x41f083cc,x15, 198*SIGALIGN, x16,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x35bdbe3e59b31 and fs2 == 0 and fe2 == 0x410 and fm2 == 0xa72a8c1c196d1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39935bdbe3e59b31; valaddr_reg:x15; op2:x26; op2val:0x410a72a8c1c196d1
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe3e59b31, 0x39935bdb,0xc1c196d1,0x410a72a8,x15, 200*SIGALIGN, x16,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x35bdbe3e59b31 and fs2 == 0 and fe2 == 0x410 and fm2 == 0xa72a8c1c196d1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39935bdbe3e59b31; valaddr_reg:x15; op2:x26; op2val:0x410a72a8c1c196d1
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe3e59b31, 0x39935bdb,0xc1c196d1,0x410a72a8,x15, 202*SIGALIGN, x16,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x35bdbe3e59b31 and fs2 == 0 and fe2 == 0x410 and fm2 == 0xa72a8c1c196d1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39935bdbe3e59b31; valaddr_reg:x15; op2:x26; op2val:0x410a72a8c1c196d1
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe3e59b31, 0x39935bdb,0xc1c196d1,0x410a72a8,x15, 204*SIGALIGN, x16,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x35bdbe3e59b31 and fs2 == 0 and fe2 == 0x410 and fm2 == 0xa72a8c1c196d1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39935bdbe3e59b31; valaddr_reg:x15; op2:x26; op2val:0x410a72a8c1c196d1
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe3e59b31, 0x39935bdb,0xc1c196d1,0x410a72a8,x15, 206*SIGALIGN, x16,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x399 and fm1 == 0x35bdbe3e59b31 and fs2 == 0 and fe2 == 0x410 and fm2 == 0xa72a8c1c196d1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39935bdbe3e59b31; valaddr_reg:x15; op2:x26; op2val:0x410a72a8c1c196d1
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe3e59b31, 0x39935bdb,0xc1c196d1,0x410a72a8,x15, 208*SIGALIGN, x16,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x04a58a2de6d70 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xb8fb33e372b83 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b04a58a2de6d70; valaddr_reg:x15; op2:x26; op2val:0x406b8fb33e372b83
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xa2de6d70, 0x39b04a58,0x3e372b83,0x406b8fb3,x15, 210*SIGALIGN, x16,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x04a58a2de6d70 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xb8fb33e372b83 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b04a58a2de6d70; valaddr_reg:x15; op2:x26; op2val:0x406b8fb33e372b83
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xa2de6d70, 0x39b04a58,0x3e372b83,0x406b8fb3,x15, 212*SIGALIGN, x16,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x04a58a2de6d70 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xb8fb33e372b83 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b04a58a2de6d70; valaddr_reg:x15; op2:x26; op2val:0x406b8fb33e372b83
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xa2de6d70, 0x39b04a58,0x3e372b83,0x406b8fb3,x15, 214*SIGALIGN, x16,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x04a58a2de6d70 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xb8fb33e372b83 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b04a58a2de6d70; valaddr_reg:x15; op2:x26; op2val:0x406b8fb33e372b83
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa2de6d70, 0x39b04a58,0x3e372b83,0x406b8fb3,x15, 216*SIGALIGN, x16,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x39b and fm1 == 0x04a58a2de6d70 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xb8fb33e372b83 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39b04a58a2de6d70; valaddr_reg:x15; op2:x26; op2val:0x406b8fb33e372b83
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xa2de6d70, 0x39b04a58,0x3e372b83,0x406b8fb3,x15, 218*SIGALIGN, x16,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x397 and fm1 == 0xa1b2d58bc351e and fs2 == 0 and fe2 == 0x404 and fm2 == 0x39cbb091c3aad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x397a1b2d58bc351e; valaddr_reg:x15; op2:x26; op2val:0x40439cbb091c3aad
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x58bc351e, 0x397a1b2d,0x091c3aad,0x40439cbb,x15, 220*SIGALIGN, x16,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x397 and fm1 == 0xa1b2d58bc351e and fs2 == 0 and fe2 == 0x404 and fm2 == 0x39cbb091c3aad and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x397a1b2d58bc351e; valaddr_reg:x15; op2:x26; op2val:0x40439cbb091c3aad
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x58bc351e, 0x397a1b2d,0x091c3aad,0x40439cbb,x15, 222*SIGALIGN, x16,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x397 and fm1 == 0xa1b2d58bc351e and fs2 == 0 and fe2 == 0x404 and fm2 == 0x39cbb091c3aad and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x397a1b2d58bc351e; valaddr_reg:x15; op2:x26; op2val:0x40439cbb091c3aad
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x58bc351e, 0x397a1b2d,0x091c3aad,0x40439cbb,x15, 224*SIGALIGN, x16,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x397 and fm1 == 0xa1b2d58bc351e and fs2 == 0 and fe2 == 0x404 and fm2 == 0x39cbb091c3aad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x397a1b2d58bc351e; valaddr_reg:x15; op2:x26; op2val:0x40439cbb091c3aad
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x58bc351e, 0x397a1b2d,0x091c3aad,0x40439cbb,x15, 226*SIGALIGN, x16,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x397 and fm1 == 0xa1b2d58bc351e and fs2 == 0 and fe2 == 0x404 and fm2 == 0x39cbb091c3aad and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x397a1b2d58bc351e; valaddr_reg:x15; op2:x26; op2val:0x40439cbb091c3aad
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x58bc351e, 0x397a1b2d,0x091c3aad,0x40439cbb,x15, 228*SIGALIGN, x16,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49ac1d82f3a80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x17c61ff07b709 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a49ac1d82f3a80; valaddr_reg:x15; op2:x26; op2val:0x3fd17c61ff07b709
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd82f3a80, 0x39a49ac1,0xff07b709,0x3fd17c61,x15, 230*SIGALIGN, x16,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49ac1d82f3a80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x17c61ff07b709 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a49ac1d82f3a80; valaddr_reg:x15; op2:x26; op2val:0x3fd17c61ff07b709
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd82f3a80, 0x39a49ac1,0xff07b709,0x3fd17c61,x15, 232*SIGALIGN, x16,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49ac1d82f3a80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x17c61ff07b709 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a49ac1d82f3a80; valaddr_reg:x15; op2:x26; op2val:0x3fd17c61ff07b709
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd82f3a80, 0x39a49ac1,0xff07b709,0x3fd17c61,x15, 234*SIGALIGN, x16,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49ac1d82f3a80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x17c61ff07b709 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a49ac1d82f3a80; valaddr_reg:x15; op2:x26; op2val:0x3fd17c61ff07b709
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd82f3a80, 0x39a49ac1,0xff07b709,0x3fd17c61,x15, 236*SIGALIGN, x16,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49ac1d82f3a80 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x17c61ff07b709 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a49ac1d82f3a80; valaddr_reg:x15; op2:x26; op2val:0x3fd17c61ff07b709
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd82f3a80, 0x39a49ac1,0xff07b709,0x3fd17c61,x15, 238*SIGALIGN, x16,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x398 and fm1 == 0x1b215ef8ed139 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x95f66108549e1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3981b215ef8ed139; valaddr_reg:x15; op2:x26; op2val:0x3fb95f66108549e1
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xef8ed139, 0x3981b215,0x108549e1,0x3fb95f66,x15, 240*SIGALIGN, x16,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x398 and fm1 == 0x1b215ef8ed139 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x95f66108549e1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3981b215ef8ed139; valaddr_reg:x15; op2:x26; op2val:0x3fb95f66108549e1
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xef8ed139, 0x3981b215,0x108549e1,0x3fb95f66,x15, 242*SIGALIGN, x16,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x398 and fm1 == 0x1b215ef8ed139 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x95f66108549e1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3981b215ef8ed139; valaddr_reg:x15; op2:x26; op2val:0x3fb95f66108549e1
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xef8ed139, 0x3981b215,0x108549e1,0x3fb95f66,x15, 244*SIGALIGN, x16,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x398 and fm1 == 0x1b215ef8ed139 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x95f66108549e1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3981b215ef8ed139; valaddr_reg:x15; op2:x26; op2val:0x3fb95f66108549e1
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xef8ed139, 0x3981b215,0x108549e1,0x3fb95f66,x15, 246*SIGALIGN, x16,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x398 and fm1 == 0x1b215ef8ed139 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x95f66108549e1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3981b215ef8ed139; valaddr_reg:x15; op2:x26; op2val:0x3fb95f66108549e1
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xef8ed139, 0x3981b215,0x108549e1,0x3fb95f66,x15, 248*SIGALIGN, x16,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xca95a69d95823 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xcf5bf1cce7e94 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39aca95a69d95823; valaddr_reg:x15; op2:x26; op2val:0x3f5cf5bf1cce7e94
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x69d95823, 0x39aca95a,0x1cce7e94,0x3f5cf5bf,x15, 250*SIGALIGN, x16,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xca95a69d95823 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xcf5bf1cce7e94 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39aca95a69d95823; valaddr_reg:x15; op2:x26; op2val:0x3f5cf5bf1cce7e94
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x69d95823, 0x39aca95a,0x1cce7e94,0x3f5cf5bf,x15, 252*SIGALIGN, x16,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xca95a69d95823 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xcf5bf1cce7e94 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39aca95a69d95823; valaddr_reg:x15; op2:x26; op2val:0x3f5cf5bf1cce7e94
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x69d95823, 0x39aca95a,0x1cce7e94,0x3f5cf5bf,x15, 254*SIGALIGN, x16,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xca95a69d95823 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xcf5bf1cce7e94 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39aca95a69d95823; valaddr_reg:x15; op2:x26; op2val:0x3f5cf5bf1cce7e94
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x69d95823, 0x39aca95a,0x1cce7e94,0x3f5cf5bf,x15, 256*SIGALIGN, x16,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x39a and fm1 == 0xca95a69d95823 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xcf5bf1cce7e94 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39aca95a69d95823; valaddr_reg:x15; op2:x26; op2val:0x3f5cf5bf1cce7e94
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x69d95823, 0x39aca95a,0x1cce7e94,0x3f5cf5bf,x15, 258*SIGALIGN, x16,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4bd6158ab1629 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8afd6f4cb48b9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a4bd6158ab1629; valaddr_reg:x15; op2:x26; op2val:0x41d8afd6f4cb48b9
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x58ab1629, 0x39a4bd61,0xf4cb48b9,0x41d8afd6,x15, 260*SIGALIGN, x16,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4bd6158ab1629 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8afd6f4cb48b9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x39a4bd6158ab1629; valaddr_reg:x15; op2:x26; op2val:0x41d8afd6f4cb48b9
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x58ab1629, 0x39a4bd61,0xf4cb48b9,0x41d8afd6,x15, 262*SIGALIGN, x16,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x58ab1629,64,FLEN)
NAN_BOXED(0xf4cb48b9,64,FLEN)
NAN_BOXED(0x58ab1629,64,FLEN)
NAN_BOXED(0xf4cb48b9,64,FLEN)
NAN_BOXED(0x58ab1629,64,FLEN)
NAN_BOXED(0x58ab1629,64,FLEN)
NAN_BOXED(0x58ab1629,64,FLEN)
NAN_BOXED(0x58ab1629,64,FLEN)
NAN_BOXED(0x58ab1629,64,FLEN)
NAN_BOXED(0xf4cb48b9,64,FLEN)
NAN_BOXED(0x0e21d091,64,FLEN)
NAN_BOXED(0x6ecaaba6,64,FLEN)
NAN_BOXED(0x0e21d091,64,FLEN)
NAN_BOXED(0x6ecaaba6,64,FLEN)
NAN_BOXED(0x0e21d091,64,FLEN)
NAN_BOXED(0x6ecaaba6,64,FLEN)
NAN_BOXED(0x0e21d091,64,FLEN)
NAN_BOXED(0x6ecaaba6,64,FLEN)
NAN_BOXED(0x0e21d091,64,FLEN)
NAN_BOXED(0x6ecaaba6,64,FLEN)
test_dataset_1:
NAN_BOXED(0x0740a6f0,64,FLEN)
NAN_BOXED(0xae980930,64,FLEN)
NAN_BOXED(0x0740a6f0,64,FLEN)
NAN_BOXED(0xae980930,64,FLEN)
NAN_BOXED(0x0740a6f0,64,FLEN)
NAN_BOXED(0xae980930,64,FLEN)
NAN_BOXED(0x0740a6f0,64,FLEN)
NAN_BOXED(0xae980930,64,FLEN)
NAN_BOXED(0x0740a6f0,64,FLEN)
NAN_BOXED(0xae980930,64,FLEN)
NAN_BOXED(0x120173aa,64,FLEN)
NAN_BOXED(0x3deff473,64,FLEN)
NAN_BOXED(0x120173aa,64,FLEN)
NAN_BOXED(0x3deff473,64,FLEN)
NAN_BOXED(0x120173aa,64,FLEN)
NAN_BOXED(0x3deff473,64,FLEN)
NAN_BOXED(0x120173aa,64,FLEN)
NAN_BOXED(0x3deff473,64,FLEN)
NAN_BOXED(0x120173aa,64,FLEN)
NAN_BOXED(0x3deff473,64,FLEN)
NAN_BOXED(0x031ef3ab,64,FLEN)
NAN_BOXED(0x087562f6,64,FLEN)
NAN_BOXED(0x031ef3ab,64,FLEN)
NAN_BOXED(0x087562f6,64,FLEN)
NAN_BOXED(0x031ef3ab,64,FLEN)
NAN_BOXED(0x087562f6,64,FLEN)
NAN_BOXED(0x031ef3ab,64,FLEN)
NAN_BOXED(0x087562f6,64,FLEN)
NAN_BOXED(0x031ef3ab,64,FLEN)
NAN_BOXED(0x087562f6,64,FLEN)
NAN_BOXED(0xc3a36f34,64,FLEN)
NAN_BOXED(0xd34c98fd,64,FLEN)
NAN_BOXED(0xc3a36f34,64,FLEN)
NAN_BOXED(0xd34c98fd,64,FLEN)
NAN_BOXED(0xc3a36f34,64,FLEN)
NAN_BOXED(0xd34c98fd,64,FLEN)
NAN_BOXED(0xc3a36f34,64,FLEN)
NAN_BOXED(0xd34c98fd,64,FLEN)
NAN_BOXED(0xc3a36f34,64,FLEN)
NAN_BOXED(0xd34c98fd,64,FLEN)
NAN_BOXED(0x314740f2,64,FLEN)
NAN_BOXED(0x70d9b1fd,64,FLEN)
NAN_BOXED(0x314740f2,64,FLEN)
NAN_BOXED(0x70d9b1fd,64,FLEN)
NAN_BOXED(0x314740f2,64,FLEN)
NAN_BOXED(0x70d9b1fd,64,FLEN)
NAN_BOXED(0x314740f2,64,FLEN)
NAN_BOXED(0x70d9b1fd,64,FLEN)
NAN_BOXED(0x314740f2,64,FLEN)
NAN_BOXED(0x70d9b1fd,64,FLEN)
NAN_BOXED(0x6ec8f9b3,64,FLEN)
NAN_BOXED(0xa6726f5a,64,FLEN)
NAN_BOXED(0x6ec8f9b3,64,FLEN)
NAN_BOXED(0xa6726f5a,64,FLEN)
NAN_BOXED(0x6ec8f9b3,64,FLEN)
NAN_BOXED(0xa6726f5a,64,FLEN)
NAN_BOXED(0x6ec8f9b3,64,FLEN)
NAN_BOXED(0xa6726f5a,64,FLEN)
NAN_BOXED(0x6ec8f9b3,64,FLEN)
NAN_BOXED(0xa6726f5a,64,FLEN)
NAN_BOXED(0x53ee5835,64,FLEN)
NAN_BOXED(0x7aa91173,64,FLEN)
NAN_BOXED(0x53ee5835,64,FLEN)
NAN_BOXED(0x7aa91173,64,FLEN)
NAN_BOXED(0x53ee5835,64,FLEN)
NAN_BOXED(0x7aa91173,64,FLEN)
NAN_BOXED(0x53ee5835,64,FLEN)
NAN_BOXED(0x7aa91173,64,FLEN)
NAN_BOXED(0x53ee5835,64,FLEN)
NAN_BOXED(0x7aa91173,64,FLEN)
NAN_BOXED(0x041be1b8,64,FLEN)
NAN_BOXED(0x321c8999,64,FLEN)
NAN_BOXED(0x041be1b8,64,FLEN)
NAN_BOXED(0x321c8999,64,FLEN)
NAN_BOXED(0x041be1b8,64,FLEN)
NAN_BOXED(0x321c8999,64,FLEN)
NAN_BOXED(0x041be1b8,64,FLEN)
NAN_BOXED(0x321c8999,64,FLEN)
NAN_BOXED(0x041be1b8,64,FLEN)
NAN_BOXED(0x321c8999,64,FLEN)
NAN_BOXED(0xa17a3a9e,64,FLEN)
NAN_BOXED(0x90e36945,64,FLEN)
NAN_BOXED(0xa17a3a9e,64,FLEN)
NAN_BOXED(0x90e36945,64,FLEN)
NAN_BOXED(0xa17a3a9e,64,FLEN)
NAN_BOXED(0x90e36945,64,FLEN)
NAN_BOXED(0xa17a3a9e,64,FLEN)
NAN_BOXED(0x90e36945,64,FLEN)
NAN_BOXED(0xa17a3a9e,64,FLEN)
NAN_BOXED(0x90e36945,64,FLEN)
NAN_BOXED(0xb7a32264,64,FLEN)
NAN_BOXED(0x87d7bc5d,64,FLEN)
NAN_BOXED(0xb7a32264,64,FLEN)
NAN_BOXED(0x87d7bc5d,64,FLEN)
NAN_BOXED(0xb7a32264,64,FLEN)
NAN_BOXED(0x87d7bc5d,64,FLEN)
NAN_BOXED(0xb7a32264,64,FLEN)
NAN_BOXED(0x87d7bc5d,64,FLEN)
NAN_BOXED(0xb7a32264,64,FLEN)
NAN_BOXED(0x87d7bc5d,64,FLEN)
NAN_BOXED(0xda388473,64,FLEN)
NAN_BOXED(0x77face58,64,FLEN)
NAN_BOXED(0xda388473,64,FLEN)
NAN_BOXED(0x77face58,64,FLEN)
NAN_BOXED(0xda388473,64,FLEN)
NAN_BOXED(0x77face58,64,FLEN)
NAN_BOXED(0xda388473,64,FLEN)
NAN_BOXED(0x77face58,64,FLEN)
NAN_BOXED(0xda388473,64,FLEN)
NAN_BOXED(0x77face58,64,FLEN)
NAN_BOXED(0x7f9e9c57,64,FLEN)
NAN_BOXED(0xcc5ce5ad,64,FLEN)
NAN_BOXED(0x7f9e9c57,64,FLEN)
NAN_BOXED(0xcc5ce5ad,64,FLEN)
NAN_BOXED(0x7f9e9c57,64,FLEN)
NAN_BOXED(0xcc5ce5ad,64,FLEN)
NAN_BOXED(0x7f9e9c57,64,FLEN)
NAN_BOXED(0xcc5ce5ad,64,FLEN)
NAN_BOXED(0x7f9e9c57,64,FLEN)
NAN_BOXED(0xcc5ce5ad,64,FLEN)
NAN_BOXED(0xafc78e8d,64,FLEN)
NAN_BOXED(0x96200227,64,FLEN)
NAN_BOXED(0xafc78e8d,64,FLEN)
NAN_BOXED(0x96200227,64,FLEN)
NAN_BOXED(0xafc78e8d,64,FLEN)
NAN_BOXED(0x96200227,64,FLEN)
NAN_BOXED(0xafc78e8d,64,FLEN)
NAN_BOXED(0x96200227,64,FLEN)
NAN_BOXED(0xafc78e8d,64,FLEN)
NAN_BOXED(0x96200227,64,FLEN)
NAN_BOXED(0xf3ac913b,64,FLEN)
NAN_BOXED(0xe9287c4d,64,FLEN)
NAN_BOXED(0xf3ac913b,64,FLEN)
NAN_BOXED(0xe9287c4d,64,FLEN)
NAN_BOXED(0xf3ac913b,64,FLEN)
NAN_BOXED(0xe9287c4d,64,FLEN)
NAN_BOXED(0xf3ac913b,64,FLEN)
NAN_BOXED(0xe9287c4d,64,FLEN)
NAN_BOXED(0xf3ac913b,64,FLEN)
NAN_BOXED(0xe9287c4d,64,FLEN)
NAN_BOXED(0x3c58e5f0,64,FLEN)
NAN_BOXED(0xce896dad,64,FLEN)
NAN_BOXED(0x3c58e5f0,64,FLEN)
NAN_BOXED(0xce896dad,64,FLEN)
NAN_BOXED(0x3c58e5f0,64,FLEN)
NAN_BOXED(0xce896dad,64,FLEN)
NAN_BOXED(0x3c58e5f0,64,FLEN)
NAN_BOXED(0xce896dad,64,FLEN)
NAN_BOXED(0x3c58e5f0,64,FLEN)
NAN_BOXED(0xce896dad,64,FLEN)
NAN_BOXED(0x092ab68f,64,FLEN)
NAN_BOXED(0x35e937c9,64,FLEN)
NAN_BOXED(0x092ab68f,64,FLEN)
NAN_BOXED(0x35e937c9,64,FLEN)
NAN_BOXED(0x092ab68f,64,FLEN)
NAN_BOXED(0x35e937c9,64,FLEN)
NAN_BOXED(0x092ab68f,64,FLEN)
NAN_BOXED(0x35e937c9,64,FLEN)
NAN_BOXED(0x092ab68f,64,FLEN)
NAN_BOXED(0x35e937c9,64,FLEN)
NAN_BOXED(0x0b8c1914,64,FLEN)
NAN_BOXED(0x83e19167,64,FLEN)
NAN_BOXED(0x0b8c1914,64,FLEN)
NAN_BOXED(0x83e19167,64,FLEN)
NAN_BOXED(0x0b8c1914,64,FLEN)
NAN_BOXED(0x83e19167,64,FLEN)
NAN_BOXED(0x0b8c1914,64,FLEN)
NAN_BOXED(0x83e19167,64,FLEN)
NAN_BOXED(0x0b8c1914,64,FLEN)
NAN_BOXED(0x83e19167,64,FLEN)
NAN_BOXED(0xe5fdea7a,64,FLEN)
NAN_BOXED(0x952f329d,64,FLEN)
NAN_BOXED(0xe5fdea7a,64,FLEN)
NAN_BOXED(0x952f329d,64,FLEN)
NAN_BOXED(0xe5fdea7a,64,FLEN)
NAN_BOXED(0x952f329d,64,FLEN)
NAN_BOXED(0xe5fdea7a,64,FLEN)
NAN_BOXED(0x952f329d,64,FLEN)
NAN_BOXED(0xe5fdea7a,64,FLEN)
NAN_BOXED(0x952f329d,64,FLEN)
NAN_BOXED(0xf927a048,64,FLEN)
NAN_BOXED(0xede0345d,64,FLEN)
NAN_BOXED(0xf927a048,64,FLEN)
NAN_BOXED(0xede0345d,64,FLEN)
NAN_BOXED(0xf927a048,64,FLEN)
NAN_BOXED(0xede0345d,64,FLEN)
NAN_BOXED(0xf927a048,64,FLEN)
NAN_BOXED(0xede0345d,64,FLEN)
NAN_BOXED(0xf927a048,64,FLEN)
NAN_BOXED(0xede0345d,64,FLEN)
NAN_BOXED(0xd118d92e,64,FLEN)
NAN_BOXED(0xf519948f,64,FLEN)
NAN_BOXED(0xd118d92e,64,FLEN)
NAN_BOXED(0xf519948f,64,FLEN)
NAN_BOXED(0xd118d92e,64,FLEN)
NAN_BOXED(0xf519948f,64,FLEN)
NAN_BOXED(0xd118d92e,64,FLEN)
NAN_BOXED(0xf519948f,64,FLEN)
NAN_BOXED(0xd118d92e,64,FLEN)
NAN_BOXED(0xf519948f,64,FLEN)
NAN_BOXED(0xe3e59b31,64,FLEN)
NAN_BOXED(0xc1c196d1,64,FLEN)
NAN_BOXED(0xe3e59b31,64,FLEN)
NAN_BOXED(0xc1c196d1,64,FLEN)
NAN_BOXED(0xe3e59b31,64,FLEN)
NAN_BOXED(0xc1c196d1,64,FLEN)
NAN_BOXED(0xe3e59b31,64,FLEN)
NAN_BOXED(0xc1c196d1,64,FLEN)
NAN_BOXED(0xe3e59b31,64,FLEN)
NAN_BOXED(0xc1c196d1,64,FLEN)
NAN_BOXED(0xa2de6d70,64,FLEN)
NAN_BOXED(0x3e372b83,64,FLEN)
NAN_BOXED(0xa2de6d70,64,FLEN)
NAN_BOXED(0x3e372b83,64,FLEN)
NAN_BOXED(0xa2de6d70,64,FLEN)
NAN_BOXED(0x3e372b83,64,FLEN)
NAN_BOXED(0xa2de6d70,64,FLEN)
NAN_BOXED(0x3e372b83,64,FLEN)
NAN_BOXED(0xa2de6d70,64,FLEN)
NAN_BOXED(0x3e372b83,64,FLEN)
NAN_BOXED(0x58bc351e,64,FLEN)
NAN_BOXED(0x091c3aad,64,FLEN)
NAN_BOXED(0x58bc351e,64,FLEN)
NAN_BOXED(0x091c3aad,64,FLEN)
NAN_BOXED(0x58bc351e,64,FLEN)
NAN_BOXED(0x091c3aad,64,FLEN)
NAN_BOXED(0x58bc351e,64,FLEN)
NAN_BOXED(0x091c3aad,64,FLEN)
NAN_BOXED(0x58bc351e,64,FLEN)
NAN_BOXED(0x091c3aad,64,FLEN)
NAN_BOXED(0xd82f3a80,64,FLEN)
NAN_BOXED(0xff07b709,64,FLEN)
NAN_BOXED(0xd82f3a80,64,FLEN)
NAN_BOXED(0xff07b709,64,FLEN)
NAN_BOXED(0xd82f3a80,64,FLEN)
NAN_BOXED(0xff07b709,64,FLEN)
NAN_BOXED(0xd82f3a80,64,FLEN)
NAN_BOXED(0xff07b709,64,FLEN)
NAN_BOXED(0xd82f3a80,64,FLEN)
NAN_BOXED(0xff07b709,64,FLEN)
NAN_BOXED(0xef8ed139,64,FLEN)
NAN_BOXED(0x108549e1,64,FLEN)
NAN_BOXED(0xef8ed139,64,FLEN)
NAN_BOXED(0x108549e1,64,FLEN)
NAN_BOXED(0xef8ed139,64,FLEN)
NAN_BOXED(0x108549e1,64,FLEN)
NAN_BOXED(0xef8ed139,64,FLEN)
NAN_BOXED(0x108549e1,64,FLEN)
NAN_BOXED(0xef8ed139,64,FLEN)
NAN_BOXED(0x108549e1,64,FLEN)
NAN_BOXED(0x69d95823,64,FLEN)
NAN_BOXED(0x1cce7e94,64,FLEN)
NAN_BOXED(0x69d95823,64,FLEN)
NAN_BOXED(0x1cce7e94,64,FLEN)
NAN_BOXED(0x69d95823,64,FLEN)
NAN_BOXED(0x1cce7e94,64,FLEN)
NAN_BOXED(0x69d95823,64,FLEN)
NAN_BOXED(0x1cce7e94,64,FLEN)
NAN_BOXED(0x69d95823,64,FLEN)
NAN_BOXED(0x1cce7e94,64,FLEN)
NAN_BOXED(0x58ab1629,64,FLEN)
NAN_BOXED(0xf4cb48b9,64,FLEN)
NAN_BOXED(0x58ab1629,64,FLEN)
NAN_BOXED(0xf4cb48b9,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 20*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 264*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
