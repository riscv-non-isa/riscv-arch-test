
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Fri Aug 25 05:36:11 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fsub.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fsub.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fsub.d_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fsub.d_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000011 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x30; dest:x30; op1val:0x0000000000000012; valaddr_reg:x3; op2:x30; op2val:0x0000000000000012
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x30, x31,x30,x31,0, 0, 0, 0x00000012, 0x00000000,0x00000012,0x00000000,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x26, rs2==x24, rd==x28,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000060 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x26; dest:x28; op1val:0x0000000000000062; valaddr_reg:x3; op2:x24; op2val:0x0000000000000060
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x28, x29, x26, x27,x24,x25,0, 0, 0, 0x00000062, 0x00000000,0x00000060,0x00000000,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 == rd != rs2, rs1==x24, rs2==x28, rd==x24,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000001d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x24; dest:x24; op1val:0x0000000000000021; valaddr_reg:x3; op2:x28; op2val:0x000000000000001d
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x24, x25, x24, x25,x28,x29,0, 0, 0, 0x00000021, 0x00000000,0x0000001d,0x00000000,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs2 == rd != rs1, rs1==x28, rs2==x26, rd==x26,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000038 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x26; op1val:0x0000000000000040; valaddr_reg:x3; op2:x26; op2val:0x0000000000000038
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x26, x27, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00000000,0x00000038,0x00000000,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs1 == rs2 != rd, rs1==x20, rs2==x20, rd==x22,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000002a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x20; dest:x22; op1val:0x000000000000003a; valaddr_reg:x3; op2:x20; op2val:0x000000000000003a
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x22, x23, x20, x21,x20,x21,0, 0, 0, 0x0000003a, 0x00000000,0x0000003a,0x00000000,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000034 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x22; dest:x20; op1val:0x0000000000000054; valaddr_reg:x3; op2:x18; op2val:0x0000000000000034
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x20, x21, x22, x23,x18,x19,0, 0, 0, 0x00000054, 0x00000000,0x00000034,0x00000000,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x22, rd==x18,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000025 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x16; dest:x18; op1val:0x000000000000001b; valaddr_reg:x3; op2:x22; op2val:0x8000000000000025
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x18, x19, x16, x17,x22,x23,0, 0, 0, 0x0000001b, 0x00000000,0x00000025,0x80000000,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000041 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x18; dest:x16; op1val:0x000000000000003f; valaddr_reg:x3; op2:x14; op2val:0x8000000000000041
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x16, x17, x18, x19,x14,x15,0, 0, 0, 0x0000003f, 0x00000000,0x00000041,0x80000000,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000ce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x12; dest:x14; op1val:0x0000000000000032; valaddr_reg:x3; op2:x16; op2val:0x80000000000000ce
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x14, x15, x12, x13,x16,x17,0, 0, 0, 0x00000032, 0x00000000,0x000000ce,0x80000000,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000001b2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x14; dest:x12; op1val:0x000000000000004e; valaddr_reg:x16; op2:x10; op2val:0x80000000000001b2
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x12, x13, x14, x15,x10,x11,0, 0, 0, 0x0000004e, 0x00000000,0x000001b2,0x80000000,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000039d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x8; dest:x10; op1val:0x0000000000000063; valaddr_reg:x16; op2:x12; op2val:0x800000000000039d
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0x00000063, 0x00000000,0x0000039d,0x80000000,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000007a6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x10; dest:x8; op1val:0x000000000000005a; valaddr_reg:x16; op2:x6; op2val:0x80000000000007a6
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x8, x9, x10, x11,x6,x7,0, 0, 0, 0x0000005a, 0x00000000,0x000007a6,0x80000000,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000023 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000fdd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x4; dest:x6; op1val:0x0000000000000023; valaddr_reg:x16; op2:x8; op2val:0x8000000000000fdd
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x6, x7, x4, x5,x8,x9,0, 0, 0, 0x00000023, 0x00000000,0x00000fdd,0x80000000,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000001fe2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x6; dest:x4; op1val:0x000000000000001e; valaddr_reg:x16; op2:x2; op2val:0x8000000000001fe2
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x4, x5, x6, x7,x2,x3,0, 0, 0, 0x0000001e, 0x00000000,0x00001fe2,0x80000000,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000003ff2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x2; dest:x30; op1val:0x000000000000000e; valaddr_reg:x16; op2:x28; op2val:0x8000000000003ff2
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x2, x3,x28,x29,0, 0, 0, 0x0000000e, 0x00000000,0x00003ff2,0x80000000,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000007ffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000004; valaddr_reg:x16; op2:x4; op2val:0x8000000000007ffc
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x4,x5,0, 0, 0, 0x00000004, 0x00000000,0x00007ffc,0x80000000,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000fffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x30; dest:x2; op1val:0x0000000000000004; valaddr_reg:x16; op2:x28; op2val:0x800000000000fffc
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x2, x3, x30, x31,x28,x29,0, 0, 0, 0x00000004, 0x00000000,0x0000fffc,0x80000000,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000001ffba and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000046; valaddr_reg:x16; op2:x26; op2val:0x800000000001ffba
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x00000000,0x0001ffba,0x80000000,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000003ffcf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000031; valaddr_reg:x16; op2:x26; op2val:0x800000000003ffcf
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000031, 0x00000000,0x0003ffcf,0x80000000,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000007ffe4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001c; valaddr_reg:x16; op2:x26; op2val:0x800000000007ffe4
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x00000000,0x0007ffe4,0x80000000,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000fffa3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000005d; valaddr_reg:x16; op2:x26; op2val:0x80000000000fffa3
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x00000000,0x000fffa3,0x80000000,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000001fffbc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000044; valaddr_reg:x16; op2:x26; op2val:0x80000000001fffbc
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000044, 0x00000000,0x001fffbc,0x80000000,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000003fff9e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000062; valaddr_reg:x16; op2:x26; op2val:0x80000000003fff9e
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000062, 0x00000000,0x003fff9e,0x80000000,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000041 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000040; valaddr_reg:x16; op2:x26; op2val:0x0000000000000041
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00000000,0x00000041,0x00000000,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000020 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001e; valaddr_reg:x16; op2:x26; op2val:0x0000000000000020
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x00000000,0x00000020,0x00000000,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000022 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001e; valaddr_reg:x16; op2:x26; op2val:0x0000000000000022
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x00000000,0x00000022,0x00000000,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000025 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001d; valaddr_reg:x16; op2:x26; op2val:0x0000000000000025
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001d, 0x00000000,0x00000025,0x00000000,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000004b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000003b; valaddr_reg:x16; op2:x26; op2val:0x000000000000004b
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x00000000,0x0000004b,0x00000000,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000023 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000003; valaddr_reg:x16; op2:x26; op2val:0x0000000000000023
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000003, 0x00000000,0x00000023,0x00000000,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000088 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000048; valaddr_reg:x16; op2:x26; op2val:0x0000000000000088
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000048, 0x00000000,0x00000088,0x00000000,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000008d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000000d; valaddr_reg:x16; op2:x26; op2val:0x000000000000008d
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00000000,0x0000008d,0x00000000,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000051 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000151 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000051; valaddr_reg:x16; op2:x26; op2val:0x0000000000000151
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000051, 0x00000000,0x00000151,0x00000000,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000226 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000026; valaddr_reg:x16; op2:x26; op2val:0x0000000000000226
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00000000,0x00000226,0x00000000,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000460 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000060; valaddr_reg:x16; op2:x26; op2val:0x0000000000000460
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000060, 0x00000000,0x00000460,0x00000000,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000085d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000005d; valaddr_reg:x16; op2:x26; op2val:0x000000000000085d
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x00000000,0x0000085d,0x00000000,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001041 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000041; valaddr_reg:x16; op2:x26; op2val:0x0000000000001041
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000041, 0x00000000,0x00001041,0x00000000,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000002041 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000041; valaddr_reg:x16; op2:x26; op2val:0x0000000000002041
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000041, 0x00000000,0x00002041,0x00000000,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000004019 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000019; valaddr_reg:x16; op2:x26; op2val:0x0000000000004019
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x00000000,0x00004019,0x00000000,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000025 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008025 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000025; valaddr_reg:x16; op2:x26; op2val:0x0000000000008025
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000025, 0x00000000,0x00008025,0x00000000,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000010040 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000040; valaddr_reg:x16; op2:x26; op2val:0x0000000000010040
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00000000,0x00010040,0x00000000,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000020033 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000033; valaddr_reg:x16; op2:x26; op2val:0x0000000000020033
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00000000,0x00020033,0x00000000,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000040005 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000005; valaddr_reg:x16; op2:x26; op2val:0x0000000000040005
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x00000000,0x00040005,0x00000000,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000080020 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000020; valaddr_reg:x16; op2:x26; op2val:0x0000000000080020
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000020, 0x00000000,0x00080020,0x00000000,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000100034 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000034; valaddr_reg:x16; op2:x26; op2val:0x0000000000100034
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000034, 0x00000000,0x00100034,0x00000000,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000200056 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000056; valaddr_reg:x16; op2:x26; op2val:0x0000000000200056
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000056, 0x00000000,0x00200056,0x00000000,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000040002f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002f; valaddr_reg:x16; op2:x26; op2val:0x000000000040002f
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002f, 0x00000000,0x0040002f,0x00000000,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0x6400000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000005a; valaddr_reg:x16; op2:x26; op2val:0x3d16400000000000
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005a, 0x3ff00000,0x00000000,0x3d164000,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0x7400000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000005f; valaddr_reg:x16; op2:x26; op2val:0x3d17400000000000
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005f, 0x3ff00000,0x00000000,0x3d174000,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x3ce and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000000c; valaddr_reg:x16; op2:x26; op2val:0x3ce0000000000000
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x3ff00000,0x00000000,0x3ce00000,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0x3400000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000055; valaddr_reg:x16; op2:x26; op2val:0x3d13400000000000
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x3ff00000,0x00000000,0x3d134000,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x3cc and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000000e; valaddr_reg:x16; op2:x26; op2val:0xbcc0000000000000
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000e, 0x3ff00000,0x00000000,0xbcc00000,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x3d0 and fm2 == 0x1800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000043; valaddr_reg:x16; op2:x26; op2val:0x3d01800000000000
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000043, 0x3ff00000,0x00000000,0x3d018000,x16, 80*SIGALIGN, x17,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000030 and fs2 == 1 and fe2 == 0x3cf and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000030; valaddr_reg:x16; op2:x26; op2val:0xbcf0000000000000
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000030, 0x3ff00000,0x00000000,0xbcf00000,x16, 82*SIGALIGN, x17,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x1000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000005e; valaddr_reg:x16; op2:x26; op2val:0xbd01000000000000
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x3ff00000,0x00000000,0xbd010000,x16, 84*SIGALIGN, x17,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x3d2 and fm2 == 0x8600000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000003d; valaddr_reg:x16; op2:x26; op2val:0xbd28600000000000
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003d, 0x3ff00000,0x00000000,0xbd286000,x16, 86*SIGALIGN, x17,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x3d3 and fm2 == 0xd800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000028; valaddr_reg:x16; op2:x26; op2val:0xbd3d800000000000
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x3ff00000,0x00000000,0xbd3d8000,x16, 88*SIGALIGN, x17,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x3d4 and fm2 == 0xd880000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000004f; valaddr_reg:x16; op2:x26; op2val:0xbd4d880000000000
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004f, 0x3ff00000,0x00000000,0xbd4d8800,x16, 90*SIGALIGN, x17,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004b and fs2 == 1 and fe2 == 0x3d5 and fm2 == 0xed40000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000004b; valaddr_reg:x16; op2:x26; op2val:0xbd5ed40000000000
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004b, 0x3ff00000,0x00000000,0xbd5ed400,x16, 92*SIGALIGN, x17,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x3d6 and fm2 == 0xf5a0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000053; valaddr_reg:x16; op2:x26; op2val:0xbd6f5a0000000000
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000053, 0x3ff00000,0x00000000,0xbd6f5a00,x16, 94*SIGALIGN, x17,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x3d7 and fm2 == 0xfea0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000016; valaddr_reg:x16; op2:x26; op2val:0xbd7fea0000000000
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000016, 0x3ff00000,0x00000000,0xbd7fea00,x16, 96*SIGALIGN, x17,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x3d8 and fm2 == 0xff10000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000001e; valaddr_reg:x16; op2:x26; op2val:0xbd8ff10000000000
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x3ff00000,0x00000000,0xbd8ff100,x16, 98*SIGALIGN, x17,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x3d9 and fm2 == 0xfe74000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000063; valaddr_reg:x16; op2:x26; op2val:0xbd9fe74000000000
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000063, 0x3ff00000,0x00000000,0xbd9fe740,x16, 100*SIGALIGN, x17,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x3da and fm2 == 0xff74000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000046; valaddr_reg:x16; op2:x26; op2val:0xbdaff74000000000
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x3ff00000,0x00000000,0xbdaff740,x16, 102*SIGALIGN, x17,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x3db and fm2 == 0xffe2000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000001e; valaddr_reg:x16; op2:x26; op2val:0xbdbffe2000000000
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x3ff00000,0x00000000,0xbdbffe20,x16, 104*SIGALIGN, x17,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x3dc and fm2 == 0xffdf000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000042; valaddr_reg:x16; op2:x26; op2val:0xbdcffdf000000000
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000042, 0x3ff00000,0x00000000,0xbdcffdf0,x16, 106*SIGALIGN, x17,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004a and fs2 == 1 and fe2 == 0x3dd and fm2 == 0xffed800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000004a; valaddr_reg:x16; op2:x26; op2val:0xbddffed800000000
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004a, 0x3ff00000,0x00000000,0xbddffed8,x16, 108*SIGALIGN, x17,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x3de and fm2 == 0xfff8a00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000003b; valaddr_reg:x16; op2:x26; op2val:0xbdefff8a00000000
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x3ff00000,0x00000000,0xbdefff8a,x16, 110*SIGALIGN, x17,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x3df and fm2 == 0xfffab00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff0000000000055; valaddr_reg:x16; op2:x26; op2val:0xbdffffab00000000
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x3ff00000,0x00000000,0xbdffffab,x16, 112*SIGALIGN, x17,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x3e0 and fm2 == 0xfffd900000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3ff000000000004e; valaddr_reg:x16; op2:x26; op2val:0xbe0fffd900000000
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x3ff00000,0x00000000,0xbe0fffd9,x16, 114*SIGALIGN, x17,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000001; valaddr_reg:x16; op2:x26; op2val:0x3f90000000000001
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x3f800000,0x00000001,0x3f900000,x16, 116*SIGALIGN, x17,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000030 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000005f; valaddr_reg:x16; op2:x26; op2val:0x3f90000000000030
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005f, 0x3f800000,0x00000030,0x3f900000,x16, 118*SIGALIGN, x17,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000000a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000011; valaddr_reg:x16; op2:x26; op2val:0x3f9000000000000a
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000011, 0x3f800000,0x0000000a,0x3f900000,x16, 120*SIGALIGN, x17,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000028 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000048; valaddr_reg:x16; op2:x26; op2val:0x3f90000000000028
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000048, 0x3f800000,0x00000028,0x3f900000,x16, 122*SIGALIGN, x17,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000024 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000037; valaddr_reg:x16; op2:x26; op2val:0x3f90000000000024
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000037, 0x3f800000,0x00000024,0x3f900000,x16, 124*SIGALIGN, x17,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000002f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000003e; valaddr_reg:x16; op2:x26; op2val:0x3f9000000000002f
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003e, 0x3f800000,0x0000002f,0x3f900000,x16, 126*SIGALIGN, x17,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000049 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000044 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000049; valaddr_reg:x16; op2:x26; op2val:0x3f90000000000044
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x3f800000,0x00000044,0x3f900000,x16, 128*SIGALIGN, x17,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001a and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000004d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000001a; valaddr_reg:x16; op2:x26; op2val:0x3f9000000000004d
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001a, 0x3f800000,0x0000004d,0x3f900000,x16, 130*SIGALIGN, x17,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000035 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000009a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000035; valaddr_reg:x16; op2:x26; op2val:0x3f9000000000009a
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000035, 0x3f800000,0x0000009a,0x3f900000,x16, 132*SIGALIGN, x17,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000117 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000002e; valaddr_reg:x16; op2:x26; op2val:0x3f90000000000117
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002e, 0x3f800000,0x00000117,0x3f900000,x16, 134*SIGALIGN, x17,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002d and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000216 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000002d; valaddr_reg:x16; op2:x26; op2val:0x3f90000000000216
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002d, 0x3f800000,0x00000216,0x3f900000,x16, 136*SIGALIGN, x17,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000422 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000045; valaddr_reg:x16; op2:x26; op2val:0x3f90000000000422
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000045, 0x3f800000,0x00000422,0x3f900000,x16, 138*SIGALIGN, x17,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000828 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000050; valaddr_reg:x16; op2:x26; op2val:0x3f90000000000828
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000050, 0x3f800000,0x00000828,0x3f900000,x16, 140*SIGALIGN, x17,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002b and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000001016 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000002b; valaddr_reg:x16; op2:x26; op2val:0x3f90000000001016
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002b, 0x3f800000,0x00001016,0x3f900000,x16, 142*SIGALIGN, x17,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004d and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000002026 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000004d; valaddr_reg:x16; op2:x26; op2val:0x3f90000000002026
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004d, 0x3f800000,0x00002026,0x3f900000,x16, 144*SIGALIGN, x17,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000400f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000001e; valaddr_reg:x16; op2:x26; op2val:0x3f9000000000400f
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x3f800000,0x0000400f,0x3f900000,x16, 146*SIGALIGN, x17,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000800c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000017; valaddr_reg:x16; op2:x26; op2val:0x3f9000000000800c
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x3f800000,0x0000800c,0x3f900000,x16, 148*SIGALIGN, x17,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000010026 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000004b; valaddr_reg:x16; op2:x26; op2val:0x3f90000000010026
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004b, 0x3f800000,0x00010026,0x3f900000,x16, 150*SIGALIGN, x17,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000020006 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000000c; valaddr_reg:x16; op2:x26; op2val:0x3f90000000020006
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x3f800000,0x00020006,0x3f900000,x16, 152*SIGALIGN, x17,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000040010 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000021; valaddr_reg:x16; op2:x26; op2val:0x3f90000000040010
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x3f800000,0x00040010,0x3f900000,x16, 154*SIGALIGN, x17,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000008002c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f80000000000057; valaddr_reg:x16; op2:x26; op2val:0x3f9000000008002c
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x3f800000,0x0008002c,0x3f900000,x16, 156*SIGALIGN, x17,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000100006 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000000b; valaddr_reg:x16; op2:x26; op2val:0x3f90000000100006
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000b, 0x3f800000,0x00100006,0x3f900000,x16, 158*SIGALIGN, x17,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000020001d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x3f8000000000003a; valaddr_reg:x16; op2:x26; op2val:0x3f9000000020001d
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x3f800000,0x0020001d,0x3f900000,x16, 160*SIGALIGN, x17,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000061 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000061 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000061; valaddr_reg:x16; op2:x26; op2val:0x0000000000000061
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000061, 0x00000000,0x00000061,0x00000000,x16, 162*SIGALIGN, x17,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000024 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000021 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000024; valaddr_reg:x16; op2:x26; op2val:0x0000000000000021
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000024, 0x00000000,0x00000021,0x00000000,x16, 164*SIGALIGN, x17,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000001e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000023; valaddr_reg:x16; op2:x26; op2val:0x000000000000001e
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000023, 0x00000000,0x0000001e,0x00000000,x16, 166*SIGALIGN, x17,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000047 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000050; valaddr_reg:x16; op2:x26; op2val:0x0000000000000047
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000050, 0x00000000,0x00000047,0x00000000,x16, 168*SIGALIGN, x17,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000001c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002d; valaddr_reg:x16; op2:x26; op2val:0x000000000000001c
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002d, 0x00000000,0x0000001c,0x00000000,x16, 170*SIGALIGN, x17,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000018 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000009; valaddr_reg:x16; op2:x26; op2val:0x8000000000000018
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000009, 0x00000000,0x00000018,0x80000000,x16, 172*SIGALIGN, x17,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000002c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000015; valaddr_reg:x16; op2:x26; op2val:0x800000000000002c
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000015, 0x00000000,0x0000002c,0x80000000,x16, 174*SIGALIGN, x17,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000003d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000044; valaddr_reg:x16; op2:x26; op2val:0x800000000000003d
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000044, 0x00000000,0x0000003d,0x80000000,x16, 176*SIGALIGN, x17,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000ac and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000055; valaddr_reg:x16; op2:x26; op2val:0x80000000000000ac
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x00000000,0x000000ac,0x80000000,x16, 178*SIGALIGN, x17,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000001ae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000053; valaddr_reg:x16; op2:x26; op2val:0x80000000000001ae
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000053, 0x00000000,0x000001ae,0x80000000,x16, 180*SIGALIGN, x17,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000003db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000026; valaddr_reg:x16; op2:x26; op2val:0x80000000000003db
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00000000,0x000003db,0x80000000,x16, 182*SIGALIGN, x17,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000007a7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000005a; valaddr_reg:x16; op2:x26; op2val:0x80000000000007a7
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005a, 0x00000000,0x000007a7,0x80000000,x16, 184*SIGALIGN, x17,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000fc1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000040; valaddr_reg:x16; op2:x26; op2val:0x8000000000000fc1
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00000000,0x00000fc1,0x80000000,x16, 186*SIGALIGN, x17,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000001ff2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000000f; valaddr_reg:x16; op2:x26; op2val:0x8000000000001ff2
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x00000000,0x00001ff2,0x80000000,x16, 188*SIGALIGN, x17,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000003fd9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000028; valaddr_reg:x16; op2:x26; op2val:0x8000000000003fd9
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00000000,0x00003fd9,0x80000000,x16, 190*SIGALIGN, x17,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000007fd5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002c; valaddr_reg:x16; op2:x26; op2val:0x8000000000007fd5
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002c, 0x00000000,0x00007fd5,0x80000000,x16, 192*SIGALIGN, x17,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000ffe8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000019; valaddr_reg:x16; op2:x26; op2val:0x800000000000ffe8
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x00000000,0x0000ffe8,0x80000000,x16, 194*SIGALIGN, x17,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000001fff3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000000e; valaddr_reg:x16; op2:x26; op2val:0x800000000001fff3
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000e, 0x00000000,0x0001fff3,0x80000000,x16, 196*SIGALIGN, x17,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000003ffa3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000005e; valaddr_reg:x16; op2:x26; op2val:0x800000000003ffa3
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x00000000,0x0003ffa3,0x80000000,x16, 198*SIGALIGN, x17,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000007ffe6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001b; valaddr_reg:x16; op2:x26; op2val:0x800000000007ffe6
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x00000000,0x0007ffe6,0x80000000,x16, 200*SIGALIGN, x17,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000fffc9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000038; valaddr_reg:x16; op2:x26; op2val:0x80000000000fffc9
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000038, 0x00000000,0x000fffc9,0x80000000,x16, 202*SIGALIGN, x17,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000001fffe4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001d; valaddr_reg:x16; op2:x26; op2val:0x80000000001fffe4
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001d, 0x00000000,0x001fffe4,0x80000000,x16, 204*SIGALIGN, x17,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000003fffce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000033; valaddr_reg:x16; op2:x26; op2val:0x80000000003fffce
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00000000,0x003fffce,0x80000000,x16, 206*SIGALIGN, x17,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000005 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000005; valaddr_reg:x16; op2:x26; op2val:0x0000000000000005
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x00000000,0x00000005,0x00000000,x16, 208*SIGALIGN, x17,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000018 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000015; valaddr_reg:x16; op2:x26; op2val:0x0000000000000018
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000015, 0x00000000,0x00000018,0x00000000,x16, 210*SIGALIGN, x17,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000060 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000005b; valaddr_reg:x16; op2:x26; op2val:0x0000000000000060
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x00000000,0x00000060,0x00000000,x16, 212*SIGALIGN, x17,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000060 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000057; valaddr_reg:x16; op2:x26; op2val:0x0000000000000060
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x00000000,0x00000060,0x00000000,x16, 214*SIGALIGN, x17,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000057 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000046; valaddr_reg:x16; op2:x26; op2val:0x0000000000000057
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x00000000,0x00000057,0x00000000,x16, 216*SIGALIGN, x17,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000051 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000072 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000051; valaddr_reg:x16; op2:x26; op2val:0x0000000000000072
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000051, 0x00000000,0x00000072,0x00000000,x16, 218*SIGALIGN, x17,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000084 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000043; valaddr_reg:x16; op2:x26; op2val:0x0000000000000084
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000043, 0x00000000,0x00000084,0x00000000,x16, 220*SIGALIGN, x17,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000009e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001d; valaddr_reg:x16; op2:x26; op2val:0x000000000000009e
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001d, 0x00000000,0x0000009e,0x00000000,x16, 222*SIGALIGN, x17,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000155 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000054; valaddr_reg:x16; op2:x26; op2val:0x0000000000000155
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000054, 0x00000000,0x00000155,0x00000000,x16, 224*SIGALIGN, x17,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000234 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000033; valaddr_reg:x16; op2:x26; op2val:0x0000000000000234
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00000000,0x00000234,0x00000000,x16, 226*SIGALIGN, x17,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000044b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000004a; valaddr_reg:x16; op2:x26; op2val:0x000000000000044b
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004a, 0x00000000,0x0000044b,0x00000000,x16, 228*SIGALIGN, x17,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000856 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000055; valaddr_reg:x16; op2:x26; op2val:0x0000000000000856
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x00000000,0x00000856,0x00000000,x16, 230*SIGALIGN, x17,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001038 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000037; valaddr_reg:x16; op2:x26; op2val:0x0000000000001038
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000037, 0x00000000,0x00001038,0x00000000,x16, 232*SIGALIGN, x17,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000002060 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000005f; valaddr_reg:x16; op2:x26; op2val:0x0000000000002060
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005f, 0x00000000,0x00002060,0x00000000,x16, 234*SIGALIGN, x17,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000004012 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000011; valaddr_reg:x16; op2:x26; op2val:0x0000000000004012
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000011, 0x00000000,0x00004012,0x00000000,x16, 236*SIGALIGN, x17,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008008 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000007; valaddr_reg:x16; op2:x26; op2val:0x0000000000008008
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000007, 0x00000000,0x00008008,0x00000000,x16, 238*SIGALIGN, x17,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000001000b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000000a; valaddr_reg:x16; op2:x26; op2val:0x000000000001000b
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000a, 0x00000000,0x0001000b,0x00000000,x16, 240*SIGALIGN, x17,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000020029 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000028; valaddr_reg:x16; op2:x26; op2val:0x0000000000020029
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00000000,0x00020029,0x00000000,x16, 242*SIGALIGN, x17,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000040061 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000060; valaddr_reg:x16; op2:x26; op2val:0x0000000000040061
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000060, 0x00000000,0x00040061,0x00000000,x16, 244*SIGALIGN, x17,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000080037 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000036; valaddr_reg:x16; op2:x26; op2val:0x0000000000080037
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000036, 0x00000000,0x00080037,0x00000000,x16, 246*SIGALIGN, x17,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000100022 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000021; valaddr_reg:x16; op2:x26; op2val:0x0000000000100022
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x00000000,0x00100022,0x00000000,x16, 248*SIGALIGN, x17,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000200003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x0000000000200003
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00200003,0x00000000,x16, 250*SIGALIGN, x17,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000400006 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000005; valaddr_reg:x16; op2:x26; op2val:0x0000000000400006
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x00000000,0x00400006,0x00000000,x16, 252*SIGALIGN, x17,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffe2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001c; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffe2
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x00000000,0xffffffe2,0x800fffff,x16, 254*SIGALIGN, x17,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffc2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000003b; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffc2
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x00000000,0xffffffc2,0x800fffff,x16, 256*SIGALIGN, x17,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffa0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000005b; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffa0
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x00000000,0xffffffa0,0x800fffff,x16, 258*SIGALIGN, x17,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffb5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000042; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffb5
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000042, 0x00000000,0xffffffb5,0x800fffff,x16, 260*SIGALIGN, x17,x1, x14)

inst_142:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffbe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000031; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffbe
offset:266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000031, 0x00000000,0xffffffbe,0x800fffff,x16, 262*SIGALIGN, x17,x1, x14)

inst_143:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffb2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002d; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffb2
offset:268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002d, 0x00000000,0xffffffb2,0x800fffff,x16, 264*SIGALIGN, x17,x1, x14)

inst_144:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffa4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001b; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffa4
offset:270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x00000000,0xffffffa4,0x800fffff,x16, 266*SIGALIGN, x17,x1, x14)

inst_145:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffff28 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000057; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffff28
offset:272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x00000000,0xffffff28,0x800fffff,x16, 268*SIGALIGN, x17,x1, x14)

inst_146:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffeb3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000004c; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffffeb3
offset:274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004c, 0x00000000,0xfffffeb3,0x800fffff,x16, 270*SIGALIGN, x17,x1, x14)

inst_147:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffdbf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000040; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffffdbf
offset:276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00000000,0xfffffdbf,0x800fffff,x16, 272*SIGALIGN, x17,x1, x14)

inst_148:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffba9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000056; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffffba9
offset:278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000056, 0x00000000,0xfffffba9,0x800fffff,x16, 274*SIGALIGN, x17,x1, x14)

inst_149:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffff7d9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000026; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffff7d9
offset:280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00000000,0xfffff7d9,0x800fffff,x16, 276*SIGALIGN, x17,x1, x14)

inst_150:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffefbf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000040; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffefbf
offset:282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00000000,0xffffefbf,0x800fffff,x16, 278*SIGALIGN, x17,x1, x14)

inst_151:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffdfd5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002a; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffdfd5
offset:284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002a, 0x00000000,0xffffdfd5,0x800fffff,x16, 280*SIGALIGN, x17,x1, x14)

inst_152:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffbfcb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000034; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffbfcb
offset:286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000034, 0x00000000,0xffffbfcb,0x800fffff,x16, 282*SIGALIGN, x17,x1, x14)

inst_153:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffff7ffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000003; valaddr_reg:x16; op2:x26; op2val:0x800fffffffff7ffc
offset:288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000003, 0x00000000,0xffff7ffc,0x800fffff,x16, 284*SIGALIGN, x17,x1, x14)

inst_154:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffeffe5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001a; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffeffe5
offset:290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001a, 0x00000000,0xfffeffe5,0x800fffff,x16, 286*SIGALIGN, x17,x1, x14)

inst_155:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffdffb6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000049; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffdffb6
offset:292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x00000000,0xfffdffb6,0x800fffff,x16, 288*SIGALIGN, x17,x1, x14)

inst_156:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffbffd3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002c; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffbffd3
offset:294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002c, 0x00000000,0xfffbffd3,0x800fffff,x16, 290*SIGALIGN, x17,x1, x14)

inst_157:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffff7ffe3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001c; valaddr_reg:x16; op2:x26; op2val:0x800ffffffff7ffe3
offset:296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x00000000,0xfff7ffe3,0x800fffff,x16, 292*SIGALIGN, x17,x1, x14)

inst_158:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffefffa8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000057; valaddr_reg:x16; op2:x26; op2val:0x800fffffffefffa8
offset:298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x00000000,0xffefffa8,0x800fffff,x16, 294*SIGALIGN, x17,x1, x14)

inst_159:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffdfffce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000031; valaddr_reg:x16; op2:x26; op2val:0x800fffffffdfffce
offset:300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000031, 0x00000000,0xffdfffce,0x800fffff,x16, 296*SIGALIGN, x17,x1, x14)

inst_160:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffbfffd2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002d; valaddr_reg:x16; op2:x26; op2val:0x800fffffffbfffd2
offset:302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002d, 0x00000000,0xffbfffd2,0x800fffff,x16, 298*SIGALIGN, x17,x1, x14)

inst_161:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000043 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000045; valaddr_reg:x16; op2:x26; op2val:0x0010000000000043
offset:304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000045, 0x00000000,0x00000043,0x00100000,x16, 300*SIGALIGN, x17,x1, x14)

inst_162:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000060 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000063; valaddr_reg:x16; op2:x26; op2val:0x0010000000000060
offset:306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000063, 0x00000000,0x00000060,0x00100000,x16, 302*SIGALIGN, x17,x1, x14)

inst_163:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001f and fs2 == 0 and fe2 == 0x001 and fm2 == 0x000000000001a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000001f; valaddr_reg:x16; op2:x26; op2val:0x001000000000001a
offset:308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001f, 0x00000000,0x0000001a,0x00100000,x16, 304*SIGALIGN, x17,x1, x14)

inst_164:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000054 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000005d; valaddr_reg:x16; op2:x26; op2val:0x0010000000000054
offset:310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x00000000,0x00000054,0x00100000,x16, 306*SIGALIGN, x17,x1, x14)

inst_165:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffffa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000000b; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffffffa
offset:312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000b, 0x00000000,0xfffffffa,0x000fffff,x16, 308*SIGALIGN, x17,x1, x14)

inst_166:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffff5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000016; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffffff5
offset:314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000016, 0x00000000,0xfffffff5,0x000fffff,x16, 310*SIGALIGN, x17,x1, x14)

inst_167:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000004 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000045; valaddr_reg:x16; op2:x26; op2val:0x0010000000000004
offset:316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000045, 0x00000000,0x00000004,0x00100000,x16, 312*SIGALIGN, x17,x1, x14)

inst_168:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffa2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000023; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffa2
offset:318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000023, 0x00000000,0xffffffa2,0x000fffff,x16, 314*SIGALIGN, x17,x1, x14)

inst_169:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffff2a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002b; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffff2a
offset:320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002b, 0x00000000,0xffffff2a,0x000fffff,x16, 316*SIGALIGN, x17,x1, x14)

inst_170:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffe40 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000041; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffffe40
offset:322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000041, 0x00000000,0xfffffe40,0x000fffff,x16, 318*SIGALIGN, x17,x1, x14)

inst_171:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000030 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffc2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000030; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffffc2f
offset:324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000030, 0x00000000,0xfffffc2f,0x000fffff,x16, 320*SIGALIGN, x17,x1, x14)

inst_172:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffff82b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002c; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffff82b
offset:326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002c, 0x00000000,0xfffff82b,0x000fffff,x16, 322*SIGALIGN, x17,x1, x14)

inst_173:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffff025 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000026; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffff025
offset:328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00000000,0xfffff025,0x000fffff,x16, 324*SIGALIGN, x17,x1, x14)

inst_174:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffe04d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000004e; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffe04d
offset:330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x00000000,0xffffe04d,0x000fffff,x16, 326*SIGALIGN, x17,x1, x14)

inst_175:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffc03e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000003f; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffc03e
offset:332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003f, 0x00000000,0xffffc03e,0x000fffff,x16, 328*SIGALIGN, x17,x1, x14)

inst_176:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffff804a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000004b; valaddr_reg:x16; op2:x26; op2val:0x000fffffffff804a
offset:334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004b, 0x00000000,0xffff804a,0x000fffff,x16, 330*SIGALIGN, x17,x1, x14)

inst_177:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffff0062 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000063; valaddr_reg:x16; op2:x26; op2val:0x000fffffffff0062
offset:336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000063, 0x00000000,0xffff0062,0x000fffff,x16, 332*SIGALIGN, x17,x1, x14)

inst_178:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffe0029 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000002a; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffe0029
offset:338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002a, 0x00000000,0xfffe0029,0x000fffff,x16, 334*SIGALIGN, x17,x1, x14)

inst_179:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffc0034 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000035; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffc0034
offset:340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000035, 0x00000000,0xfffc0034,0x000fffff,x16, 336*SIGALIGN, x17,x1, x14)

inst_180:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffff80030 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000031; valaddr_reg:x16; op2:x26; op2val:0x000ffffffff80030
offset:342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000031, 0x00000000,0xfff80030,0x000fffff,x16, 338*SIGALIGN, x17,x1, x14)

inst_181:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffff00010 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000011; valaddr_reg:x16; op2:x26; op2val:0x000ffffffff00010
offset:344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000011, 0x00000000,0xfff00010,0x000fffff,x16, 340*SIGALIGN, x17,x1, x14)

inst_182:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffe0000e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000000f; valaddr_reg:x16; op2:x26; op2val:0x000fffffffe0000e
offset:346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x00000000,0xffe0000e,0x000fffff,x16, 342*SIGALIGN, x17,x1, x14)

inst_183:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffc0004b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000004c; valaddr_reg:x16; op2:x26; op2val:0x000fffffffc0004b
offset:348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004c, 0x00000000,0xffc0004b,0x000fffff,x16, 344*SIGALIGN, x17,x1, x14)

inst_184:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000009 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000000a; valaddr_reg:x16; op2:x26; op2val:0x0000000000000009
offset:350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000a, 0x00100000,0x00000009,0x00000000,x16, 346*SIGALIGN, x17,x1, x14)

inst_185:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000045 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000047; valaddr_reg:x16; op2:x26; op2val:0x0000000000000045
offset:352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000047, 0x00100000,0x00000045,0x00000000,x16, 348*SIGALIGN, x17,x1, x14)

inst_186:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000049 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000045 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000049; valaddr_reg:x16; op2:x26; op2val:0x0000000000000045
offset:354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x00100000,0x00000045,0x00000000,x16, 350*SIGALIGN, x17,x1, x14)

inst_187:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000001b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000023; valaddr_reg:x16; op2:x26; op2val:0x000000000000001b
offset:356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000023, 0x00100000,0x0000001b,0x00000000,x16, 352*SIGALIGN, x17,x1, x14)

inst_188:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000016 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000026; valaddr_reg:x16; op2:x26; op2val:0x0000000000000016
offset:358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00100000,0x00000016,0x00000000,x16, 354*SIGALIGN, x17,x1, x14)

inst_189:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000025 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000045; valaddr_reg:x16; op2:x26; op2val:0x0000000000000025
offset:360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000045, 0x00100000,0x00000025,0x00000000,x16, 356*SIGALIGN, x17,x1, x14)

inst_190:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000005 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000003b; valaddr_reg:x16; op2:x26; op2val:0x8000000000000005
offset:362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x00100000,0x00000005,0x80000000,x16, 358*SIGALIGN, x17,x1, x14)

inst_191:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000072 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000000e; valaddr_reg:x16; op2:x26; op2val:0x8000000000000072
offset:364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000e, 0x00100000,0x00000072,0x80000000,x16, 360*SIGALIGN, x17,x1, x14)

inst_192:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000da and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000026; valaddr_reg:x16; op2:x26; op2val:0x80000000000000da
offset:366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00100000,0x000000da,0x80000000,x16, 362*SIGALIGN, x17,x1, x14)

inst_193:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000001b1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000004f; valaddr_reg:x16; op2:x26; op2val:0x80000000000001b1
offset:368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004f, 0x00100000,0x000001b1,0x80000000,x16, 364*SIGALIGN, x17,x1, x14)

inst_194:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000003fe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000002; valaddr_reg:x16; op2:x26; op2val:0x80000000000003fe
offset:370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00100000,0x000003fe,0x80000000,x16, 366*SIGALIGN, x17,x1, x14)

inst_195:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000035 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000007cb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000035; valaddr_reg:x16; op2:x26; op2val:0x80000000000007cb
offset:372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000035, 0x00100000,0x000007cb,0x80000000,x16, 368*SIGALIGN, x17,x1, x14)

inst_196:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000ffa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000006; valaddr_reg:x16; op2:x26; op2val:0x8000000000000ffa
offset:374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000006, 0x00100000,0x00000ffa,0x80000000,x16, 370*SIGALIGN, x17,x1, x14)

inst_197:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000001fe1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000001f; valaddr_reg:x16; op2:x26; op2val:0x8000000000001fe1
offset:376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001f, 0x00100000,0x00001fe1,0x80000000,x16, 372*SIGALIGN, x17,x1, x14)

inst_198:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000003fca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000036; valaddr_reg:x16; op2:x26; op2val:0x8000000000003fca
offset:378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000036, 0x00100000,0x00003fca,0x80000000,x16, 374*SIGALIGN, x17,x1, x14)

inst_199:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000007ff1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000000f; valaddr_reg:x16; op2:x26; op2val:0x8000000000007ff1
offset:380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x00100000,0x00007ff1,0x80000000,x16, 376*SIGALIGN, x17,x1, x14)

inst_200:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000ffea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000016; valaddr_reg:x16; op2:x26; op2val:0x800000000000ffea
offset:382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000016, 0x00100000,0x0000ffea,0x80000000,x16, 378*SIGALIGN, x17,x1, x14)

inst_201:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000001ffe1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000001f; valaddr_reg:x16; op2:x26; op2val:0x800000000001ffe1
offset:384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001f, 0x00100000,0x0001ffe1,0x80000000,x16, 380*SIGALIGN, x17,x1, x14)

inst_202:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000003ffa0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000060; valaddr_reg:x16; op2:x26; op2val:0x800000000003ffa0
offset:386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000060, 0x00100000,0x0003ffa0,0x80000000,x16, 382*SIGALIGN, x17,x1, x14)

inst_203:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000007ffc8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000038; valaddr_reg:x16; op2:x26; op2val:0x800000000007ffc8
offset:388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000038, 0x00100000,0x0007ffc8,0x80000000,x16, 384*SIGALIGN, x17,x1, x14)

inst_204:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000fffba and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000046; valaddr_reg:x16; op2:x26; op2val:0x80000000000fffba
offset:390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x00100000,0x000fffba,0x80000000,x16, 386*SIGALIGN, x17,x1, x14)

inst_205:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000001fffb9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000047; valaddr_reg:x16; op2:x26; op2val:0x80000000001fffb9
offset:392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000047, 0x00100000,0x001fffb9,0x80000000,x16, 388*SIGALIGN, x17,x1, x14)

inst_206:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000003fffa4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000005c; valaddr_reg:x16; op2:x26; op2val:0x80000000003fffa4
offset:394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x00100000,0x003fffa4,0x80000000,x16, 390*SIGALIGN, x17,x1, x14)

inst_207:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000015 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000029; valaddr_reg:x16; op2:x26; op2val:0x0020000000000015
offset:396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x00100000,0x00000015,0x00200000,x16, 392*SIGALIGN, x17,x1, x14)

inst_208:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000000e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000001b; valaddr_reg:x16; op2:x26; op2val:0x002000000000000e
offset:398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x00100000,0x0000000e,0x00200000,x16, 394*SIGALIGN, x17,x1, x14)

inst_209:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000016 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000029; valaddr_reg:x16; op2:x26; op2val:0x0020000000000016
offset:400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x00100000,0x00000016,0x00200000,x16, 396*SIGALIGN, x17,x1, x14)

inst_210:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000004 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000006 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000004; valaddr_reg:x16; op2:x26; op2val:0x0020000000000006
offset:402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000004, 0x00100000,0x00000006,0x00200000,x16, 398*SIGALIGN, x17,x1, x14)

inst_211:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000001b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000026; valaddr_reg:x16; op2:x26; op2val:0x002000000000001b
offset:404*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00100000,0x0000001b,0x00200000,x16, 400*SIGALIGN, x17,x1, x14)

inst_212:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004d and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000036 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000004d; valaddr_reg:x16; op2:x26; op2val:0x0020000000000036
offset:406*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004d, 0x00100000,0x00000036,0x00200000,x16, 402*SIGALIGN, x17,x1, x14)

inst_213:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000003d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000003a; valaddr_reg:x16; op2:x26; op2val:0x002000000000003d
offset:408*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x00100000,0x0000003d,0x00200000,x16, 404*SIGALIGN, x17,x1, x14)

inst_214:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000054 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000029; valaddr_reg:x16; op2:x26; op2val:0x0020000000000054
offset:410*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x00100000,0x00000054,0x00200000,x16, 406*SIGALIGN, x17,x1, x14)

inst_215:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000084 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000009; valaddr_reg:x16; op2:x26; op2val:0x0020000000000084
offset:412*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000009, 0x00100000,0x00000084,0x00200000,x16, 408*SIGALIGN, x17,x1, x14)

inst_216:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000114 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000029; valaddr_reg:x16; op2:x26; op2val:0x0020000000000114
offset:414*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x00100000,0x00000114,0x00200000,x16, 410*SIGALIGN, x17,x1, x14)

inst_217:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003b and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000021e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000003b; valaddr_reg:x16; op2:x26; op2val:0x002000000000021e
offset:416*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x00100000,0x0000021e,0x00200000,x16, 412*SIGALIGN, x17,x1, x14)

inst_218:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000410 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000021; valaddr_reg:x16; op2:x26; op2val:0x0020000000000410
offset:418*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x00100000,0x00000410,0x00200000,x16, 414*SIGALIGN, x17,x1, x14)

inst_219:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000828 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000050; valaddr_reg:x16; op2:x26; op2val:0x0020000000000828
offset:420*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000050, 0x00100000,0x00000828,0x00200000,x16, 416*SIGALIGN, x17,x1, x14)

inst_220:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000102c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000059; valaddr_reg:x16; op2:x26; op2val:0x002000000000102c
offset:422*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000059, 0x00100000,0x0000102c,0x00200000,x16, 418*SIGALIGN, x17,x1, x14)

inst_221:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000202a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000055; valaddr_reg:x16; op2:x26; op2val:0x002000000000202a
offset:424*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x00100000,0x0000202a,0x00200000,x16, 420*SIGALIGN, x17,x1, x14)

inst_222:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000004011 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000022; valaddr_reg:x16; op2:x26; op2val:0x0020000000004011
offset:426*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000022, 0x00100000,0x00004011,0x00200000,x16, 422*SIGALIGN, x17,x1, x14)

inst_223:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000008023 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000046; valaddr_reg:x16; op2:x26; op2val:0x0020000000008023
offset:428*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x00100000,0x00008023,0x00200000,x16, 424*SIGALIGN, x17,x1, x14)

inst_224:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000010014 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000028; valaddr_reg:x16; op2:x26; op2val:0x0020000000010014
offset:430*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00100000,0x00010014,0x00200000,x16, 426*SIGALIGN, x17,x1, x14)

inst_225:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000020010 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000020; valaddr_reg:x16; op2:x26; op2val:0x0020000000020010
offset:432*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000020, 0x00100000,0x00020010,0x00200000,x16, 428*SIGALIGN, x17,x1, x14)

inst_226:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000040006 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000000b; valaddr_reg:x16; op2:x26; op2val:0x0020000000040006
offset:434*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000b, 0x00100000,0x00040006,0x00200000,x16, 430*SIGALIGN, x17,x1, x14)

inst_227:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000080006 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000000c; valaddr_reg:x16; op2:x26; op2val:0x0020000000080006
offset:436*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x00100000,0x00080006,0x00200000,x16, 432*SIGALIGN, x17,x1, x14)

inst_228:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000010001d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x001000000000003a; valaddr_reg:x16; op2:x26; op2val:0x002000000010001d
offset:438*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x00100000,0x0010001d,0x00200000,x16, 434*SIGALIGN, x17,x1, x14)

inst_229:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000020002a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0010000000000054; valaddr_reg:x16; op2:x26; op2val:0x002000000020002a
offset:440*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000054, 0x00100000,0x0020002a,0x00200000,x16, 436*SIGALIGN, x17,x1, x14)

inst_230:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff56 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000053; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffff56
offset:442*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000053, 0x7fe00000,0xffffff56,0xffdfffff,x16, 438*SIGALIGN, x17,x1, x14)

inst_231:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffffbe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000001e; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffffbe
offset:444*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x7fe00000,0xffffffbe,0xffdfffff,x16, 440*SIGALIGN, x17,x1, x14)

inst_232:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffffa6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000028; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffffa6
offset:446*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x7fe00000,0xffffffa6,0xffdfffff,x16, 442*SIGALIGN, x17,x1, x14)

inst_233:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff9a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000002a; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffff9a
offset:448*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002a, 0x7fe00000,0xffffff9a,0xffdfffff,x16, 444*SIGALIGN, x17,x1, x14)

inst_234:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff8c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000029; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffff8c
offset:450*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x7fe00000,0xffffff8c,0xffdfffff,x16, 446*SIGALIGN, x17,x1, x14)

inst_235:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff70 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000027; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffff70
offset:452*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000027, 0x7fe00000,0xffffff70,0xffdfffff,x16, 448*SIGALIGN, x17,x1, x14)

inst_236:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff28 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000002b; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffff28
offset:454*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002b, 0x7fe00000,0xffffff28,0xffdfffff,x16, 450*SIGALIGN, x17,x1, x14)

inst_237:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffffe72 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000046; valaddr_reg:x16; op2:x26; op2val:0xffdffffffffffe72
offset:456*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x7fe00000,0xfffffe72,0xffdfffff,x16, 452*SIGALIGN, x17,x1, x14)

inst_238:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffffd68 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000004b; valaddr_reg:x16; op2:x26; op2val:0xffdffffffffffd68
offset:458*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004b, 0x7fe00000,0xfffffd68,0xffdfffff,x16, 454*SIGALIGN, x17,x1, x14)

inst_239:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffffbe6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000000c; valaddr_reg:x16; op2:x26; op2val:0xffdffffffffffbe6
offset:460*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x7fe00000,0xfffffbe6,0xffdfffff,x16, 456*SIGALIGN, x17,x1, x14)

inst_240:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffff7c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000001d; valaddr_reg:x16; op2:x26; op2val:0xffdffffffffff7c4
offset:462*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001d, 0x7fe00000,0xfffff7c4,0xffdfffff,x16, 458*SIGALIGN, x17,x1, x14)

inst_241:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000020 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffefbe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000020; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffefbe
offset:464*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000020, 0x7fe00000,0xffffefbe,0xffdfffff,x16, 460*SIGALIGN, x17,x1, x14)

inst_242:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffdfea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000000a; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffdfea
offset:466*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000a, 0x7fe00000,0xffffdfea,0xffdfffff,x16, 462*SIGALIGN, x17,x1, x14)

inst_243:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffbf70 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000047; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffffbf70
offset:468*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000047, 0x7fe00000,0xffffbf70,0xffdfffff,x16, 464*SIGALIGN, x17,x1, x14)

inst_244:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffff7f42 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000005e; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffff7f42
offset:470*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x7fe00000,0xffff7f42,0xffdfffff,x16, 466*SIGALIGN, x17,x1, x14)

inst_245:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffefff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000003; valaddr_reg:x16; op2:x26; op2val:0xffdffffffffefff8
offset:472*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000003, 0x7fe00000,0xfffefff8,0xffdfffff,x16, 468*SIGALIGN, x17,x1, x14)

inst_246:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffdfffa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000002; valaddr_reg:x16; op2:x26; op2val:0xffdffffffffdfffa
offset:474*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x7fe00000,0xfffdfffa,0xffdfffff,x16, 470*SIGALIGN, x17,x1, x14)

inst_247:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000061 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffbff3c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000061; valaddr_reg:x16; op2:x26; op2val:0xffdffffffffbff3c
offset:476*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000061, 0x7fe00000,0xfffbff3c,0xffdfffff,x16, 472*SIGALIGN, x17,x1, x14)

inst_248:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffff7ff7e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000040; valaddr_reg:x16; op2:x26; op2val:0xffdffffffff7ff7e
offset:478*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x7fe00000,0xfff7ff7e,0xffdfffff,x16, 474*SIGALIGN, x17,x1, x14)

inst_249:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffefffd6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000014; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffefffd6
offset:480*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000014, 0x7fe00000,0xffefffd6,0xffdfffff,x16, 476*SIGALIGN, x17,x1, x14)

inst_250:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffdfff7c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000041; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffdfff7c
offset:482*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000041, 0x7fe00000,0xffdfff7c,0xffdfffff,x16, 478*SIGALIGN, x17,x1, x14)

inst_251:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffbfffea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000000a; valaddr_reg:x16; op2:x26; op2val:0xffdfffffffbfffea
offset:484*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000a, 0x7fe00000,0xffbfffea,0xffdfffff,x16, 480*SIGALIGN, x17,x1, x14)

inst_252:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffff7fff52 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000056; valaddr_reg:x16; op2:x26; op2val:0xffdfffffff7fff52
offset:486*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000056, 0x7fe00000,0xff7fff52,0xffdfffff,x16, 482*SIGALIGN, x17,x1, x14)

inst_253:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000017; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:488*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x7fe00000,0x00000000,0x7ff00000,x16, 484*SIGALIGN, x17,x1, x14)

inst_254:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000013; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:490*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000013, 0x7fe00000,0x00000000,0x7ff00000,x16, 486*SIGALIGN, x17,x1, x14)

inst_255:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000028; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:492*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x7fe00000,0x00000000,0x7ff00000,x16, 488*SIGALIGN, x17,x1, x14)

inst_256:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000005b; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:494*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x7fe00000,0x00000000,0x7ff00000,x16, 490*SIGALIGN, x17,x1, x14)

inst_257:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000004e; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:496*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x7fe00000,0x00000000,0x7ff00000,x16, 492*SIGALIGN, x17,x1, x14)

inst_258:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000011; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:498*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000011, 0x7fe00000,0x00000000,0x7ff00000,x16, 494*SIGALIGN, x17,x1, x14)

inst_259:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000005d; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:500*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x7fe00000,0x00000000,0x7ff00000,x16, 496*SIGALIGN, x17,x1, x14)

inst_260:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000029; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:502*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x7fe00000,0x00000000,0x7ff00000,x16, 498*SIGALIGN, x17,x1, x14)

inst_261:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000057; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:504*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x7fe00000,0x00000000,0x7ff00000,x16, 500*SIGALIGN, x17,x1, x14)

inst_262:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000060; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:506*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000060, 0x7fe00000,0x00000000,0x7ff00000,x16, 502*SIGALIGN, x17,x1, x14)

inst_263:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000001b; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:508*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x7fe00000,0x00000000,0x7ff00000,x16, 504*SIGALIGN, x17,x1, x14)

inst_264:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000027; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:510*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000027, 0x7fe00000,0x00000000,0x7ff00000,x16, 506*SIGALIGN, x17,x1, x14)

inst_265:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000045; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:512*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000045, 0x7fe00000,0x00000000,0x7ff00000,x16, 508*SIGALIGN, x17,x1, x14)

inst_266:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000007; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:514*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000007, 0x7fe00000,0x00000000,0x7ff00000,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_267:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000056; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:516*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000056, 0x7fe00000,0x00000000,0x7ff00000,x16, 0*SIGALIGN, x17,x1, x14)

inst_268:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000021; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:518*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x7fe00000,0x00000000,0x7ff00000,x16, 2*SIGALIGN, x17,x1, x14)

inst_269:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000058; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:520*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x7fe00000,0x00000000,0x7ff00000,x16, 4*SIGALIGN, x17,x1, x14)

inst_270:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000038 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000038; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:522*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000038, 0x7fe00000,0x00000000,0x7ff00000,x16, 6*SIGALIGN, x17,x1, x14)

inst_271:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000039; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:524*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000039, 0x7fe00000,0x00000000,0x7ff00000,x16, 8*SIGALIGN, x17,x1, x14)

inst_272:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe000000000003b; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:526*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x7fe00000,0x00000000,0x7ff00000,x16, 10*SIGALIGN, x17,x1, x14)

inst_273:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x7fe0000000000033; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:528*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x7fe00000,0x00000000,0x7ff00000,x16, 12*SIGALIGN, x17,x1, x14)

inst_274:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000011 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x0000000000000012; valaddr_reg:x16; op2:x26; op2val:0x0000000000000011
offset:530*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000012, 0x00000000,0x00000011,0x00000000,x16, 14*SIGALIGN, x17,x1, x14)

inst_275:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000002a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fsub.d ; op1:x28; dest:x30; op1val:0x000000000000003a; valaddr_reg:x16; op2:x26; op2val:0x000000000000002a
offset:532*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fsub.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x00000000,0x0000002a,0x00000000,x16, 16*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x00000062,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0x00000038,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x00000025,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0x00000032,64,FLEN)
NAN_BOXED(0x000000ce,64,FLEN)
test_dataset_1:
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0x000001b2,64,FLEN)
NAN_BOXED(0x00000063,64,FLEN)
NAN_BOXED(0x0000039d,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0x000007a6,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0x00000fdd,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x00001fe2,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x00003ff2,64,FLEN)
NAN_BOXED(0x00000004,64,FLEN)
NAN_BOXED(0x00007ffc,64,FLEN)
NAN_BOXED(0x00000004,64,FLEN)
NAN_BOXED(0x0000fffc,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x0001ffba,64,FLEN)
NAN_BOXED(0x00000031,64,FLEN)
NAN_BOXED(0x0003ffcf,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0x0007ffe4,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0x000fffa3,64,FLEN)
NAN_BOXED(0x00000044,64,FLEN)
NAN_BOXED(0x001fffbc,64,FLEN)
NAN_BOXED(0x00000062,64,FLEN)
NAN_BOXED(0x003fff9e,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x00000020,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0x00000025,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0x0000004b,64,FLEN)
NAN_BOXED(0x00000003,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0x00000048,64,FLEN)
NAN_BOXED(0x00000088,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x0000008d,64,FLEN)
NAN_BOXED(0x00000051,64,FLEN)
NAN_BOXED(0x00000151,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0x00000226,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x00000460,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0x0000085d,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0x00001041,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0x00002041,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0x00004019,64,FLEN)
NAN_BOXED(0x00000025,64,FLEN)
NAN_BOXED(0x00008025,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0x00010040,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x00020033,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x00040005,64,FLEN)
NAN_BOXED(0x00000020,64,FLEN)
NAN_BOXED(0x00080020,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0x00100034,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0x00200056,64,FLEN)
NAN_BOXED(0x0000002f,64,FLEN)
NAN_BOXED(0x0040002f,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000005f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000030,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000003d,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000053,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000063,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000042,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x0000005f,64,FLEN)
NAN_BOXED(0x00000030,64,FLEN)
NAN_BOXED(0x00000011,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0x00000048,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x00000037,64,FLEN)
NAN_BOXED(0x00000024,64,FLEN)
NAN_BOXED(0x0000003e,64,FLEN)
NAN_BOXED(0x0000002f,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0x00000044,64,FLEN)
NAN_BOXED(0x0000001a,64,FLEN)
NAN_BOXED(0x0000004d,64,FLEN)
NAN_BOXED(0x00000035,64,FLEN)
NAN_BOXED(0x0000009a,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0x00000117,64,FLEN)
NAN_BOXED(0x0000002d,64,FLEN)
NAN_BOXED(0x00000216,64,FLEN)
NAN_BOXED(0x00000045,64,FLEN)
NAN_BOXED(0x00000422,64,FLEN)
NAN_BOXED(0x00000050,64,FLEN)
NAN_BOXED(0x00000828,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0x00001016,64,FLEN)
NAN_BOXED(0x0000004d,64,FLEN)
NAN_BOXED(0x00002026,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x0000400f,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x0000800c,64,FLEN)
NAN_BOXED(0x0000004b,64,FLEN)
NAN_BOXED(0x00010026,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0x00020006,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x00040010,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0x0008002c,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0x00100006,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x0020001d,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0x00000024,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x00000050,64,FLEN)
NAN_BOXED(0x00000047,64,FLEN)
NAN_BOXED(0x0000002d,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0x00000018,64,FLEN)
NAN_BOXED(0x00000015,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0x00000044,64,FLEN)
NAN_BOXED(0x0000003d,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x000000ac,64,FLEN)
NAN_BOXED(0x00000053,64,FLEN)
NAN_BOXED(0x000001ae,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0x000003db,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0x000007a7,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0x00000fc1,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0x00001ff2,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x00003fd9,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0x00007fd5,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0x0000ffe8,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x0001fff3,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0x0003ffa3,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x0007ffe6,64,FLEN)
NAN_BOXED(0x00000038,64,FLEN)
NAN_BOXED(0x000fffc9,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0x001fffe4,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x003fffce,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x00000015,64,FLEN)
NAN_BOXED(0x00000018,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0x00000051,64,FLEN)
NAN_BOXED(0x00000072,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0x00000084,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0x0000009e,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0x00000155,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x00000234,64,FLEN)
NAN_BOXED(0x0000004a,64,FLEN)
NAN_BOXED(0x0000044b,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x00000856,64,FLEN)
NAN_BOXED(0x00000037,64,FLEN)
NAN_BOXED(0x00001038,64,FLEN)
NAN_BOXED(0x0000005f,64,FLEN)
NAN_BOXED(0x00002060,64,FLEN)
NAN_BOXED(0x00000011,64,FLEN)
NAN_BOXED(0x00004012,64,FLEN)
NAN_BOXED(0x00000007,64,FLEN)
NAN_BOXED(0x00008008,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0x0001000b,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x00020029,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x00040061,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0x00080037,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x00100022,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00200003,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x00400006,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0xffffffe2,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0xffffffc2,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0xffffffa0,64,FLEN)
NAN_BOXED(0x00000042,64,FLEN)
NAN_BOXED(0xffffffb5,64,FLEN)
NAN_BOXED(0x00000031,64,FLEN)
NAN_BOXED(0xffffffbe,64,FLEN)
NAN_BOXED(0x0000002d,64,FLEN)
NAN_BOXED(0xffffffb2,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0xffffffa4,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0xffffff28,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0xfffffeb3,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0xfffffdbf,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0xfffffba9,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0xfffff7d9,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0xffffefbf,64,FLEN)
NAN_BOXED(0x0000002a,64,FLEN)
NAN_BOXED(0xffffdfd5,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0xffffbfcb,64,FLEN)
NAN_BOXED(0x00000003,64,FLEN)
NAN_BOXED(0xffff7ffc,64,FLEN)
NAN_BOXED(0x0000001a,64,FLEN)
NAN_BOXED(0xfffeffe5,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0xfffdffb6,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0xfffbffd3,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0xfff7ffe3,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0xffefffa8,64,FLEN)
NAN_BOXED(0x00000031,64,FLEN)
NAN_BOXED(0xffdfffce,64,FLEN)
NAN_BOXED(0x0000002d,64,FLEN)
NAN_BOXED(0xffbfffd2,64,FLEN)
NAN_BOXED(0x00000045,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0x00000063,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x0000001f,64,FLEN)
NAN_BOXED(0x0000001a,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0xfffffffa,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0xfffffff5,64,FLEN)
NAN_BOXED(0x00000045,64,FLEN)
NAN_BOXED(0x00000004,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0xffffffa2,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0xffffff2a,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0xfffffe40,64,FLEN)
NAN_BOXED(0x00000030,64,FLEN)
NAN_BOXED(0xfffffc2f,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0xfffff82b,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0xfffff025,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0xffffe04d,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0xffffc03e,64,FLEN)
NAN_BOXED(0x0000004b,64,FLEN)
NAN_BOXED(0xffff804a,64,FLEN)
NAN_BOXED(0x00000063,64,FLEN)
NAN_BOXED(0xffff0062,64,FLEN)
NAN_BOXED(0x0000002a,64,FLEN)
NAN_BOXED(0xfffe0029,64,FLEN)
NAN_BOXED(0x00000035,64,FLEN)
NAN_BOXED(0xfffc0034,64,FLEN)
NAN_BOXED(0x00000031,64,FLEN)
NAN_BOXED(0xfff80030,64,FLEN)
NAN_BOXED(0x00000011,64,FLEN)
NAN_BOXED(0xfff00010,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0xffe0000e,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0xffc0004b,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0x00000047,64,FLEN)
NAN_BOXED(0x00000045,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0x00000045,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x00000045,64,FLEN)
NAN_BOXED(0x00000025,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x00000072,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0x000000da,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0x000001b1,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x000003fe,64,FLEN)
NAN_BOXED(0x00000035,64,FLEN)
NAN_BOXED(0x000007cb,64,FLEN)
NAN_BOXED(0x00000006,64,FLEN)
NAN_BOXED(0x00000ffa,64,FLEN)
NAN_BOXED(0x0000001f,64,FLEN)
NAN_BOXED(0x00001fe1,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0x00003fca,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0x00007ff1,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x0000ffea,64,FLEN)
NAN_BOXED(0x0000001f,64,FLEN)
NAN_BOXED(0x0001ffe1,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x0003ffa0,64,FLEN)
NAN_BOXED(0x00000038,64,FLEN)
NAN_BOXED(0x0007ffc8,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x000fffba,64,FLEN)
NAN_BOXED(0x00000047,64,FLEN)
NAN_BOXED(0x001fffb9,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0x003fffa4,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x00000015,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x00000004,64,FLEN)
NAN_BOXED(0x00000006,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x0000004d,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x0000003d,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0x00000084,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x00000114,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0x0000021e,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x00000410,64,FLEN)
NAN_BOXED(0x00000050,64,FLEN)
NAN_BOXED(0x00000828,64,FLEN)
NAN_BOXED(0x00000059,64,FLEN)
NAN_BOXED(0x0000102c,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x0000202a,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0x00004011,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x00008023,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x00010014,64,FLEN)
NAN_BOXED(0x00000020,64,FLEN)
NAN_BOXED(0x00020010,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0x00040006,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0x00080006,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x0010001d,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0x0020002a,64,FLEN)
NAN_BOXED(0x00000053,64,FLEN)
NAN_BOXED(0xffffff56,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0xffffffbe,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0xffffffa6,64,FLEN)
NAN_BOXED(0x0000002a,64,FLEN)
NAN_BOXED(0xffffff9a,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0xffffff8c,64,FLEN)
NAN_BOXED(0x00000027,64,FLEN)
NAN_BOXED(0xffffff70,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0xffffff28,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0xfffffe72,64,FLEN)
NAN_BOXED(0x0000004b,64,FLEN)
NAN_BOXED(0xfffffd68,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0xfffffbe6,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0xfffff7c4,64,FLEN)
NAN_BOXED(0x00000020,64,FLEN)
NAN_BOXED(0xffffefbe,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0xffffdfea,64,FLEN)
NAN_BOXED(0x00000047,64,FLEN)
NAN_BOXED(0xffffbf70,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0xffff7f42,64,FLEN)
NAN_BOXED(0x00000003,64,FLEN)
NAN_BOXED(0xfffefff8,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xfffdfffa,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0xfffbff3c,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0xfff7ff7e,64,FLEN)
NAN_BOXED(0x00000014,64,FLEN)
NAN_BOXED(0xffefffd6,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0xffdfff7c,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0xffbfffea,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0xff7fff52,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000013,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000011,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000027,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000045,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000007,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000038,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000039,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x00000011,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x0000002a,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 18*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
