
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Thu Aug 24 09:25:42 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fadd.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fadd.d_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fadd.d_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000031 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x30; op1val:0x0000000000000032; valaddr_reg:x3; op2:x30; op2val:0x0000000000000032
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x30, x31,x30,x31,0, 0, 0, 0x00000032, 0x00000000,0x00000032,0x00000000,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 == rs2 != rd, rs1==x26, rs2==x26, rd==x28,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000034 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x26; dest:x28; op1val:0x0000000000000036; valaddr_reg:x3; op2:x26; op2val:0x0000000000000036
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x28, x29, x26, x27,x26,x27,0, 0, 0, 0x00000036, 0x00000000,0x00000036,0x00000000,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x28, rs2==x24, rd==x26,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000001e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x26; op1val:0x0000000000000022; valaddr_reg:x3; op2:x24; op2val:0x800000000000001e
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x26, x27, x28, x29,x24,x25,0, 0, 0, 0x00000022, 0x00000000,0x0000001e,0x80000000,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1 == rd != rs2, rs1==x24, rs2==x28, rd==x24,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000037 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x24; dest:x24; op1val:0x000000000000003f; valaddr_reg:x3; op2:x28; op2val:0x8000000000000037
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x24, x25, x24, x25,x28,x29,0, 0, 0, 0x0000003f, 0x00000000,0x00000037,0x80000000,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs2 == rd != rs1, rs1==x20, rs2==x22, rd==x22,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000017 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x20; dest:x22; op1val:0x0000000000000027; valaddr_reg:x3; op2:x22; op2val:0x8000000000000017
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x22, x23, x20, x21,x22,x23,0, 0, 0, 0x00000027, 0x00000000,0x00000017,0x80000000,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000000e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x22; dest:x20; op1val:0x000000000000002e; valaddr_reg:x3; op2:x18; op2val:0x800000000000000e
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x20, x21, x22, x23,x18,x19,0, 0, 0, 0x0000002e, 0x00000000,0x0000000e,0x80000000,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x20, rd==x18,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000024 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x16; dest:x18; op1val:0x000000000000001c; valaddr_reg:x3; op2:x20; op2val:0x0000000000000024
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x18, x19, x16, x17,x20,x21,0, 0, 0, 0x0000001c, 0x00000000,0x00000024,0x00000000,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000006e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x18; dest:x16; op1val:0x0000000000000012; valaddr_reg:x3; op2:x14; op2val:0x000000000000006e
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x16, x17, x18, x19,x14,x15,0, 0, 0, 0x00000012, 0x00000000,0x0000006e,0x00000000,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000000ee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x12; dest:x14; op1val:0x0000000000000012; valaddr_reg:x3; op2:x16; op2val:0x00000000000000ee
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x14, x15, x12, x13,x16,x17,0, 0, 0, 0x00000012, 0x00000000,0x000000ee,0x00000000,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000001f3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x14; dest:x12; op1val:0x000000000000000d; valaddr_reg:x16; op2:x10; op2val:0x00000000000001f3
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x12, x13, x14, x15,x10,x11,0, 0, 0, 0x0000000d, 0x00000000,0x000001f3,0x00000000,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000003df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x8; dest:x10; op1val:0x0000000000000021; valaddr_reg:x16; op2:x12; op2val:0x00000000000003df
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0x00000021, 0x00000000,0x000003df,0x00000000,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000007a5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x10; dest:x8; op1val:0x000000000000005b; valaddr_reg:x16; op2:x6; op2val:0x00000000000007a5
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x8, x9, x10, x11,x6,x7,0, 0, 0, 0x0000005b, 0x00000000,0x000007a5,0x00000000,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000fed and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x4; dest:x6; op1val:0x0000000000000013; valaddr_reg:x16; op2:x8; op2val:0x0000000000000fed
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x6, x7, x4, x5,x8,x9,0, 0, 0, 0x00000013, 0x00000000,0x00000fed,0x00000000,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001ff3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x6; dest:x4; op1val:0x000000000000000d; valaddr_reg:x16; op2:x2; op2val:0x0000000000001ff3
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x4, x5, x6, x7,x2,x3,0, 0, 0, 0x0000000d, 0x00000000,0x00001ff3,0x00000000,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000003ff6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x2; dest:x30; op1val:0x000000000000000a; valaddr_reg:x16; op2:x28; op2val:0x0000000000003ff6
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x2, x3,x28,x29,0, 0, 0, 0x0000000a, 0x00000000,0x00003ff6,0x00000000,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000007fd5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002b; valaddr_reg:x16; op2:x4; op2val:0x0000000000007fd5
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x4,x5,0, 0, 0, 0x0000002b, 0x00000000,0x00007fd5,0x00000000,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000ffb8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x2; op1val:0x0000000000000048; valaddr_reg:x16; op2:x28; op2val:0x000000000000ffb8
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x2, x3, x30, x31,x28,x29,0, 0, 0, 0x00000048, 0x00000000,0x0000ffb8,0x00000000,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000001ffd2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002e; valaddr_reg:x16; op2:x26; op2val:0x000000000001ffd2
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002e, 0x00000000,0x0001ffd2,0x00000000,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000003ffd7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000029; valaddr_reg:x16; op2:x26; op2val:0x000000000003ffd7
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x00000000,0x0003ffd7,0x00000000,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000007ffae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000052; valaddr_reg:x16; op2:x26; op2val:0x000000000007ffae
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000052, 0x00000000,0x0007ffae,0x00000000,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000fffb9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000047; valaddr_reg:x16; op2:x26; op2val:0x00000000000fffb9
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000047, 0x00000000,0x000fffb9,0x00000000,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000001fffc7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000039; valaddr_reg:x16; op2:x26; op2val:0x00000000001fffc7
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000039, 0x00000000,0x001fffc7,0x00000000,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000003fffde and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000022; valaddr_reg:x16; op2:x26; op2val:0x00000000003fffde
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000022, 0x00000000,0x003fffde,0x00000000,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000048 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000047; valaddr_reg:x16; op2:x26; op2val:0x8000000000000048
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000047, 0x00000000,0x00000048,0x80000000,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000000e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000000c; valaddr_reg:x16; op2:x26; op2val:0x800000000000000e
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x00000000,0x0000000e,0x80000000,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000038 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000034; valaddr_reg:x16; op2:x26; op2val:0x8000000000000038
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000034, 0x00000000,0x00000038,0x80000000,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000005e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000056; valaddr_reg:x16; op2:x26; op2val:0x800000000000005e
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000056, 0x00000000,0x0000005e,0x80000000,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000011 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x8000000000000011
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000011,0x80000000,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000060 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000040; valaddr_reg:x16; op2:x26; op2val:0x8000000000000060
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00000000,0x00000060,0x80000000,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000020 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000060 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000020; valaddr_reg:x16; op2:x26; op2val:0x8000000000000060
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000020, 0x00000000,0x00000060,0x80000000,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000aa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002a; valaddr_reg:x16; op2:x26; op2val:0x80000000000000aa
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002a, 0x00000000,0x000000aa,0x80000000,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000109 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000009; valaddr_reg:x16; op2:x26; op2val:0x8000000000000109
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000009, 0x00000000,0x00000109,0x80000000,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000049; valaddr_reg:x16; op2:x26; op2val:0x8000000000000249
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x00000000,0x00000249,0x80000000,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000041f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000001f; valaddr_reg:x16; op2:x26; op2val:0x800000000000041f
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001f, 0x00000000,0x0000041f,0x80000000,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000846 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000046; valaddr_reg:x16; op2:x26; op2val:0x8000000000000846
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x00000000,0x00000846,0x80000000,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000100c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000000c; valaddr_reg:x16; op2:x26; op2val:0x800000000000100c
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x00000000,0x0000100c,0x80000000,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000002029 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000029; valaddr_reg:x16; op2:x26; op2val:0x8000000000002029
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x00000000,0x00002029,0x80000000,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000403f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000003f; valaddr_reg:x16; op2:x26; op2val:0x800000000000403f
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003f, 0x00000000,0x0000403f,0x80000000,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000008027 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000027; valaddr_reg:x16; op2:x26; op2val:0x8000000000008027
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000027, 0x00000000,0x00008027,0x80000000,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000010026 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000026; valaddr_reg:x16; op2:x26; op2val:0x8000000000010026
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00000000,0x00010026,0x80000000,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000020010 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000010; valaddr_reg:x16; op2:x26; op2val:0x8000000000020010
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000010, 0x00000000,0x00020010,0x80000000,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000004002b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002b; valaddr_reg:x16; op2:x26; op2val:0x800000000004002b
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002b, 0x00000000,0x0004002b,0x80000000,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000008001b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000001b; valaddr_reg:x16; op2:x26; op2val:0x800000000008001b
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x00000000,0x0008001b,0x80000000,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000100047 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000047; valaddr_reg:x16; op2:x26; op2val:0x8000000000100047
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000047, 0x00000000,0x00100047,0x80000000,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000025 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000200025 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000025; valaddr_reg:x16; op2:x26; op2val:0x8000000000200025
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000025, 0x00000000,0x00200025,0x80000000,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000040000c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000000c; valaddr_reg:x16; op2:x26; op2val:0x800000000040000c
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x00000000,0x0040000c,0x80000000,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x8800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000032; valaddr_reg:x16; op2:x26; op2val:0xbd08800000000000
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000032, 0x3ff00000,0x00000000,0xbd088000,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004a and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0x2000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000004a; valaddr_reg:x16; op2:x26; op2val:0xbd12000000000000
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004a, 0x3ff00000,0x00000000,0xbd120000,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x1000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000026; valaddr_reg:x16; op2:x26; op2val:0xbd01000000000000
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x3ff00000,0x00000000,0xbd010000,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x3cf and fm2 == 0x1000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000019; valaddr_reg:x16; op2:x26; op2val:0xbcf1000000000000
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x3ff00000,0x00000000,0xbcf10000,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x3ce and fm2 == 0x6000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000005; valaddr_reg:x16; op2:x26; op2val:0x3ce6000000000000
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x3ff00000,0x00000000,0x3ce60000,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0xa800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000055; valaddr_reg:x16; op2:x26; op2val:0xbd0a800000000000
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x3ff00000,0x00000000,0xbd0a8000,x16, 80*SIGALIGN, x17,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003d and fs2 == 0 and fe2 == 0x3cc and fm2 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000003d; valaddr_reg:x16; op2:x26; op2val:0x3cc8000000000000
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003d, 0x3ff00000,0x00000000,0x3cc80000,x16, 82*SIGALIGN, x17,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0xd000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000000c; valaddr_reg:x16; op2:x26; op2val:0x3d1d000000000000
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x3ff00000,0x00000000,0x3d1d0000,x16, 84*SIGALIGN, x17,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000061 and fs2 == 0 and fe2 == 0x3d2 and fm2 == 0x3e00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000061; valaddr_reg:x16; op2:x26; op2val:0x3d23e00000000000
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000061, 0x3ff00000,0x00000000,0x3d23e000,x16, 86*SIGALIGN, x17,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000014 and fs2 == 0 and fe2 == 0x3d3 and fm2 == 0xec00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000014; valaddr_reg:x16; op2:x26; op2val:0x3d3ec00000000000
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000014, 0x3ff00000,0x00000000,0x3d3ec000,x16, 88*SIGALIGN, x17,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x3d4 and fm2 == 0xfa80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000000b; valaddr_reg:x16; op2:x26; op2val:0x3d4fa80000000000
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000b, 0x3ff00000,0x00000000,0x3d4fa800,x16, 90*SIGALIGN, x17,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x3d5 and fm2 == 0xee80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000046; valaddr_reg:x16; op2:x26; op2val:0x3d5ee80000000000
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x3ff00000,0x00000000,0x3d5ee800,x16, 92*SIGALIGN, x17,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x3d6 and fm2 == 0xf9a0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000033; valaddr_reg:x16; op2:x26; op2val:0x3d6f9a0000000000
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x3ff00000,0x00000000,0x3d6f9a00,x16, 94*SIGALIGN, x17,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000044 and fs2 == 0 and fe2 == 0x3d7 and fm2 == 0xfbc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000044; valaddr_reg:x16; op2:x26; op2val:0x3d7fbc0000000000
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000044, 0x3ff00000,0x00000000,0x3d7fbc00,x16, 96*SIGALIGN, x17,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x3d8 and fm2 == 0xfde8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000043; valaddr_reg:x16; op2:x26; op2val:0x3d8fde8000000000
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000043, 0x3ff00000,0x00000000,0x3d8fde80,x16, 98*SIGALIGN, x17,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x3d9 and fm2 == 0xff90000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000001c; valaddr_reg:x16; op2:x26; op2val:0x3d9ff90000000000
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x3ff00000,0x00000000,0x3d9ff900,x16, 100*SIGALIGN, x17,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004c and fs2 == 0 and fe2 == 0x3da and fm2 == 0xff68000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000004c; valaddr_reg:x16; op2:x26; op2val:0x3daff68000000000
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004c, 0x3ff00000,0x00000000,0x3daff680,x16, 102*SIGALIGN, x17,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x3db and fm2 == 0xffb5000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000004b; valaddr_reg:x16; op2:x26; op2val:0x3dbffb5000000000
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004b, 0x3ff00000,0x00000000,0x3dbffb50,x16, 104*SIGALIGN, x17,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x3dc and fm2 == 0xffe3000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000003a; valaddr_reg:x16; op2:x26; op2val:0x3dcffe3000000000
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x3ff00000,0x00000000,0x3dcffe30,x16, 106*SIGALIGN, x17,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x3dd and fm2 == 0xffeac00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff0000000000055; valaddr_reg:x16; op2:x26; op2val:0x3ddffeac00000000
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x3ff00000,0x00000000,0x3ddffeac,x16, 108*SIGALIGN, x17,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x3de and fm2 == 0xfff4c00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000005a; valaddr_reg:x16; op2:x26; op2val:0x3defff4c00000000
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005a, 0x3ff00000,0x00000000,0x3defff4c,x16, 110*SIGALIGN, x17,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x3df and fm2 == 0xffff500000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000000b; valaddr_reg:x16; op2:x26; op2val:0x3dfffff500000000
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000b, 0x3ff00000,0x00000000,0x3dfffff5,x16, 112*SIGALIGN, x17,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x3e0 and fm2 == 0xfffd880000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3ff000000000004f; valaddr_reg:x16; op2:x26; op2val:0x3e0fffd880000000
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004f, 0x3ff00000,0x80000000,0x3e0fffd8,x16, 114*SIGALIGN, x17,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000020 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000003f; valaddr_reg:x16; op2:x26; op2val:0xbf90000000000020
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003f, 0x3f800000,0x00000020,0xbf900000,x16, 116*SIGALIGN, x17,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000051 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000002a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000051; valaddr_reg:x16; op2:x26; op2val:0xbf9000000000002a
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000051, 0x3f800000,0x0000002a,0xbf900000,x16, 118*SIGALIGN, x17,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000000e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000019; valaddr_reg:x16; op2:x26; op2val:0xbf9000000000000e
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x3f800000,0x0000000e,0xbf900000,x16, 120*SIGALIGN, x17,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000006 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000003; valaddr_reg:x16; op2:x26; op2val:0xbf90000000000006
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000003, 0x3f800000,0x00000006,0xbf900000,x16, 122*SIGALIGN, x17,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000023 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000001a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000023; valaddr_reg:x16; op2:x26; op2val:0xbf9000000000001a
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000023, 0x3f800000,0x0000001a,0xbf900000,x16, 124*SIGALIGN, x17,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000003e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000005b; valaddr_reg:x16; op2:x26; op2val:0xbf9000000000003e
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x3f800000,0x0000003e,0xbf900000,x16, 126*SIGALIGN, x17,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000030 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000038 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000030; valaddr_reg:x16; op2:x26; op2val:0xbf90000000000038
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000030, 0x3f800000,0x00000038,0xbf900000,x16, 128*SIGALIGN, x17,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000056 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000002b; valaddr_reg:x16; op2:x26; op2val:0xbf90000000000056
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002b, 0x3f800000,0x00000056,0xbf900000,x16, 130*SIGALIGN, x17,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000008 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000084 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000008; valaddr_reg:x16; op2:x26; op2val:0xbf90000000000084
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000008, 0x3f800000,0x00000084,0xbf900000,x16, 132*SIGALIGN, x17,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000013 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000010a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000013; valaddr_reg:x16; op2:x26; op2val:0xbf9000000000010a
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000013, 0x3f800000,0x0000010a,0xbf900000,x16, 134*SIGALIGN, x17,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000020e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000001d; valaddr_reg:x16; op2:x26; op2val:0xbf9000000000020e
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001d, 0x3f800000,0x0000020e,0xbf900000,x16, 136*SIGALIGN, x17,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000425 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000004a; valaddr_reg:x16; op2:x26; op2val:0xbf90000000000425
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004a, 0x3f800000,0x00000425,0xbf900000,x16, 138*SIGALIGN, x17,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000045 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000822 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000045; valaddr_reg:x16; op2:x26; op2val:0xbf90000000000822
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000045, 0x3f800000,0x00000822,0xbf900000,x16, 140*SIGALIGN, x17,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000102c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000058; valaddr_reg:x16; op2:x26; op2val:0xbf9000000000102c
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x3f800000,0x0000102c,0xbf900000,x16, 142*SIGALIGN, x17,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000002002 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000004; valaddr_reg:x16; op2:x26; op2val:0xbf90000000002002
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000004, 0x3f800000,0x00002002,0xbf900000,x16, 144*SIGALIGN, x17,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000004029 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000052; valaddr_reg:x16; op2:x26; op2val:0xbf90000000004029
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000052, 0x3f800000,0x00004029,0xbf900000,x16, 146*SIGALIGN, x17,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000008027 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000004e; valaddr_reg:x16; op2:x26; op2val:0xbf90000000008027
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x3f800000,0x00008027,0xbf900000,x16, 148*SIGALIGN, x17,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000010008 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000010; valaddr_reg:x16; op2:x26; op2val:0xbf90000000010008
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000010, 0x3f800000,0x00010008,0xbf900000,x16, 150*SIGALIGN, x17,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000020006 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000000c; valaddr_reg:x16; op2:x26; op2val:0xbf90000000020006
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x3f800000,0x00020006,0xbf900000,x16, 152*SIGALIGN, x17,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000040008 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000000f; valaddr_reg:x16; op2:x26; op2val:0xbf90000000040008
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x3f800000,0x00040008,0xbf900000,x16, 154*SIGALIGN, x17,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000080027 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000004e; valaddr_reg:x16; op2:x26; op2val:0xbf90000000080027
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x3f800000,0x00080027,0xbf900000,x16, 156*SIGALIGN, x17,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000010000c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f80000000000019; valaddr_reg:x16; op2:x26; op2val:0xbf9000000010000c
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x3f800000,0x0010000c,0xbf900000,x16, 158*SIGALIGN, x17,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000020002e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x3f8000000000005c; valaddr_reg:x16; op2:x26; op2val:0xbf9000000020002e
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x3f800000,0x0020002e,0xbf900000,x16, 160*SIGALIGN, x17,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000003e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000003e; valaddr_reg:x16; op2:x26; op2val:0x800000000000003e
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003e, 0x00000000,0x0000003e,0x80000000,x16, 162*SIGALIGN, x17,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000005b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000005e; valaddr_reg:x16; op2:x26; op2val:0x800000000000005b
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x00000000,0x0000005b,0x80000000,x16, 164*SIGALIGN, x17,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000052 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000057; valaddr_reg:x16; op2:x26; op2val:0x8000000000000052
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x00000000,0x00000052,0x80000000,x16, 166*SIGALIGN, x17,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000003d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000046; valaddr_reg:x16; op2:x26; op2val:0x800000000000003d
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x00000000,0x0000003d,0x80000000,x16, 168*SIGALIGN, x17,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000050; valaddr_reg:x16; op2:x26; op2val:0x800000000000003f
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000050, 0x00000000,0x0000003f,0x80000000,x16, 170*SIGALIGN, x17,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000022; valaddr_reg:x16; op2:x26; op2val:0x8000000000000001
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000022, 0x00000000,0x00000001,0x80000000,x16, 172*SIGALIGN, x17,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000024 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000001d; valaddr_reg:x16; op2:x26; op2val:0x0000000000000024
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001d, 0x00000000,0x00000024,0x00000000,x16, 174*SIGALIGN, x17,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000002e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000053; valaddr_reg:x16; op2:x26; op2val:0x000000000000002e
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000053, 0x00000000,0x0000002e,0x00000000,x16, 176*SIGALIGN, x17,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000000d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002d; valaddr_reg:x16; op2:x26; op2val:0x00000000000000d4
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002d, 0x00000000,0x000000d4,0x00000000,x16, 178*SIGALIGN, x17,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000018 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000001e9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000018; valaddr_reg:x16; op2:x26; op2val:0x00000000000001e9
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000018, 0x00000000,0x000001e9,0x00000000,x16, 180*SIGALIGN, x17,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000003c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000041; valaddr_reg:x16; op2:x26; op2val:0x00000000000003c0
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000041, 0x00000000,0x000003c0,0x00000000,x16, 182*SIGALIGN, x17,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000006 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000007fb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000006; valaddr_reg:x16; op2:x26; op2val:0x00000000000007fb
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000006, 0x00000000,0x000007fb,0x00000000,x16, 184*SIGALIGN, x17,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000ff4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000000d; valaddr_reg:x16; op2:x26; op2val:0x0000000000000ff4
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00000000,0x00000ff4,0x00000000,x16, 186*SIGALIGN, x17,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001fce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000033; valaddr_reg:x16; op2:x26; op2val:0x0000000000001fce
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00000000,0x00001fce,0x00000000,x16, 188*SIGALIGN, x17,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000003fdf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000022; valaddr_reg:x16; op2:x26; op2val:0x0000000000003fdf
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000022, 0x00000000,0x00003fdf,0x00000000,x16, 190*SIGALIGN, x17,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000007fa3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000005e; valaddr_reg:x16; op2:x26; op2val:0x0000000000007fa3
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x00000000,0x00007fa3,0x00000000,x16, 192*SIGALIGN, x17,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000ffb8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000049; valaddr_reg:x16; op2:x26; op2val:0x000000000000ffb8
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x00000000,0x0000ffb8,0x00000000,x16, 194*SIGALIGN, x17,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000001ffa7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000005a; valaddr_reg:x16; op2:x26; op2val:0x000000000001ffa7
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005a, 0x00000000,0x0001ffa7,0x00000000,x16, 196*SIGALIGN, x17,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000003ffe6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000001b; valaddr_reg:x16; op2:x26; op2val:0x000000000003ffe6
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x00000000,0x0003ffe6,0x00000000,x16, 198*SIGALIGN, x17,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000007fff9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000008; valaddr_reg:x16; op2:x26; op2val:0x000000000007fff9
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000008, 0x00000000,0x0007fff9,0x00000000,x16, 200*SIGALIGN, x17,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000fffec and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000015; valaddr_reg:x16; op2:x26; op2val:0x00000000000fffec
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000015, 0x00000000,0x000fffec,0x00000000,x16, 202*SIGALIGN, x17,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000001fffd5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002c; valaddr_reg:x16; op2:x26; op2val:0x00000000001fffd5
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002c, 0x00000000,0x001fffd5,0x00000000,x16, 204*SIGALIGN, x17,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000003fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000021; valaddr_reg:x16; op2:x26; op2val:0x00000000003fffe0
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x00000000,0x003fffe0,0x00000000,x16, 206*SIGALIGN, x17,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000004d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000004d; valaddr_reg:x16; op2:x26; op2val:0x800000000000004d
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004d, 0x00000000,0x0000004d,0x80000000,x16, 208*SIGALIGN, x17,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000059 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000056; valaddr_reg:x16; op2:x26; op2val:0x8000000000000059
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000056, 0x00000000,0x00000059,0x80000000,x16, 210*SIGALIGN, x17,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x8000000000000007
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0x00000007,0x80000000,x16, 212*SIGALIGN, x17,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000061 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000058; valaddr_reg:x16; op2:x26; op2val:0x8000000000000061
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x00000000,0x00000061,0x80000000,x16, 214*SIGALIGN, x17,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000005a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000049; valaddr_reg:x16; op2:x26; op2val:0x800000000000005a
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x00000000,0x0000005a,0x80000000,x16, 216*SIGALIGN, x17,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000049 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000028; valaddr_reg:x16; op2:x26; op2val:0x8000000000000049
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00000000,0x00000049,0x80000000,x16, 218*SIGALIGN, x17,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000006f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002e; valaddr_reg:x16; op2:x26; op2val:0x800000000000006f
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002e, 0x00000000,0x0000006f,0x80000000,x16, 220*SIGALIGN, x17,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000d6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000055; valaddr_reg:x16; op2:x26; op2val:0x80000000000000d6
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x00000000,0x000000d6,0x80000000,x16, 222*SIGALIGN, x17,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000115 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000014; valaddr_reg:x16; op2:x26; op2val:0x8000000000000115
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000014, 0x00000000,0x00000115,0x80000000,x16, 224*SIGALIGN, x17,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000025a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000059; valaddr_reg:x16; op2:x26; op2val:0x800000000000025a
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000059, 0x00000000,0x0000025a,0x80000000,x16, 226*SIGALIGN, x17,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000043c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000003b; valaddr_reg:x16; op2:x26; op2val:0x800000000000043c
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x00000000,0x0000043c,0x80000000,x16, 228*SIGALIGN, x17,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000080c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000000b; valaddr_reg:x16; op2:x26; op2val:0x800000000000080c
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000b, 0x00000000,0x0000080c,0x80000000,x16, 230*SIGALIGN, x17,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000001060 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000005f; valaddr_reg:x16; op2:x26; op2val:0x8000000000001060
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005f, 0x00000000,0x00001060,0x80000000,x16, 232*SIGALIGN, x17,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000002047 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000046; valaddr_reg:x16; op2:x26; op2val:0x8000000000002047
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000046, 0x00000000,0x00002047,0x80000000,x16, 234*SIGALIGN, x17,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000004013 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000012; valaddr_reg:x16; op2:x26; op2val:0x8000000000004013
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000012, 0x00000000,0x00004013,0x80000000,x16, 236*SIGALIGN, x17,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000008063 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000062; valaddr_reg:x16; op2:x26; op2val:0x8000000000008063
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000062, 0x00000000,0x00008063,0x80000000,x16, 238*SIGALIGN, x17,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000001002f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002e; valaddr_reg:x16; op2:x26; op2val:0x800000000001002f
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002e, 0x00000000,0x0001002f,0x80000000,x16, 240*SIGALIGN, x17,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000025 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000020026 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000025; valaddr_reg:x16; op2:x26; op2val:0x8000000000020026
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000025, 0x00000000,0x00020026,0x80000000,x16, 242*SIGALIGN, x17,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000004002f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002e; valaddr_reg:x16; op2:x26; op2val:0x800000000004002f
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002e, 0x00000000,0x0004002f,0x80000000,x16, 244*SIGALIGN, x17,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000080053 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000052; valaddr_reg:x16; op2:x26; op2val:0x8000000000080053
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000052, 0x00000000,0x00080053,0x80000000,x16, 246*SIGALIGN, x17,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000100012 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000011; valaddr_reg:x16; op2:x26; op2val:0x8000000000100012
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000011, 0x00000000,0x00100012,0x80000000,x16, 248*SIGALIGN, x17,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000200029 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000028; valaddr_reg:x16; op2:x26; op2val:0x8000000000200029
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00000000,0x00200029,0x80000000,x16, 250*SIGALIGN, x17,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000400061 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000060; valaddr_reg:x16; op2:x26; op2val:0x8000000000400061
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000060, 0x00000000,0x00400061,0x80000000,x16, 252*SIGALIGN, x17,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffaa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000054; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffaa
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000054, 0x00000000,0xffffffaa,0x000fffff,x16, 254*SIGALIGN, x17,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffffffc
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0xfffffffc,0x000fffff,x16, 256*SIGALIGN, x17,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffe2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000019; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffe2
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x00000000,0xffffffe2,0x000fffff,x16, 258*SIGALIGN, x17,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffcc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000002b; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffcc
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002b, 0x00000000,0xffffffcc,0x000fffff,x16, 260*SIGALIGN, x17,x1, x14)

inst_142:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffd0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000001f; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffffd0
offset:266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001f, 0x00000000,0xffffffd0,0x000fffff,x16, 262*SIGALIGN, x17,x1, x14)

inst_143:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffff8d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000052; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffff8d
offset:268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000052, 0x00000000,0xffffff8d,0x000fffff,x16, 264*SIGALIGN, x17,x1, x14)

inst_144:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffff8e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000031; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffff8e
offset:270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000031, 0x00000000,0xffffff8e,0x000fffff,x16, 266*SIGALIGN, x17,x1, x14)

inst_145:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffff28 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000057; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffff28
offset:272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x00000000,0xffffff28,0x000fffff,x16, 268*SIGALIGN, x17,x1, x14)

inst_146:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffec9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000036; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffffec9
offset:274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000036, 0x00000000,0xfffffec9,0x000fffff,x16, 270*SIGALIGN, x17,x1, x14)

inst_147:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffdcb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000034; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffffdcb
offset:276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000034, 0x00000000,0xfffffdcb,0x000fffff,x16, 272*SIGALIGN, x17,x1, x14)

inst_148:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffbb6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000049; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffffbb6
offset:278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x00000000,0xfffffbb6,0x000fffff,x16, 274*SIGALIGN, x17,x1, x14)

inst_149:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffff79c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000063; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffff79c
offset:280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000063, 0x00000000,0xfffff79c,0x000fffff,x16, 276*SIGALIGN, x17,x1, x14)

inst_150:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffefa4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000005b; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffefa4
offset:282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x00000000,0xffffefa4,0x000fffff,x16, 278*SIGALIGN, x17,x1, x14)

inst_151:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffdfe9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000016; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffdfe9
offset:284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000016, 0x00000000,0xffffdfe9,0x000fffff,x16, 280*SIGALIGN, x17,x1, x14)

inst_152:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffbff6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000009; valaddr_reg:x16; op2:x26; op2val:0x000fffffffffbff6
offset:286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000009, 0x00000000,0xffffbff6,0x000fffff,x16, 282*SIGALIGN, x17,x1, x14)

inst_153:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffff7fa5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000005a; valaddr_reg:x16; op2:x26; op2val:0x000fffffffff7fa5
offset:288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005a, 0x00000000,0xffff7fa5,0x000fffff,x16, 284*SIGALIGN, x17,x1, x14)

inst_154:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffeffc5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000003a; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffeffc5
offset:290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x00000000,0xfffeffc5,0x000fffff,x16, 286*SIGALIGN, x17,x1, x14)

inst_155:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffdffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000003f; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffdffc0
offset:292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003f, 0x00000000,0xfffdffc0,0x000fffff,x16, 288*SIGALIGN, x17,x1, x14)

inst_156:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffbffb1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000004e; valaddr_reg:x16; op2:x26; op2val:0x000ffffffffbffb1
offset:294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x00000000,0xfffbffb1,0x000fffff,x16, 290*SIGALIGN, x17,x1, x14)

inst_157:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffff7fffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x000ffffffff7fffe
offset:296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0xfff7fffe,0x000fffff,x16, 292*SIGALIGN, x17,x1, x14)

inst_158:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffefffbf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000040; valaddr_reg:x16; op2:x26; op2val:0x000fffffffefffbf
offset:298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00000000,0xffefffbf,0x000fffff,x16, 294*SIGALIGN, x17,x1, x14)

inst_159:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffdfffd7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000028; valaddr_reg:x16; op2:x26; op2val:0x000fffffffdfffd7
offset:300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00000000,0xffdfffd7,0x000fffff,x16, 296*SIGALIGN, x17,x1, x14)

inst_160:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffbffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000007; valaddr_reg:x16; op2:x26; op2val:0x000fffffffbffff8
offset:302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000007, 0x00000000,0xffbffff8,0x000fffff,x16, 298*SIGALIGN, x17,x1, x14)

inst_161:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000017 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000019; valaddr_reg:x16; op2:x26; op2val:0x8010000000000017
offset:304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x00000000,0x00000017,0x80100000,x16, 300*SIGALIGN, x17,x1, x14)

inst_162:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x000000000004f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000052; valaddr_reg:x16; op2:x26; op2val:0x801000000000004f
offset:306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000052, 0x00000000,0x0000004f,0x80100000,x16, 302*SIGALIGN, x17,x1, x14)

inst_163:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000058 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000005d; valaddr_reg:x16; op2:x26; op2val:0x8010000000000058
offset:308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x00000000,0x00000058,0x80100000,x16, 304*SIGALIGN, x17,x1, x14)

inst_164:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffff9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000002; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffffff9
offset:310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x00000000,0xfffffff9,0x800fffff,x16, 306*SIGALIGN, x17,x1, x14)

inst_165:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000046 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000057; valaddr_reg:x16; op2:x26; op2val:0x8010000000000046
offset:312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x00000000,0x00000046,0x80100000,x16, 308*SIGALIGN, x17,x1, x14)

inst_166:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000008 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000029; valaddr_reg:x16; op2:x26; op2val:0x8010000000000008
offset:314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x00000000,0x00000008,0x80100000,x16, 310*SIGALIGN, x17,x1, x14)

inst_167:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffdb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000001c; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffdb
offset:316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x00000000,0xffffffdb,0x800fffff,x16, 312*SIGALIGN, x17,x1, x14)

inst_168:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffdb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000005c; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffffdb
offset:318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x00000000,0xffffffdb,0x800fffff,x16, 314*SIGALIGN, x17,x1, x14)

inst_169:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffff00
offset:320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0xffffff00,0x800fffff,x16, 316*SIGALIGN, x17,x1, x14)

inst_170:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffe43 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000044; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffffe43
offset:322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000044, 0x00000000,0xfffffe43,0x800fffff,x16, 318*SIGALIGN, x17,x1, x14)

inst_171:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffc0c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000000d; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffffc0c
offset:324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00000000,0xfffffc0c,0x800fffff,x16, 320*SIGALIGN, x17,x1, x14)

inst_172:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffff80f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000010; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffff80f
offset:326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000010, 0x00000000,0xfffff80f,0x800fffff,x16, 322*SIGALIGN, x17,x1, x14)

inst_173:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffff053 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000054; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffff053
offset:328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000054, 0x00000000,0xfffff053,0x800fffff,x16, 324*SIGALIGN, x17,x1, x14)

inst_174:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffe026 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000027; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffe026
offset:330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000027, 0x00000000,0xffffe026,0x800fffff,x16, 326*SIGALIGN, x17,x1, x14)

inst_175:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffc058 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000059; valaddr_reg:x16; op2:x26; op2val:0x800fffffffffc058
offset:332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000059, 0x00000000,0xffffc058,0x800fffff,x16, 328*SIGALIGN, x17,x1, x14)

inst_176:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffff800c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000000d; valaddr_reg:x16; op2:x26; op2val:0x800fffffffff800c
offset:334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00000000,0xffff800c,0x800fffff,x16, 330*SIGALIGN, x17,x1, x14)

inst_177:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffff0032 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000033; valaddr_reg:x16; op2:x26; op2val:0x800fffffffff0032
offset:336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00000000,0xffff0032,0x800fffff,x16, 332*SIGALIGN, x17,x1, x14)

inst_178:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffe000a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000000b; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffe000a
offset:338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000b, 0x00000000,0xfffe000a,0x800fffff,x16, 334*SIGALIGN, x17,x1, x14)

inst_179:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffc0023 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000024; valaddr_reg:x16; op2:x26; op2val:0x800ffffffffc0023
offset:340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000024, 0x00000000,0xfffc0023,0x800fffff,x16, 336*SIGALIGN, x17,x1, x14)

inst_180:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffff8000e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x000000000000000f; valaddr_reg:x16; op2:x26; op2val:0x800ffffffff8000e
offset:342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x00000000,0xfff8000e,0x800fffff,x16, 338*SIGALIGN, x17,x1, x14)

inst_181:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffff00011 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000012; valaddr_reg:x16; op2:x26; op2val:0x800ffffffff00011
offset:344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000012, 0x00000000,0xfff00011,0x800fffff,x16, 340*SIGALIGN, x17,x1, x14)

inst_182:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffe00042 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000043; valaddr_reg:x16; op2:x26; op2val:0x800fffffffe00042
offset:346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000043, 0x00000000,0xffe00042,0x800fffff,x16, 342*SIGALIGN, x17,x1, x14)

inst_183:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffc00052 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000053; valaddr_reg:x16; op2:x26; op2val:0x800fffffffc00052
offset:348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000053, 0x00000000,0xffc00052,0x800fffff,x16, 344*SIGALIGN, x17,x1, x14)

inst_184:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000000e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000000f; valaddr_reg:x16; op2:x26; op2val:0x800000000000000e
offset:350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x00100000,0x0000000e,0x80000000,x16, 346*SIGALIGN, x17,x1, x14)

inst_185:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000022 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000024; valaddr_reg:x16; op2:x26; op2val:0x8000000000000022
offset:352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000024, 0x00100000,0x00000022,0x80000000,x16, 348*SIGALIGN, x17,x1, x14)

inst_186:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000006; valaddr_reg:x16; op2:x26; op2val:0x8000000000000002
offset:354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000006, 0x00100000,0x00000002,0x80000000,x16, 350*SIGALIGN, x17,x1, x14)

inst_187:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000013 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000001b; valaddr_reg:x16; op2:x26; op2val:0x8000000000000013
offset:356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x00100000,0x00000013,0x80000000,x16, 352*SIGALIGN, x17,x1, x14)

inst_188:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000012 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000022; valaddr_reg:x16; op2:x26; op2val:0x8000000000000012
offset:358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000022, 0x00100000,0x00000012,0x80000000,x16, 354*SIGALIGN, x17,x1, x14)

inst_189:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000009 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000029; valaddr_reg:x16; op2:x26; op2val:0x8000000000000009
offset:360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x00100000,0x00000009,0x80000000,x16, 356*SIGALIGN, x17,x1, x14)

inst_190:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000009 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000049; valaddr_reg:x16; op2:x26; op2val:0x8000000000000009
offset:362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x00100000,0x00000009,0x80000000,x16, 358*SIGALIGN, x17,x1, x14)

inst_191:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000020 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000060; valaddr_reg:x16; op2:x26; op2val:0x0000000000000020
offset:364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000060, 0x00100000,0x00000020,0x00000000,x16, 360*SIGALIGN, x17,x1, x14)

inst_192:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000000b2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000004e; valaddr_reg:x16; op2:x26; op2val:0x00000000000000b2
offset:366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x00100000,0x000000b2,0x00000000,x16, 362*SIGALIGN, x17,x1, x14)

inst_193:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000001c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000040; valaddr_reg:x16; op2:x26; op2val:0x00000000000001c0
offset:368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00100000,0x000001c0,0x00000000,x16, 364*SIGALIGN, x17,x1, x14)

inst_194:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000003ad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000053; valaddr_reg:x16; op2:x26; op2val:0x00000000000003ad
offset:370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000053, 0x00100000,0x000003ad,0x00000000,x16, 366*SIGALIGN, x17,x1, x14)

inst_195:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000007ae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000052; valaddr_reg:x16; op2:x26; op2val:0x00000000000007ae
offset:372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000052, 0x00100000,0x000007ae,0x00000000,x16, 368*SIGALIGN, x17,x1, x14)

inst_196:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000030 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000fd0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000030; valaddr_reg:x16; op2:x26; op2val:0x0000000000000fd0
offset:374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000030, 0x00100000,0x00000fd0,0x00000000,x16, 370*SIGALIGN, x17,x1, x14)

inst_197:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001fe9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000017; valaddr_reg:x16; op2:x26; op2val:0x0000000000001fe9
offset:376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x00100000,0x00001fe9,0x00000000,x16, 372*SIGALIGN, x17,x1, x14)

inst_198:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000003fcf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000031; valaddr_reg:x16; op2:x26; op2val:0x0000000000003fcf
offset:378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000031, 0x00100000,0x00003fcf,0x00000000,x16, 374*SIGALIGN, x17,x1, x14)

inst_199:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000007fda and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000026; valaddr_reg:x16; op2:x26; op2val:0x0000000000007fda
offset:380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00100000,0x00007fda,0x00000000,x16, 376*SIGALIGN, x17,x1, x14)

inst_200:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000ffee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000012; valaddr_reg:x16; op2:x26; op2val:0x000000000000ffee
offset:382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000012, 0x00100000,0x0000ffee,0x00000000,x16, 378*SIGALIGN, x17,x1, x14)

inst_201:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000001ffdd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000023; valaddr_reg:x16; op2:x26; op2val:0x000000000001ffdd
offset:384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000023, 0x00100000,0x0001ffdd,0x00000000,x16, 380*SIGALIGN, x17,x1, x14)

inst_202:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000003ffd4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000002c; valaddr_reg:x16; op2:x26; op2val:0x000000000003ffd4
offset:386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002c, 0x00100000,0x0003ffd4,0x00000000,x16, 382*SIGALIGN, x17,x1, x14)

inst_203:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000007ffa4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000005c; valaddr_reg:x16; op2:x26; op2val:0x000000000007ffa4
offset:388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x00100000,0x0007ffa4,0x00000000,x16, 384*SIGALIGN, x17,x1, x14)

inst_204:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000fffd4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000002c; valaddr_reg:x16; op2:x26; op2val:0x00000000000fffd4
offset:390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002c, 0x00100000,0x000fffd4,0x00000000,x16, 386*SIGALIGN, x17,x1, x14)

inst_205:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000001ffffb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000005; valaddr_reg:x16; op2:x26; op2val:0x00000000001ffffb
offset:392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x00100000,0x001ffffb,0x00000000,x16, 388*SIGALIGN, x17,x1, x14)

inst_206:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000003fffdd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000023; valaddr_reg:x16; op2:x26; op2val:0x00000000003fffdd
offset:394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000023, 0x00100000,0x003fffdd,0x00000000,x16, 390*SIGALIGN, x17,x1, x14)

inst_207:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000000a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000014; valaddr_reg:x16; op2:x26; op2val:0x802000000000000a
offset:396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000014, 0x00100000,0x0000000a,0x80200000,x16, 392*SIGALIGN, x17,x1, x14)

inst_208:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000014 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000026; valaddr_reg:x16; op2:x26; op2val:0x8020000000000014
offset:398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00100000,0x00000014,0x80200000,x16, 394*SIGALIGN, x17,x1, x14)

inst_209:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000001c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000033; valaddr_reg:x16; op2:x26; op2val:0x802000000000001c
offset:400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00100000,0x0000001c,0x80200000,x16, 396*SIGALIGN, x17,x1, x14)

inst_210:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000011 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000000c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000011; valaddr_reg:x16; op2:x26; op2val:0x802000000000000c
offset:402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000011, 0x00100000,0x0000000c,0x80200000,x16, 398*SIGALIGN, x17,x1, x14)

inst_211:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000010 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000000f; valaddr_reg:x16; op2:x26; op2val:0x8020000000000010
offset:404*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x00100000,0x00000010,0x80200000,x16, 400*SIGALIGN, x17,x1, x14)

inst_212:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000005e; valaddr_reg:x16; op2:x26; op2val:0x802000000000003f
offset:406*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x00100000,0x0000003f,0x80200000,x16, 402*SIGALIGN, x17,x1, x14)

inst_213:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000007 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000024 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000007; valaddr_reg:x16; op2:x26; op2val:0x8020000000000024
offset:408*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000007, 0x00100000,0x00000024,0x80200000,x16, 404*SIGALIGN, x17,x1, x14)

inst_214:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000017 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000004c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000017; valaddr_reg:x16; op2:x26; op2val:0x802000000000004c
offset:410*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x00100000,0x0000004c,0x80200000,x16, 406*SIGALIGN, x17,x1, x14)

inst_215:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x002 and fm2 == 0x00000000000af and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000005e; valaddr_reg:x16; op2:x26; op2val:0x80200000000000af
offset:412*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x00100000,0x000000af,0x80200000,x16, 408*SIGALIGN, x17,x1, x14)

inst_216:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000114 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000027; valaddr_reg:x16; op2:x26; op2val:0x8020000000000114
offset:414*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000027, 0x00100000,0x00000114,0x80200000,x16, 410*SIGALIGN, x17,x1, x14)

inst_217:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000216 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000002b; valaddr_reg:x16; op2:x26; op2val:0x8020000000000216
offset:416*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002b, 0x00100000,0x00000216,0x80200000,x16, 412*SIGALIGN, x17,x1, x14)

inst_218:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000041b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000036; valaddr_reg:x16; op2:x26; op2val:0x802000000000041b
offset:418*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000036, 0x00100000,0x0000041b,0x80200000,x16, 414*SIGALIGN, x17,x1, x14)

inst_219:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000806 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000000d; valaddr_reg:x16; op2:x26; op2val:0x8020000000000806
offset:420*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00100000,0x00000806,0x80200000,x16, 416*SIGALIGN, x17,x1, x14)

inst_220:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000101f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000003e; valaddr_reg:x16; op2:x26; op2val:0x802000000000101f
offset:422*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003e, 0x00100000,0x0000101f,0x80200000,x16, 418*SIGALIGN, x17,x1, x14)

inst_221:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000002016 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000002c; valaddr_reg:x16; op2:x26; op2val:0x8020000000002016
offset:424*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002c, 0x00100000,0x00002016,0x80200000,x16, 420*SIGALIGN, x17,x1, x14)

inst_222:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000004008 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000010; valaddr_reg:x16; op2:x26; op2val:0x8020000000004008
offset:426*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000010, 0x00100000,0x00004008,0x80200000,x16, 422*SIGALIGN, x17,x1, x14)

inst_223:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000008008 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000000f; valaddr_reg:x16; op2:x26; op2val:0x8020000000008008
offset:428*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x00100000,0x00008008,0x80200000,x16, 424*SIGALIGN, x17,x1, x14)

inst_224:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000010020 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000040; valaddr_reg:x16; op2:x26; op2val:0x8020000000010020
offset:430*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00100000,0x00010020,0x80200000,x16, 426*SIGALIGN, x17,x1, x14)

inst_225:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000020002 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000005; valaddr_reg:x16; op2:x26; op2val:0x8020000000020002
offset:432*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x00100000,0x00020002,0x80200000,x16, 428*SIGALIGN, x17,x1, x14)

inst_226:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000040016 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x001000000000002b; valaddr_reg:x16; op2:x26; op2val:0x8020000000040016
offset:434*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002b, 0x00100000,0x00040016,0x80200000,x16, 430*SIGALIGN, x17,x1, x14)

inst_227:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000008002c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000058; valaddr_reg:x16; op2:x26; op2val:0x802000000008002c
offset:436*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x00100000,0x0008002c,0x80200000,x16, 432*SIGALIGN, x17,x1, x14)

inst_228:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000010000b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000016; valaddr_reg:x16; op2:x26; op2val:0x802000000010000b
offset:438*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000016, 0x00100000,0x0010000b,0x80200000,x16, 434*SIGALIGN, x17,x1, x14)

inst_229:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000200024 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0010000000000049; valaddr_reg:x16; op2:x26; op2val:0x8020000000200024
offset:440*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x00100000,0x00200024,0x80200000,x16, 436*SIGALIGN, x17,x1, x14)

inst_230:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffff58 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000052; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffffff58
offset:442*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000052, 0x7fe00000,0xffffff58,0x7fdfffff,x16, 438*SIGALIGN, x17,x1, x14)

inst_231:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffffe8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000009; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffffffe8
offset:444*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000009, 0x7fe00000,0xffffffe8,0x7fdfffff,x16, 440*SIGALIGN, x17,x1, x14)

inst_232:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001a and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffffc2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000001a; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffffffc2
offset:446*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001a, 0x7fe00000,0xffffffc2,0x7fdfffff,x16, 442*SIGALIGN, x17,x1, x14)

inst_233:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffffb4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000001d; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffffffb4
offset:448*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001d, 0x7fe00000,0xffffffb4,0x7fdfffff,x16, 444*SIGALIGN, x17,x1, x14)

inst_234:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000032 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffff7a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000032; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffffff7a
offset:450*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000032, 0x7fe00000,0xffffff7a,0x7fdfffff,x16, 446*SIGALIGN, x17,x1, x14)

inst_235:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffffa4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000000d; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffffffa4
offset:452*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x7fe00000,0xffffffa4,0x7fdfffff,x16, 448*SIGALIGN, x17,x1, x14)

inst_236:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffffeee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000048; valaddr_reg:x16; op2:x26; op2val:0x7fdffffffffffeee
offset:454*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000048, 0x7fe00000,0xfffffeee,0x7fdfffff,x16, 450*SIGALIGN, x17,x1, x14)

inst_237:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffffeb2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000026; valaddr_reg:x16; op2:x26; op2val:0x7fdffffffffffeb2
offset:456*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x7fe00000,0xfffffeb2,0x7fdfffff,x16, 452*SIGALIGN, x17,x1, x14)

inst_238:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffffd80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000003f; valaddr_reg:x16; op2:x26; op2val:0x7fdffffffffffd80
offset:458*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003f, 0x7fe00000,0xfffffd80,0x7fdfffff,x16, 454*SIGALIGN, x17,x1, x14)

inst_239:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005c and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffffb46 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000005c; valaddr_reg:x16; op2:x26; op2val:0x7fdffffffffffb46
offset:460*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x7fe00000,0xfffffb46,0x7fdfffff,x16, 456*SIGALIGN, x17,x1, x14)

inst_240:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffff7c6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000001c; valaddr_reg:x16; op2:x26; op2val:0x7fdffffffffff7c6
offset:462*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x7fe00000,0xfffff7c6,0x7fdfffff,x16, 458*SIGALIGN, x17,x1, x14)

inst_241:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffefe8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000000b; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffffefe8
offset:464*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000b, 0x7fe00000,0xffffefe8,0x7fdfffff,x16, 460*SIGALIGN, x17,x1, x14)

inst_242:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffdfc4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000001d; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffffdfc4
offset:466*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001d, 0x7fe00000,0xffffdfc4,0x7fdfffff,x16, 462*SIGALIGN, x17,x1, x14)

inst_243:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffbf68 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000004b; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffffbf68
offset:468*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004b, 0x7fe00000,0xffffbf68,0x7fdfffff,x16, 464*SIGALIGN, x17,x1, x14)

inst_244:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000038 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffff7f8e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000038; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffff7f8e
offset:470*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000038, 0x7fe00000,0xffff7f8e,0x7fdfffff,x16, 466*SIGALIGN, x17,x1, x14)

inst_245:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffeffa2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000002e; valaddr_reg:x16; op2:x26; op2val:0x7fdffffffffeffa2
offset:472*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002e, 0x7fe00000,0xfffeffa2,0x7fdfffff,x16, 468*SIGALIGN, x17,x1, x14)

inst_246:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffdffec and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000009; valaddr_reg:x16; op2:x26; op2val:0x7fdffffffffdffec
offset:474*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000009, 0x7fe00000,0xfffdffec,0x7fdfffff,x16, 470*SIGALIGN, x17,x1, x14)

inst_247:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000004 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffbfff6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000004; valaddr_reg:x16; op2:x26; op2val:0x7fdffffffffbfff6
offset:476*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000004, 0x7fe00000,0xfffbfff6,0x7fdfffff,x16, 472*SIGALIGN, x17,x1, x14)

inst_248:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffff7ff8a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000003a; valaddr_reg:x16; op2:x26; op2val:0x7fdffffffff7ff8a
offset:478*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x7fe00000,0xfff7ff8a,0x7fdfffff,x16, 474*SIGALIGN, x17,x1, x14)

inst_249:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffefff50 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000057; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffefff50
offset:480*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x7fe00000,0xffefff50,0x7fdfffff,x16, 476*SIGALIGN, x17,x1, x14)

inst_250:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000010 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffdfffde and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000010; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffdfffde
offset:482*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000010, 0x7fe00000,0xffdfffde,0x7fdfffff,x16, 478*SIGALIGN, x17,x1, x14)

inst_251:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffbfff98 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000033; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffffbfff98
offset:484*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x7fe00000,0xffbfff98,0x7fdfffff,x16, 480*SIGALIGN, x17,x1, x14)

inst_252:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffff7fffc8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000001b; valaddr_reg:x16; op2:x26; op2val:0x7fdfffffff7fffc8
offset:486*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x7fe00000,0xff7fffc8,0x7fdfffff,x16, 482*SIGALIGN, x17,x1, x14)

inst_253:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000006; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:488*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000006, 0x7fe00000,0x00000000,0xfff00000,x16, 484*SIGALIGN, x17,x1, x14)

inst_254:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000050; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:490*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000050, 0x7fe00000,0x00000000,0xfff00000,x16, 486*SIGALIGN, x17,x1, x14)

inst_255:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000000e; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:492*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000e, 0x7fe00000,0x00000000,0xfff00000,x16, 488*SIGALIGN, x17,x1, x14)

inst_256:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000003b; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:494*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x7fe00000,0x00000000,0xfff00000,x16, 490*SIGALIGN, x17,x1, x14)

inst_257:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000002f; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:496*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002f, 0x7fe00000,0x00000000,0xfff00000,x16, 492*SIGALIGN, x17,x1, x14)

inst_258:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000014; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:498*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000014, 0x7fe00000,0x00000000,0xfff00000,x16, 494*SIGALIGN, x17,x1, x14)

inst_259:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000004d; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:500*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004d, 0x7fe00000,0x00000000,0xfff00000,x16, 496*SIGALIGN, x17,x1, x14)

inst_260:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000013 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000013; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:502*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000013, 0x7fe00000,0x00000000,0xfff00000,x16, 498*SIGALIGN, x17,x1, x14)

inst_261:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000034; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:504*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000034, 0x7fe00000,0x00000000,0xfff00000,x16, 500*SIGALIGN, x17,x1, x14)

inst_262:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000058; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:506*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x7fe00000,0x00000000,0xfff00000,x16, 502*SIGALIGN, x17,x1, x14)

inst_263:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000043; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:508*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000043, 0x7fe00000,0x00000000,0xfff00000,x16, 504*SIGALIGN, x17,x1, x14)

inst_264:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000057; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:510*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x7fe00000,0x00000000,0xfff00000,x16, 506*SIGALIGN, x17,x1, x14)

inst_265:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000040; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:512*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x7fe00000,0x00000000,0xfff00000,x16, 508*SIGALIGN, x17,x1, x14)

inst_266:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000052; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:514*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000052, 0x7fe00000,0x00000000,0xfff00000,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_267:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000001a; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:516*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001a, 0x7fe00000,0x00000000,0xfff00000,x16, 0*SIGALIGN, x17,x1, x14)

inst_268:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000004f; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:518*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004f, 0x7fe00000,0x00000000,0xfff00000,x16, 2*SIGALIGN, x17,x1, x14)

inst_269:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000002; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:520*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x7fe00000,0x00000000,0xfff00000,x16, 4*SIGALIGN, x17,x1, x14)

inst_270:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000005b; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:522*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x7fe00000,0x00000000,0xfff00000,x16, 6*SIGALIGN, x17,x1, x14)

inst_271:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000029; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:524*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x7fe00000,0x00000000,0xfff00000,x16, 8*SIGALIGN, x17,x1, x14)

inst_272:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000005; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:526*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x7fe00000,0x00000000,0xfff00000,x16, 10*SIGALIGN, x17,x1, x14)

inst_273:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe000000000004e; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:528*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x7fe00000,0x00000000,0xfff00000,x16, 12*SIGALIGN, x17,x1, x14)

inst_274:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0000000000031; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:530*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000031, 0x7fe00000,0x00000000,0xfff00000,x16, 14*SIGALIGN, x17,x1, x14)

inst_275:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000031 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000032; valaddr_reg:x16; op2:x26; op2val:0x8000000000000031
offset:532*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000032, 0x00000000,0x00000031,0x80000000,x16, 16*SIGALIGN, x17,x1, x14)

inst_276:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000034 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x0000000000000036; valaddr_reg:x16; op2:x26; op2val:0x8000000000000034
offset:534*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000036, 0x00000000,0x00000034,0x80000000,x16, 18*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x00000032,64,FLEN)
NAN_BOXED(0x00000032,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0x00000037,64,FLEN)
NAN_BOXED(0x00000027,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0x00000024,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x0000006e,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x000000ee,64,FLEN)
test_dataset_1:
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x000001f3,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x000003df,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0x000007a5,64,FLEN)
NAN_BOXED(0x00000013,64,FLEN)
NAN_BOXED(0x00000fed,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x00001ff3,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0x00003ff6,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0x00007fd5,64,FLEN)
NAN_BOXED(0x00000048,64,FLEN)
NAN_BOXED(0x0000ffb8,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0x0001ffd2,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x0003ffd7,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0x0007ffae,64,FLEN)
NAN_BOXED(0x00000047,64,FLEN)
NAN_BOXED(0x000fffb9,64,FLEN)
NAN_BOXED(0x00000039,64,FLEN)
NAN_BOXED(0x001fffc7,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0x003fffde,64,FLEN)
NAN_BOXED(0x00000047,64,FLEN)
NAN_BOXED(0x00000048,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0x00000038,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000011,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x00000020,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x0000002a,64,FLEN)
NAN_BOXED(0x000000aa,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0x00000109,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0x00000249,64,FLEN)
NAN_BOXED(0x0000001f,64,FLEN)
NAN_BOXED(0x0000041f,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x00000846,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0x0000100c,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x00002029,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0x0000403f,64,FLEN)
NAN_BOXED(0x00000027,64,FLEN)
NAN_BOXED(0x00008027,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0x00010026,64,FLEN)
NAN_BOXED(0x00000010,64,FLEN)
NAN_BOXED(0x00020010,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0x0004002b,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x0008001b,64,FLEN)
NAN_BOXED(0x00000047,64,FLEN)
NAN_BOXED(0x00100047,64,FLEN)
NAN_BOXED(0x00000025,64,FLEN)
NAN_BOXED(0x00200025,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0x0040000c,64,FLEN)
NAN_BOXED(0x00000032,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000003d,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000014,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000044,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0x80000000,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0x00000020,64,FLEN)
NAN_BOXED(0x00000051,64,FLEN)
NAN_BOXED(0x0000002a,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x00000003,64,FLEN)
NAN_BOXED(0x00000006,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0x0000001a,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0x0000003e,64,FLEN)
NAN_BOXED(0x00000030,64,FLEN)
NAN_BOXED(0x00000038,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0x00000008,64,FLEN)
NAN_BOXED(0x00000084,64,FLEN)
NAN_BOXED(0x00000013,64,FLEN)
NAN_BOXED(0x0000010a,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0x0000020e,64,FLEN)
NAN_BOXED(0x0000004a,64,FLEN)
NAN_BOXED(0x00000425,64,FLEN)
NAN_BOXED(0x00000045,64,FLEN)
NAN_BOXED(0x00000822,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x0000102c,64,FLEN)
NAN_BOXED(0x00000004,64,FLEN)
NAN_BOXED(0x00002002,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0x00004029,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0x00008027,64,FLEN)
NAN_BOXED(0x00000010,64,FLEN)
NAN_BOXED(0x00010008,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0x00020006,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0x00040008,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0x00080027,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0x0010000c,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0x0020002e,64,FLEN)
NAN_BOXED(0x0000003e,64,FLEN)
NAN_BOXED(0x0000003e,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x0000003d,64,FLEN)
NAN_BOXED(0x00000050,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0x00000024,64,FLEN)
NAN_BOXED(0x00000053,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0x0000002d,64,FLEN)
NAN_BOXED(0x000000d4,64,FLEN)
NAN_BOXED(0x00000018,64,FLEN)
NAN_BOXED(0x000001e9,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0x000003c0,64,FLEN)
NAN_BOXED(0x00000006,64,FLEN)
NAN_BOXED(0x000007fb,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x00000ff4,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x00001fce,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0x00003fdf,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0x00007fa3,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0x0000ffb8,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0x0001ffa7,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x0003ffe6,64,FLEN)
NAN_BOXED(0x00000008,64,FLEN)
NAN_BOXED(0x0007fff9,64,FLEN)
NAN_BOXED(0x00000015,64,FLEN)
NAN_BOXED(0x000fffec,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0x001fffd5,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x003fffe0,64,FLEN)
NAN_BOXED(0x0000004d,64,FLEN)
NAN_BOXED(0x0000004d,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0x00000059,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000007,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0x0000006f,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x000000d6,64,FLEN)
NAN_BOXED(0x00000014,64,FLEN)
NAN_BOXED(0x00000115,64,FLEN)
NAN_BOXED(0x00000059,64,FLEN)
NAN_BOXED(0x0000025a,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0x0000043c,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0x0000080c,64,FLEN)
NAN_BOXED(0x0000005f,64,FLEN)
NAN_BOXED(0x00001060,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x00002047,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x00004013,64,FLEN)
NAN_BOXED(0x00000062,64,FLEN)
NAN_BOXED(0x00008063,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0x0001002f,64,FLEN)
NAN_BOXED(0x00000025,64,FLEN)
NAN_BOXED(0x00020026,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0x0004002f,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0x00080053,64,FLEN)
NAN_BOXED(0x00000011,64,FLEN)
NAN_BOXED(0x00100012,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x00200029,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x00400061,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0xffffffaa,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xfffffffc,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0xffffffe2,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0xffffffcc,64,FLEN)
NAN_BOXED(0x0000001f,64,FLEN)
NAN_BOXED(0xffffffd0,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0xffffff8d,64,FLEN)
NAN_BOXED(0x00000031,64,FLEN)
NAN_BOXED(0xffffff8e,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0xffffff28,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0xfffffec9,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0xfffffdcb,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0xfffffbb6,64,FLEN)
NAN_BOXED(0x00000063,64,FLEN)
NAN_BOXED(0xfffff79c,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0xffffefa4,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0xffffdfe9,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0xffffbff6,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0xffff7fa5,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0xfffeffc5,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0xfffdffc0,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0xfffbffb1,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xfff7fffe,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0xffefffbf,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0xffdfffd7,64,FLEN)
NAN_BOXED(0x00000007,64,FLEN)
NAN_BOXED(0xffbffff8,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xfffffff9,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x00000008,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0xffffffdb,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0xffffffdb,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffff00,64,FLEN)
NAN_BOXED(0x00000044,64,FLEN)
NAN_BOXED(0xfffffe43,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0xfffffc0c,64,FLEN)
NAN_BOXED(0x00000010,64,FLEN)
NAN_BOXED(0xfffff80f,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0xfffff053,64,FLEN)
NAN_BOXED(0x00000027,64,FLEN)
NAN_BOXED(0xffffe026,64,FLEN)
NAN_BOXED(0x00000059,64,FLEN)
NAN_BOXED(0xffffc058,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0xffff800c,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0xffff0032,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0xfffe000a,64,FLEN)
NAN_BOXED(0x00000024,64,FLEN)
NAN_BOXED(0xfffc0023,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0xfff8000e,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0xfff00011,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0xffe00042,64,FLEN)
NAN_BOXED(0x00000053,64,FLEN)
NAN_BOXED(0xffc00052,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x00000024,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0x00000006,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x00000013,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x00000020,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0x000000b2,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0x000001c0,64,FLEN)
NAN_BOXED(0x00000053,64,FLEN)
NAN_BOXED(0x000003ad,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0x000007ae,64,FLEN)
NAN_BOXED(0x00000030,64,FLEN)
NAN_BOXED(0x00000fd0,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x00001fe9,64,FLEN)
NAN_BOXED(0x00000031,64,FLEN)
NAN_BOXED(0x00003fcf,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0x00007fda,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x0000ffee,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0x0001ffdd,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0x0003ffd4,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0x0007ffa4,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0x000fffd4,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x001ffffb,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0x003fffdd,64,FLEN)
NAN_BOXED(0x00000014,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0x00000014,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0x00000011,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0x00000010,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0x00000007,64,FLEN)
NAN_BOXED(0x00000024,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0x000000af,64,FLEN)
NAN_BOXED(0x00000027,64,FLEN)
NAN_BOXED(0x00000114,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0x00000216,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0x0000041b,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x00000806,64,FLEN)
NAN_BOXED(0x0000003e,64,FLEN)
NAN_BOXED(0x0000101f,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0x00002016,64,FLEN)
NAN_BOXED(0x00000010,64,FLEN)
NAN_BOXED(0x00004008,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0x00008008,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0x00010020,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x00020002,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0x00040016,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x0008002c,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x0010000b,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0x00200024,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0xffffff58,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0xffffffe8,64,FLEN)
NAN_BOXED(0x0000001a,64,FLEN)
NAN_BOXED(0xffffffc2,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0xffffffb4,64,FLEN)
NAN_BOXED(0x00000032,64,FLEN)
NAN_BOXED(0xffffff7a,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0xffffffa4,64,FLEN)
NAN_BOXED(0x00000048,64,FLEN)
NAN_BOXED(0xfffffeee,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0xfffffeb2,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0xfffffd80,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0xfffffb46,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0xfffff7c6,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0xffffefe8,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0xffffdfc4,64,FLEN)
NAN_BOXED(0x0000004b,64,FLEN)
NAN_BOXED(0xffffbf68,64,FLEN)
NAN_BOXED(0x00000038,64,FLEN)
NAN_BOXED(0xffff7f8e,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0xfffeffa2,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0xfffdffec,64,FLEN)
NAN_BOXED(0x00000004,64,FLEN)
NAN_BOXED(0xfffbfff6,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0xfff7ff8a,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0xffefff50,64,FLEN)
NAN_BOXED(0x00000010,64,FLEN)
NAN_BOXED(0xffdfffde,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0xffbfff98,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0xff7fffc8,64,FLEN)
NAN_BOXED(0x00000006,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000050,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000002f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000014,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004d,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000013,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000001a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000031,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000032,64,FLEN)
NAN_BOXED(0x00000031,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 20*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
