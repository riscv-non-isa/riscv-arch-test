
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Fri Aug 25 06:12:14 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fmul.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmul.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fmul.d_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fmul.d_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x28, rs2==x26, rd==x30,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000008; valaddr_reg:x3; op2:x26; op2val:0x3fc0000000000000
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000008, 0x00000000,0x00000000,0x3fc00000,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 == rd != rs2, rs1==x26, rs2==x30, rd==x26,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x745d1745d1746 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x26; dest:x26; op1val:0x000000000000000b; valaddr_reg:x3; op2:x30; op2val:0x3fc745d1745d1746
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x26, x27, x26, x27,x30,x31,0, 0, 0, 0x0000000b, 0x00000000,0x745d1746,0x3fc745d1,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 == rs2 == rd, rs1==x24, rs2==x24, rd==x24,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x745d1745d1746 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x24; dest:x24; op1val:0x0000000000000016; valaddr_reg:x3; op2:x24; op2val:0x0000000000000016
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x24, x25, x24, x25,x24,x25,0, 0, 0, 0x00000016, 0x00000000,0x00000016,0x00000000,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1 == rs2 != rd, rs1==x22, rs2==x22, rd==x28,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7d05f417d05f4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x22; dest:x28; op1val:0x0000000000000056; valaddr_reg:x3; op2:x22; op2val:0x0000000000000056
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x28, x29, x22, x23,x22,x23,0, 0, 0, 0x00000056, 0x00000000,0x00000056,0x00000000,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs2 == rd != rs1, rs1==x30, rs2==x20, rd==x20,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf07c1f07c1f08 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x30; dest:x20; op1val:0x0000000000000021; valaddr_reg:x3; op2:x20; op2val:0x3fdf07c1f07c1f08
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x20, x21, x30, x31,x20,x21,0, 0, 0, 0x00000021, 0x00000000,0xf07c1f08,0x3fdf07c1,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x20, rs2==x28, rd==x22,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2492492492492 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x20; dest:x22; op1val:0x000000000000001c; valaddr_reg:x3; op2:x28; op2val:0x3ff2492492492492
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x22, x23, x20, x21,x28,x29,0, 0, 0, 0x0000001c, 0x00000000,0x92492492,0x3ff24924,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x14, rd==x18,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x999999999999a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x16; dest:x18; op1val:0x0000000000000005; valaddr_reg:x3; op2:x14; op2val:0x402999999999999a
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x18, x19, x16, x17,x14,x15,0, 0, 0, 0x00000005, 0x00000000,0x9999999a,0x40299999,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x14, rs2==x18, rd==x16,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x745d1745d1746 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x14; dest:x16; op1val:0x0000000000000058; valaddr_reg:x3; op2:x18; op2val:0x3ff745d1745d1746
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x16, x17, x14, x15,x18,x19,0, 0, 0, 0x00000058, 0x00000000,0x745d1746,0x3ff745d1,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x18, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000038 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2492492492492 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x18; dest:x14; op1val:0x0000000000000038; valaddr_reg:x3; op2:x16; op2val:0x4012492492492492
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x14, x15, x18, x19,x16,x17,0, 0, 0, 0x00000038, 0x00000000,0x92492492,0x40124924,x3, 16*SIGALIGN, x4,x1, x2)

inst_9:// rs1==x10, rs2==x8, rd==x12,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x4141414141414 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x10; dest:x12; op1val:0x0000000000000033; valaddr_reg:x3; op2:x8; op2val:0x4024141414141414
offset:18*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x12, x13, x10, x11,x8,x9,0, 0, 0, 0x00000033, 0x00000000,0x14141414,0x40241414,x3, 18*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x15,test_dataset_1)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xf07c1f07c1f08 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x8; dest:x10; op1val:0x0000000000000042; valaddr_reg:x15; op2:x12; op2val:0x402f07c1f07c1f08
offset:0*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0x00000042, 0x00000000,0xf07c1f08,0x402f07c1,x15, 0*SIGALIGN, x16,x1, x14)

inst_11:// rs1==x12, rs2==x10, rd==x8,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x403 and fm2 == 0xd41d41d41d41d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x12; dest:x8; op1val:0x0000000000000046; valaddr_reg:x15; op2:x10; op2val:0x403d41d41d41d41d
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x8, x9, x12, x13,x10,x11,0, 0, 0, 0x00000046, 0x00000000,0x1d41d41d,0x403d41d4,x15, 2*SIGALIGN, x16,x1, x14)

inst_12:// rs1==x4, rs2==x2, rd==x6,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xf81f81f81f820 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x4; dest:x6; op1val:0x0000000000000041; valaddr_reg:x15; op2:x2; op2val:0x404f81f81f81f820
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x6, x7, x4, x5,x2,x3,0, 0, 0, 0x00000041, 0x00000000,0x1f81f820,0x404f81f8,x15, 4*SIGALIGN, x16,x1, x14)

inst_13:// rs1==x2, rs2==x6, rd==x4,fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x409 and fm2 == 0x999999999999a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x2; dest:x4; op1val:0x0000000000000005; valaddr_reg:x15; op2:x6; op2val:0x409999999999999a
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x4, x5, x2, x3,x6,x7,0, 0, 0, 0x00000005, 0x00000000,0x9999999a,0x40999999,x15, 6*SIGALIGN, x16,x1, x14)

inst_14:// rs1==x6, rs2==x4, rd==x2,fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x407 and fm2 == 0x5c9882b931057 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x6; dest:x2; op1val:0x000000000000002f; valaddr_reg:x15; op2:x4; op2val:0x4075c9882b931057
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x2, x3, x6, x7,x4,x5,0, 0, 0, 0x0000002f, 0x00000000,0x2b931057,0x4075c988,x15, 8*SIGALIGN, x16,x1, x14)

inst_15:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x8f9c18f9c18fa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000029; valaddr_reg:x15; op2:x26; op2val:0x4088f9c18f9c18fa
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000029, 0x00000000,0x8f9c18fa,0x4088f9c1,x15, 10*SIGALIGN, x16,x1, x14)

inst_16:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x409 and fm2 == 0x29e4129e4129e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000037; valaddr_reg:x15; op2:x26; op2val:0x40929e4129e4129e
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000037, 0x00000000,0x29e4129e,0x40929e41,x15, 12*SIGALIGN, x16,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x40b and fm2 == 0x745d1745d1746 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000016; valaddr_reg:x15; op2:x26; op2val:0x40b745d1745d1746
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000016, 0x00000000,0x745d1746,0x40b745d1,x15, 14*SIGALIGN, x16,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x40c and fm2 == 0x642c8590b2164 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000017; valaddr_reg:x15; op2:x26; op2val:0x40c642c8590b2164
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x00000000,0x590b2164,0x40c642c8,x15, 16*SIGALIGN, x16,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x40d and fm2 == 0x1111111111111 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000001e; valaddr_reg:x15; op2:x26; op2val:0x40d1111111111111
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x00000000,0x11111111,0x40d11111,x15, 18*SIGALIGN, x16,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x40e and fm2 == 0x642c8590b2164 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000017; valaddr_reg:x15; op2:x26; op2val:0x40e642c8590b2164
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x00000000,0x590b2164,0x40e642c8,x15, 20*SIGALIGN, x16,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x642c8590b2164 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000017; valaddr_reg:x15; op2:x26; op2val:0x40f642c8590b2164
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x00000000,0x590b2164,0x40f642c8,x15, 22*SIGALIGN, x16,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 0 and fe2 == 0x40e and fm2 == 0xf07c1f07c1f08 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000042; valaddr_reg:x15; op2:x26; op2val:0x40ef07c1f07c1f08
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000042, 0x00000000,0xf07c1f08,0x40ef07c1,x15, 24*SIGALIGN, x16,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x5c9882b931057 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000002f; valaddr_reg:x15; op2:x26; op2val:0xbf95c9882b931057
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002f, 0x00000000,0x2b931057,0xbf95c988,x15, 26*SIGALIGN, x16,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x78a4c8178a4c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000057; valaddr_reg:x15; op2:x26; op2val:0xbf978a4c8178a4c8
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x00000000,0x8178a4c8,0xbf978a4c,x15, 28*SIGALIGN, x16,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5555555555555 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000018; valaddr_reg:x15; op2:x26; op2val:0xbfc5555555555555
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000018, 0x00000000,0x55555555,0xbfc55555,x15, 30*SIGALIGN, x16,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2f684bda12f68 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000036; valaddr_reg:x15; op2:x26; op2val:0xbfc2f684bda12f68
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000036, 0x00000000,0xbda12f68,0xbfc2f684,x15, 32*SIGALIGN, x16,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe1e1e1e1e1e1e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000044; valaddr_reg:x15; op2:x26; op2val:0xbfce1e1e1e1e1e1e
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000044, 0x00000000,0x1e1e1e1e,0xbfce1e1e,x15, 34*SIGALIGN, x16,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5c9882b931057 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000002f; valaddr_reg:x15; op2:x26; op2val:0xbfe5c9882b931057
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002f, 0x00000000,0x2b931057,0xbfe5c988,x15, 36*SIGALIGN, x16,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x642c8590b2164 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000002e; valaddr_reg:x15; op2:x26; op2val:0xbff642c8590b2164
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002e, 0x00000000,0x590b2164,0xbff642c8,x15, 38*SIGALIGN, x16,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1a7b9611a7b96 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003a; valaddr_reg:x15; op2:x26; op2val:0xc001a7b9611a7b96
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x00000000,0x611a7b96,0xc001a7b9,x15, 40*SIGALIGN, x16,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000061 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x51d07eae2f815 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000061; valaddr_reg:x15; op2:x26; op2val:0xc0051d07eae2f815
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000061, 0x00000000,0xeae2f815,0xc0051d07,x15, 42*SIGALIGN, x16,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x642c8590b2164 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000005c; valaddr_reg:x15; op2:x26; op2val:0xc01642c8590b2164
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x00000000,0x590b2164,0xc01642c8,x15, 44*SIGALIGN, x16,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003c and fs2 == 1 and fe2 == 0x403 and fm2 == 0x1111111111111 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003c; valaddr_reg:x15; op2:x26; op2val:0xc031111111111111
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003c, 0x00000000,0x11111111,0xc0311111,x15, 46*SIGALIGN, x16,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xe1e1e1e1e1e1e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000044; valaddr_reg:x15; op2:x26; op2val:0xc03e1e1e1e1e1e1e
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000044, 0x00000000,0x1e1e1e1e,0xc03e1e1e,x15, 48*SIGALIGN, x16,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x405 and fm2 == 0x0410410410410 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003f; valaddr_reg:x15; op2:x26; op2val:0xc050410410410410
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003f, 0x00000000,0x10410410,0xc0504104,x15, 50*SIGALIGN, x16,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000040; valaddr_reg:x15; op2:x26; op2val:0xc060000000000000
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00000000,0x00000000,0xc0600000,x15, 52*SIGALIGN, x16,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xf07c1f07c1f08 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000042; valaddr_reg:x15; op2:x26; op2val:0xc06f07c1f07c1f08
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000042, 0x00000000,0xf07c1f08,0xc06f07c1,x15, 54*SIGALIGN, x16,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x407 and fm2 == 0x8181818181818 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000055; valaddr_reg:x15; op2:x26; op2val:0xc078181818181818
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x00000000,0x18181818,0xc0781818,x15, 56*SIGALIGN, x16,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003c and fs2 == 1 and fe2 == 0x409 and fm2 == 0x1111111111111 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003c; valaddr_reg:x15; op2:x26; op2val:0xc091111111111111
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003c, 0x00000000,0x11111111,0xc0911111,x15, 58*SIGALIGN, x16,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x409 and fm2 == 0xc0e070381c0e0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000049; valaddr_reg:x15; op2:x26; op2val:0xc09c0e070381c0e0
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000049, 0x00000000,0x0381c0e0,0xc09c0e07,x15, 60*SIGALIGN, x16,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000048 and fs2 == 1 and fe2 == 0x40a and fm2 == 0xc71c71c71c71c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000048; valaddr_reg:x15; op2:x26; op2val:0xc0ac71c71c71c71c
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000048, 0x00000000,0x1c71c71c,0xc0ac71c7,x15, 62*SIGALIGN, x16,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x40c and fm2 == 0x15b1e5f75270d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003b; valaddr_reg:x15; op2:x26; op2val:0xc0c15b1e5f75270d
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x00000000,0x5f75270d,0xc0c15b1e,x15, 64*SIGALIGN, x16,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x40c and fm2 == 0x8181818181818 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000055; valaddr_reg:x15; op2:x26; op2val:0xc0c8181818181818
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x00000000,0x18181818,0xc0c81818,x15, 66*SIGALIGN, x16,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002a and fs2 == 1 and fe2 == 0x40e and fm2 == 0x8618618618618 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000002a; valaddr_reg:x15; op2:x26; op2val:0xc0e8618618618618
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002a, 0x00000000,0x18618618,0xc0e86186,x15, 68*SIGALIGN, x16,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x410 and fm2 == 0x745d1745d1746 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000016; valaddr_reg:x15; op2:x26; op2val:0xc10745d1745d1746
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000016, 0x00000000,0x745d1746,0xc10745d1,x15, 70*SIGALIGN, x16,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffffbc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000023; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffffbc
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000023, 0x3ff00000,0xffffffbc,0x3fefffff,x15, 72*SIGALIGN, x16,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff88 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff000000000003e; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffff88
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003e, 0x3ff00000,0xffffff88,0x3fefffff,x15, 74*SIGALIGN, x16,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffffba and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000027; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffffba
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000027, 0x3ff00000,0xffffffba,0x3fefffff,x15, 76*SIGALIGN, x16,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff8e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000041; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffff8e
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000041, 0x3ff00000,0xffffff8e,0x3fefffff,x15, 78*SIGALIGN, x16,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff9a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000043; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffff9a
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000043, 0x3ff00000,0xffffff9a,0x3fefffff,x15, 80*SIGALIGN, x16,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff98 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000054; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffff98
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000054, 0x3ff00000,0xffffff98,0x3fefffff,x15, 82*SIGALIGN, x16,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffffe8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff000000000004c; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffffe8
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004c, 0x3ff00000,0xffffffe8,0x3fefffff,x15, 84*SIGALIGN, x16,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000058 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000028; valaddr_reg:x15; op2:x26; op2val:0x3ff0000000000058
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x3ff00000,0x00000058,0x3ff00000,x15, 86*SIGALIGN, x16,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000000e5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff000000000001b; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000000e5
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x3ff00000,0x000000e5,0x3ff00000,x15, 88*SIGALIGN, x16,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000042 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000001be and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000042; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000001be
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000042, 0x3ff00000,0x000001be,0x3ff00000,x15, 90*SIGALIGN, x16,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000003a8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000058; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000003a8
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x3ff00000,0x000003a8,0x3ff00000,x15, 92*SIGALIGN, x16,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000007f6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff000000000000a; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000007f6
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000a, 0x3ff00000,0x000007f6,0x3ff00000,x15, 94*SIGALIGN, x16,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000fa3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff000000000005d; valaddr_reg:x15; op2:x26; op2val:0x3ff0000000000fa3
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x3ff00000,0x00000fa3,0x3ff00000,x15, 96*SIGALIGN, x16,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000001fe7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000019; valaddr_reg:x15; op2:x26; op2val:0x3ff0000000001fe7
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x3ff00000,0x00001fe7,0x3ff00000,x15, 98*SIGALIGN, x16,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000003ff2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff000000000000e; valaddr_reg:x15; op2:x26; op2val:0x3ff0000000003ff2
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000e, 0x3ff00000,0x00003ff2,0x3ff00000,x15, 100*SIGALIGN, x16,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000007fb6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff000000000004a; valaddr_reg:x15; op2:x26; op2val:0x3ff0000000007fb6
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004a, 0x3ff00000,0x00007fb6,0x3ff00000,x15, 102*SIGALIGN, x16,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x000000000fff9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000007; valaddr_reg:x15; op2:x26; op2val:0x3ff000000000fff9
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000007, 0x3ff00000,0x0000fff9,0x3ff00000,x15, 104*SIGALIGN, x16,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x000000001ffb4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff000000000004c; valaddr_reg:x15; op2:x26; op2val:0x3ff000000001ffb4
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004c, 0x3ff00000,0x0001ffb4,0x3ff00000,x15, 106*SIGALIGN, x16,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x000000003ffa8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000058; valaddr_reg:x15; op2:x26; op2val:0x3ff000000003ffa8
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x3ff00000,0x0003ffa8,0x3ff00000,x15, 108*SIGALIGN, x16,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000061 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x000000007ff9f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000061; valaddr_reg:x15; op2:x26; op2val:0x3ff000000007ff9f
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000061, 0x3ff00000,0x0007ff9f,0x3ff00000,x15, 110*SIGALIGN, x16,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000fffee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000012; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000fffee
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000012, 0x3ff00000,0x000fffee,0x3ff00000,x15, 112*SIGALIGN, x16,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000001fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000020; valaddr_reg:x15; op2:x26; op2val:0x3ff00000001fffe0
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000020, 0x3ff00000,0x001fffe0,0x3ff00000,x15, 114*SIGALIGN, x16,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000003ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3ff0000000000008; valaddr_reg:x15; op2:x26; op2val:0x3ff00000003ffff8
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000008, 0x3ff00000,0x003ffff8,0x3ff00000,x15, 116*SIGALIGN, x16,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffff4a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f8000000000005c; valaddr_reg:x15; op2:x26; op2val:0xbfefffffffffff4a
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x3f800000,0xffffff4a,0xbfefffff,x15, 118*SIGALIGN, x16,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffffffa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000005; valaddr_reg:x15; op2:x26; op2val:0xbfeffffffffffffa
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x3f800000,0xfffffffa,0xbfefffff,x15, 120*SIGALIGN, x16,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffffaa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f8000000000002f; valaddr_reg:x15; op2:x26; op2val:0xbfefffffffffffaa
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002f, 0x3f800000,0xffffffaa,0xbfefffff,x15, 122*SIGALIGN, x16,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000017 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffffe2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000017; valaddr_reg:x15; op2:x26; op2val:0xbfefffffffffffe2
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x3f800000,0xffffffe2,0xbfefffff,x15, 124*SIGALIGN, x16,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffff72 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000057; valaddr_reg:x15; op2:x26; op2val:0xbfefffffffffff72
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x3f800000,0xffffff72,0xbfefffff,x15, 126*SIGALIGN, x16,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000015 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f8000000000000b; valaddr_reg:x15; op2:x26; op2val:0xbff0000000000015
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000b, 0x3f800000,0x00000015,0xbff00000,x15, 128*SIGALIGN, x16,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000037 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000009; valaddr_reg:x15; op2:x26; op2val:0xbff0000000000037
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000009, 0x3f800000,0x00000037,0xbff00000,x15, 130*SIGALIGN, x16,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000000007a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000006; valaddr_reg:x15; op2:x26; op2val:0xbff000000000007a
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000006, 0x3f800000,0x0000007a,0xbff00000,x15, 132*SIGALIGN, x16,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000000fd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000003; valaddr_reg:x15; op2:x26; op2val:0xbff00000000000fd
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000003, 0x3f800000,0x000000fd,0xbff00000,x15, 134*SIGALIGN, x16,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000021 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000001df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000021; valaddr_reg:x15; op2:x26; op2val:0xbff00000000001df
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x3f800000,0x000001df,0xbff00000,x15, 136*SIGALIGN, x16,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000015 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000003eb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000015; valaddr_reg:x15; op2:x26; op2val:0xbff00000000003eb
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000015, 0x3f800000,0x000003eb,0xbff00000,x15, 138*SIGALIGN, x16,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000007e8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000018; valaddr_reg:x15; op2:x26; op2val:0xbff00000000007e8
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000018, 0x3f800000,0x000007e8,0xbff00000,x15, 140*SIGALIGN, x16,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000fa7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000059; valaddr_reg:x15; op2:x26; op2val:0xbff0000000000fa7
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000059, 0x3f800000,0x00000fa7,0xbff00000,x15, 142*SIGALIGN, x16,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000001fce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000032; valaddr_reg:x15; op2:x26; op2val:0xbff0000000001fce
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000032, 0x3f800000,0x00001fce,0xbff00000,x15, 144*SIGALIGN, x16,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000003ffa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000006; valaddr_reg:x15; op2:x26; op2val:0xbff0000000003ffa
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000006, 0x3f800000,0x00003ffa,0xbff00000,x15, 146*SIGALIGN, x16,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000007fec and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000014; valaddr_reg:x15; op2:x26; op2val:0xbff0000000007fec
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000014, 0x3f800000,0x00007fec,0xbff00000,x15, 148*SIGALIGN, x16,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000001; valaddr_reg:x15; op2:x26; op2val:0xbff000000000ffff
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x3f800000,0x0000ffff,0xbff00000,x15, 150*SIGALIGN, x16,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000001ffb1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f8000000000004f; valaddr_reg:x15; op2:x26; op2val:0xbff000000001ffb1
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004f, 0x3f800000,0x0001ffb1,0xbff00000,x15, 152*SIGALIGN, x16,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000003ffa0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000060; valaddr_reg:x15; op2:x26; op2val:0xbff000000003ffa0
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000060, 0x3f800000,0x0003ffa0,0xbff00000,x15, 154*SIGALIGN, x16,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000007fff1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f8000000000000f; valaddr_reg:x15; op2:x26; op2val:0xbff000000007fff1
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x3f800000,0x0007fff1,0xbff00000,x15, 156*SIGALIGN, x16,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000fffd4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f8000000000002c; valaddr_reg:x15; op2:x26; op2val:0xbff00000000fffd4
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002c, 0x3f800000,0x000fffd4,0xbff00000,x15, 158*SIGALIGN, x16,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000001ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f80000000000004; valaddr_reg:x15; op2:x26; op2val:0xbff00000001ffffc
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000004, 0x3f800000,0x001ffffc,0xbff00000,x15, 160*SIGALIGN, x16,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000003a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000003fffc6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x3f8000000000003a; valaddr_reg:x15; op2:x26; op2val:0xbff00000003fffc6
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x3f800000,0x003fffc6,0xbff00000,x15, 162*SIGALIGN, x16,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000063; valaddr_reg:x15; op2:x26; op2val:0x0000000000000000
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000063, 0x00000000,0x00000000,0x00000000,x15, 164*SIGALIGN, x16,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x02b1da46102b2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000005f; valaddr_reg:x15; op2:x26; op2val:0x3fa02b1da46102b2
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005f, 0x00000000,0xa46102b2,0x3fa02b1d,x15, 166*SIGALIGN, x16,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x2d2d2d2d2d2d3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000022; valaddr_reg:x15; op2:x26; op2val:0x3fc2d2d2d2d2d2d3
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000022, 0x00000000,0xd2d2d2d3,0x3fc2d2d2,x15, 168*SIGALIGN, x16,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x6276276276276 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000034; valaddr_reg:x15; op2:x26; op2val:0x3fc6276276276276
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000034, 0x00000000,0x76276276,0x3fc62762,x15, 170*SIGALIGN, x16,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x7e97e97e97e98 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000005b; valaddr_reg:x15; op2:x26; op2val:0x3fc7e97e97e97e98
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x00000000,0x97e97e98,0x3fc7e97e,x15, 172*SIGALIGN, x16,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x14fbcda3ac10d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003d; valaddr_reg:x15; op2:x26; op2val:0x3fe14fbcda3ac10d
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003d, 0x00000000,0xda3ac10d,0x3fe14fbc,x15, 174*SIGALIGN, x16,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x5aaaaaaaaaaab and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000000c; valaddr_reg:x15; op2:x26; op2val:0x4015aaaaaaaaaaab
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000c, 0x00000000,0xaaaaaaab,0x4015aaaa,x15, 176*SIGALIGN, x16,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7745d1745d174 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000058; valaddr_reg:x15; op2:x26; op2val:0x3ff7745d1745d174
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x00000000,0x1745d174,0x3ff7745d,x15, 178*SIGALIGN, x16,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 0 and fe2 == 0x403 and fm2 == 0x25b6db6db6db7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000000e; valaddr_reg:x15; op2:x26; op2val:0x40325b6db6db6db7
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000e, 0x00000000,0xb6db6db7,0x40325b6d,x15, 180*SIGALIGN, x16,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x402 and fm2 == 0x1b08d3dcb08d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003a; valaddr_reg:x15; op2:x26; op2val:0x4021b08d3dcb08d4
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x00000000,0x3dcb08d4,0x4021b08d,x15, 182*SIGALIGN, x16,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x402 and fm2 == 0xe98d5f85bb395 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000043; valaddr_reg:x15; op2:x26; op2val:0x402e98d5f85bb395
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000043, 0x00000000,0xf85bb395,0x402e98d5,x15, 184*SIGALIGN, x16,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x4169696969697 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000033; valaddr_reg:x15; op2:x26; op2val:0x4044169696969697
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00000000,0x96969697,0x40441696,x15, 186*SIGALIGN, x16,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xf09b26c9b26ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000042; valaddr_reg:x15; op2:x26; op2val:0x404f09b26c9b26ca
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000042, 0x00000000,0x6c9b26ca,0x404f09b2,x15, 188*SIGALIGN, x16,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x407 and fm2 == 0xaf35e50d79436 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000013; valaddr_reg:x15; op2:x26; op2val:0x407af35e50d79436
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000013, 0x00000000,0x50d79436,0x407af35e,x15, 190*SIGALIGN, x16,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x407 and fm2 == 0xe1e9696969697 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000022; valaddr_reg:x15; op2:x26; op2val:0x407e1e9696969697
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000022, 0x00000000,0x96969697,0x407e1e96,x15, 192*SIGALIGN, x16,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x407 and fm2 == 0xa41d89d89d89e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000004e; valaddr_reg:x15; op2:x26; op2val:0x407a41d89d89d89e
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x00000000,0x9d89d89e,0x407a41d8,x15, 194*SIGALIGN, x16,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x8619e79e79e7a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000054; valaddr_reg:x15; op2:x26; op2val:0x4088619e79e79e7a
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000054, 0x00000000,0x79e79e7a,0x4088619e,x15, 196*SIGALIGN, x16,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6c17777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000005a; valaddr_reg:x15; op2:x26; op2val:0x4096c17777777777
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005a, 0x00000000,0x77777777,0x4096c177,x15, 198*SIGALIGN, x16,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x40c and fm2 == 0xc71ce38e38e39 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000012; valaddr_reg:x15; op2:x26; op2val:0x40cc71ce38e38e39
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000012, 0x00000000,0x38e38e39,0x40cc71ce,x15, 200*SIGALIGN, x16,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x0000200000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000008; valaddr_reg:x15; op2:x26; op2val:0x40f0000200000000
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000008, 0x00000000,0x00000000,0x40f00002,x15, 202*SIGALIGN, x16,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x9999b33333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000005; valaddr_reg:x15; op2:x26; op2val:0x4109999b33333333
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x00000000,0x33333333,0x4109999b,x15, 204*SIGALIGN, x16,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x86186db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000015; valaddr_reg:x15; op2:x26; op2val:0x40f86186db6db6db
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000015, 0x00000000,0xdb6db6db,0x40f86186,x15, 206*SIGALIGN, x16,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x411 and fm2 == 0x3b13b62762762 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000000d; valaddr_reg:x15; op2:x26; op2val:0x4113b13b62762762
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00000000,0x62762762,0x4113b13b,x15, 208*SIGALIGN, x16,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000052; valaddr_reg:x15; op2:x26; op2val:0x0000000000008000
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000052, 0x00000000,0x00008000,0x00000000,x15, 210*SIGALIGN, x16,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x745d1745d1746 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000042; valaddr_reg:x15; op2:x26; op2val:0xbfa745d1745d1746
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000042, 0x00000000,0x745d1746,0xbfa745d1,x15, 212*SIGALIGN, x16,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000005; valaddr_reg:x15; op2:x26; op2val:0xbff0000000000000
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x00000000,0x00000000,0xbff00000,x15, 214*SIGALIGN, x16,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000001e; valaddr_reg:x15; op2:x26; op2val:0xbfd3333333333333
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x00000000,0x33333333,0xbfd33333,x15, 216*SIGALIGN, x16,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000039 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x31674c59d3167 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000039; valaddr_reg:x15; op2:x26; op2val:0xbfd31674c59d3167
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000039, 0x00000000,0xc59d3167,0xbfd31674,x15, 218*SIGALIGN, x16,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000021; valaddr_reg:x15; op2:x26; op2val:0xbff0000000000000
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x00000000,0x00000000,0xbff00000,x15, 220*SIGALIGN, x16,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb5e50d79435e5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000004c; valaddr_reg:x15; op2:x26; op2val:0xbfeb5e50d79435e5
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004c, 0x00000000,0xd79435e5,0xbfeb5e50,x15, 222*SIGALIGN, x16,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9cccccccccccd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000050; valaddr_reg:x15; op2:x26; op2val:0xbff9cccccccccccd
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000050, 0x00000000,0xcccccccd,0xbff9cccc,x15, 224*SIGALIGN, x16,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x697e97e97e97f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000005b; valaddr_reg:x15; op2:x26; op2val:0xc00697e97e97e97f
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x00000000,0x7e97e97f,0xc00697e9,x15, 226*SIGALIGN, x16,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xf1745d1745d17 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000021; valaddr_reg:x15; op2:x26; op2val:0xc02f1745d1745d17
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x00000000,0xd1745d17,0xc02f1745,x15, 228*SIGALIGN, x16,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000037 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2a2e8ba2e8ba3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000037; valaddr_reg:x15; op2:x26; op2val:0xc032a2e8ba2e8ba3
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000037, 0x00000000,0xba2e8ba3,0xc032a2e8,x15, 230*SIGALIGN, x16,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xe21e1e1e1e1e2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000044; valaddr_reg:x15; op2:x26; op2val:0xc03e21e1e1e1e1e2
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000044, 0x00000000,0xe1e1e1e2,0xc03e21e1,x15, 232*SIGALIGN, x16,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x40b and fm2 == 0x0010000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x15; op2:x26; op2val:0xc0b0010000000000
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0x00000000,0xc0b00100,x15, 234*SIGALIGN, x16,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x409 and fm2 == 0x99a6666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000005; valaddr_reg:x15; op2:x26; op2val:0xc0999a6666666666
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x00000000,0x66666666,0xc0999a66,x15, 236*SIGALIGN, x16,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000035 and fs2 == 1 and fe2 == 0x407 and fm2 == 0x3526a439f656f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000035; valaddr_reg:x15; op2:x26; op2val:0xc073526a439f656f
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000035, 0x00000000,0x439f656f,0xc073526a,x15, 238*SIGALIGN, x16,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x40a and fm2 == 0x1113333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000000f; valaddr_reg:x15; op2:x26; op2val:0xc0a1113333333333
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000f, 0x00000000,0x33333333,0xc0a11133,x15, 240*SIGALIGN, x16,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x408 and fm2 == 0x6059765d9765e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000005d; valaddr_reg:x15; op2:x26; op2val:0xc086059765d9765e
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x00000000,0x65d9765e,0xc0860597,x15, 242*SIGALIGN, x16,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x40b and fm2 == 0x084294a5294a5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000001f; valaddr_reg:x15; op2:x26; op2val:0xc0b084294a5294a5
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001f, 0x00000000,0x4a5294a5,0xc0b08429,x15, 244*SIGALIGN, x16,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x40d and fm2 == 0x3b14000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000000d; valaddr_reg:x15; op2:x26; op2val:0xc0d3b14000000000
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00000000,0x00000000,0xc0d3b140,x15, 246*SIGALIGN, x16,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x40d and fm2 == 0x5555800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000018; valaddr_reg:x15; op2:x26; op2val:0xc0d5555800000000
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000018, 0x00000000,0x00000000,0xc0d55558,x15, 248*SIGALIGN, x16,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x40e and fm2 == 0x1111222222222 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000001e; valaddr_reg:x15; op2:x26; op2val:0xc0e1111222222222
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x00000000,0x22222222,0xc0e11112,x15, 250*SIGALIGN, x16,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x40f and fm2 == 0x2492524924925 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000001c; valaddr_reg:x15; op2:x26; op2val:0xc0f2492524924925
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x00000000,0x24924925,0xc0f24925,x15, 252*SIGALIGN, x16,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x40e and fm2 == 0xe913226357e17 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000043; valaddr_reg:x15; op2:x26; op2val:0xc0ee913226357e17
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000043, 0x00000000,0x26357e17,0xc0ee9132,x15, 254*SIGALIGN, x16,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003c and fs2 == 0 and fe2 == 0x42d and fm2 == 0x111111111110f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003c; valaddr_reg:x15; op2:x26; op2val:0x42d111111111110f
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003c, 0x00000000,0x1111110f,0x42d11111,x15, 256*SIGALIGN, x16,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x42d and fm2 == 0x9999999999995 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000028; valaddr_reg:x15; op2:x26; op2val:0x42d9999999999995
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00000000,0x99999995,0x42d99999,x15, 258*SIGALIGN, x16,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x8acb90f6bf3a2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000053; valaddr_reg:x15; op2:x26; op2val:0x42c8acb90f6bf3a2
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000053, 0x00000000,0x0f6bf3a2,0x42c8acb9,x15, 260*SIGALIGN, x16,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x42e and fm2 == 0x2492492492488 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000001c; valaddr_reg:x15; op2:x26; op2val:0x42e2492492492488
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x00000000,0x92492488,0x42e24924,x15, 262*SIGALIGN, x16,x1, x14)

inst_142:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x4e5e0a72f0523 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000062; valaddr_reg:x15; op2:x26; op2val:0x42c4e5e0a72f0523
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000062, 0x00000000,0xa72f0523,0x42c4e5e0,x15, 264*SIGALIGN, x16,x1, x14)

inst_143:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 0 and fe2 == 0x42c and fm2 == 0x5c9882b93102a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000005e; valaddr_reg:x15; op2:x26; op2val:0x42c5c9882b93102a
offset:266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x00000000,0x2b93102a,0x42c5c988,x15, 266*SIGALIGN, x16,x1, x14)

inst_144:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x42d and fm2 == 0x29e4129e41253 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000037; valaddr_reg:x15; op2:x26; op2val:0x42d29e4129e41253
offset:268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000037, 0x00000000,0x29e41253,0x42d29e41,x15, 268*SIGALIGN, x16,x1, x14)

inst_145:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x431 and fm2 == 0x55555555554a9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000003; valaddr_reg:x15; op2:x26; op2val:0x43155555555554a9
offset:270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000003, 0x00000000,0x555554a9,0x43155555,x15, 270*SIGALIGN, x16,x1, x14)

inst_146:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004c and fs2 == 0 and fe2 == 0x42c and fm2 == 0xaf286bca1ad78 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000004c; valaddr_reg:x15; op2:x26; op2val:0x42caf286bca1ad78
offset:272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004c, 0x00000000,0xbca1ad78,0x42caf286,x15, 272*SIGALIGN, x16,x1, x14)

inst_147:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 0 and fe2 == 0x42d and fm2 == 0x2f684bda12d08 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000036; valaddr_reg:x15; op2:x26; op2val:0x42d2f684bda12d08
offset:274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000036, 0x00000000,0xbda12d08,0x42d2f684,x15, 274*SIGALIGN, x16,x1, x14)

inst_148:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x42c and fm2 == 0xb4e81b4e81479 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000004b; valaddr_reg:x15; op2:x26; op2val:0x42cb4e81b4e81479
offset:276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004b, 0x00000000,0xb4e81479,0x42cb4e81,x15, 276*SIGALIGN, x16,x1, x14)

inst_149:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x42f and fm2 == 0x3b13b13b1313a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000000d; valaddr_reg:x15; op2:x26; op2val:0x42f3b13b13b1313a
offset:278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00000000,0x13b1313a,0x42f3b13b,x15, 278*SIGALIGN, x16,x1, x14)

inst_150:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x42d and fm2 == 0x084210841ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003e; valaddr_reg:x15; op2:x26; op2val:0x42d084210841ffff
offset:280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003e, 0x00000000,0x0841ffff,0x42d08421,x15, 280*SIGALIGN, x16,x1, x14)

inst_151:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x431 and fm2 == 0x5555555552aa9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000003; valaddr_reg:x15; op2:x26; op2val:0x4315555555552aa9
offset:282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000003, 0x00000000,0x55552aa9,0x43155555,x15, 282*SIGALIGN, x16,x1, x14)

inst_152:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000010 and fs2 == 0 and fe2 == 0x42e and fm2 == 0xfffffffff7ffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000010; valaddr_reg:x15; op2:x26; op2val:0x42efffffffff7ffe
offset:284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000010, 0x00000000,0xffff7ffe,0x42efffff,x15, 284*SIGALIGN, x16,x1, x14)

inst_153:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x42d and fm2 == 0x5c9882b92620a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000002f; valaddr_reg:x15; op2:x26; op2val:0x42d5c9882b92620a
offset:286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002f, 0x00000000,0x2b92620a,0x42d5c988,x15, 286*SIGALIGN, x16,x1, x14)

inst_154:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x702e05c0a1141 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000059; valaddr_reg:x15; op2:x26; op2val:0x42c702e05c0a1141
offset:288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000059, 0x00000000,0x5c0a1141,0x42c702e0,x15, 288*SIGALIGN, x16,x1, x14)

inst_155:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x42d and fm2 == 0x9999999966665 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000028; valaddr_reg:x15; op2:x26; op2val:0x42d9999999966665
offset:290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00000000,0x99966665,0x42d99999,x15, 290*SIGALIGN, x16,x1, x14)

inst_156:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x745d1745745d0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000058; valaddr_reg:x15; op2:x26; op2val:0x42c745d1745745d0
offset:292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x00000000,0x745745d0,0x42c745d1,x15, 292*SIGALIGN, x16,x1, x14)

inst_157:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x42f and fm2 == 0x3b13b13a76275 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000000d; valaddr_reg:x15; op2:x26; op2val:0x42f3b13b13a76275
offset:294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00000000,0x13a76275,0x42f3b13b,x15, 294*SIGALIGN, x16,x1, x14)

inst_158:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x42d and fm2 == 0x99999997ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000028; valaddr_reg:x15; op2:x26; op2val:0x42d99999997ffffe
offset:296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00000000,0x997ffffe,0x42d99999,x15, 296*SIGALIGN, x16,x1, x14)

inst_159:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x78a4c8149902e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000057; valaddr_reg:x15; op2:x26; op2val:0x42c78a4c8149902e
offset:298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x00000000,0x8149902e,0x42c78a4c,x15, 298*SIGALIGN, x16,x1, x14)

inst_160:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x42d and fm2 == 0x1a7b960d3dcaf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003a; valaddr_reg:x15; op2:x26; op2val:0x42d1a7b960d3dcaf
offset:300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003a, 0x00000000,0x60d3dcaf,0x42d1a7b9,x15, 300*SIGALIGN, x16,x1, x14)

inst_161:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000035 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x3521cfb2b78bf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000035; valaddr_reg:x15; op2:x26; op2val:0xc2d3521cfb2b78bf
offset:302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000035, 0x00000000,0xfb2b78bf,0xc2d3521c,x15, 302*SIGALIGN, x16,x1, x14)

inst_162:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x42d and fm2 == 0x041041041040d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003f; valaddr_reg:x15; op2:x26; op2val:0xc2d041041041040d
offset:304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003f, 0x00000000,0x1041040d,0xc2d04104,x15, 304*SIGALIGN, x16,x1, x14)

inst_163:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x42e and fm2 == 0x2f684bda12f62 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000001b; valaddr_reg:x15; op2:x26; op2val:0xc2e2f684bda12f62
offset:306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001b, 0x00000000,0xbda12f62,0xc2e2f684,x15, 306*SIGALIGN, x16,x1, x14)

inst_164:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x42c and fm2 == 0x9ec8e951033cb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000004f; valaddr_reg:x15; op2:x26; op2val:0xc2c9ec8e951033cb
offset:308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004f, 0x00000000,0x951033cb,0xc2c9ec8e,x15, 308*SIGALIGN, x16,x1, x14)

inst_165:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x432 and fm2 == 0xfffffffffffde and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000001; valaddr_reg:x15; op2:x26; op2val:0xc32fffffffffffde
offset:310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000001, 0x00000000,0xffffffde,0xc32fffff,x15, 310*SIGALIGN, x16,x1, x14)

inst_166:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x430 and fm2 == 0xfffffffffffbe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000004; valaddr_reg:x15; op2:x26; op2val:0xc30fffffffffffbe
offset:312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000004, 0x00000000,0xffffffbe,0xc30fffff,x15, 312*SIGALIGN, x16,x1, x14)

inst_167:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x9999999999932 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000028; valaddr_reg:x15; op2:x26; op2val:0xc2d9999999999932
offset:314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000028, 0x00000000,0x99999932,0xc2d99999,x15, 314*SIGALIGN, x16,x1, x14)

inst_168:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000a and fs2 == 1 and fe2 == 0x42f and fm2 == 0x99999999998cb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000000a; valaddr_reg:x15; op2:x26; op2val:0xc2f99999999998cb
offset:316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000a, 0x00000000,0x999998cb,0xc2f99999,x15, 316*SIGALIGN, x16,x1, x14)

inst_169:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000061 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x51d07eae2f6c2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000061; valaddr_reg:x15; op2:x26; op2val:0xc2c51d07eae2f6c2
offset:318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000061, 0x00000000,0xeae2f6c2,0xc2c51d07,x15, 318*SIGALIGN, x16,x1, x14)

inst_170:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x42e and fm2 == 0x47ae147ae11ea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000019; valaddr_reg:x15; op2:x26; op2val:0xc2e47ae147ae11ea
offset:320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x00000000,0x47ae11ea,0xc2e47ae1,x15, 320*SIGALIGN, x16,x1, x14)

inst_171:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004a and fs2 == 1 and fe2 == 0x42c and fm2 == 0xbacf914c1b3e3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000004a; valaddr_reg:x15; op2:x26; op2val:0xc2cbacf914c1b3e3
offset:322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004a, 0x00000000,0x14c1b3e3,0xc2cbacf9,x15, 322*SIGALIGN, x16,x1, x14)

inst_172:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x4141414140a09 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000033; valaddr_reg:x15; op2:x26; op2val:0xc2d4141414140a09
offset:324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00000000,0x14140a09,0xc2d41414,x15, 324*SIGALIGN, x16,x1, x14)

inst_173:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003c and fs2 == 1 and fe2 == 0x42d and fm2 == 0x111111110ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003c; valaddr_reg:x15; op2:x26; op2val:0xc2d111111110ffff
offset:326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003c, 0x00000000,0x1110ffff,0xc2d11111,x15, 326*SIGALIGN, x16,x1, x14)

inst_174:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000061 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x51d07eae2cdda and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000061; valaddr_reg:x15; op2:x26; op2val:0xc2c51d07eae2cdda
offset:328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000061, 0x00000000,0xeae2cdda,0xc2c51d07,x15, 328*SIGALIGN, x16,x1, x14)

inst_175:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x414141413c3c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000033; valaddr_reg:x15; op2:x26; op2val:0xc2d414141413c3c3
offset:330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00000000,0x1413c3c3,0xc2d41414,x15, 330*SIGALIGN, x16,x1, x14)

inst_176:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 1 and fe2 == 0x42d and fm2 == 0xf07c1f07b26c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000021; valaddr_reg:x15; op2:x26; op2val:0xc2df07c1f07b26c8
offset:332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x00000000,0xf07b26c8,0xc2df07c1,x15, 332*SIGALIGN, x16,x1, x14)

inst_177:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x42e and fm2 == 0xffffffffdfffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000010; valaddr_reg:x15; op2:x26; op2val:0xc2effffffffdfffe
offset:334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000010, 0x00000000,0xfffdfffe,0xc2efffff,x15, 334*SIGALIGN, x16,x1, x14)

inst_178:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x42c and fm2 == 0x9ec8e950cf646 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000004f; valaddr_reg:x15; op2:x26; op2val:0xc2c9ec8e950cf646
offset:336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004f, 0x00000000,0x950cf646,0xc2c9ec8e,x15, 336*SIGALIGN, x16,x1, x14)

inst_179:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x8acb90f65c87a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000053; valaddr_reg:x15; op2:x26; op2val:0xc2c8acb90f65c87a
offset:338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000053, 0x00000000,0x0f65c87a,0xc2c8acb9,x15, 338*SIGALIGN, x16,x1, x14)

inst_180:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x42e and fm2 == 0x24924923fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000001c; valaddr_reg:x15; op2:x26; op2val:0xc2e24924923fffff
offset:340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x00000000,0x923fffff,0xc2e24924,x15, 340*SIGALIGN, x16,x1, x14)

inst_181:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x42f and fm2 == 0x249249236db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000000e; valaddr_reg:x15; op2:x26; op2val:0xc2f249249236db6d
offset:342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000e, 0x00000000,0x9236db6d,0xc2f24924,x15, 342*SIGALIGN, x16,x1, x14)

inst_182:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x9999999666665 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000050; valaddr_reg:x15; op2:x26; op2val:0xc2c9999999666665
offset:344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000050, 0x00000000,0x99666665,0xc2c99999,x15, 344*SIGALIGN, x16,x1, x14)

inst_183:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x42d and fm2 == 0x0c9714f79b474 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x000000000000003d; valaddr_reg:x15; op2:x26; op2val:0xc2d0c9714f79b474
offset:346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003d, 0x00000000,0x4f79b474,0xc2d0c971,x15, 346*SIGALIGN, x16,x1, x14)

inst_184:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff48 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000005d; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffff48
offset:348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x00100000,0xffffff48,0x3fefffff,x15, 348*SIGALIGN, x16,x1, x14)

inst_185:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff84 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000040; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffff84
offset:350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000040, 0x00100000,0xffffff84,0x3fefffff,x15, 350*SIGALIGN, x16,x1, x14)

inst_186:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffffac and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000002e; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffffac
offset:352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002e, 0x00100000,0xffffffac,0x3fefffff,x15, 352*SIGALIGN, x16,x1, x14)

inst_187:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffffea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000013; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffffea
offset:354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000013, 0x00100000,0xffffffea,0x3fefffff,x15, 354*SIGALIGN, x16,x1, x14)

inst_188:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffffda and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000023; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffffda
offset:356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000023, 0x00100000,0xffffffda,0x3fefffff,x15, 356*SIGALIGN, x16,x1, x14)

inst_189:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000044 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffffb8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000044; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffffb8
offset:358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000044, 0x00100000,0xffffffb8,0x3fefffff,x15, 358*SIGALIGN, x16,x1, x14)

inst_190:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffffc6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000005d; valaddr_reg:x15; op2:x26; op2val:0x3fefffffffffffc6
offset:360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x00100000,0xffffffc6,0x3fefffff,x15, 360*SIGALIGN, x16,x1, x14)

inst_191:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000036 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x000000000004a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000036; valaddr_reg:x15; op2:x26; op2val:0x3ff000000000004a
offset:362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000036, 0x00100000,0x0000004a,0x3ff00000,x15, 362*SIGALIGN, x16,x1, x14)

inst_192:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000000a8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000058; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000000a8
offset:364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x00100000,0x000000a8,0x3ff00000,x15, 364*SIGALIGN, x16,x1, x14)

inst_193:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000001cd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000033; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000001cd
offset:366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00100000,0x000001cd,0x3ff00000,x15, 366*SIGALIGN, x16,x1, x14)

inst_194:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000003eb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000015; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000003eb
offset:368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000015, 0x00100000,0x000003eb,0x3ff00000,x15, 368*SIGALIGN, x16,x1, x14)

inst_195:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000007b3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000004d; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000007b3
offset:370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004d, 0x00100000,0x000007b3,0x3ff00000,x15, 370*SIGALIGN, x16,x1, x14)

inst_196:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000000fb9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000047; valaddr_reg:x15; op2:x26; op2val:0x3ff0000000000fb9
offset:372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000047, 0x00100000,0x00000fb9,0x3ff00000,x15, 372*SIGALIGN, x16,x1, x14)

inst_197:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000001fa6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000005a; valaddr_reg:x15; op2:x26; op2val:0x3ff0000000001fa6
offset:374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005a, 0x00100000,0x00001fa6,0x3ff00000,x15, 374*SIGALIGN, x16,x1, x14)

inst_198:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000003fa6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000005a; valaddr_reg:x15; op2:x26; op2val:0x3ff0000000003fa6
offset:376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005a, 0x00100000,0x00003fa6,0x3ff00000,x15, 376*SIGALIGN, x16,x1, x14)

inst_199:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0000000007fb5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000004b; valaddr_reg:x15; op2:x26; op2val:0x3ff0000000007fb5
offset:378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004b, 0x00100000,0x00007fb5,0x3ff00000,x15, 378*SIGALIGN, x16,x1, x14)

inst_200:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x000000000ffb6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000004a; valaddr_reg:x15; op2:x26; op2val:0x3ff000000000ffb6
offset:380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004a, 0x00100000,0x0000ffb6,0x3ff00000,x15, 380*SIGALIGN, x16,x1, x14)

inst_201:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x000000001fff6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000000a; valaddr_reg:x15; op2:x26; op2val:0x3ff000000001fff6
offset:382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000a, 0x00100000,0x0001fff6,0x3ff00000,x15, 382*SIGALIGN, x16,x1, x14)

inst_202:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x000000003ffe9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000017; valaddr_reg:x15; op2:x26; op2val:0x3ff000000003ffe9
offset:384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x00100000,0x0003ffe9,0x3ff00000,x15, 384*SIGALIGN, x16,x1, x14)

inst_203:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x000000007ffed and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000013; valaddr_reg:x15; op2:x26; op2val:0x3ff000000007ffed
offset:386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000013, 0x00100000,0x0007ffed,0x3ff00000,x15, 386*SIGALIGN, x16,x1, x14)

inst_204:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000000ffff7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000009; valaddr_reg:x15; op2:x26; op2val:0x3ff00000000ffff7
offset:388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000009, 0x00100000,0x000ffff7,0x3ff00000,x15, 388*SIGALIGN, x16,x1, x14)

inst_205:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000001fffa8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000058; valaddr_reg:x15; op2:x26; op2val:0x3ff00000001fffa8
offset:390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000058, 0x00100000,0x001fffa8,0x3ff00000,x15, 390*SIGALIGN, x16,x1, x14)

inst_206:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x00000003ffffb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000005; valaddr_reg:x15; op2:x26; op2val:0x3ff00000003ffffb
offset:392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000005, 0x00100000,0x003ffffb,0x3ff00000,x15, 392*SIGALIGN, x16,x1, x14)

inst_207:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffffb6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000026; valaddr_reg:x15; op2:x26; op2val:0xbfefffffffffffb6
offset:394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000026, 0x00100000,0xffffffb6,0xbfefffff,x15, 394*SIGALIGN, x16,x1, x14)

inst_208:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffffc8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000001e; valaddr_reg:x15; op2:x26; op2val:0xbfefffffffffffc8
offset:396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001e, 0x00100000,0xffffffc8,0xbfefffff,x15, 396*SIGALIGN, x16,x1, x14)

inst_209:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffff5c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000056; valaddr_reg:x15; op2:x26; op2val:0xbfefffffffffff5c
offset:398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000056, 0x00100000,0xffffff5c,0xbfefffff,x15, 398*SIGALIGN, x16,x1, x14)

inst_210:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfffffffffffba and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000002b; valaddr_reg:x15; op2:x26; op2val:0xbfefffffffffffba
offset:400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002b, 0x00100000,0xffffffba,0xbfefffff,x15, 400*SIGALIGN, x16,x1, x14)

inst_211:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000017 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffffff2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000017; valaddr_reg:x15; op2:x26; op2val:0xbfeffffffffffff2
offset:402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x00100000,0xfffffff2,0xbfefffff,x15, 402*SIGALIGN, x16,x1, x14)

inst_212:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000025 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xffffffffffff6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000025; valaddr_reg:x15; op2:x26; op2val:0xbfeffffffffffff6
offset:404*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000025, 0x00100000,0xfffffff6,0xbfefffff,x15, 404*SIGALIGN, x16,x1, x14)

inst_213:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000000002c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000014; valaddr_reg:x15; op2:x26; op2val:0xbff000000000002c
offset:406*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000014, 0x00100000,0x0000002c,0xbff00000,x15, 406*SIGALIGN, x16,x1, x14)

inst_214:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000061 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000061; valaddr_reg:x15; op2:x26; op2val:0xbff000000000001f
offset:408*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000061, 0x00100000,0x0000001f,0xbff00000,x15, 408*SIGALIGN, x16,x1, x14)

inst_215:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000000f3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000000d; valaddr_reg:x15; op2:x26; op2val:0xbff00000000000f3
offset:410*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x00100000,0x000000f3,0xbff00000,x15, 410*SIGALIGN, x16,x1, x14)

inst_216:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000001bd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000043; valaddr_reg:x15; op2:x26; op2val:0xbff00000000001bd
offset:412*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000043, 0x00100000,0x000001bd,0xbff00000,x15, 412*SIGALIGN, x16,x1, x14)

inst_217:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000003a4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000005c; valaddr_reg:x15; op2:x26; op2val:0xbff00000000003a4
offset:414*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x00100000,0x000003a4,0xbff00000,x15, 414*SIGALIGN, x16,x1, x14)

inst_218:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000021 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000007df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000021; valaddr_reg:x15; op2:x26; op2val:0xbff00000000007df
offset:416*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x00100000,0x000007df,0xbff00000,x15, 416*SIGALIGN, x16,x1, x14)

inst_219:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000015 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000feb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000015; valaddr_reg:x15; op2:x26; op2val:0xbff0000000000feb
offset:418*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000015, 0x00100000,0x00000feb,0xbff00000,x15, 418*SIGALIGN, x16,x1, x14)

inst_220:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000001fa5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000005b; valaddr_reg:x15; op2:x26; op2val:0xbff0000000001fa5
offset:420*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x00100000,0x00001fa5,0xbff00000,x15, 420*SIGALIGN, x16,x1, x14)

inst_221:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000003fcc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000034; valaddr_reg:x15; op2:x26; op2val:0xbff0000000003fcc
offset:422*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000034, 0x00100000,0x00003fcc,0xbff00000,x15, 422*SIGALIGN, x16,x1, x14)

inst_222:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000062 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000007f9e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000062; valaddr_reg:x15; op2:x26; op2val:0xbff0000000007f9e
offset:424*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000062, 0x00100000,0x00007f9e,0xbff00000,x15, 424*SIGALIGN, x16,x1, x14)

inst_223:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000000ffa2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000005e; valaddr_reg:x15; op2:x26; op2val:0xbff000000000ffa2
offset:426*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x00100000,0x0000ffa2,0xbff00000,x15, 426*SIGALIGN, x16,x1, x14)

inst_224:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000001ffc4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000003c; valaddr_reg:x15; op2:x26; op2val:0xbff000000001ffc4
offset:428*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003c, 0x00100000,0x0001ffc4,0xbff00000,x15, 428*SIGALIGN, x16,x1, x14)

inst_225:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000003ffa3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000005d; valaddr_reg:x15; op2:x26; op2val:0xbff000000003ffa3
offset:430*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005d, 0x00100000,0x0003ffa3,0xbff00000,x15, 430*SIGALIGN, x16,x1, x14)

inst_226:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x000000007ffb3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000004d; valaddr_reg:x15; op2:x26; op2val:0xbff000000007ffb3
offset:432*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004d, 0x00100000,0x0007ffb3,0xbff00000,x15, 432*SIGALIGN, x16,x1, x14)

inst_227:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000000fffa1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x001000000000005f; valaddr_reg:x15; op2:x26; op2val:0xbff00000000fffa1
offset:434*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005f, 0x00100000,0x000fffa1,0xbff00000,x15, 434*SIGALIGN, x16,x1, x14)

inst_228:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000001fffcd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000033; valaddr_reg:x15; op2:x26; op2val:0xbff00000001fffcd
offset:436*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000033, 0x00100000,0x001fffcd,0xbff00000,x15, 436*SIGALIGN, x16,x1, x14)

inst_229:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000007 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x00000003ffff9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0010000000000007; valaddr_reg:x15; op2:x26; op2val:0xbff00000003ffff9
offset:438*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000007, 0x00100000,0x003ffff9,0xbff00000,x15, 438*SIGALIGN, x16,x1, x14)

inst_230:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000024 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffb6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000024; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffffb6
offset:440*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000024, 0x7fe00000,0xffffffb6,0x3fffffff,x15, 440*SIGALIGN, x16,x1, x14)

inst_231:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffffbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000021; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffffbb
offset:442*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000021, 0x7fe00000,0xffffffbb,0x3fffffff,x15, 442*SIGALIGN, x16,x1, x14)

inst_232:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffff3f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000005e; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffff3f
offset:444*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x7fe00000,0xffffff3f,0x3fffffff,x15, 444*SIGALIGN, x16,x1, x14)

inst_233:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffff41 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000005b; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffff41
offset:446*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005b, 0x7fe00000,0xffffff41,0x3fffffff,x15, 446*SIGALIGN, x16,x1, x14)

inst_234:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffff75 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000003d; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffff75
offset:448*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003d, 0x7fe00000,0xffffff75,0x3fffffff,x15, 448*SIGALIGN, x16,x1, x14)

inst_235:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffff51 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000047; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffff51
offset:450*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000047, 0x7fe00000,0xffffff51,0x3fffffff,x15, 450*SIGALIGN, x16,x1, x14)

inst_236:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffff07 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000005c; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffff07
offset:452*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x7fe00000,0xffffff07,0x3fffffff,x15, 452*SIGALIGN, x16,x1, x14)

inst_237:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffed5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000055; valaddr_reg:x15; op2:x26; op2val:0x3ffffffffffffed5
offset:454*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000055, 0x7fe00000,0xfffffed5,0x3fffffff,x15, 454*SIGALIGN, x16,x1, x14)

inst_238:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000062 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffe3b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000062; valaddr_reg:x15; op2:x26; op2val:0x3ffffffffffffe3b
offset:456*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000062, 0x7fe00000,0xfffffe3b,0x3fffffff,x15, 456*SIGALIGN, x16,x1, x14)

inst_239:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffdc5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000001d; valaddr_reg:x15; op2:x26; op2val:0x3ffffffffffffdc5
offset:458*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001d, 0x7fe00000,0xfffffdc5,0x3fffffff,x15, 458*SIGALIGN, x16,x1, x14)

inst_240:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffffb5f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000050; valaddr_reg:x15; op2:x26; op2val:0x3ffffffffffffb5f
offset:460*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000050, 0x7fe00000,0xfffffb5f,0x3fffffff,x15, 460*SIGALIGN, x16,x1, x14)

inst_241:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffff797 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000034; valaddr_reg:x15; op2:x26; op2val:0x3ffffffffffff797
offset:462*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000034, 0x7fe00000,0xfffff797,0x3fffffff,x15, 462*SIGALIGN, x16,x1, x14)

inst_242:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffef9d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000031; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffef9d
offset:464*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000031, 0x7fe00000,0xffffef9d,0x3fffffff,x15, 464*SIGALIGN, x16,x1, x14)

inst_243:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffdffb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000002; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffdffb
offset:466*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x7fe00000,0xffffdffb,0x3fffffff,x15, 466*SIGALIGN, x16,x1, x14)

inst_244:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffffbf87 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000003c; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffffbf87
offset:468*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003c, 0x7fe00000,0xffffbf87,0x3fffffff,x15, 468*SIGALIGN, x16,x1, x14)

inst_245:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffff7f47 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000005c; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffff7f47
offset:470*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x7fe00000,0xffff7f47,0x3fffffff,x15, 470*SIGALIGN, x16,x1, x14)

inst_246:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffeff57 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000054; valaddr_reg:x15; op2:x26; op2val:0x3ffffffffffeff57
offset:472*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000054, 0x7fe00000,0xfffeff57,0x3fffffff,x15, 472*SIGALIGN, x16,x1, x14)

inst_247:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffdffe5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000000d; valaddr_reg:x15; op2:x26; op2val:0x3ffffffffffdffe5
offset:474*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000000d, 0x7fe00000,0xfffdffe5,0x3fffffff,x15, 474*SIGALIGN, x16,x1, x14)

inst_248:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffffbff97 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000034; valaddr_reg:x15; op2:x26; op2val:0x3ffffffffffbff97
offset:476*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000034, 0x7fe00000,0xfffbff97,0x3fffffff,x15, 476*SIGALIGN, x16,x1, x14)

inst_249:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xffffffff7ff43 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000005e; valaddr_reg:x15; op2:x26; op2val:0x3ffffffffff7ff43
offset:478*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005e, 0x7fe00000,0xfff7ff43,0x3fffffff,x15, 478*SIGALIGN, x16,x1, x14)

inst_250:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffefff63 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000004e; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffefff63
offset:480*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004e, 0x7fe00000,0xffefff63,0x3fffffff,x15, 480*SIGALIGN, x16,x1, x14)

inst_251:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffdfffc7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000001c; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffdfffc7
offset:482*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000001c, 0x7fe00000,0xffdfffc7,0x3fffffff,x15, 482*SIGALIGN, x16,x1, x14)

inst_252:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000032 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfffffffbfff9b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000032; valaddr_reg:x15; op2:x26; op2val:0x3fffffffffbfff9b
offset:484*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000032, 0x7fe00000,0xffbfff9b,0x3fffffff,x15, 484*SIGALIGN, x16,x1, x14)

inst_253:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff38 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000063; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffff38
offset:486*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000063, 0x7fe00000,0xffffff38,0xbfffffff,x15, 486*SIGALIGN, x16,x1, x14)

inst_254:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffb5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000024; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffffb5
offset:488*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000024, 0x7fe00000,0xffffffb5,0xbfffffff,x15, 488*SIGALIGN, x16,x1, x14)

inst_255:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff63 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000004c; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffff63
offset:490*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004c, 0x7fe00000,0xffffff63,0xbfffffff,x15, 490*SIGALIGN, x16,x1, x14)

inst_256:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffc5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000019; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffffc5
offset:492*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000019, 0x7fe00000,0xffffffc5,0xbfffffff,x15, 492*SIGALIGN, x16,x1, x14)

inst_257:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff51 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000004f; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffff51
offset:494*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004f, 0x7fe00000,0xffffff51,0xbfffffff,x15, 494*SIGALIGN, x16,x1, x14)

inst_258:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffdb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000002; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffffdb
offset:496*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000002, 0x7fe00000,0xffffffdb,0xbfffffff,x15, 496*SIGALIGN, x16,x1, x14)

inst_259:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff11 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000057; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffff11
offset:498*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x7fe00000,0xffffff11,0xbfffffff,x15, 498*SIGALIGN, x16,x1, x14)

inst_260:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff03 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000003e; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffff03
offset:500*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003e, 0x7fe00000,0xffffff03,0xbfffffff,x15, 500*SIGALIGN, x16,x1, x14)

inst_261:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffffffe7b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000042; valaddr_reg:x15; op2:x26; op2val:0xbffffffffffffe7b
offset:502*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000042, 0x7fe00000,0xfffffe7b,0xbfffffff,x15, 502*SIGALIGN, x16,x1, x14)

inst_262:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000017 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffffffdd1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000017; valaddr_reg:x15; op2:x26; op2val:0xbffffffffffffdd1
offset:504*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000017, 0x7fe00000,0xfffffdd1,0xbfffffff,x15, 504*SIGALIGN, x16,x1, x14)

inst_263:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffffffb47 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000005c; valaddr_reg:x15; op2:x26; op2val:0xbffffffffffffb47
offset:506*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000005c, 0x7fe00000,0xfffffb47,0xbfffffff,x15, 506*SIGALIGN, x16,x1, x14)

inst_264:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000062 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffffff73b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000062; valaddr_reg:x15; op2:x26; op2val:0xbffffffffffff73b
offset:508*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000062, 0x7fe00000,0xfffff73b,0xbfffffff,x15, 508*SIGALIGN, x16,x1, x14)

inst_265:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffefa5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000002d; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffefa5
offset:510*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002d, 0x7fe00000,0xffffefa5,0xbfffffff,x15, 510*SIGALIGN, x16,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_266:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffdf81 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000003f; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffdf81
offset:512*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003f, 0x7fe00000,0xffffdf81,0xbfffffff,x15, 0*SIGALIGN, x16,x1, x14)

inst_267:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffbf53 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000056; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffffbf53
offset:514*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000056, 0x7fe00000,0xffffbf53,0xbfffffff,x15, 2*SIGALIGN, x16,x1, x14)

inst_268:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffff7fed and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000009; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffff7fed
offset:516*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000009, 0x7fe00000,0xffff7fed,0xbfffffff,x15, 4*SIGALIGN, x16,x1, x14)

inst_269:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffffeff67 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000004c; valaddr_reg:x15; op2:x26; op2val:0xbffffffffffeff67
offset:518*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004c, 0x7fe00000,0xfffeff67,0xbfffffff,x15, 6*SIGALIGN, x16,x1, x14)

inst_270:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffffdff51 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000057; valaddr_reg:x15; op2:x26; op2val:0xbffffffffffdff51
offset:520*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000057, 0x7fe00000,0xfffdff51,0xbfffffff,x15, 8*SIGALIGN, x16,x1, x14)

inst_271:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffffbff89 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000003b; valaddr_reg:x15; op2:x26; op2val:0xbffffffffffbff89
offset:522*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000003b, 0x7fe00000,0xfffbff89,0xbfffffff,x15, 10*SIGALIGN, x16,x1, x14)

inst_272:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffff7ff7d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000041; valaddr_reg:x15; op2:x26; op2val:0xbffffffffff7ff7d
offset:524*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000041, 0x7fe00000,0xfff7ff7d,0xbfffffff,x15, 12*SIGALIGN, x16,x1, x14)

inst_273:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffeffff7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0000000000004; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffeffff7
offset:526*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000004, 0x7fe00000,0xffeffff7,0xbfffffff,x15, 14*SIGALIGN, x16,x1, x14)

inst_274:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffdfff61 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000004f; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffdfff61
offset:528*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000004f, 0x7fe00000,0xffdfff61,0xbfffffff,x15, 16*SIGALIGN, x16,x1, x14)

inst_275:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffbfffa5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe000000000002d; valaddr_reg:x15; op2:x26; op2val:0xbfffffffffbfffa5
offset:530*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0000002d, 0x7fe00000,0xffbfffa5,0xbfffffff,x15, 18*SIGALIGN, x16,x1, x14)

inst_276:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x745d1745d1746 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000016; valaddr_reg:x15; op2:x26; op2val:0x3fc745d1745d1746
offset:532*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000016, 0x00000000,0x745d1746,0x3fc745d1,x15, 20*SIGALIGN, x16,x1, x14)

inst_277:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x7d05f417d05f4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x0000000000000056; valaddr_reg:x15; op2:x26; op2val:0x3fb7d05f417d05f4
offset:534*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x00000056, 0x00000000,0x417d05f4,0x3fb7d05f,x15, 22*SIGALIGN, x16,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x00000008,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0x745d1746,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0xf07c1f08,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0x92492492,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x9999999a,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x745d1746,64,FLEN)
NAN_BOXED(0x00000038,64,FLEN)
NAN_BOXED(0x92492492,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x14141414,64,FLEN)
test_dataset_1:
NAN_BOXED(0x00000042,64,FLEN)
NAN_BOXED(0xf07c1f08,64,FLEN)
NAN_BOXED(0x00000046,64,FLEN)
NAN_BOXED(0x1d41d41d,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0x1f81f820,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x9999999a,64,FLEN)
NAN_BOXED(0x0000002f,64,FLEN)
NAN_BOXED(0x2b931057,64,FLEN)
NAN_BOXED(0x00000029,64,FLEN)
NAN_BOXED(0x8f9c18fa,64,FLEN)
NAN_BOXED(0x00000037,64,FLEN)
NAN_BOXED(0x29e4129e,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x745d1746,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x590b2164,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x11111111,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x590b2164,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x590b2164,64,FLEN)
NAN_BOXED(0x00000042,64,FLEN)
NAN_BOXED(0xf07c1f08,64,FLEN)
NAN_BOXED(0x0000002f,64,FLEN)
NAN_BOXED(0x2b931057,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0x8178a4c8,64,FLEN)
NAN_BOXED(0x00000018,64,FLEN)
NAN_BOXED(0x55555555,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0xbda12f68,64,FLEN)
NAN_BOXED(0x00000044,64,FLEN)
NAN_BOXED(0x1e1e1e1e,64,FLEN)
NAN_BOXED(0x0000002f,64,FLEN)
NAN_BOXED(0x2b931057,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0x590b2164,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x611a7b96,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0xeae2f815,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0x590b2164,64,FLEN)
NAN_BOXED(0x0000003c,64,FLEN)
NAN_BOXED(0x11111111,64,FLEN)
NAN_BOXED(0x00000044,64,FLEN)
NAN_BOXED(0x1e1e1e1e,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0x10410410,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000042,64,FLEN)
NAN_BOXED(0xf07c1f08,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x18181818,64,FLEN)
NAN_BOXED(0x0000003c,64,FLEN)
NAN_BOXED(0x11111111,64,FLEN)
NAN_BOXED(0x00000049,64,FLEN)
NAN_BOXED(0x0381c0e0,64,FLEN)
NAN_BOXED(0x00000048,64,FLEN)
NAN_BOXED(0x1c71c71c,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0x5f75270d,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0x18181818,64,FLEN)
NAN_BOXED(0x0000002a,64,FLEN)
NAN_BOXED(0x18618618,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x745d1746,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0xffffffbc,64,FLEN)
NAN_BOXED(0x0000003e,64,FLEN)
NAN_BOXED(0xffffff88,64,FLEN)
NAN_BOXED(0x00000027,64,FLEN)
NAN_BOXED(0xffffffba,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0xffffff8e,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0xffffff9a,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0xffffff98,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0xffffffe8,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0x000000e5,64,FLEN)
NAN_BOXED(0x00000042,64,FLEN)
NAN_BOXED(0x000001be,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x000003a8,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0x000007f6,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0x00000fa3,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0x00001fe7,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x00003ff2,64,FLEN)
NAN_BOXED(0x0000004a,64,FLEN)
NAN_BOXED(0x00007fb6,64,FLEN)
NAN_BOXED(0x00000007,64,FLEN)
NAN_BOXED(0x0000fff9,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0x0001ffb4,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x0003ffa8,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0x0007ff9f,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x000fffee,64,FLEN)
NAN_BOXED(0x00000020,64,FLEN)
NAN_BOXED(0x001fffe0,64,FLEN)
NAN_BOXED(0x00000008,64,FLEN)
NAN_BOXED(0x003ffff8,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0xffffff4a,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0xfffffffa,64,FLEN)
NAN_BOXED(0x0000002f,64,FLEN)
NAN_BOXED(0xffffffaa,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0xffffffe2,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0xffffff72,64,FLEN)
NAN_BOXED(0x0000000b,64,FLEN)
NAN_BOXED(0x00000015,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0x00000037,64,FLEN)
NAN_BOXED(0x00000006,64,FLEN)
NAN_BOXED(0x0000007a,64,FLEN)
NAN_BOXED(0x00000003,64,FLEN)
NAN_BOXED(0x000000fd,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x000001df,64,FLEN)
NAN_BOXED(0x00000015,64,FLEN)
NAN_BOXED(0x000003eb,64,FLEN)
NAN_BOXED(0x00000018,64,FLEN)
NAN_BOXED(0x000007e8,64,FLEN)
NAN_BOXED(0x00000059,64,FLEN)
NAN_BOXED(0x00000fa7,64,FLEN)
NAN_BOXED(0x00000032,64,FLEN)
NAN_BOXED(0x00001fce,64,FLEN)
NAN_BOXED(0x00000006,64,FLEN)
NAN_BOXED(0x00003ffa,64,FLEN)
NAN_BOXED(0x00000014,64,FLEN)
NAN_BOXED(0x00007fec,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x0000ffff,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0x0001ffb1,64,FLEN)
NAN_BOXED(0x00000060,64,FLEN)
NAN_BOXED(0x0003ffa0,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0x0007fff1,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0x000fffd4,64,FLEN)
NAN_BOXED(0x00000004,64,FLEN)
NAN_BOXED(0x001ffffc,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x003fffc6,64,FLEN)
NAN_BOXED(0x00000063,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000005f,64,FLEN)
NAN_BOXED(0xa46102b2,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0xd2d2d2d3,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0x76276276,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0x97e97e98,64,FLEN)
NAN_BOXED(0x0000003d,64,FLEN)
NAN_BOXED(0xda3ac10d,64,FLEN)
NAN_BOXED(0x0000000c,64,FLEN)
NAN_BOXED(0xaaaaaaab,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x1745d174,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0xb6db6db7,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x3dcb08d4,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0xf85bb395,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x96969697,64,FLEN)
NAN_BOXED(0x00000042,64,FLEN)
NAN_BOXED(0x6c9b26ca,64,FLEN)
NAN_BOXED(0x00000013,64,FLEN)
NAN_BOXED(0x50d79436,64,FLEN)
NAN_BOXED(0x00000022,64,FLEN)
NAN_BOXED(0x96969697,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0x9d89d89e,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0x79e79e7a,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0x77777777,64,FLEN)
NAN_BOXED(0x00000012,64,FLEN)
NAN_BOXED(0x38e38e39,64,FLEN)
NAN_BOXED(0x00000008,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x33333333,64,FLEN)
NAN_BOXED(0x00000015,64,FLEN)
NAN_BOXED(0xdb6db6db,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x62762762,64,FLEN)
NAN_BOXED(0x00000052,64,FLEN)
NAN_BOXED(0x00008000,64,FLEN)
NAN_BOXED(0x00000042,64,FLEN)
NAN_BOXED(0x745d1746,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x33333333,64,FLEN)
NAN_BOXED(0x00000039,64,FLEN)
NAN_BOXED(0xc59d3167,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0xd79435e5,64,FLEN)
NAN_BOXED(0x00000050,64,FLEN)
NAN_BOXED(0xcccccccd,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0x7e97e97f,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0xd1745d17,64,FLEN)
NAN_BOXED(0x00000037,64,FLEN)
NAN_BOXED(0xba2e8ba3,64,FLEN)
NAN_BOXED(0x00000044,64,FLEN)
NAN_BOXED(0xe1e1e1e2,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x66666666,64,FLEN)
NAN_BOXED(0x00000035,64,FLEN)
NAN_BOXED(0x439f656f,64,FLEN)
NAN_BOXED(0x0000000f,64,FLEN)
NAN_BOXED(0x33333333,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0x65d9765e,64,FLEN)
NAN_BOXED(0x0000001f,64,FLEN)
NAN_BOXED(0x4a5294a5,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x00000018,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0x22222222,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0x24924925,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0x26357e17,64,FLEN)
NAN_BOXED(0x0000003c,64,FLEN)
NAN_BOXED(0x1111110f,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x99999995,64,FLEN)
NAN_BOXED(0x00000053,64,FLEN)
NAN_BOXED(0x0f6bf3a2,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0x92492488,64,FLEN)
NAN_BOXED(0x00000062,64,FLEN)
NAN_BOXED(0xa72f0523,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0x2b93102a,64,FLEN)
NAN_BOXED(0x00000037,64,FLEN)
NAN_BOXED(0x29e41253,64,FLEN)
NAN_BOXED(0x00000003,64,FLEN)
NAN_BOXED(0x555554a9,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0xbca1ad78,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0xbda12d08,64,FLEN)
NAN_BOXED(0x0000004b,64,FLEN)
NAN_BOXED(0xb4e81479,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x13b1313a,64,FLEN)
NAN_BOXED(0x0000003e,64,FLEN)
NAN_BOXED(0x0841ffff,64,FLEN)
NAN_BOXED(0x00000003,64,FLEN)
NAN_BOXED(0x55552aa9,64,FLEN)
NAN_BOXED(0x00000010,64,FLEN)
NAN_BOXED(0xffff7ffe,64,FLEN)
NAN_BOXED(0x0000002f,64,FLEN)
NAN_BOXED(0x2b92620a,64,FLEN)
NAN_BOXED(0x00000059,64,FLEN)
NAN_BOXED(0x5c0a1141,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x99966665,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x745745d0,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x13a76275,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x997ffffe,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0x8149902e,64,FLEN)
NAN_BOXED(0x0000003a,64,FLEN)
NAN_BOXED(0x60d3dcaf,64,FLEN)
NAN_BOXED(0x00000035,64,FLEN)
NAN_BOXED(0xfb2b78bf,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0x1041040d,64,FLEN)
NAN_BOXED(0x0000001b,64,FLEN)
NAN_BOXED(0xbda12f62,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0x951033cb,64,FLEN)
NAN_BOXED(0x00000001,64,FLEN)
NAN_BOXED(0xffffffde,64,FLEN)
NAN_BOXED(0x00000004,64,FLEN)
NAN_BOXED(0xffffffbe,64,FLEN)
NAN_BOXED(0x00000028,64,FLEN)
NAN_BOXED(0x99999932,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0x999998cb,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0xeae2f6c2,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0x47ae11ea,64,FLEN)
NAN_BOXED(0x0000004a,64,FLEN)
NAN_BOXED(0x14c1b3e3,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x14140a09,64,FLEN)
NAN_BOXED(0x0000003c,64,FLEN)
NAN_BOXED(0x1110ffff,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0xeae2cdda,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x1413c3c3,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0xf07b26c8,64,FLEN)
NAN_BOXED(0x00000010,64,FLEN)
NAN_BOXED(0xfffdfffe,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0x950cf646,64,FLEN)
NAN_BOXED(0x00000053,64,FLEN)
NAN_BOXED(0x0f65c87a,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0x923fffff,64,FLEN)
NAN_BOXED(0x0000000e,64,FLEN)
NAN_BOXED(0x9236db6d,64,FLEN)
NAN_BOXED(0x00000050,64,FLEN)
NAN_BOXED(0x99666665,64,FLEN)
NAN_BOXED(0x0000003d,64,FLEN)
NAN_BOXED(0x4f79b474,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0xffffff48,64,FLEN)
NAN_BOXED(0x00000040,64,FLEN)
NAN_BOXED(0xffffff84,64,FLEN)
NAN_BOXED(0x0000002e,64,FLEN)
NAN_BOXED(0xffffffac,64,FLEN)
NAN_BOXED(0x00000013,64,FLEN)
NAN_BOXED(0xffffffea,64,FLEN)
NAN_BOXED(0x00000023,64,FLEN)
NAN_BOXED(0xffffffda,64,FLEN)
NAN_BOXED(0x00000044,64,FLEN)
NAN_BOXED(0xffffffb8,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0xffffffc6,64,FLEN)
NAN_BOXED(0x00000036,64,FLEN)
NAN_BOXED(0x0000004a,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x000000a8,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x000001cd,64,FLEN)
NAN_BOXED(0x00000015,64,FLEN)
NAN_BOXED(0x000003eb,64,FLEN)
NAN_BOXED(0x0000004d,64,FLEN)
NAN_BOXED(0x000007b3,64,FLEN)
NAN_BOXED(0x00000047,64,FLEN)
NAN_BOXED(0x00000fb9,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0x00001fa6,64,FLEN)
NAN_BOXED(0x0000005a,64,FLEN)
NAN_BOXED(0x00003fa6,64,FLEN)
NAN_BOXED(0x0000004b,64,FLEN)
NAN_BOXED(0x00007fb5,64,FLEN)
NAN_BOXED(0x0000004a,64,FLEN)
NAN_BOXED(0x0000ffb6,64,FLEN)
NAN_BOXED(0x0000000a,64,FLEN)
NAN_BOXED(0x0001fff6,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0x0003ffe9,64,FLEN)
NAN_BOXED(0x00000013,64,FLEN)
NAN_BOXED(0x0007ffed,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0x000ffff7,64,FLEN)
NAN_BOXED(0x00000058,64,FLEN)
NAN_BOXED(0x001fffa8,64,FLEN)
NAN_BOXED(0x00000005,64,FLEN)
NAN_BOXED(0x003ffffb,64,FLEN)
NAN_BOXED(0x00000026,64,FLEN)
NAN_BOXED(0xffffffb6,64,FLEN)
NAN_BOXED(0x0000001e,64,FLEN)
NAN_BOXED(0xffffffc8,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0xffffff5c,64,FLEN)
NAN_BOXED(0x0000002b,64,FLEN)
NAN_BOXED(0xffffffba,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0xfffffff2,64,FLEN)
NAN_BOXED(0x00000025,64,FLEN)
NAN_BOXED(0xfffffff6,64,FLEN)
NAN_BOXED(0x00000014,64,FLEN)
NAN_BOXED(0x0000002c,64,FLEN)
NAN_BOXED(0x00000061,64,FLEN)
NAN_BOXED(0x0000001f,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0x000000f3,64,FLEN)
NAN_BOXED(0x00000043,64,FLEN)
NAN_BOXED(0x000001bd,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0x000003a4,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0x000007df,64,FLEN)
NAN_BOXED(0x00000015,64,FLEN)
NAN_BOXED(0x00000feb,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0x00001fa5,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0x00003fcc,64,FLEN)
NAN_BOXED(0x00000062,64,FLEN)
NAN_BOXED(0x00007f9e,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0x0000ffa2,64,FLEN)
NAN_BOXED(0x0000003c,64,FLEN)
NAN_BOXED(0x0001ffc4,64,FLEN)
NAN_BOXED(0x0000005d,64,FLEN)
NAN_BOXED(0x0003ffa3,64,FLEN)
NAN_BOXED(0x0000004d,64,FLEN)
NAN_BOXED(0x0007ffb3,64,FLEN)
NAN_BOXED(0x0000005f,64,FLEN)
NAN_BOXED(0x000fffa1,64,FLEN)
NAN_BOXED(0x00000033,64,FLEN)
NAN_BOXED(0x001fffcd,64,FLEN)
NAN_BOXED(0x00000007,64,FLEN)
NAN_BOXED(0x003ffff9,64,FLEN)
NAN_BOXED(0x00000024,64,FLEN)
NAN_BOXED(0xffffffb6,64,FLEN)
NAN_BOXED(0x00000021,64,FLEN)
NAN_BOXED(0xffffffbb,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0xffffff3f,64,FLEN)
NAN_BOXED(0x0000005b,64,FLEN)
NAN_BOXED(0xffffff41,64,FLEN)
NAN_BOXED(0x0000003d,64,FLEN)
NAN_BOXED(0xffffff75,64,FLEN)
NAN_BOXED(0x00000047,64,FLEN)
NAN_BOXED(0xffffff51,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0xffffff07,64,FLEN)
NAN_BOXED(0x00000055,64,FLEN)
NAN_BOXED(0xfffffed5,64,FLEN)
NAN_BOXED(0x00000062,64,FLEN)
NAN_BOXED(0xfffffe3b,64,FLEN)
NAN_BOXED(0x0000001d,64,FLEN)
NAN_BOXED(0xfffffdc5,64,FLEN)
NAN_BOXED(0x00000050,64,FLEN)
NAN_BOXED(0xfffffb5f,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0xfffff797,64,FLEN)
NAN_BOXED(0x00000031,64,FLEN)
NAN_BOXED(0xffffef9d,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffdffb,64,FLEN)
NAN_BOXED(0x0000003c,64,FLEN)
NAN_BOXED(0xffffbf87,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0xffff7f47,64,FLEN)
NAN_BOXED(0x00000054,64,FLEN)
NAN_BOXED(0xfffeff57,64,FLEN)
NAN_BOXED(0x0000000d,64,FLEN)
NAN_BOXED(0xfffdffe5,64,FLEN)
NAN_BOXED(0x00000034,64,FLEN)
NAN_BOXED(0xfffbff97,64,FLEN)
NAN_BOXED(0x0000005e,64,FLEN)
NAN_BOXED(0xfff7ff43,64,FLEN)
NAN_BOXED(0x0000004e,64,FLEN)
NAN_BOXED(0xffefff63,64,FLEN)
NAN_BOXED(0x0000001c,64,FLEN)
NAN_BOXED(0xffdfffc7,64,FLEN)
NAN_BOXED(0x00000032,64,FLEN)
NAN_BOXED(0xffbfff9b,64,FLEN)
NAN_BOXED(0x00000063,64,FLEN)
NAN_BOXED(0xffffff38,64,FLEN)
NAN_BOXED(0x00000024,64,FLEN)
NAN_BOXED(0xffffffb5,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0xffffff63,64,FLEN)
NAN_BOXED(0x00000019,64,FLEN)
NAN_BOXED(0xffffffc5,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0xffffff51,64,FLEN)
NAN_BOXED(0x00000002,64,FLEN)
NAN_BOXED(0xffffffdb,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0xffffff11,64,FLEN)
NAN_BOXED(0x0000003e,64,FLEN)
NAN_BOXED(0xffffff03,64,FLEN)
NAN_BOXED(0x00000042,64,FLEN)
NAN_BOXED(0xfffffe7b,64,FLEN)
NAN_BOXED(0x00000017,64,FLEN)
NAN_BOXED(0xfffffdd1,64,FLEN)
NAN_BOXED(0x0000005c,64,FLEN)
NAN_BOXED(0xfffffb47,64,FLEN)
NAN_BOXED(0x00000062,64,FLEN)
NAN_BOXED(0xfffff73b,64,FLEN)
NAN_BOXED(0x0000002d,64,FLEN)
NAN_BOXED(0xffffefa5,64,FLEN)
NAN_BOXED(0x0000003f,64,FLEN)
NAN_BOXED(0xffffdf81,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0xffffbf53,64,FLEN)
NAN_BOXED(0x00000009,64,FLEN)
NAN_BOXED(0xffff7fed,64,FLEN)
NAN_BOXED(0x0000004c,64,FLEN)
NAN_BOXED(0xfffeff67,64,FLEN)
NAN_BOXED(0x00000057,64,FLEN)
NAN_BOXED(0xfffdff51,64,FLEN)
NAN_BOXED(0x0000003b,64,FLEN)
NAN_BOXED(0xfffbff89,64,FLEN)
NAN_BOXED(0x00000041,64,FLEN)
NAN_BOXED(0xfff7ff7d,64,FLEN)
NAN_BOXED(0x00000004,64,FLEN)
NAN_BOXED(0xffeffff7,64,FLEN)
NAN_BOXED(0x0000004f,64,FLEN)
NAN_BOXED(0xffdfff61,64,FLEN)
NAN_BOXED(0x0000002d,64,FLEN)
NAN_BOXED(0xffbfffa5,64,FLEN)
NAN_BOXED(0x00000016,64,FLEN)
NAN_BOXED(0x745d1746,64,FLEN)
NAN_BOXED(0x00000056,64,FLEN)
NAN_BOXED(0x417d05f4,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 20*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 24*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
