
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Aug 28 04:33:02 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fcvt.w.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fcvt.w.d instruction of the RISC-V RV32_Zfinx_Zdinx,RV64_Zfinx_Zdinx extension for the fcvt.w.d_b22 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx,RV64I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fcvt.w.d_b22)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1==x28, rd==x30,fs1 == 0 and fe1 == 0x3fc and fm1 == 0x08577924770d3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x3fc08577924770d3; valaddr_reg:x3;
offset:0*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x924770d3, 0x3fc08577,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1==x30, rd==x28,fs1 == 0 and fe1 == 0x3fd and fm1 == 0x93fdc7b89296c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x30; dest:x28; op1val:0x3fd93fdc7b89296c; valaddr_reg:x3;
offset:1*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x28, x29, x30, x31,0, 0, 0, 0x7b89296c, 0x3fd93fdc,x3, 1*SIGALIGN, x4,x1, x2)

inst_2:// rs1==x24, rd==x26,fs1 == 1 and fe1 == 0x3fe and fm1 == 0x766ba34c2da80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x24; dest:x26; op1val:0xbfe766ba34c2da80; valaddr_reg:x3;
offset:2*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x26, x27, x24, x25,0, 0, 0, 0x34c2da80, 0xbfe766ba,x3, 2*SIGALIGN, x4,x1, x2)

inst_3:// rs1==x26, rd==x24,fs1 == 0 and fe1 == 0x3ff and fm1 == 0xd2d6b7dc59a3a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x26; dest:x24; op1val:0x3ffd2d6b7dc59a3a; valaddr_reg:x3;
offset:3*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x24, x25, x26, x27,0, 0, 0, 0x7dc59a3a, 0x3ffd2d6b,x3, 3*SIGALIGN, x4,x1, x2)

inst_4:// rs1==x20, rd==x22,fs1 == 0 and fe1 == 0x400 and fm1 == 0xcf84ba749f9c5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x20; dest:x22; op1val:0x400cf84ba749f9c5; valaddr_reg:x3;
offset:4*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x22, x23, x20, x21,0, 0, 0, 0xa749f9c5, 0x400cf84b,x3, 4*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rd==x20,fs1 == 0 and fe1 == 0x401 and fm1 == 0x854a908ceac39 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x22; dest:x20; op1val:0x401854a908ceac39; valaddr_reg:x3;
offset:5*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x20, x21, x22, x23,0, 0, 0, 0x08ceac39, 0x401854a9,x3, 5*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rd==x18,fs1 == 0 and fe1 == 0x402 and fm1 == 0x137a953e8eb43 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x16; dest:x18; op1val:0x402137a953e8eb43; valaddr_reg:x3;
offset:6*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x18, x19, x16, x17,0, 0, 0, 0x53e8eb43, 0x402137a9,x3, 6*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rd==x16,fs1 == 1 and fe1 == 0x403 and fm1 == 0xf3ebcf3d06f86 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x18; dest:x16; op1val:0xc03f3ebcf3d06f86; valaddr_reg:x3;
offset:7*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x16, x17, x18, x19,0, 0, 0, 0xf3d06f86, 0xc03f3ebc,x3, 7*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rd==x14,fs1 == 0 and fe1 == 0x404 and fm1 == 0x5c74eff1e5bef and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x12; dest:x14; op1val:0x4045c74eff1e5bef; valaddr_reg:x3;
offset:8*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x14, x15, x12, x13,0, 0, 0, 0xff1e5bef, 0x4045c74e,x3, 8*SIGALIGN, x4,x1, x2)

inst_9:// rs1==x14, rd==x12,fs1 == 0 and fe1 == 0x405 and fm1 == 0xdc3386b9f15c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x14; dest:x12; op1val:0x405dc3386b9f15c4; valaddr_reg:x3;
offset:9*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x12, x13, x14, x15,0, 0, 0, 0x6b9f15c4, 0x405dc338,x3, 9*SIGALIGN, x4,x1, x2)

inst_10:// rs1==x8, rd==x10,fs1 == 0 and fe1 == 0x406 and fm1 == 0x5ae6a9a6ab329 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x8; dest:x10; op1val:0x4065ae6a9a6ab329; valaddr_reg:x3;
offset:10*4; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x10, x11, x8, x9,0, 0, 0, 0x9a6ab329, 0x4065ae6a,x3, 10*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x13,test_dataset_1)

inst_11:// rs1==x10, rd==x8,fs1 == 1 and fe1 == 0x407 and fm1 == 0x489b36bd7f503 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x10; dest:x8; op1val:0xc07489b36bd7f503; valaddr_reg:x13;
offset:0*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x8, x9, x10, x11,0, 0, 0, 0x6bd7f503, 0xc07489b3,x13, 11*SIGALIGN, x14,x1, x12)

inst_12:// rs1==x4, rd==x6,fs1 == 0 and fe1 == 0x408 and fm1 == 0x43277acca7f0d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x4; dest:x6; op1val:0x40843277acca7f0d; valaddr_reg:x13;
offset:1*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x6, x7, x4, x5,0, 0, 0, 0xacca7f0d, 0x40843277,x13, 12*SIGALIGN, x14,x1, x12)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_13:// rs1==x6, rd==x4,fs1 == 0 and fe1 == 0x409 and fm1 == 0xaf9492cb7362c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x6; dest:x4; op1val:0x409af9492cb7362c; valaddr_reg:x13;
offset:2*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x4, x5, x6, x7,0, 0, 0, 0x2cb7362c, 0x409af949,x13, 0*SIGALIGN, x14,x1, x12)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x40a and fm1 == 0x5cd28a96ec2b3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x2; dest:x30; op1val:0x40a5cd28a96ec2b3; valaddr_reg:x13;
offset:3*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x2, x3,0, 0, 0, 0xa96ec2b3, 0x40a5cd28,x13, 1*SIGALIGN, x14,x1, x12)

inst_15:// rd==x2,fs1 == 1 and fe1 == 0x40b and fm1 == 0xc491074f942cb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x30; dest:x2; op1val:0xc0bc491074f942cb; valaddr_reg:x13;
offset:4*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x2, x3, x30, x31,0, 0, 0, 0x74f942cb, 0xc0bc4910,x13, 2*SIGALIGN, x14,x1, x12)

inst_16:// fs1 == 1 and fe1 == 0x40c and fm1 == 0x3d480fb7f6f5d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0xc0c3d480fb7f6f5d; valaddr_reg:x13;
offset:5*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xfb7f6f5d, 0xc0c3d480,x13, 3*SIGALIGN, x14,x1, x12)

inst_17:// fs1 == 0 and fe1 == 0x40d and fm1 == 0x9d02f708cc1b6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x40d9d02f708cc1b6; valaddr_reg:x13;
offset:6*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x708cc1b6, 0x40d9d02f,x13, 4*SIGALIGN, x14,x1, x12)

inst_18:// fs1 == 0 and fe1 == 0x40e and fm1 == 0x953b00b54aa22 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x40e953b00b54aa22; valaddr_reg:x13;
offset:7*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x0b54aa22, 0x40e953b0,x13, 5*SIGALIGN, x14,x1, x12)

inst_19:// fs1 == 0 and fe1 == 0x40f and fm1 == 0x224c03c53d0e3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x40f224c03c53d0e3; valaddr_reg:x13;
offset:8*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x3c53d0e3, 0x40f224c0,x13, 6*SIGALIGN, x14,x1, x12)

inst_20:// fs1 == 0 and fe1 == 0x410 and fm1 == 0xe8dacf0e58650 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x410e8dacf0e58650; valaddr_reg:x13;
offset:9*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xf0e58650, 0x410e8dac,x13, 7*SIGALIGN, x14,x1, x12)

inst_21:// fs1 == 1 and fe1 == 0x411 and fm1 == 0x5dbbb894deab4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0xc115dbbb894deab4; valaddr_reg:x13;
offset:10*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x894deab4, 0xc115dbbb,x13, 8*SIGALIGN, x14,x1, x12)

inst_22:// fs1 == 0 and fe1 == 0x412 and fm1 == 0x3d7c9e5f0307e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x4123d7c9e5f0307e; valaddr_reg:x13;
offset:11*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xe5f0307e, 0x4123d7c9,x13, 9*SIGALIGN, x14,x1, x12)

inst_23:// fs1 == 0 and fe1 == 0x413 and fm1 == 0x8c8a1aaac3142 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x4138c8a1aaac3142; valaddr_reg:x13;
offset:12*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xaaac3142, 0x4138c8a1,x13, 10*SIGALIGN, x14,x1, x12)

inst_24:// fs1 == 0 and fe1 == 0x414 and fm1 == 0x785036f9fb997 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x414785036f9fb997; valaddr_reg:x13;
offset:13*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x6f9fb997, 0x41478503,x13, 11*SIGALIGN, x14,x1, x12)

inst_25:// fs1 == 0 and fe1 == 0x415 and fm1 == 0x95a4da7298c66 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x41595a4da7298c66; valaddr_reg:x13;
offset:14*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xa7298c66, 0x41595a4d,x13, 12*SIGALIGN, x14,x1, x12)

inst_26:// fs1 == 0 and fe1 == 0x416 and fm1 == 0x807dad814d575 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x416807dad814d575; valaddr_reg:x13;
offset:15*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xd814d575, 0x416807da,x13, 13*SIGALIGN, x14,x1, x12)

inst_27:// fs1 == 1 and fe1 == 0x417 and fm1 == 0x396bad798c9cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0xc17396bad798c9cf; valaddr_reg:x13;
offset:16*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xd798c9cf, 0xc17396ba,x13, 14*SIGALIGN, x14,x1, x12)

inst_28:// fs1 == 0 and fe1 == 0x418 and fm1 == 0x3d06169b1dcbf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x4183d06169b1dcbf; valaddr_reg:x13;
offset:17*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x69b1dcbf, 0x4183d061,x13, 15*SIGALIGN, x14,x1, x12)

inst_29:// fs1 == 0 and fe1 == 0x419 and fm1 == 0x7f21608208d09 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x4197f21608208d09; valaddr_reg:x13;
offset:18*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x08208d09, 0x4197f216,x13, 16*SIGALIGN, x14,x1, x12)

inst_30:// fs1 == 1 and fe1 == 0x41a and fm1 == 0x9b4f3d167533a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0xc1a9b4f3d167533a; valaddr_reg:x13;
offset:19*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xd167533a, 0xc1a9b4f3,x13, 17*SIGALIGN, x14,x1, x12)

inst_31:// fs1 == 1 and fe1 == 0x41b and fm1 == 0x889261270dee2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0xc1b889261270dee2; valaddr_reg:x13;
offset:20*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x1270dee2, 0xc1b88926,x13, 18*SIGALIGN, x14,x1, x12)

inst_32:// fs1 == 0 and fe1 == 0x41c and fm1 == 0x14b91dae98554 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x41c14b91dae98554; valaddr_reg:x13;
offset:21*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xdae98554, 0x41c14b91,x13, 19*SIGALIGN, x14,x1, x12)

inst_33:// fs1 == 1 and fe1 == 0x41d and fm1 == 0x9136562694646 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0xc1d9136562694646; valaddr_reg:x13;
offset:22*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x62694646, 0xc1d91365,x13, 20*SIGALIGN, x14,x1, x12)

inst_34:// fs1 == 1 and fe1 == 0x41e and fm1 == 0xe9b7e5fc9eba4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0xc1ee9b7e5fc9eba4; valaddr_reg:x13;
offset:23*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x5fc9eba4, 0xc1ee9b7e,x13, 21*SIGALIGN, x14,x1, x12)

inst_35:// fs1 == 1 and fe1 == 0x41f and fm1 == 0x1ce80265039f6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0xc1f1ce80265039f6; valaddr_reg:x13;
offset:24*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x265039f6, 0xc1f1ce80,x13, 22*SIGALIGN, x14,x1, x12)

inst_36:// fs1 == 0 and fe1 == 0x420 and fm1 == 0xc5ec6c6880007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x420c5ec6c6880007; valaddr_reg:x13;
offset:25*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xc6880007, 0x420c5ec6,x13, 23*SIGALIGN, x14,x1, x12)

inst_37:// fs1 == 1 and fe1 == 0x421 and fm1 == 0x2a96d71097999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0xc212a96d71097999; valaddr_reg:x13;
offset:26*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x71097999, 0xc212a96d,x13, 24*SIGALIGN, x14,x1, x12)

inst_38:// fs1 == 0 and fe1 == 0x3ca and fm1 == 0x30e08ceb506f6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x3ca30e08ceb506f6; valaddr_reg:x13;
offset:27*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0xceb506f6, 0x3ca30e08,x13, 25*SIGALIGN, x14,x1, x12)

inst_39:// fs1 == 0 and fe1 == 0x5ca and fm1 == 0xf871c6ee84270 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fcvt.w.d ; op1:x28; dest:x30; op1val:0x5caf871c6ee84270; valaddr_reg:x13;
offset:28*4; correctval:??; testreg:x12;
fcsr_val:0*/
TEST_ZDINX_OP_32(fcvt.w.d, x30, x31, x28, x29,0, 0, 0, 0x6ee84270, 0x5caf871c,x13, 26*SIGALIGN, x14,x1, x12)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x924770d3,64,FLEN)
NAN_BOXED(0x7b89296c,64,FLEN)
NAN_BOXED(0x34c2da80,64,FLEN)
NAN_BOXED(0x7dc59a3a,64,FLEN)
NAN_BOXED(0xa749f9c5,64,FLEN)
NAN_BOXED(0x08ceac39,64,FLEN)
NAN_BOXED(0x53e8eb43,64,FLEN)
NAN_BOXED(0xf3d06f86,64,FLEN)
NAN_BOXED(0xff1e5bef,64,FLEN)
NAN_BOXED(0x6b9f15c4,64,FLEN)
NAN_BOXED(0x9a6ab329,64,FLEN)
test_dataset_1:
NAN_BOXED(0x6bd7f503,64,FLEN)
NAN_BOXED(0xacca7f0d,64,FLEN)
NAN_BOXED(0x2cb7362c,64,FLEN)
NAN_BOXED(0xa96ec2b3,64,FLEN)
NAN_BOXED(0x74f942cb,64,FLEN)
NAN_BOXED(0xfb7f6f5d,64,FLEN)
NAN_BOXED(0x708cc1b6,64,FLEN)
NAN_BOXED(0x0b54aa22,64,FLEN)
NAN_BOXED(0x3c53d0e3,64,FLEN)
NAN_BOXED(0xf0e58650,64,FLEN)
NAN_BOXED(0x894deab4,64,FLEN)
NAN_BOXED(0xe5f0307e,64,FLEN)
NAN_BOXED(0xaaac3142,64,FLEN)
NAN_BOXED(0x6f9fb997,64,FLEN)
NAN_BOXED(0xa7298c66,64,FLEN)
NAN_BOXED(0xd814d575,64,FLEN)
NAN_BOXED(0xd798c9cf,64,FLEN)
NAN_BOXED(0x69b1dcbf,64,FLEN)
NAN_BOXED(0x08208d09,64,FLEN)
NAN_BOXED(0xd167533a,64,FLEN)
NAN_BOXED(0x1270dee2,64,FLEN)
NAN_BOXED(0xdae98554,64,FLEN)
NAN_BOXED(0x62694646,64,FLEN)
NAN_BOXED(0x5fc9eba4,64,FLEN)
NAN_BOXED(0x265039f6,64,FLEN)
NAN_BOXED(0xc6880007,64,FLEN)
NAN_BOXED(0x71097999,64,FLEN)
NAN_BOXED(0xceb506f6,64,FLEN)
NAN_BOXED(0x6ee84270,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 13*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 27*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
