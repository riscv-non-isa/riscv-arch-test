
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Thu Aug 24 09:25:42 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fadd.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fadd.d_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fadd.d_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x30; op1val:0x7fe3c9adc7329695; valaddr_reg:x3; op2:x30; op2val:0x7fe3c9adc7329695
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x30, x31,x30,x31,0, 0, 0, 0xc7329695, 0x7fe3c9ad,0xc7329695,0x7fe3c9ad,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 == rs2 != rd, rs1==x26, rs2==x26, rd==x28,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x26; dest:x28; op1val:0x7fe3c9adc7329695; valaddr_reg:x3; op2:x26; op2val:0x7fe3c9adc7329695
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x28, x29, x26, x27,x26,x27,32, 0, 0, 0xc7329695, 0x7fe3c9ad,0xc7329695,0x7fe3c9ad,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x28, rs2==x24, rd==x26,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x26; op1val:0x7fe3c9adc7329695; valaddr_reg:x3; op2:x24; op2val:0x7fd86ca4719ad2d4
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x26, x27, x28, x29,x24,x25,64, 0, 0, 0xc7329695, 0x7fe3c9ad,0x719ad2d4,0x7fd86ca4,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1 == rd != rs2, rs1==x24, rs2==x28, rd==x24,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x24; dest:x24; op1val:0x7fe3c9adc7329695; valaddr_reg:x3; op2:x28; op2val:0x7fd86ca4719ad2d4
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x24, x25, x24, x25,x28,x29,96, 0, 0, 0xc7329695, 0x7fe3c9ad,0x719ad2d4,0x7fd86ca4,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs2 == rd != rs1, rs1==x20, rs2==x22, rd==x22,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x20; dest:x22; op1val:0x7fe3c9adc7329695; valaddr_reg:x3; op2:x22; op2val:0x7fd86ca4719ad2d4
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x22, x23, x20, x21,x22,x23,128, 0, 0, 0xc7329695, 0x7fe3c9ad,0x719ad2d4,0x7fd86ca4,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x71ade8ef53d18 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x22; dest:x20; op1val:0x7fed1ca42e21585b; valaddr_reg:x3; op2:x18; op2val:0x7fb71ade8ef53d18
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x20, x21, x22, x23,x18,x19,0, 0, 0, 0x2e21585b, 0x7fed1ca4,0x8ef53d18,0x7fb71ade,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x20, rd==x18,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x71ade8ef53d18 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x16; dest:x18; op1val:0x7fed1ca42e21585b; valaddr_reg:x3; op2:x20; op2val:0x7fb71ade8ef53d18
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x18, x19, x16, x17,x20,x21,32, 0, 0, 0x2e21585b, 0x7fed1ca4,0x8ef53d18,0x7fb71ade,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x71ade8ef53d18 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x18; dest:x16; op1val:0x7fed1ca42e21585b; valaddr_reg:x3; op2:x14; op2val:0x7fb71ade8ef53d18
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x16, x17, x18, x19,x14,x15,64, 0, 0, 0x2e21585b, 0x7fed1ca4,0x8ef53d18,0x7fb71ade,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x71ade8ef53d18 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x12; dest:x14; op1val:0x7fed1ca42e21585b; valaddr_reg:x3; op2:x16; op2val:0x7fb71ade8ef53d18
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x14, x15, x12, x13,x16,x17,96, 0, 0, 0x2e21585b, 0x7fed1ca4,0x8ef53d18,0x7fb71ade,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x71ade8ef53d18 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x14; dest:x12; op1val:0x7fed1ca42e21585b; valaddr_reg:x16; op2:x10; op2val:0x7fb71ade8ef53d18
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x12, x13, x14, x15,x10,x11,128, 0, 0, 0x2e21585b, 0x7fed1ca4,0x8ef53d18,0x7fb71ade,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x8; dest:x10; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x12; op2val:0x7fc84acd365e9bf0
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0xb2685903, 0x7fe9ed4c,0x365e9bf0,0x7fc84acd,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x10; dest:x8; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x6; op2val:0x7fc84acd365e9bf0
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x8, x9, x10, x11,x6,x7,32, 0, 0, 0xb2685903, 0x7fe9ed4c,0x365e9bf0,0x7fc84acd,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x4; dest:x6; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x8; op2val:0x7fc84acd365e9bf0
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x6, x7, x4, x5,x8,x9,64, 0, 0, 0xb2685903, 0x7fe9ed4c,0x365e9bf0,0x7fc84acd,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x6; dest:x4; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x2; op2val:0x7fc84acd365e9bf0
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x4, x5, x6, x7,x2,x3,96, 0, 0, 0xb2685903, 0x7fe9ed4c,0x365e9bf0,0x7fc84acd,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x84acd365e9bf0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x2; dest:x30; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x28; op2val:0x7fc84acd365e9bf0
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x2, x3,x28,x29,128, 0, 0, 0xb2685903, 0x7fe9ed4c,0x365e9bf0,0x7fc84acd,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x61345679addc7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x4; op2val:0x7fe61345679addc7
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x4,x5,0, 0, 0, 0x30ca446d, 0x7fd3d975,0x679addc7,0x7fe61345,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x61345679addc7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x2; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x28; op2val:0x7fe61345679addc7
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x2, x3, x30, x31,x28,x29,32, 0, 0, 0x30ca446d, 0x7fd3d975,0x679addc7,0x7fe61345,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x61345679addc7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x26; op2val:0x7fe61345679addc7
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x30ca446d, 0x7fd3d975,0x679addc7,0x7fe61345,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x61345679addc7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x26; op2val:0x7fe61345679addc7
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x30ca446d, 0x7fd3d975,0x679addc7,0x7fe61345,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x61345679addc7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x26; op2val:0x7fe61345679addc7
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x30ca446d, 0x7fd3d975,0x679addc7,0x7fe61345,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0x7fb9e5bbe4c8eb20
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x8366e29b, 0x7fecc348,0xe4c8eb20,0x7fb9e5bb,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0x7fb9e5bbe4c8eb20
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x8366e29b, 0x7fecc348,0xe4c8eb20,0x7fb9e5bb,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0x7fb9e5bbe4c8eb20
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x8366e29b, 0x7fecc348,0xe4c8eb20,0x7fb9e5bb,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0x7fb9e5bbe4c8eb20
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8366e29b, 0x7fecc348,0xe4c8eb20,0x7fb9e5bb,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x9e5bbe4c8eb20 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x26; op2val:0x7fb9e5bbe4c8eb20
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x8366e29b, 0x7fecc348,0xe4c8eb20,0x7fb9e5bb,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0e434f5c2c032 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0x7fe0e434f5c2c032
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x147a7f97, 0x7fde3796,0xf5c2c032,0x7fe0e434,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0e434f5c2c032 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0x7fe0e434f5c2c032
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x147a7f97, 0x7fde3796,0xf5c2c032,0x7fe0e434,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0e434f5c2c032 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0x7fe0e434f5c2c032
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x147a7f97, 0x7fde3796,0xf5c2c032,0x7fe0e434,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0e434f5c2c032 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0x7fe0e434f5c2c032
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x147a7f97, 0x7fde3796,0xf5c2c032,0x7fe0e434,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0e434f5c2c032 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x26; op2val:0x7fe0e434f5c2c032
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x147a7f97, 0x7fde3796,0xf5c2c032,0x7fe0e434,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x21b43aabc36ee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0x7fe21b43aabc36ee
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xaa879221, 0x7fdbc978,0xaabc36ee,0x7fe21b43,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x21b43aabc36ee and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0x7fe21b43aabc36ee
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xaa879221, 0x7fdbc978,0xaabc36ee,0x7fe21b43,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x21b43aabc36ee and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0x7fe21b43aabc36ee
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xaa879221, 0x7fdbc978,0xaabc36ee,0x7fe21b43,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x21b43aabc36ee and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0x7fe21b43aabc36ee
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xaa879221, 0x7fdbc978,0xaabc36ee,0x7fe21b43,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x21b43aabc36ee and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x26; op2val:0x7fe21b43aabc36ee
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xaa879221, 0x7fdbc978,0xaabc36ee,0x7fe21b43,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x644e85974eb10 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0x7fb644e85974eb10
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf4d1629c, 0x7fed3762,0x5974eb10,0x7fb644e8,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x644e85974eb10 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0x7fb644e85974eb10
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf4d1629c, 0x7fed3762,0x5974eb10,0x7fb644e8,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x644e85974eb10 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0x7fb644e85974eb10
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf4d1629c, 0x7fed3762,0x5974eb10,0x7fb644e8,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x644e85974eb10 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0x7fb644e85974eb10
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf4d1629c, 0x7fed3762,0x5974eb10,0x7fb644e8,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x644e85974eb10 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x26; op2val:0x7fb644e85974eb10
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf4d1629c, 0x7fed3762,0x5974eb10,0x7fb644e8,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0bc55fe3aae97 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0x7fe0bc55fe3aae97
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x038aa2cf, 0x7fde8754,0xfe3aae97,0x7fe0bc55,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0bc55fe3aae97 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0x7fe0bc55fe3aae97
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x038aa2cf, 0x7fde8754,0xfe3aae97,0x7fe0bc55,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0bc55fe3aae97 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0x7fe0bc55fe3aae97
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x038aa2cf, 0x7fde8754,0xfe3aae97,0x7fe0bc55,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0bc55fe3aae97 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0x7fe0bc55fe3aae97
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x038aa2cf, 0x7fde8754,0xfe3aae97,0x7fe0bc55,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x0bc55fe3aae97 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x26; op2val:0x7fe0bc55fe3aae97
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x038aa2cf, 0x7fde8754,0xfe3aae97,0x7fe0bc55,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x7aa0c07c039c6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0x7fe7aa0c07c039c6
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0x07c039c6,0x7fe7aa0c,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x7aa0c07c039c6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0x7fe7aa0c07c039c6
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0x07c039c6,0x7fe7aa0c,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x7aa0c07c039c6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0x7fe7aa0c07c039c6
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0x07c039c6,0x7fe7aa0c,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x7aa0c07c039c6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0x7fe7aa0c07c039c6
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0x07c039c6,0x7fe7aa0c,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x7aa0c07c039c6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x26; op2val:0x7fe7aa0c07c039c6
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0x07c039c6,0x7fe7aa0c,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0x7fdce21c50ac0b16
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0x50ac0b16,0x7fdce21c,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0x7fdce21c50ac0b16
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0x50ac0b16,0x7fdce21c,x16, 80*SIGALIGN, x17,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0x7fdce21c50ac0b16
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0x50ac0b16,0x7fdce21c,x16, 82*SIGALIGN, x17,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0x7fdce21c50ac0b16
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0x50ac0b16,0x7fdce21c,x16, 84*SIGALIGN, x17,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xce21c50ac0b16 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0x7fdce21c50ac0b16
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0x50ac0b16,0x7fdce21c,x16, 86*SIGALIGN, x17,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x1f05bc1477e40 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0x7fd1f05bc1477e40
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1f5c40de, 0x7fe707d2,0xc1477e40,0x7fd1f05b,x16, 88*SIGALIGN, x17,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x1f05bc1477e40 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0x7fd1f05bc1477e40
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1f5c40de, 0x7fe707d2,0xc1477e40,0x7fd1f05b,x16, 90*SIGALIGN, x17,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x1f05bc1477e40 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0x7fd1f05bc1477e40
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1f5c40de, 0x7fe707d2,0xc1477e40,0x7fd1f05b,x16, 92*SIGALIGN, x17,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x1f05bc1477e40 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0x7fd1f05bc1477e40
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1f5c40de, 0x7fe707d2,0xc1477e40,0x7fd1f05b,x16, 94*SIGALIGN, x17,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x1f05bc1477e40 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0x7fd1f05bc1477e40
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1f5c40de, 0x7fe707d2,0xc1477e40,0x7fd1f05b,x16, 96*SIGALIGN, x17,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0x7fc66b7ad37071c4
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4b23e38e, 0x7fea6521,0xd37071c4,0x7fc66b7a,x16, 98*SIGALIGN, x17,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0x7fc66b7ad37071c4
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4b23e38e, 0x7fea6521,0xd37071c4,0x7fc66b7a,x16, 100*SIGALIGN, x17,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0x7fc66b7ad37071c4
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4b23e38e, 0x7fea6521,0xd37071c4,0x7fc66b7a,x16, 102*SIGALIGN, x17,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0x7fc66b7ad37071c4
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4b23e38e, 0x7fea6521,0xd37071c4,0x7fc66b7a,x16, 104*SIGALIGN, x17,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x66b7ad37071c4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0x7fc66b7ad37071c4
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4b23e38e, 0x7fea6521,0xd37071c4,0x7fc66b7a,x16, 106*SIGALIGN, x17,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xff6a3558d6ad8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0x7feff6a3558d6ad8
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe52a4bff, 0x7f52b954,0x558d6ad8,0x7feff6a3,x16, 108*SIGALIGN, x17,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xff6a3558d6ad8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0x7feff6a3558d6ad8
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe52a4bff, 0x7f52b954,0x558d6ad8,0x7feff6a3,x16, 110*SIGALIGN, x17,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xff6a3558d6ad8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0x7feff6a3558d6ad8
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe52a4bff, 0x7f52b954,0x558d6ad8,0x7feff6a3,x16, 112*SIGALIGN, x17,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xff6a3558d6ad8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0x7feff6a3558d6ad8
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe52a4bff, 0x7f52b954,0x558d6ad8,0x7feff6a3,x16, 114*SIGALIGN, x17,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xff6a3558d6ad8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0x7feff6a3558d6ad8
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe52a4bff, 0x7f52b954,0x558d6ad8,0x7feff6a3,x16, 116*SIGALIGN, x17,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x90fa6cc60e199 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffe90fa6cc60e199
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe555215f, 0x7febc366,0xcc60e199,0xffe90fa6,x16, 118*SIGALIGN, x17,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x90fa6cc60e199 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffe90fa6cc60e199
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe555215f, 0x7febc366,0xcc60e199,0xffe90fa6,x16, 120*SIGALIGN, x17,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x90fa6cc60e199 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffe90fa6cc60e199
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe555215f, 0x7febc366,0xcc60e199,0xffe90fa6,x16, 122*SIGALIGN, x17,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x90fa6cc60e199 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffe90fa6cc60e199
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe555215f, 0x7febc366,0xcc60e199,0xffe90fa6,x16, 124*SIGALIGN, x17,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x90fa6cc60e199 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffe90fa6cc60e199
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe555215f, 0x7febc366,0xcc60e199,0xffe90fa6,x16, 126*SIGALIGN, x17,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x9a9fb13f0fb5a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd9a9fb13f0fb5a
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf5a10f55, 0x7fd4d025,0x13f0fb5a,0xffd9a9fb,x16, 128*SIGALIGN, x17,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x9a9fb13f0fb5a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd9a9fb13f0fb5a
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf5a10f55, 0x7fd4d025,0x13f0fb5a,0xffd9a9fb,x16, 130*SIGALIGN, x17,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x9a9fb13f0fb5a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd9a9fb13f0fb5a
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf5a10f55, 0x7fd4d025,0x13f0fb5a,0xffd9a9fb,x16, 132*SIGALIGN, x17,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x9a9fb13f0fb5a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd9a9fb13f0fb5a
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf5a10f55, 0x7fd4d025,0x13f0fb5a,0xffd9a9fb,x16, 134*SIGALIGN, x17,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x9a9fb13f0fb5a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd9a9fb13f0fb5a
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf5a10f55, 0x7fd4d025,0x13f0fb5a,0xffd9a9fb,x16, 136*SIGALIGN, x17,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xd606731f9b6da and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0x7fcd606731f9b6da
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xeeac1c13, 0x7fc874e2,0x31f9b6da,0x7fcd6067,x16, 138*SIGALIGN, x17,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xd606731f9b6da and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0x7fcd606731f9b6da
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xeeac1c13, 0x7fc874e2,0x31f9b6da,0x7fcd6067,x16, 140*SIGALIGN, x17,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xd606731f9b6da and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0x7fcd606731f9b6da
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xeeac1c13, 0x7fc874e2,0x31f9b6da,0x7fcd6067,x16, 142*SIGALIGN, x17,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xd606731f9b6da and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0x7fcd606731f9b6da
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeeac1c13, 0x7fc874e2,0x31f9b6da,0x7fcd6067,x16, 144*SIGALIGN, x17,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xd606731f9b6da and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0x7fcd606731f9b6da
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xeeac1c13, 0x7fc874e2,0x31f9b6da,0x7fcd6067,x16, 146*SIGALIGN, x17,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfd7934e2685ce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffdfd7934e2685ce
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x7cda8053, 0x7fce8af7,0x4e2685ce,0xffdfd793,x16, 148*SIGALIGN, x17,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfd7934e2685ce and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffdfd7934e2685ce
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x7cda8053, 0x7fce8af7,0x4e2685ce,0xffdfd793,x16, 150*SIGALIGN, x17,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfd7934e2685ce and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffdfd7934e2685ce
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x7cda8053, 0x7fce8af7,0x4e2685ce,0xffdfd793,x16, 152*SIGALIGN, x17,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfd7934e2685ce and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffdfd7934e2685ce
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7cda8053, 0x7fce8af7,0x4e2685ce,0xffdfd793,x16, 154*SIGALIGN, x17,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfd7934e2685ce and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffdfd7934e2685ce
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x7cda8053, 0x7fce8af7,0x4e2685ce,0xffdfd793,x16, 156*SIGALIGN, x17,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x2ae914074dd10 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffd2ae914074dd10
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x4074dd10,0xffd2ae91,x16, 158*SIGALIGN, x17,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x2ae914074dd10 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffd2ae914074dd10
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x4074dd10,0xffd2ae91,x16, 160*SIGALIGN, x17,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x2ae914074dd10 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffd2ae914074dd10
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x4074dd10,0xffd2ae91,x16, 162*SIGALIGN, x17,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x2ae914074dd10 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffd2ae914074dd10
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x4074dd10,0xffd2ae91,x16, 164*SIGALIGN, x17,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x2ae914074dd10 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffd2ae914074dd10
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x4074dd10,0xffd2ae91,x16, 166*SIGALIGN, x17,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf1077174aa95f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffdf1077174aa95f
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xdfc8788f, 0x7fb49818,0x174aa95f,0xffdf1077,x16, 168*SIGALIGN, x17,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf1077174aa95f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffdf1077174aa95f
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xdfc8788f, 0x7fb49818,0x174aa95f,0xffdf1077,x16, 170*SIGALIGN, x17,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf1077174aa95f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffdf1077174aa95f
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xdfc8788f, 0x7fb49818,0x174aa95f,0xffdf1077,x16, 172*SIGALIGN, x17,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf1077174aa95f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffdf1077174aa95f
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdfc8788f, 0x7fb49818,0x174aa95f,0xffdf1077,x16, 174*SIGALIGN, x17,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf1077174aa95f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffdf1077174aa95f
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xdfc8788f, 0x7fb49818,0x174aa95f,0xffdf1077,x16, 176*SIGALIGN, x17,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xb7dec8351e459 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffdb7dec8351e459
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xbbfdec45, 0x7fe0410c,0x8351e459,0xffdb7dec,x16, 178*SIGALIGN, x17,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xb7dec8351e459 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffdb7dec8351e459
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xbbfdec45, 0x7fe0410c,0x8351e459,0xffdb7dec,x16, 180*SIGALIGN, x17,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xb7dec8351e459 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffdb7dec8351e459
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xbbfdec45, 0x7fe0410c,0x8351e459,0xffdb7dec,x16, 182*SIGALIGN, x17,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xb7dec8351e459 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffdb7dec8351e459
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbbfdec45, 0x7fe0410c,0x8351e459,0xffdb7dec,x16, 184*SIGALIGN, x17,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xb7dec8351e459 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffdb7dec8351e459
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xbbfdec45, 0x7fe0410c,0x8351e459,0xffdb7dec,x16, 186*SIGALIGN, x17,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa64478a276ad9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffda64478a276ad9
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x09a573b7, 0x7fbbeb37,0x8a276ad9,0xffda6447,x16, 188*SIGALIGN, x17,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa64478a276ad9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffda64478a276ad9
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x09a573b7, 0x7fbbeb37,0x8a276ad9,0xffda6447,x16, 190*SIGALIGN, x17,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa64478a276ad9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffda64478a276ad9
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x09a573b7, 0x7fbbeb37,0x8a276ad9,0xffda6447,x16, 192*SIGALIGN, x17,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa64478a276ad9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffda64478a276ad9
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x09a573b7, 0x7fbbeb37,0x8a276ad9,0xffda6447,x16, 194*SIGALIGN, x17,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa64478a276ad9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffda64478a276ad9
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x09a573b7, 0x7fbbeb37,0x8a276ad9,0xffda6447,x16, 196*SIGALIGN, x17,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xac7fce60, 0x7fe69c26,0x00000000,0x7ff00000,x16, 198*SIGALIGN, x17,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xac7fce60, 0x7fe69c26,0x00000000,0x7ff00000,x16, 200*SIGALIGN, x17,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xac7fce60, 0x7fe69c26,0x00000000,0x7ff00000,x16, 202*SIGALIGN, x17,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xac7fce60, 0x7fe69c26,0x00000000,0x7ff00000,x16, 204*SIGALIGN, x17,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xac7fce60, 0x7fe69c26,0x00000000,0x7ff00000,x16, 206*SIGALIGN, x17,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xcfb0623a, 0x7fea101c,0x00000000,0xfff00000,x16, 208*SIGALIGN, x17,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xcfb0623a, 0x7fea101c,0x00000000,0xfff00000,x16, 210*SIGALIGN, x17,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xcfb0623a, 0x7fea101c,0x00000000,0xfff00000,x16, 212*SIGALIGN, x17,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xcfb0623a, 0x7fea101c,0x00000000,0xfff00000,x16, 214*SIGALIGN, x17,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xcfb0623a, 0x7fea101c,0x00000000,0xfff00000,x16, 216*SIGALIGN, x17,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xc8812e52ed91e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffac8812e52ed91e
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xef329d04, 0x7feed7c3,0xe52ed91e,0xffac8812,x16, 218*SIGALIGN, x17,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xc8812e52ed91e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffac8812e52ed91e
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xef329d04, 0x7feed7c3,0xe52ed91e,0xffac8812,x16, 220*SIGALIGN, x17,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xc8812e52ed91e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffac8812e52ed91e
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xef329d04, 0x7feed7c3,0xe52ed91e,0xffac8812,x16, 222*SIGALIGN, x17,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xc8812e52ed91e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffac8812e52ed91e
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xef329d04, 0x7feed7c3,0xe52ed91e,0xffac8812,x16, 224*SIGALIGN, x17,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xc8812e52ed91e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffac8812e52ed91e
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xef329d04, 0x7feed7c3,0xe52ed91e,0xffac8812,x16, 226*SIGALIGN, x17,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x00000000,0xfff00000,x16, 228*SIGALIGN, x17,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x00000000,0xfff00000,x16, 230*SIGALIGN, x17,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x00000000,0xfff00000,x16, 232*SIGALIGN, x17,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x00000000,0xfff00000,x16, 234*SIGALIGN, x17,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x00000000,0xfff00000,x16, 236*SIGALIGN, x17,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f3115df, 0x7fe314c8,0x00000000,0x7ff00000,x16, 238*SIGALIGN, x17,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2f3115df, 0x7fe314c8,0x00000000,0x7ff00000,x16, 240*SIGALIGN, x17,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2f3115df, 0x7fe314c8,0x00000000,0x7ff00000,x16, 242*SIGALIGN, x17,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2f3115df, 0x7fe314c8,0x00000000,0x7ff00000,x16, 244*SIGALIGN, x17,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0x7ff0000000000000
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2f3115df, 0x7fe314c8,0x00000000,0x7ff00000,x16, 246*SIGALIGN, x17,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xacf7eaef, 0x7fe26bbb,0x00000000,0xfff00000,x16, 248*SIGALIGN, x17,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xacf7eaef, 0x7fe26bbb,0x00000000,0xfff00000,x16, 250*SIGALIGN, x17,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xacf7eaef, 0x7fe26bbb,0x00000000,0xfff00000,x16, 252*SIGALIGN, x17,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xacf7eaef, 0x7fe26bbb,0x00000000,0xfff00000,x16, 254*SIGALIGN, x17,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xfff0000000000000
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xacf7eaef, 0x7fe26bbb,0x00000000,0xfff00000,x16, 256*SIGALIGN, x17,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3c9adc7329695; valaddr_reg:x16; op2:x26; op2val:0x7fd86ca4719ad2d4
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xc7329695, 0x7fe3c9ad,0x719ad2d4,0x7fd86ca4,x16, 258*SIGALIGN, x17,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x86ca4719ad2d4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3c9adc7329695; valaddr_reg:x16; op2:x26; op2val:0x7fd86ca4719ad2d4
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xc7329695, 0x7fe3c9ad,0x719ad2d4,0x7fd86ca4,x16, 260*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x8ef53d18,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x8ef53d18,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x8ef53d18,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x8ef53d18,64,FLEN)
test_dataset_1:
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x8ef53d18,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0x365e9bf0,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x679addc7,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x679addc7,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x679addc7,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x679addc7,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x679addc7,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0xe4c8eb20,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0xf5c2c032,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0xf5c2c032,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0xf5c2c032,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0xf5c2c032,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0xf5c2c032,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaabc36ee,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaabc36ee,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaabc36ee,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaabc36ee,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaabc36ee,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0x5974eb10,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0x5974eb10,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0x5974eb10,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0x5974eb10,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0x5974eb10,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0xfe3aae97,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0xfe3aae97,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0xfe3aae97,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0xfe3aae97,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0xfe3aae97,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0x07c039c6,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0x07c039c6,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0x07c039c6,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0x07c039c6,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0x07c039c6,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0x50ac0b16,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0xc1477e40,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0xc1477e40,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0xc1477e40,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0xc1477e40,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0xc1477e40,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0xd37071c4,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0x558d6ad8,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0x558d6ad8,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0x558d6ad8,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0x558d6ad8,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0x558d6ad8,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xcc60e199,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xcc60e199,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xcc60e199,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xcc60e199,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xcc60e199,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0x13f0fb5a,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0x13f0fb5a,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0x13f0fb5a,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0x13f0fb5a,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0x13f0fb5a,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0x31f9b6da,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0x31f9b6da,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0x31f9b6da,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0x31f9b6da,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0x31f9b6da,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x4e2685ce,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x4e2685ce,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x4e2685ce,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x4e2685ce,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x4e2685ce,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x4074dd10,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x4074dd10,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x4074dd10,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x4074dd10,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x4074dd10,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0x174aa95f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0x174aa95f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0x174aa95f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0x174aa95f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0x174aa95f,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0x8351e459,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0x8351e459,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0x8351e459,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0x8351e459,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0x8351e459,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x8a276ad9,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x8a276ad9,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x8a276ad9,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x8a276ad9,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x8a276ad9,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xe52ed91e,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xe52ed91e,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xe52ed91e,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xe52ed91e,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xe52ed91e,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0x00000000,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0x719ad2d4,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 262*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
