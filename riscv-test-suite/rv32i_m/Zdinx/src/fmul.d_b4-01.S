
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Fri Aug 25 06:12:14 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fmul.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmul.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fmul.d_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fmul.d_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x28, rs2==x26, rd==x30,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x621305a3128de and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x3; op2:x26; op2val:0x3ff621305a3128de
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x5a3128de,0x3ff62130,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 == rd != rs2, rs1==x26, rs2==x30, rd==x26,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x621305a3128de and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x26; dest:x26; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x3; op2:x30; op2val:0x3ff621305a3128de
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x26, x27, x26, x27,x30,x31,32, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x5a3128de,0x3ff62130,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 == rs2 == rd, rs1==x24, rs2==x24, rd==x24,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x621305a3128de and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x24; dest:x24; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x3; op2:x24; op2val:0x7fe722ea3b70e3d3
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x24, x25, x24, x25,x24,x25,64, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x3b70e3d3,0x7fe722ea,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1 == rs2 != rd, rs1==x22, rs2==x22, rd==x28,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x621305a3128de and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x22; dest:x28; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x3; op2:x22; op2val:0x7fe722ea3b70e3d3
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x28, x29, x22, x23,x22,x23,96, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x3b70e3d3,0x7fe722ea,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs2 == rd != rs1, rs1==x30, rs2==x20, rd==x20,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x621305a3128de and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x30; dest:x20; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x3; op2:x20; op2val:0x3ff621305a3128de
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x20, x21, x30, x31,x20,x21,128, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x5a3128de,0x3ff62130,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x20, rs2==x28, rd==x22,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0da5308183222 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x20; dest:x22; op1val:0x7fee61729d7cfd5e; valaddr_reg:x3; op2:x28; op2val:0x3ff0da5308183222
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x22, x23, x20, x21,x28,x29,0, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x08183222,0x3ff0da53,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x14, rd==x18,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0da5308183222 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x16; dest:x18; op1val:0x7fee61729d7cfd5e; valaddr_reg:x3; op2:x14; op2val:0x3ff0da5308183222
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x18, x19, x16, x17,x14,x15,32, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x08183222,0x3ff0da53,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x14, rs2==x18, rd==x16,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0da5308183222 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x14; dest:x16; op1val:0x7fee61729d7cfd5e; valaddr_reg:x3; op2:x18; op2val:0x3ff0da5308183222
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x16, x17, x14, x15,x18,x19,64, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x08183222,0x3ff0da53,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x18, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0da5308183222 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x18; dest:x14; op1val:0x7fee61729d7cfd5e; valaddr_reg:x3; op2:x16; op2val:0x3ff0da5308183222
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x14, x15, x18, x19,x16,x17,96, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x08183222,0x3ff0da53,x3, 16*SIGALIGN, x4,x1, x2)

inst_9:// rs1==x10, rs2==x8, rd==x12,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0da5308183222 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x10; dest:x12; op1val:0x7fee61729d7cfd5e; valaddr_reg:x3; op2:x8; op2val:0x3ff0da5308183222
offset:18*FLEN/8; correctval:??; testreg:x2;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x12, x13, x10, x11,x8,x9,128, 0, 0, 0x9d7cfd5e, 0x7fee6172,0x08183222,0x3ff0da53,x3, 18*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x15,test_dataset_1)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1fbc174858c47 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x8; dest:x10; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x12; op2val:0x4001fbc174858c47
offset:0*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x10, x11, x8, x9,x12,x13,0, 0, 0, 0xb4043bd9, 0x7fdc787d,0x74858c47,0x4001fbc1,x15, 0*SIGALIGN, x16,x1, x14)

inst_11:// rs1==x12, rs2==x10, rd==x8,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1fbc174858c47 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x12; dest:x8; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x10; op2val:0x4001fbc174858c47
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x8, x9, x12, x13,x10,x11,32, 0, 0, 0xb4043bd9, 0x7fdc787d,0x74858c47,0x4001fbc1,x15, 2*SIGALIGN, x16,x1, x14)

inst_12:// rs1==x4, rs2==x2, rd==x6,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1fbc174858c47 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x4; dest:x6; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x2; op2val:0x4001fbc174858c47
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x6, x7, x4, x5,x2,x3,64, 0, 0, 0xb4043bd9, 0x7fdc787d,0x74858c47,0x4001fbc1,x15, 4*SIGALIGN, x16,x1, x14)

inst_13:// rs1==x2, rs2==x6, rd==x4,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1fbc174858c47 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x2; dest:x4; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x6; op2val:0x4001fbc174858c47
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x4, x5, x2, x3,x6,x7,96, 0, 0, 0xb4043bd9, 0x7fdc787d,0x74858c47,0x4001fbc1,x15, 6*SIGALIGN, x16,x1, x14)

inst_14:// rs1==x6, rs2==x4, rd==x2,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1fbc174858c47 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x6; dest:x2; op1val:0x7fdc787db4043bd9; valaddr_reg:x15; op2:x4; op2val:0x4001fbc174858c47
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x2, x3, x6, x7,x4,x5,128, 0, 0, 0xb4043bd9, 0x7fdc787d,0x74858c47,0x4001fbc1,x15, 8*SIGALIGN, x16,x1, x14)

inst_15:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xbd61702226bc7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x403bd61702226bc7
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x77bf010f, 0x7fa264ac,0x02226bc7,0x403bd617,x15, 10*SIGALIGN, x16,x1, x14)

inst_16:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xbd61702226bc7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x403bd61702226bc7
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x77bf010f, 0x7fa264ac,0x02226bc7,0x403bd617,x15, 12*SIGALIGN, x16,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xbd61702226bc7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x403bd61702226bc7
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x77bf010f, 0x7fa264ac,0x02226bc7,0x403bd617,x15, 14*SIGALIGN, x16,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xbd61702226bc7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x403bd61702226bc7
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x77bf010f, 0x7fa264ac,0x02226bc7,0x403bd617,x15, 16*SIGALIGN, x16,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xbd61702226bc7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fa264ac77bf010f; valaddr_reg:x15; op2:x26; op2val:0x403bd61702226bc7
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x77bf010f, 0x7fa264ac,0x02226bc7,0x403bd617,x15, 18*SIGALIGN, x16,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1354e7d7aa14f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x4001354e7d7aa14f
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x7d7aa14f,0x4001354e,x15, 20*SIGALIGN, x16,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1354e7d7aa14f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x4001354e7d7aa14f
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x7d7aa14f,0x4001354e,x15, 22*SIGALIGN, x16,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1354e7d7aa14f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x4001354e7d7aa14f
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x7d7aa14f,0x4001354e,x15, 24*SIGALIGN, x16,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1354e7d7aa14f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x4001354e7d7aa14f
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x7d7aa14f,0x4001354e,x15, 26*SIGALIGN, x16,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1354e7d7aa14f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fddc0d22f746bf5; valaddr_reg:x15; op2:x26; op2val:0x4001354e7d7aa14f
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x2f746bf5, 0x7fddc0d2,0x7d7aa14f,0x4001354e,x15, 28*SIGALIGN, x16,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50d4316386ec6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x40050d4316386ec6
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x1b638e23, 0x7fd8522a,0x16386ec6,0x40050d43,x15, 30*SIGALIGN, x16,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50d4316386ec6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x40050d4316386ec6
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x1b638e23, 0x7fd8522a,0x16386ec6,0x40050d43,x15, 32*SIGALIGN, x16,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50d4316386ec6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x40050d4316386ec6
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x1b638e23, 0x7fd8522a,0x16386ec6,0x40050d43,x15, 34*SIGALIGN, x16,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50d4316386ec6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x40050d4316386ec6
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1b638e23, 0x7fd8522a,0x16386ec6,0x40050d43,x15, 36*SIGALIGN, x16,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x50d4316386ec6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd8522a1b638e23; valaddr_reg:x15; op2:x26; op2val:0x40050d4316386ec6
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x1b638e23, 0x7fd8522a,0x16386ec6,0x40050d43,x15, 38*SIGALIGN, x16,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe6ebbeaa47a7b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x3ffe6ebbeaa47a7b
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0xeaa47a7b,0x3ffe6ebb,x15, 40*SIGALIGN, x16,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe6ebbeaa47a7b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x3ffe6ebbeaa47a7b
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0xeaa47a7b,0x3ffe6ebb,x15, 42*SIGALIGN, x16,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe6ebbeaa47a7b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x3ffe6ebbeaa47a7b
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0xeaa47a7b,0x3ffe6ebb,x15, 44*SIGALIGN, x16,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe6ebbeaa47a7b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x3ffe6ebbeaa47a7b
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0xeaa47a7b,0x3ffe6ebb,x15, 46*SIGALIGN, x16,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe6ebbeaa47a7b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe0d2f778a86fa6; valaddr_reg:x15; op2:x26; op2val:0x3ffe6ebbeaa47a7b
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x78a86fa6, 0x7fe0d2f7,0xeaa47a7b,0x3ffe6ebb,x15, 48*SIGALIGN, x16,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0f0b72008011c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x4010f0b72008011c
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb3b08c6b, 0x7fce394a,0x2008011c,0x4010f0b7,x15, 50*SIGALIGN, x16,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0f0b72008011c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x4010f0b72008011c
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb3b08c6b, 0x7fce394a,0x2008011c,0x4010f0b7,x15, 52*SIGALIGN, x16,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0f0b72008011c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x4010f0b72008011c
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb3b08c6b, 0x7fce394a,0x2008011c,0x4010f0b7,x15, 54*SIGALIGN, x16,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0f0b72008011c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x4010f0b72008011c
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb3b08c6b, 0x7fce394a,0x2008011c,0x4010f0b7,x15, 56*SIGALIGN, x16,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x0f0b72008011c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fce394ab3b08c6b; valaddr_reg:x15; op2:x26; op2val:0x4010f0b72008011c
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb3b08c6b, 0x7fce394a,0x2008011c,0x4010f0b7,x15, 58*SIGALIGN, x16,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x89ac4b4d24d46 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x40089ac4b4d24d46
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x4963827f, 0x7fd4cf24,0xb4d24d46,0x40089ac4,x15, 60*SIGALIGN, x16,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x89ac4b4d24d46 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x40089ac4b4d24d46
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x4963827f, 0x7fd4cf24,0xb4d24d46,0x40089ac4,x15, 62*SIGALIGN, x16,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x89ac4b4d24d46 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x40089ac4b4d24d46
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x4963827f, 0x7fd4cf24,0xb4d24d46,0x40089ac4,x15, 64*SIGALIGN, x16,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x89ac4b4d24d46 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x40089ac4b4d24d46
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4963827f, 0x7fd4cf24,0xb4d24d46,0x40089ac4,x15, 66*SIGALIGN, x16,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x89ac4b4d24d46 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd4cf244963827f; valaddr_reg:x15; op2:x26; op2val:0x40089ac4b4d24d46
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x4963827f, 0x7fd4cf24,0xb4d24d46,0x40089ac4,x15, 68*SIGALIGN, x16,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf5bd959461f4d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x3fff5bd959461f4d
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf57052f0, 0x7fe053c0,0x59461f4d,0x3fff5bd9,x15, 70*SIGALIGN, x16,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf5bd959461f4d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x3fff5bd959461f4d
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf57052f0, 0x7fe053c0,0x59461f4d,0x3fff5bd9,x15, 72*SIGALIGN, x16,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf5bd959461f4d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x3fff5bd959461f4d
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf57052f0, 0x7fe053c0,0x59461f4d,0x3fff5bd9,x15, 74*SIGALIGN, x16,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf5bd959461f4d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x3fff5bd959461f4d
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf57052f0, 0x7fe053c0,0x59461f4d,0x3fff5bd9,x15, 76*SIGALIGN, x16,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf5bd959461f4d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe053c0f57052f0; valaddr_reg:x15; op2:x26; op2val:0x3fff5bd959461f4d
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf57052f0, 0x7fe053c0,0x59461f4d,0x3fff5bd9,x15, 78*SIGALIGN, x16,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7b8d4465e6287 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x3ff7b8d4465e6287
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x723d53e2, 0x7fe59556,0x465e6287,0x3ff7b8d4,x15, 80*SIGALIGN, x16,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7b8d4465e6287 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x3ff7b8d4465e6287
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x723d53e2, 0x7fe59556,0x465e6287,0x3ff7b8d4,x15, 82*SIGALIGN, x16,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7b8d4465e6287 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x3ff7b8d4465e6287
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x723d53e2, 0x7fe59556,0x465e6287,0x3ff7b8d4,x15, 84*SIGALIGN, x16,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7b8d4465e6287 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x3ff7b8d4465e6287
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x723d53e2, 0x7fe59556,0x465e6287,0x3ff7b8d4,x15, 86*SIGALIGN, x16,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7b8d4465e6287 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe59556723d53e2; valaddr_reg:x15; op2:x26; op2val:0x3ff7b8d4465e6287
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x723d53e2, 0x7fe59556,0x465e6287,0x3ff7b8d4,x15, 88*SIGALIGN, x16,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e7da34800278 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x3ff1e7da34800278
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x55c85538, 0x7fec9823,0x34800278,0x3ff1e7da,x15, 90*SIGALIGN, x16,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e7da34800278 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x3ff1e7da34800278
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x55c85538, 0x7fec9823,0x34800278,0x3ff1e7da,x15, 92*SIGALIGN, x16,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e7da34800278 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x3ff1e7da34800278
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x55c85538, 0x7fec9823,0x34800278,0x3ff1e7da,x15, 94*SIGALIGN, x16,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e7da34800278 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x3ff1e7da34800278
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x55c85538, 0x7fec9823,0x34800278,0x3ff1e7da,x15, 96*SIGALIGN, x16,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1e7da34800278 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fec982355c85538; valaddr_reg:x15; op2:x26; op2val:0x3ff1e7da34800278
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x55c85538, 0x7fec9823,0x34800278,0x3ff1e7da,x15, 98*SIGALIGN, x16,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5c9544662d675 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x3ff5c9544662d675
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xfa19f977, 0x7fe78037,0x4662d675,0x3ff5c954,x15, 100*SIGALIGN, x16,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5c9544662d675 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x3ff5c9544662d675
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xfa19f977, 0x7fe78037,0x4662d675,0x3ff5c954,x15, 102*SIGALIGN, x16,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5c9544662d675 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x3ff5c9544662d675
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xfa19f977, 0x7fe78037,0x4662d675,0x3ff5c954,x15, 104*SIGALIGN, x16,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5c9544662d675 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x3ff5c9544662d675
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfa19f977, 0x7fe78037,0x4662d675,0x3ff5c954,x15, 106*SIGALIGN, x16,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5c9544662d675 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe78037fa19f977; valaddr_reg:x15; op2:x26; op2val:0x3ff5c9544662d675
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xfa19f977, 0x7fe78037,0x4662d675,0x3ff5c954,x15, 108*SIGALIGN, x16,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4f916c3978a67 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x3ff4f916c3978a67
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd174ff65, 0x7fe8698e,0xc3978a67,0x3ff4f916,x15, 110*SIGALIGN, x16,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4f916c3978a67 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x3ff4f916c3978a67
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd174ff65, 0x7fe8698e,0xc3978a67,0x3ff4f916,x15, 112*SIGALIGN, x16,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4f916c3978a67 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x3ff4f916c3978a67
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd174ff65, 0x7fe8698e,0xc3978a67,0x3ff4f916,x15, 114*SIGALIGN, x16,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4f916c3978a67 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x3ff4f916c3978a67
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd174ff65, 0x7fe8698e,0xc3978a67,0x3ff4f916,x15, 116*SIGALIGN, x16,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4f916c3978a67 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe8698ed174ff65; valaddr_reg:x15; op2:x26; op2val:0x3ff4f916c3978a67
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd174ff65, 0x7fe8698e,0xc3978a67,0x3ff4f916,x15, 118*SIGALIGN, x16,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x14b6db2a0b270 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x3fd14b6db2a0b270
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x22e524ad, 0x7fd6a472,0xb2a0b270,0x3fd14b6d,x15, 120*SIGALIGN, x16,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x14b6db2a0b270 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x3fd14b6db2a0b270
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x22e524ad, 0x7fd6a472,0xb2a0b270,0x3fd14b6d,x15, 122*SIGALIGN, x16,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x14b6db2a0b270 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x3fd14b6db2a0b270
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x22e524ad, 0x7fd6a472,0xb2a0b270,0x3fd14b6d,x15, 124*SIGALIGN, x16,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x14b6db2a0b270 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x3fd14b6db2a0b270
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x22e524ad, 0x7fd6a472,0xb2a0b270,0x3fd14b6d,x15, 126*SIGALIGN, x16,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x14b6db2a0b270 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a47222e524ad; valaddr_reg:x15; op2:x26; op2val:0x3fd14b6db2a0b270
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x22e524ad, 0x7fd6a472,0xb2a0b270,0x3fd14b6d,x15, 128*SIGALIGN, x16,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x939b711539a01 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0xbfb939b711539a01
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x79c877a7, 0x7feec7e4,0x11539a01,0xbfb939b7,x15, 130*SIGALIGN, x16,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x939b711539a01 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0xbfb939b711539a01
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x79c877a7, 0x7feec7e4,0x11539a01,0xbfb939b7,x15, 132*SIGALIGN, x16,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x939b711539a01 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0xbfb939b711539a01
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x79c877a7, 0x7feec7e4,0x11539a01,0xbfb939b7,x15, 134*SIGALIGN, x16,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x939b711539a01 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0xbfb939b711539a01
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x79c877a7, 0x7feec7e4,0x11539a01,0xbfb939b7,x15, 136*SIGALIGN, x16,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x939b711539a01 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7feec7e479c877a7; valaddr_reg:x15; op2:x26; op2val:0xbfb939b711539a01
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x79c877a7, 0x7feec7e4,0x11539a01,0xbfb939b7,x15, 138*SIGALIGN, x16,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x3334ad6967a1a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x3fb3334ad6967a1a
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x259975cf, 0x7fe820cd,0xd6967a1a,0x3fb3334a,x15, 140*SIGALIGN, x16,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x3334ad6967a1a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x3fb3334ad6967a1a
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x259975cf, 0x7fe820cd,0xd6967a1a,0x3fb3334a,x15, 142*SIGALIGN, x16,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x3334ad6967a1a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x3fb3334ad6967a1a
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x259975cf, 0x7fe820cd,0xd6967a1a,0x3fb3334a,x15, 144*SIGALIGN, x16,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x3334ad6967a1a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x3fb3334ad6967a1a
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x259975cf, 0x7fe820cd,0xd6967a1a,0x3fb3334a,x15, 146*SIGALIGN, x16,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x3334ad6967a1a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe820cd259975cf; valaddr_reg:x15; op2:x26; op2val:0x3fb3334ad6967a1a
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x259975cf, 0x7fe820cd,0xd6967a1a,0x3fb3334a,x15, 148*SIGALIGN, x16,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x78b67f52639a8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0xbfc78b67f52639a8
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xf53d41f5, 0x7fdd87af,0xf52639a8,0xbfc78b67,x15, 150*SIGALIGN, x16,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x78b67f52639a8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0xbfc78b67f52639a8
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xf53d41f5, 0x7fdd87af,0xf52639a8,0xbfc78b67,x15, 152*SIGALIGN, x16,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x78b67f52639a8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0xbfc78b67f52639a8
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xf53d41f5, 0x7fdd87af,0xf52639a8,0xbfc78b67,x15, 154*SIGALIGN, x16,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x78b67f52639a8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0xbfc78b67f52639a8
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf53d41f5, 0x7fdd87af,0xf52639a8,0xbfc78b67,x15, 156*SIGALIGN, x16,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x78b67f52639a8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdd87aff53d41f5; valaddr_reg:x15; op2:x26; op2val:0xbfc78b67f52639a8
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xf53d41f5, 0x7fdd87af,0xf52639a8,0xbfc78b67,x15, 158*SIGALIGN, x16,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5d31cb42ded96 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x3fc5d31cb42ded96
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0xb42ded96,0x3fc5d31c,x15, 160*SIGALIGN, x16,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5d31cb42ded96 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x3fc5d31cb42ded96
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0xb42ded96,0x3fc5d31c,x15, 162*SIGALIGN, x16,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5d31cb42ded96 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x3fc5d31cb42ded96
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0xb42ded96,0x3fc5d31c,x15, 164*SIGALIGN, x16,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5d31cb42ded96 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x3fc5d31cb42ded96
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0xb42ded96,0x3fc5d31c,x15, 166*SIGALIGN, x16,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5d31cb42ded96 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fdf5c635a3b99f3; valaddr_reg:x15; op2:x26; op2val:0x3fc5d31cb42ded96
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x5a3b99f3, 0x7fdf5c63,0xb42ded96,0x3fc5d31c,x15, 168*SIGALIGN, x16,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2cf273a0c0054 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0xbfc2cf273a0c0054
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x3a0c0054,0xbfc2cf27,x15, 170*SIGALIGN, x16,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2cf273a0c0054 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0xbfc2cf273a0c0054
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x3a0c0054,0xbfc2cf27,x15, 172*SIGALIGN, x16,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2cf273a0c0054 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0xbfc2cf273a0c0054
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x3a0c0054,0xbfc2cf27,x15, 174*SIGALIGN, x16,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2cf273a0c0054 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0xbfc2cf273a0c0054
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x3a0c0054,0xbfc2cf27,x15, 176*SIGALIGN, x16,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x2cf273a0c0054 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe006e3d60fc2f8; valaddr_reg:x15; op2:x26; op2val:0xbfc2cf273a0c0054
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd60fc2f8, 0x7fe006e3,0x3a0c0054,0xbfc2cf27,x15, 178*SIGALIGN, x16,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x838af6956ccef and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x3fc838af6956ccef
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x6956ccef,0x3fc838af,x15, 180*SIGALIGN, x16,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x838af6956ccef and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x3fc838af6956ccef
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x6956ccef,0x3fc838af,x15, 182*SIGALIGN, x16,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x838af6956ccef and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x3fc838af6956ccef
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x6956ccef,0x3fc838af,x15, 184*SIGALIGN, x16,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x838af6956ccef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x3fc838af6956ccef
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x6956ccef,0x3fc838af,x15, 186*SIGALIGN, x16,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x838af6956ccef and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fd6a6b1b54b21cf; valaddr_reg:x15; op2:x26; op2val:0x3fc838af6956ccef
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xb54b21cf, 0x7fd6a6b1,0x6956ccef,0x3fc838af,x15, 188*SIGALIGN, x16,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5eb51ddee3547 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0xbfd5eb51ddee3547
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe39cda56, 0x7fecca58,0xddee3547,0xbfd5eb51,x15, 190*SIGALIGN, x16,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5eb51ddee3547 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0xbfd5eb51ddee3547
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe39cda56, 0x7fecca58,0xddee3547,0xbfd5eb51,x15, 192*SIGALIGN, x16,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5eb51ddee3547 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0xbfd5eb51ddee3547
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe39cda56, 0x7fecca58,0xddee3547,0xbfd5eb51,x15, 194*SIGALIGN, x16,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5eb51ddee3547 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0xbfd5eb51ddee3547
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe39cda56, 0x7fecca58,0xddee3547,0xbfd5eb51,x15, 196*SIGALIGN, x16,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5eb51ddee3547 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fecca58e39cda56; valaddr_reg:x15; op2:x26; op2val:0xbfd5eb51ddee3547
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe39cda56, 0x7fecca58,0xddee3547,0xbfd5eb51,x15, 198*SIGALIGN, x16,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x113e54667c55b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x3ff113e54667c55b
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x4667c55b,0x3ff113e5,x15, 200*SIGALIGN, x16,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x113e54667c55b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x3ff113e54667c55b
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x4667c55b,0x3ff113e5,x15, 202*SIGALIGN, x16,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x113e54667c55b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x3ff113e54667c55b
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x4667c55b,0x3ff113e5,x15, 204*SIGALIGN, x16,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x113e54667c55b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x3ff113e54667c55b
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x4667c55b,0x3ff113e5,x15, 206*SIGALIGN, x16,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x113e54667c55b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe22aa3d2e74e72; valaddr_reg:x15; op2:x26; op2val:0x3ff113e54667c55b
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd2e74e72, 0x7fe22aa3,0x4667c55b,0x3ff113e5,x15, 208*SIGALIGN, x16,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad410adc27323 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0xbfead410adc27323
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xe5d38221, 0x7fe72925,0xadc27323,0xbfead410,x15, 210*SIGALIGN, x16,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad410adc27323 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0xbfead410adc27323
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xe5d38221, 0x7fe72925,0xadc27323,0xbfead410,x15, 212*SIGALIGN, x16,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad410adc27323 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0xbfead410adc27323
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xe5d38221, 0x7fe72925,0xadc27323,0xbfead410,x15, 214*SIGALIGN, x16,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad410adc27323 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0xbfead410adc27323
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe5d38221, 0x7fe72925,0xadc27323,0xbfead410,x15, 216*SIGALIGN, x16,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad410adc27323 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe72925e5d38221; valaddr_reg:x15; op2:x26; op2val:0xbfead410adc27323
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xe5d38221, 0x7fe72925,0xadc27323,0xbfead410,x15, 218*SIGALIGN, x16,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4f64e6a13bef0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x4004f64e6a13bef0
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x6a13bef0,0x4004f64e,x15, 220*SIGALIGN, x16,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4f64e6a13bef0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x4004f64e6a13bef0
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x6a13bef0,0x4004f64e,x15, 222*SIGALIGN, x16,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4f64e6a13bef0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x4004f64e6a13bef0
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x6a13bef0,0x4004f64e,x15, 224*SIGALIGN, x16,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4f64e6a13bef0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x4004f64e6a13bef0
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x6a13bef0,0x4004f64e,x15, 226*SIGALIGN, x16,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4f64e6a13bef0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fcc644d9f0caeeb; valaddr_reg:x15; op2:x26; op2val:0x4004f64e6a13bef0
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x9f0caeeb, 0x7fcc644d,0x6a13bef0,0x4004f64e,x15, 228*SIGALIGN, x16,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21caaeb158fe3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0xc0021caaeb158fe3
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x0f571128, 0x7fe662e4,0xeb158fe3,0xc0021caa,x15, 230*SIGALIGN, x16,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21caaeb158fe3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0xc0021caaeb158fe3
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x0f571128, 0x7fe662e4,0xeb158fe3,0xc0021caa,x15, 232*SIGALIGN, x16,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21caaeb158fe3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0xc0021caaeb158fe3
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x0f571128, 0x7fe662e4,0xeb158fe3,0xc0021caa,x15, 234*SIGALIGN, x16,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21caaeb158fe3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0xc0021caaeb158fe3
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0f571128, 0x7fe662e4,0xeb158fe3,0xc0021caa,x15, 236*SIGALIGN, x16,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x21caaeb158fe3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe662e40f571128; valaddr_reg:x15; op2:x26; op2val:0xc0021caaeb158fe3
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x0f571128, 0x7fe662e4,0xeb158fe3,0xc0021caa,x15, 238*SIGALIGN, x16,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2f9359b5cfdd6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x4012f9359b5cfdd6
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0x3a77236c, 0x7fed0dd9,0x9b5cfdd6,0x4012f935,x15, 240*SIGALIGN, x16,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2f9359b5cfdd6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x4012f9359b5cfdd6
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0x3a77236c, 0x7fed0dd9,0x9b5cfdd6,0x4012f935,x15, 242*SIGALIGN, x16,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2f9359b5cfdd6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x4012f9359b5cfdd6
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3a77236c, 0x7fed0dd9,0x9b5cfdd6,0x4012f935,x15, 244*SIGALIGN, x16,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2f9359b5cfdd6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x4012f9359b5cfdd6
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3a77236c, 0x7fed0dd9,0x9b5cfdd6,0x4012f935,x15, 246*SIGALIGN, x16,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2f9359b5cfdd6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed0dd93a77236c; valaddr_reg:x15; op2:x26; op2val:0x4012f9359b5cfdd6
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0x3a77236c, 0x7fed0dd9,0x9b5cfdd6,0x4012f935,x15, 248*SIGALIGN, x16,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1459e8b2e4f93 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0xc011459e8b2e4f93
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:0*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,0, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x8b2e4f93,0xc011459e,x15, 250*SIGALIGN, x16,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1459e8b2e4f93 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0xc011459e8b2e4f93
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:32*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,32, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x8b2e4f93,0xc011459e,x15, 252*SIGALIGN, x16,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1459e8b2e4f93 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0xc011459e8b2e4f93
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x8b2e4f93,0xc011459e,x15, 254*SIGALIGN, x16,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1459e8b2e4f93 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0xc011459e8b2e4f93
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x8b2e4f93,0xc011459e,x15, 256*SIGALIGN, x16,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1459e8b2e4f93 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fed2a01d9eb47d0; valaddr_reg:x15; op2:x26; op2val:0xc011459e8b2e4f93
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:128*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,128, 0, 0, 0xd9eb47d0, 0x7fed2a01,0x8b2e4f93,0xc011459e,x15, 258*SIGALIGN, x16,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x621305a3128de and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x15; op2:x26; op2val:0x3ff621305a3128de
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:64*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,64, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x5a3128de,0x3ff62130,x15, 260*SIGALIGN, x16,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x621305a3128de and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmul.d ; op1:x28; dest:x30; op1val:0x7fe722ea3b70e3d3; valaddr_reg:x15; op2:x26; op2val:0x3ff621305a3128de
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fmul.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3b70e3d3, 0x7fe722ea,0x5a3128de,0x3ff62130,x15, 262*SIGALIGN, x16,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x5a3128de,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x5a3128de,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x5a3128de,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x08183222,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x08183222,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x08183222,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x08183222,64,FLEN)
NAN_BOXED(0x9d7cfd5e,64,FLEN)
NAN_BOXED(0x08183222,64,FLEN)
test_dataset_1:
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x74858c47,64,FLEN)
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x74858c47,64,FLEN)
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x74858c47,64,FLEN)
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x74858c47,64,FLEN)
NAN_BOXED(0xb4043bd9,64,FLEN)
NAN_BOXED(0x74858c47,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x02226bc7,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x02226bc7,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x02226bc7,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x02226bc7,64,FLEN)
NAN_BOXED(0x77bf010f,64,FLEN)
NAN_BOXED(0x02226bc7,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x7d7aa14f,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x7d7aa14f,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x7d7aa14f,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x7d7aa14f,64,FLEN)
NAN_BOXED(0x2f746bf5,64,FLEN)
NAN_BOXED(0x7d7aa14f,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x16386ec6,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x16386ec6,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x16386ec6,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x16386ec6,64,FLEN)
NAN_BOXED(0x1b638e23,64,FLEN)
NAN_BOXED(0x16386ec6,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0xeaa47a7b,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0xeaa47a7b,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0xeaa47a7b,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0xeaa47a7b,64,FLEN)
NAN_BOXED(0x78a86fa6,64,FLEN)
NAN_BOXED(0xeaa47a7b,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x2008011c,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x2008011c,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x2008011c,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x2008011c,64,FLEN)
NAN_BOXED(0xb3b08c6b,64,FLEN)
NAN_BOXED(0x2008011c,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0xb4d24d46,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0xb4d24d46,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0xb4d24d46,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0xb4d24d46,64,FLEN)
NAN_BOXED(0x4963827f,64,FLEN)
NAN_BOXED(0xb4d24d46,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x59461f4d,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x59461f4d,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x59461f4d,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x59461f4d,64,FLEN)
NAN_BOXED(0xf57052f0,64,FLEN)
NAN_BOXED(0x59461f4d,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x465e6287,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x465e6287,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x465e6287,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x465e6287,64,FLEN)
NAN_BOXED(0x723d53e2,64,FLEN)
NAN_BOXED(0x465e6287,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x34800278,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x34800278,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x34800278,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x34800278,64,FLEN)
NAN_BOXED(0x55c85538,64,FLEN)
NAN_BOXED(0x34800278,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x4662d675,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x4662d675,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x4662d675,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x4662d675,64,FLEN)
NAN_BOXED(0xfa19f977,64,FLEN)
NAN_BOXED(0x4662d675,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0xc3978a67,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0xc3978a67,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0xc3978a67,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0xc3978a67,64,FLEN)
NAN_BOXED(0xd174ff65,64,FLEN)
NAN_BOXED(0xc3978a67,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0xb2a0b270,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0xb2a0b270,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0xb2a0b270,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0xb2a0b270,64,FLEN)
NAN_BOXED(0x22e524ad,64,FLEN)
NAN_BOXED(0xb2a0b270,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x11539a01,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x11539a01,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x11539a01,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x11539a01,64,FLEN)
NAN_BOXED(0x79c877a7,64,FLEN)
NAN_BOXED(0x11539a01,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0xd6967a1a,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0xd6967a1a,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0xd6967a1a,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0xd6967a1a,64,FLEN)
NAN_BOXED(0x259975cf,64,FLEN)
NAN_BOXED(0xd6967a1a,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0xf52639a8,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0xf52639a8,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0xf52639a8,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0xf52639a8,64,FLEN)
NAN_BOXED(0xf53d41f5,64,FLEN)
NAN_BOXED(0xf52639a8,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0xb42ded96,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0xb42ded96,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0xb42ded96,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0xb42ded96,64,FLEN)
NAN_BOXED(0x5a3b99f3,64,FLEN)
NAN_BOXED(0xb42ded96,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x3a0c0054,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x3a0c0054,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x3a0c0054,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x3a0c0054,64,FLEN)
NAN_BOXED(0xd60fc2f8,64,FLEN)
NAN_BOXED(0x3a0c0054,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x6956ccef,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x6956ccef,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x6956ccef,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x6956ccef,64,FLEN)
NAN_BOXED(0xb54b21cf,64,FLEN)
NAN_BOXED(0x6956ccef,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0xddee3547,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0xddee3547,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0xddee3547,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0xddee3547,64,FLEN)
NAN_BOXED(0xe39cda56,64,FLEN)
NAN_BOXED(0xddee3547,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x4667c55b,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x4667c55b,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x4667c55b,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x4667c55b,64,FLEN)
NAN_BOXED(0xd2e74e72,64,FLEN)
NAN_BOXED(0x4667c55b,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0xadc27323,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0xadc27323,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0xadc27323,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0xadc27323,64,FLEN)
NAN_BOXED(0xe5d38221,64,FLEN)
NAN_BOXED(0xadc27323,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x6a13bef0,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x6a13bef0,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x6a13bef0,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x6a13bef0,64,FLEN)
NAN_BOXED(0x9f0caeeb,64,FLEN)
NAN_BOXED(0x6a13bef0,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0xeb158fe3,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0xeb158fe3,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0xeb158fe3,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0xeb158fe3,64,FLEN)
NAN_BOXED(0x0f571128,64,FLEN)
NAN_BOXED(0xeb158fe3,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x9b5cfdd6,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x9b5cfdd6,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x9b5cfdd6,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x9b5cfdd6,64,FLEN)
NAN_BOXED(0x3a77236c,64,FLEN)
NAN_BOXED(0x9b5cfdd6,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x8b2e4f93,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x8b2e4f93,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x8b2e4f93,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x8b2e4f93,64,FLEN)
NAN_BOXED(0xd9eb47d0,64,FLEN)
NAN_BOXED(0x8b2e4f93,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x5a3128de,64,FLEN)
NAN_BOXED(0x3b70e3d3,64,FLEN)
NAN_BOXED(0x5a3128de,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 20*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 264*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
