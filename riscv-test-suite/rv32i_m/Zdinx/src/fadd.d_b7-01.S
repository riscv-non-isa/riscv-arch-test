
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Thu Aug 24 09:25:42 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32Zdinx/fadd.d.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd.d instruction of the RISC-V RV32_Zfinx_Zdinx extension for the fadd.d_b7 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zfinx_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*Zdinx.*);def TEST_CASE_1=True;",fadd.d_b7)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:// rs1 == rs2 == rd, rs1==x30, rs2==x30, rd==x30,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x30; op1val:0x7feb0580f98a7dbd; valaddr_reg:x3; op2:x30; op2val:0x7feb0580f98a7dbd
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x30, x31,x30,x31,96, 0, 0, 0xf98a7dbd, 0x7feb0580,0xf98a7dbd,0x7feb0580,x3, 0*SIGALIGN, x4,x1, x2)

inst_1:// rs1 == rs2 != rd, rs1==x26, rs2==x26, rd==x28,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeaa51052e977 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaeaa51052e977 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x26; dest:x28; op1val:0x7fdaeaa51052e977; valaddr_reg:x3; op2:x26; op2val:0x7fdaeaa51052e977
offset:2*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x28, x29, x26, x27,x26,x27,96, 0, 0, 0x1052e977, 0x7fdaeaa5,0x1052e977,0x7fdaeaa5,x3, 2*SIGALIGN, x4,x1, x2)

inst_2:// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x28, rs2==x24, rd==x26,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05c5ccdf19706 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x05c5ccdf19706 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x26; op1val:0x7fe05c5ccdf19706; valaddr_reg:x3; op2:x24; op2val:0xffe05c5ccdf19706
offset:4*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x26, x27, x28, x29,x24,x25,96, 0, 0, 0xcdf19706, 0x7fe05c5c,0xcdf19706,0xffe05c5c,x3, 4*SIGALIGN, x4,x1, x2)

inst_3:// rs1 == rd != rs2, rs1==x24, rs2==x28, rd==x24,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x914e0c751c4f4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x914e0c751c4f4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x24; dest:x24; op1val:0x7fe914e0c751c4f4; valaddr_reg:x3; op2:x28; op2val:0xffe914e0c751c4f4
offset:6*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x24, x25, x24, x25,x28,x29,96, 0, 0, 0xc751c4f4, 0x7fe914e0,0xc751c4f4,0xffe914e0,x3, 6*SIGALIGN, x4,x1, x2)

inst_4:// rs2 == rd != rs1, rs1==x20, rs2==x22, rd==x22,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe809082dd48fb and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe809082dd48fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x20; dest:x22; op1val:0x7fde809082dd48fb; valaddr_reg:x3; op2:x22; op2val:0xffde809082dd48fb
offset:8*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x22, x23, x20, x21,x22,x23,96, 0, 0, 0x82dd48fb, 0x7fde8090,0x82dd48fb,0xffde8090,x3, 8*SIGALIGN, x4,x1, x2)

inst_5:// rs1==x22, rs2==x18, rd==x20,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0f42c0dfaf72 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd0f42c0dfaf72 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x22; dest:x20; op1val:0x7fed0f42c0dfaf72; valaddr_reg:x3; op2:x18; op2val:0xffed0f42c0dfaf72
offset:10*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x20, x21, x22, x23,x18,x19,96, 0, 0, 0xc0dfaf72, 0x7fed0f42,0xc0dfaf72,0xffed0f42,x3, 10*SIGALIGN, x4,x1, x2)

inst_6:// rs1==x16, rs2==x20, rd==x18,fs1 == 0 and fe1 == 0x7fd and fm1 == 0x209a1991e3307 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x209a1991e3307 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x16; dest:x18; op1val:0x7fd209a1991e3307; valaddr_reg:x3; op2:x20; op2val:0xffd209a1991e3307
offset:12*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x18, x19, x16, x17,x20,x21,96, 0, 0, 0x991e3307, 0x7fd209a1,0x991e3307,0xffd209a1,x3, 12*SIGALIGN, x4,x1, x2)

inst_7:// rs1==x18, rs2==x14, rd==x16,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c9adc7329695 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3c9adc7329695 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x18; dest:x16; op1val:0x7fe3c9adc7329695; valaddr_reg:x3; op2:x14; op2val:0xffe3c9adc7329695
offset:14*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x16, x17, x18, x19,x14,x15,96, 0, 0, 0xc7329695, 0x7fe3c9ad,0xc7329695,0xffe3c9ad,x3, 14*SIGALIGN, x4,x1, x2)

inst_8:// rs1==x12, rs2==x16, rd==x14,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ca42e21585b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd1ca42e21585b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x12; dest:x14; op1val:0x7fed1ca42e21585b; valaddr_reg:x3; op2:x16; op2val:0xffed1ca42e21585b
offset:16*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x14, x15, x12, x13,x16,x17,96, 0, 0, 0x2e21585b, 0x7fed1ca4,0x2e21585b,0xffed1ca4,x3, 16*SIGALIGN, x4,x1, x2)
RVTEST_VALBASEUPD(x16,test_dataset_1)

inst_9:// rs1==x14, rs2==x10, rd==x12,fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed4cb2685903 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9ed4cb2685903 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x14; dest:x12; op1val:0x7fe9ed4cb2685903; valaddr_reg:x16; op2:x10; op2val:0xffe9ed4cb2685903
offset:0*FLEN/8; correctval:??; testreg:x2;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x12, x13, x14, x15,x10,x11,96, 0, 0, 0xb2685903, 0x7fe9ed4c,0xb2685903,0xffe9ed4c,x16, 18*SIGALIGN, x17,x1, x2)

inst_10:// rs1==x8, rs2==x12, rd==x10,fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d97530ca446d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x3d97530ca446d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x8; dest:x10; op1val:0x7fd3d97530ca446d; valaddr_reg:x16; op2:x12; op2val:0xffd3d97530ca446d
offset:2*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x10, x11, x8, x9,x12,x13,96, 0, 0, 0x30ca446d, 0x7fd3d975,0x30ca446d,0xffd3d975,x16, 20*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11:// rs1==x10, rs2==x6, rd==x8,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc3488366e29b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcc3488366e29b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x10; dest:x8; op1val:0x7fecc3488366e29b; valaddr_reg:x16; op2:x6; op2val:0xffecc3488366e29b
offset:4*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x8, x9, x10, x11,x6,x7,96, 0, 0, 0x8366e29b, 0x7fecc348,0x8366e29b,0xffecc348,x16, 0*SIGALIGN, x17,x1, x14)

inst_12:// rs1==x4, rs2==x8, rd==x6,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe3796147a7f97 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe3796147a7f97 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x4; dest:x6; op1val:0x7fde3796147a7f97; valaddr_reg:x16; op2:x8; op2val:0xffde3796147a7f97
offset:6*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x6, x7, x4, x5,x8,x9,96, 0, 0, 0x147a7f97, 0x7fde3796,0x147a7f97,0xffde3796,x16, 2*SIGALIGN, x17,x1, x14)

inst_13:// rs1==x6, rs2==x2, rd==x4,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc978aa879221 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xbc978aa879221 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x6; dest:x4; op1val:0x7fdbc978aa879221; valaddr_reg:x16; op2:x2; op2val:0xffdbc978aa879221
offset:8*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x4, x5, x6, x7,x2,x3,96, 0, 0, 0xaa879221, 0x7fdbc978,0xaa879221,0xffdbc978,x16, 4*SIGALIGN, x17,x1, x14)

inst_14:// rs1==x2,fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd3762f4d1629c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd3762f4d1629c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x2; dest:x30; op1val:0x7fed3762f4d1629c; valaddr_reg:x16; op2:x28; op2val:0xffed3762f4d1629c
offset:10*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x2, x3,x28,x29,96, 0, 0, 0xf4d1629c, 0x7fed3762,0xf4d1629c,0xffed3762,x16, 6*SIGALIGN, x17,x1, x14)

inst_15:// rs2==x4,fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8754038aa2cf and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe8754038aa2cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8754038aa2cf; valaddr_reg:x16; op2:x4; op2val:0xffde8754038aa2cf
offset:12*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x4,x5,96, 0, 0, 0x038aa2cf, 0x7fde8754,0x038aa2cf,0xffde8754,x16, 8*SIGALIGN, x17,x1, x14)

inst_16:// rd==x2,fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0abe7f07f8c6f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0abe7f07f8c6f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x30; dest:x2; op1val:0x7fd0abe7f07f8c6f; valaddr_reg:x16; op2:x28; op2val:0xffd0abe7f07f8c6f
offset:14*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x2, x3, x30, x31,x28,x29,96, 0, 0, 0xf07f8c6f, 0x7fd0abe7,0xf07f8c6f,0xffd0abe7,x16, 10*SIGALIGN, x17,x1, x14)

inst_17:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ef1d7a9fa74 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x18ef1d7a9fa74 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18ef1d7a9fa74; valaddr_reg:x16; op2:x26; op2val:0xffe18ef1d7a9fa74
offset:16*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd7a9fa74, 0x7fe18ef1,0xd7a9fa74,0xffe18ef1,x16, 12*SIGALIGN, x17,x1, x14)

inst_18:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x707d21f5c40de and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x707d21f5c40de and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe707d21f5c40de; valaddr_reg:x16; op2:x26; op2val:0xffe707d21f5c40de
offset:18*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1f5c40de, 0x7fe707d2,0x1f5c40de,0xffe707d2,x16, 14*SIGALIGN, x17,x1, x14)

inst_19:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa65214b23e38e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa65214b23e38e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea65214b23e38e; valaddr_reg:x16; op2:x26; op2val:0xffea65214b23e38e
offset:20*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4b23e38e, 0x7fea6521,0x4b23e38e,0xffea6521,x16, 16*SIGALIGN, x17,x1, x14)

inst_20:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x2b954e52a4bff and fs2 == 1 and fe2 == 0x7f5 and fm2 == 0x2b954e52a4bff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f52b954e52a4bff; valaddr_reg:x16; op2:x26; op2val:0xff52b954e52a4bff
offset:22*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe52a4bff, 0x7f52b954,0xe52a4bff,0xff52b954,x16, 18*SIGALIGN, x17,x1, x14)

inst_21:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbc366e555215f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xbc366e555215f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febc366e555215f; valaddr_reg:x16; op2:x26; op2val:0xffebc366e555215f
offset:24*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe555215f, 0x7febc366,0xe555215f,0xffebc366,x16, 20*SIGALIGN, x17,x1, x14)

inst_22:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4d025f5a10f55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x4d025f5a10f55 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd4d025f5a10f55; valaddr_reg:x16; op2:x26; op2val:0xffd4d025f5a10f55
offset:26*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf5a10f55, 0x7fd4d025,0xf5a10f55,0xffd4d025,x16, 22*SIGALIGN, x17,x1, x14)

inst_23:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x874e2eeac1c13 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x874e2eeac1c13 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc874e2eeac1c13; valaddr_reg:x16; op2:x26; op2val:0xffc874e2eeac1c13
offset:28*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeeac1c13, 0x7fc874e2,0xeeac1c13,0xffc874e2,x16, 24*SIGALIGN, x17,x1, x14)

inst_24:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe8af77cda8053 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xe8af77cda8053 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fce8af77cda8053; valaddr_reg:x16; op2:x26; op2val:0xffce8af77cda8053
offset:30*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7cda8053, 0x7fce8af7,0x7cda8053,0xffce8af7,x16, 26*SIGALIGN, x17,x1, x14)

inst_25:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b3a56e2c058e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9b3a56e2c058e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9b3a56e2c058e; valaddr_reg:x16; op2:x26; op2val:0xffe9b3a56e2c058e
offset:32*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6e2c058e, 0x7fe9b3a5,0x6e2c058e,0xffe9b3a5,x16, 28*SIGALIGN, x17,x1, x14)

inst_26:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49818dfc8788f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x49818dfc8788f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb49818dfc8788f; valaddr_reg:x16; op2:x26; op2val:0xffb49818dfc8788f
offset:34*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdfc8788f, 0x7fb49818,0xdfc8788f,0xffb49818,x16, 30*SIGALIGN, x17,x1, x14)

inst_27:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0410cbbfdec45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0410cbbfdec45 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0410cbbfdec45; valaddr_reg:x16; op2:x26; op2val:0xffe0410cbbfdec45
offset:36*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbbfdec45, 0x7fe0410c,0xbbfdec45,0xffe0410c,x16, 32*SIGALIGN, x17,x1, x14)

inst_28:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbeb3709a573b7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xbeb3709a573b7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbbeb3709a573b7; valaddr_reg:x16; op2:x26; op2val:0xffbbeb3709a573b7
offset:38*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x09a573b7, 0x7fbbeb37,0x09a573b7,0xffbbeb37,x16, 34*SIGALIGN, x17,x1, x14)

inst_29:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69c26ac7fce60 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x69c26ac7fce60 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe69c26ac7fce60; valaddr_reg:x16; op2:x26; op2val:0xffe69c26ac7fce60
offset:40*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xac7fce60, 0x7fe69c26,0xac7fce60,0xffe69c26,x16, 36*SIGALIGN, x17,x1, x14)

inst_30:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa101ccfb0623a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa101ccfb0623a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea101ccfb0623a; valaddr_reg:x16; op2:x26; op2val:0xffea101ccfb0623a
offset:42*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xcfb0623a, 0x7fea101c,0xcfb0623a,0xffea101c,x16, 38*SIGALIGN, x17,x1, x14)

inst_31:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed7c3ef329d04 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xed7c3ef329d04 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feed7c3ef329d04; valaddr_reg:x16; op2:x26; op2val:0xffeed7c3ef329d04
offset:44*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xef329d04, 0x7feed7c3,0xef329d04,0xffeed7c3,x16, 40*SIGALIGN, x17,x1, x14)

inst_32:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2cdc24d268f9f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x2cdc24d268f9f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2cdc24d268f9f; valaddr_reg:x16; op2:x26; op2val:0xffe2cdc24d268f9f
offset:46*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4d268f9f, 0x7fe2cdc2,0x4d268f9f,0xffe2cdc2,x16, 42*SIGALIGN, x17,x1, x14)

inst_33:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x314c82f3115df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x314c82f3115df and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe314c82f3115df; valaddr_reg:x16; op2:x26; op2val:0xffe314c82f3115df
offset:48*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2f3115df, 0x7fe314c8,0x2f3115df,0xffe314c8,x16, 44*SIGALIGN, x17,x1, x14)

inst_34:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26bbbacf7eaef and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x26bbbacf7eaef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26bbbacf7eaef; valaddr_reg:x16; op2:x26; op2val:0xffe26bbbacf7eaef
offset:50*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xacf7eaef, 0x7fe26bbb,0xacf7eaef,0xffe26bbb,x16, 46*SIGALIGN, x17,x1, x14)

inst_35:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x83df99d24bacb and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x83df99d24bacb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc83df99d24bacb; valaddr_reg:x16; op2:x26; op2val:0xffc83df99d24bacb
offset:52*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9d24bacb, 0x7fc83df9,0x9d24bacb,0xffc83df9,x16, 48*SIGALIGN, x17,x1, x14)

inst_36:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39bd67fecd9d5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39bd67fecd9d5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe39bd67fecd9d5; valaddr_reg:x16; op2:x26; op2val:0xffe39bd67fecd9d5
offset:54*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7fecd9d5, 0x7fe39bd6,0x7fecd9d5,0xffe39bd6,x16, 50*SIGALIGN, x17,x1, x14)

inst_37:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe7f7bd88d7c8f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe7f7bd88d7c8f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde7f7bd88d7c8f; valaddr_reg:x16; op2:x26; op2val:0xffde7f7bd88d7c8f
offset:56*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd88d7c8f, 0x7fde7f7b,0xd88d7c8f,0xffde7f7b,x16, 52*SIGALIGN, x17,x1, x14)

inst_38:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x83e4a9485598d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x83e4a9485598d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe83e4a9485598d; valaddr_reg:x16; op2:x26; op2val:0xffe83e4a9485598d
offset:58*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9485598d, 0x7fe83e4a,0x9485598d,0xffe83e4a,x16, 54*SIGALIGN, x17,x1, x14)

inst_39:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd8c56582791a6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd8c56582791a6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed8c56582791a6; valaddr_reg:x16; op2:x26; op2val:0xffed8c56582791a6
offset:60*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x582791a6, 0x7fed8c56,0x582791a6,0xffed8c56,x16, 56*SIGALIGN, x17,x1, x14)

inst_40:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcbdd58ecc1b45 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcbdd58ecc1b45 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecbdd58ecc1b45; valaddr_reg:x16; op2:x26; op2val:0xffecbdd58ecc1b45
offset:62*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8ecc1b45, 0x7fecbdd5,0x8ecc1b45,0xffecbdd5,x16, 58*SIGALIGN, x17,x1, x14)

inst_41:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x14c9836bbe6ff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x14c9836bbe6ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe14c9836bbe6ff; valaddr_reg:x16; op2:x26; op2val:0xffe14c9836bbe6ff
offset:64*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x36bbe6ff, 0x7fe14c98,0x36bbe6ff,0xffe14c98,x16, 60*SIGALIGN, x17,x1, x14)

inst_42:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x691ae7e1929e8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x691ae7e1929e8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe691ae7e1929e8; valaddr_reg:x16; op2:x26; op2val:0xffe691ae7e1929e8
offset:66*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7e1929e8, 0x7fe691ae,0x7e1929e8,0xffe691ae,x16, 62*SIGALIGN, x17,x1, x14)

inst_43:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9f8dcc4f1275c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9f8dcc4f1275c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9f8dcc4f1275c; valaddr_reg:x16; op2:x26; op2val:0xffe9f8dcc4f1275c
offset:68*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc4f1275c, 0x7fe9f8dc,0xc4f1275c,0xffe9f8dc,x16, 64*SIGALIGN, x17,x1, x14)

inst_44:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca428c2b7c81f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xca428c2b7c81f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feca428c2b7c81f; valaddr_reg:x16; op2:x26; op2val:0xffeca428c2b7c81f
offset:70*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc2b7c81f, 0x7feca428,0xc2b7c81f,0xffeca428,x16, 66*SIGALIGN, x17,x1, x14)

inst_45:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe64794dad7d48 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xe64794dad7d48 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fee64794dad7d48; valaddr_reg:x16; op2:x26; op2val:0xffee64794dad7d48
offset:72*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4dad7d48, 0x7fee6479,0x4dad7d48,0xffee6479,x16, 68*SIGALIGN, x17,x1, x14)

inst_46:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcd606a3f0f54d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xcd606a3f0f54d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdcd606a3f0f54d; valaddr_reg:x16; op2:x26; op2val:0xffdcd606a3f0f54d
offset:74*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa3f0f54d, 0x7fdcd606,0xa3f0f54d,0xffdcd606,x16, 70*SIGALIGN, x17,x1, x14)

inst_47:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfe1581ecd07ea and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfe1581ecd07ea and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fefe1581ecd07ea; valaddr_reg:x16; op2:x26; op2val:0xffefe1581ecd07ea
offset:76*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1ecd07ea, 0x7fefe158,0x1ecd07ea,0xffefe158,x16, 72*SIGALIGN, x17,x1, x14)

inst_48:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x962eb496df1c1 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x962eb496df1c1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe962eb496df1c1; valaddr_reg:x16; op2:x26; op2val:0xffe962eb496df1c1
offset:78*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x496df1c1, 0x7fe962eb,0x496df1c1,0xffe962eb,x16, 74*SIGALIGN, x17,x1, x14)

inst_49:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39beb50761e3d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x39beb50761e3d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe39beb50761e3d; valaddr_reg:x16; op2:x26; op2val:0xffe39beb50761e3d
offset:80*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x50761e3d, 0x7fe39beb,0x50761e3d,0xffe39beb,x16, 76*SIGALIGN, x17,x1, x14)

inst_50:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x42a2ac1575123 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x42a2ac1575123 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe42a2ac1575123; valaddr_reg:x16; op2:x26; op2val:0xffe42a2ac1575123
offset:82*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc1575123, 0x7fe42a2a,0xc1575123,0xffe42a2a,x16, 78*SIGALIGN, x17,x1, x14)

inst_51:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf1bca90426463 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf1bca90426463 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fcf1bca90426463; valaddr_reg:x16; op2:x26; op2val:0xffcf1bca90426463
offset:84*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x90426463, 0x7fcf1bca,0x90426463,0xffcf1bca,x16, 80*SIGALIGN, x17,x1, x14)

inst_52:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xdfc83569216bf and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xdfc83569216bf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbdfc83569216bf; valaddr_reg:x16; op2:x26; op2val:0xffbdfc83569216bf
offset:86*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x569216bf, 0x7fbdfc83,0x569216bf,0xffbdfc83,x16, 82*SIGALIGN, x17,x1, x14)

inst_53:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96d3944ae92c5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x96d3944ae92c5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe96d3944ae92c5; valaddr_reg:x16; op2:x26; op2val:0xffe96d3944ae92c5
offset:88*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x44ae92c5, 0x7fe96d39,0x44ae92c5,0xffe96d39,x16, 84*SIGALIGN, x17,x1, x14)

inst_54:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa1bf5c83faf60 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa1bf5c83faf60 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea1bf5c83faf60; valaddr_reg:x16; op2:x26; op2val:0xffea1bf5c83faf60
offset:90*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc83faf60, 0x7fea1bf5,0xc83faf60,0xffea1bf5,x16, 86*SIGALIGN, x17,x1, x14)

inst_55:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2bbdffdaf66c3 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x2bbdffdaf66c3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc2bbdffdaf66c3; valaddr_reg:x16; op2:x26; op2val:0xffc2bbdffdaf66c3
offset:92*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfdaf66c3, 0x7fc2bbdf,0xfdaf66c3,0xffc2bbdf,x16, 88*SIGALIGN, x17,x1, x14)

inst_56:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x728eb744bb2ef and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x728eb744bb2ef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa728eb744bb2ef; valaddr_reg:x16; op2:x26; op2val:0xffa728eb744bb2ef
offset:94*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x744bb2ef, 0x7fa728eb,0x744bb2ef,0xffa728eb,x16, 90*SIGALIGN, x17,x1, x14)

inst_57:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ed9e7beff05 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd1ed9e7beff05 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed1ed9e7beff05; valaddr_reg:x16; op2:x26; op2val:0xffed1ed9e7beff05
offset:96*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe7beff05, 0x7fed1ed9,0xe7beff05,0xffed1ed9,x16, 92*SIGALIGN, x17,x1, x14)

inst_58:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c762dc4bc5d6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x5c762dc4bc5d6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe5c762dc4bc5d6; valaddr_reg:x16; op2:x26; op2val:0xffe5c762dc4bc5d6
offset:98*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdc4bc5d6, 0x7fe5c762,0xdc4bc5d6,0xffe5c762,x16, 94*SIGALIGN, x17,x1, x14)

inst_59:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x451eb54c10b8b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x451eb54c10b8b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe451eb54c10b8b; valaddr_reg:x16; op2:x26; op2val:0xffe451eb54c10b8b
offset:100*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x54c10b8b, 0x7fe451eb,0x54c10b8b,0xffe451eb,x16, 96*SIGALIGN, x17,x1, x14)

inst_60:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x26e34e07a9172 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x26e34e07a9172 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe26e34e07a9172; valaddr_reg:x16; op2:x26; op2val:0xffe26e34e07a9172
offset:102*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe07a9172, 0x7fe26e34,0xe07a9172,0xffe26e34,x16, 98*SIGALIGN, x17,x1, x14)

inst_61:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7b05f6eabb69f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x7b05f6eabb69f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd7b05f6eabb69f; valaddr_reg:x16; op2:x26; op2val:0xffd7b05f6eabb69f
offset:104*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6eabb69f, 0x7fd7b05f,0x6eabb69f,0xffd7b05f,x16, 100*SIGALIGN, x17,x1, x14)

inst_62:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a1fa26c0948f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x2a1fa26c0948f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa2a1fa26c0948f; valaddr_reg:x16; op2:x26; op2val:0xffa2a1fa26c0948f
offset:106*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x26c0948f, 0x7fa2a1fa,0x26c0948f,0xffa2a1fa,x16, 102*SIGALIGN, x17,x1, x14)

inst_63:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec0c4abe1fd0e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xec0c4abe1fd0e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feec0c4abe1fd0e; valaddr_reg:x16; op2:x26; op2val:0xffeec0c4abe1fd0e
offset:108*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xabe1fd0e, 0x7feec0c4,0xabe1fd0e,0xffeec0c4,x16, 104*SIGALIGN, x17,x1, x14)

inst_64:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb797ef55e1cf and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xfb797ef55e1cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbfb797ef55e1cf; valaddr_reg:x16; op2:x26; op2val:0xffbfb797ef55e1cf
offset:110*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xef55e1cf, 0x7fbfb797,0xef55e1cf,0xffbfb797,x16, 106*SIGALIGN, x17,x1, x14)

inst_65:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x99fb7503e8d08 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x99fb7503e8d08 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe99fb7503e8d08; valaddr_reg:x16; op2:x26; op2val:0xffe99fb7503e8d08
offset:112*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x503e8d08, 0x7fe99fb7,0x503e8d08,0xffe99fb7,x16, 108*SIGALIGN, x17,x1, x14)

inst_66:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x75450c5a9817f and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x75450c5a9817f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f975450c5a9817f; valaddr_reg:x16; op2:x26; op2val:0xff975450c5a9817f
offset:114*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc5a9817f, 0x7f975450,0xc5a9817f,0xff975450,x16, 110*SIGALIGN, x17,x1, x14)

inst_67:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9fbeb1abfb6e7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x9fbeb1abfb6e7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb9fbeb1abfb6e7; valaddr_reg:x16; op2:x26; op2val:0xffb9fbeb1abfb6e7
offset:116*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1abfb6e7, 0x7fb9fbeb,0x1abfb6e7,0xffb9fbeb,x16, 112*SIGALIGN, x17,x1, x14)

inst_68:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc44223126cbc7 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xc44223126cbc7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fcc44223126cbc7; valaddr_reg:x16; op2:x26; op2val:0xffcc44223126cbc7
offset:118*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3126cbc7, 0x7fcc4422,0x3126cbc7,0xffcc4422,x16, 114*SIGALIGN, x17,x1, x14)

inst_69:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66b37637d118d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x66b37637d118d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd66b37637d118d; valaddr_reg:x16; op2:x26; op2val:0xffd66b37637d118d
offset:120*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x637d118d, 0x7fd66b37,0x637d118d,0xffd66b37,x16, 116*SIGALIGN, x17,x1, x14)

inst_70:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x01dca4dde57a5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x01dca4dde57a5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe01dca4dde57a5; valaddr_reg:x16; op2:x26; op2val:0xffe01dca4dde57a5
offset:122*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4dde57a5, 0x7fe01dca,0x4dde57a5,0xffe01dca,x16, 118*SIGALIGN, x17,x1, x14)

inst_71:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9d5f97660dadf and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x9d5f97660dadf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb9d5f97660dadf; valaddr_reg:x16; op2:x26; op2val:0xffb9d5f97660dadf
offset:124*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7660dadf, 0x7fb9d5f9,0x7660dadf,0xffb9d5f9,x16, 120*SIGALIGN, x17,x1, x14)

inst_72:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9847d9429817b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x9847d9429817b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc9847d9429817b; valaddr_reg:x16; op2:x26; op2val:0xffc9847d9429817b
offset:126*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9429817b, 0x7fc9847d,0x9429817b,0xffc9847d,x16, 122*SIGALIGN, x17,x1, x14)

inst_73:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x76940d9e18057 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x76940d9e18057 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe76940d9e18057; valaddr_reg:x16; op2:x26; op2val:0xffe76940d9e18057
offset:128*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd9e18057, 0x7fe76940,0xd9e18057,0xffe76940,x16, 124*SIGALIGN, x17,x1, x14)

inst_74:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd64347e477166 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd64347e477166 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed64347e477166; valaddr_reg:x16; op2:x26; op2val:0xffed64347e477166
offset:130*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7e477166, 0x7fed6434,0x7e477166,0xffed6434,x16, 126*SIGALIGN, x17,x1, x14)

inst_75:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5864580d04bef and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x5864580d04bef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe5864580d04bef; valaddr_reg:x16; op2:x26; op2val:0xffe5864580d04bef
offset:132*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x80d04bef, 0x7fe58645,0x80d04bef,0xffe58645,x16, 128*SIGALIGN, x17,x1, x14)

inst_76:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xdb8da7279369f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xdb8da7279369f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fadb8da7279369f; valaddr_reg:x16; op2:x26; op2val:0xffadb8da7279369f
offset:134*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7279369f, 0x7fadb8da,0x7279369f,0xffadb8da,x16, 130*SIGALIGN, x17,x1, x14)

inst_77:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0db7e0a5d748 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0db7e0a5d748 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feb0db7e0a5d748; valaddr_reg:x16; op2:x26; op2val:0xffeb0db7e0a5d748
offset:136*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe0a5d748, 0x7feb0db7,0xe0a5d748,0xffeb0db7,x16, 132*SIGALIGN, x17,x1, x14)

inst_78:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00b42e8f00d47 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x00b42e8f00d47 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd00b42e8f00d47; valaddr_reg:x16; op2:x26; op2val:0xffd00b42e8f00d47
offset:138*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe8f00d47, 0x7fd00b42,0xe8f00d47,0xffd00b42,x16, 134*SIGALIGN, x17,x1, x14)

inst_79:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc4edf85532923 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xc4edf85532923 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdc4edf85532923; valaddr_reg:x16; op2:x26; op2val:0xffdc4edf85532923
offset:140*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x85532923, 0x7fdc4edf,0x85532923,0xffdc4edf,x16, 136*SIGALIGN, x17,x1, x14)

inst_80:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2f1c5d734347 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe2f1c5d734347 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde2f1c5d734347; valaddr_reg:x16; op2:x26; op2val:0xffde2f1c5d734347
offset:142*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5d734347, 0x7fde2f1c,0x5d734347,0xffde2f1c,x16, 138*SIGALIGN, x17,x1, x14)

inst_81:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2362beb7fcccc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x2362beb7fcccc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2362beb7fcccc; valaddr_reg:x16; op2:x26; op2val:0xffe2362beb7fcccc
offset:144*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeb7fcccc, 0x7fe2362b,0xeb7fcccc,0xffe2362b,x16, 140*SIGALIGN, x17,x1, x14)

inst_82:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3eebb35310409 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x3eebb35310409 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3eebb35310409; valaddr_reg:x16; op2:x26; op2val:0xffd3eebb35310409
offset:146*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x35310409, 0x7fd3eebb,0x35310409,0xffd3eebb,x16, 142*SIGALIGN, x17,x1, x14)

inst_83:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xace1ecea16623 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xace1ecea16623 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feace1ecea16623; valaddr_reg:x16; op2:x26; op2val:0xffeace1ecea16623
offset:148*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xcea16623, 0x7feace1e,0xcea16623,0xffeace1e,x16, 144*SIGALIGN, x17,x1, x14)

inst_84:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1f06fdec36709 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1f06fdec36709 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe1f06fdec36709; valaddr_reg:x16; op2:x26; op2val:0xffe1f06fdec36709
offset:150*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdec36709, 0x7fe1f06f,0xdec36709,0xffe1f06f,x16, 146*SIGALIGN, x17,x1, x14)

inst_85:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7bafa3050f8b7 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x7bafa3050f8b7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe7bafa3050f8b7; valaddr_reg:x16; op2:x26; op2val:0xffe7bafa3050f8b7
offset:152*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3050f8b7, 0x7fe7bafa,0x3050f8b7,0xffe7bafa,x16, 148*SIGALIGN, x17,x1, x14)

inst_86:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x76587e2d6216f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x76587e2d6216f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa76587e2d6216f; valaddr_reg:x16; op2:x26; op2val:0xffa76587e2d6216f
offset:154*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe2d6216f, 0x7fa76587,0xe2d6216f,0xffa76587,x16, 150*SIGALIGN, x17,x1, x14)

inst_87:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xebc97dc31d5a7 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xebc97dc31d5a7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fcebc97dc31d5a7; valaddr_reg:x16; op2:x26; op2val:0xffcebc97dc31d5a7
offset:156*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdc31d5a7, 0x7fcebc97,0xdc31d5a7,0xffcebc97,x16, 152*SIGALIGN, x17,x1, x14)

inst_88:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x68add14e18ecb and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x68add14e18ecb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd68add14e18ecb; valaddr_reg:x16; op2:x26; op2val:0xffd68add14e18ecb
offset:158*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x14e18ecb, 0x7fd68add,0x14e18ecb,0xffd68add,x16, 154*SIGALIGN, x17,x1, x14)

inst_89:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6fd2704b8e37f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x6fd2704b8e37f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd6fd2704b8e37f; valaddr_reg:x16; op2:x26; op2val:0xffd6fd2704b8e37f
offset:160*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x04b8e37f, 0x7fd6fd27,0x04b8e37f,0xffd6fd27,x16, 156*SIGALIGN, x17,x1, x14)

inst_90:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x447a9936a43d3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x447a9936a43d3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe447a9936a43d3; valaddr_reg:x16; op2:x26; op2val:0xffe447a9936a43d3
offset:162*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x936a43d3, 0x7fe447a9,0x936a43d3,0xffe447a9,x16, 158*SIGALIGN, x17,x1, x14)

inst_91:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6e65a8d3dbea5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6e65a8d3dbea5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe6e65a8d3dbea5; valaddr_reg:x16; op2:x26; op2val:0xffe6e65a8d3dbea5
offset:164*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8d3dbea5, 0x7fe6e65a,0x8d3dbea5,0xffe6e65a,x16, 160*SIGALIGN, x17,x1, x14)

inst_92:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa85d306a197c5 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa85d306a197c5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fda85d306a197c5; valaddr_reg:x16; op2:x26; op2val:0xffda85d306a197c5
offset:166*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x06a197c5, 0x7fda85d3,0x06a197c5,0xffda85d3,x16, 162*SIGALIGN, x17,x1, x14)

inst_93:// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x8f90cc1b18bff and fs2 == 1 and fe2 == 0x7f5 and fm2 == 0x8f90cc1b18bff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f58f90cc1b18bff; valaddr_reg:x16; op2:x26; op2val:0xff58f90cc1b18bff
offset:168*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc1b18bff, 0x7f58f90c,0xc1b18bff,0xff58f90c,x16, 164*SIGALIGN, x17,x1, x14)

inst_94:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x566d65947d7e7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x566d65947d7e7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd566d65947d7e7; valaddr_reg:x16; op2:x26; op2val:0xffd566d65947d7e7
offset:170*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5947d7e7, 0x7fd566d6,0x5947d7e7,0xffd566d6,x16, 166*SIGALIGN, x17,x1, x14)

inst_95:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x465936dcae3fb and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x465936dcae3fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe465936dcae3fb; valaddr_reg:x16; op2:x26; op2val:0xffe465936dcae3fb
offset:172*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6dcae3fb, 0x7fe46593,0x6dcae3fb,0xffe46593,x16, 168*SIGALIGN, x17,x1, x14)

inst_96:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0377eab1f21f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xc0377eab1f21f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fec0377eab1f21f; valaddr_reg:x16; op2:x26; op2val:0xffec0377eab1f21f
offset:174*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeab1f21f, 0x7fec0377,0xeab1f21f,0xffec0377,x16, 170*SIGALIGN, x17,x1, x14)

inst_97:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa85a268409ae9 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa85a268409ae9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fda85a268409ae9; valaddr_reg:x16; op2:x26; op2val:0xffda85a268409ae9
offset:176*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x68409ae9, 0x7fda85a2,0x68409ae9,0xffda85a2,x16, 172*SIGALIGN, x17,x1, x14)

inst_98:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6756366451777 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6756366451777 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe6756366451777; valaddr_reg:x16; op2:x26; op2val:0xffe6756366451777
offset:178*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x66451777, 0x7fe67563,0x66451777,0xffe67563,x16, 174*SIGALIGN, x17,x1, x14)

inst_99:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x530b56ed605ac and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x530b56ed605ac and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe530b56ed605ac; valaddr_reg:x16; op2:x26; op2val:0xffe530b56ed605ac
offset:180*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6ed605ac, 0x7fe530b5,0x6ed605ac,0xffe530b5,x16, 176*SIGALIGN, x17,x1, x14)

inst_100:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc80a67882d6d1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xc80a67882d6d1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdc80a67882d6d1; valaddr_reg:x16; op2:x26; op2val:0xffdc80a67882d6d1
offset:182*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7882d6d1, 0x7fdc80a6,0x7882d6d1,0xffdc80a6,x16, 178*SIGALIGN, x17,x1, x14)

inst_101:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x42f12d7244f4f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x42f12d7244f4f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc42f12d7244f4f; valaddr_reg:x16; op2:x26; op2val:0xffc42f12d7244f4f
offset:184*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd7244f4f, 0x7fc42f12,0xd7244f4f,0xffc42f12,x16, 180*SIGALIGN, x17,x1, x14)

inst_102:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf2f5c0f43aa65 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf2f5c0f43aa65 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdf2f5c0f43aa65; valaddr_reg:x16; op2:x26; op2val:0xffdf2f5c0f43aa65
offset:186*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0f43aa65, 0x7fdf2f5c,0x0f43aa65,0xffdf2f5c,x16, 182*SIGALIGN, x17,x1, x14)

inst_103:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x82cee64001220 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x82cee64001220 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe82cee64001220; valaddr_reg:x16; op2:x26; op2val:0xffe82cee64001220
offset:188*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x64001220, 0x7fe82cee,0x64001220,0xffe82cee,x16, 184*SIGALIGN, x17,x1, x14)

inst_104:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfa73e129b8879 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfa73e129b8879 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdfa73e129b8879; valaddr_reg:x16; op2:x26; op2val:0xffdfa73e129b8879
offset:190*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x129b8879, 0x7fdfa73e,0x129b8879,0xffdfa73e,x16, 186*SIGALIGN, x17,x1, x14)

inst_105:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xde18ff8661b6b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xde18ff8661b6b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdde18ff8661b6b; valaddr_reg:x16; op2:x26; op2val:0xffdde18ff8661b6b
offset:192*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf8661b6b, 0x7fdde18f,0xf8661b6b,0xffdde18f,x16, 188*SIGALIGN, x17,x1, x14)

inst_106:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc00223fe58e9e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xc00223fe58e9e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fec00223fe58e9e; valaddr_reg:x16; op2:x26; op2val:0xffec00223fe58e9e
offset:194*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3fe58e9e, 0x7fec0022,0x3fe58e9e,0xffec0022,x16, 190*SIGALIGN, x17,x1, x14)

inst_107:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8106d28c6e8ff and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x8106d28c6e8ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc8106d28c6e8ff; valaddr_reg:x16; op2:x26; op2val:0xffc8106d28c6e8ff
offset:196*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x28c6e8ff, 0x7fc8106d,0x28c6e8ff,0xffc8106d,x16, 192*SIGALIGN, x17,x1, x14)

inst_108:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x442435bea0eb5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x442435bea0eb5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe442435bea0eb5; valaddr_reg:x16; op2:x26; op2val:0xffe442435bea0eb5
offset:198*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5bea0eb5, 0x7fe44243,0x5bea0eb5,0xffe44243,x16, 194*SIGALIGN, x17,x1, x14)

inst_109:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x737bdc485a77d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x737bdc485a77d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe737bdc485a77d; valaddr_reg:x16; op2:x26; op2val:0xffe737bdc485a77d
offset:200*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc485a77d, 0x7fe737bd,0xc485a77d,0xffe737bd,x16, 196*SIGALIGN, x17,x1, x14)

inst_110:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9b75de798ac5f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x9b75de798ac5f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd9b75de798ac5f; valaddr_reg:x16; op2:x26; op2val:0xffd9b75de798ac5f
offset:202*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe798ac5f, 0x7fd9b75d,0xe798ac5f,0xffd9b75d,x16, 198*SIGALIGN, x17,x1, x14)

inst_111:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x43c3f0806f2cd and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x43c3f0806f2cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd43c3f0806f2cd; valaddr_reg:x16; op2:x26; op2val:0xffd43c3f0806f2cd
offset:204*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0806f2cd, 0x7fd43c3f,0x0806f2cd,0xffd43c3f,x16, 200*SIGALIGN, x17,x1, x14)

inst_112:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6f451c304de2e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6f451c304de2e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe6f451c304de2e; valaddr_reg:x16; op2:x26; op2val:0xffe6f451c304de2e
offset:206*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc304de2e, 0x7fe6f451,0xc304de2e,0xffe6f451,x16, 202*SIGALIGN, x17,x1, x14)

inst_113:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa53d0d2b3faec and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa53d0d2b3faec and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea53d0d2b3faec; valaddr_reg:x16; op2:x26; op2val:0xffea53d0d2b3faec
offset:208*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd2b3faec, 0x7fea53d0,0xd2b3faec,0xffea53d0,x16, 204*SIGALIGN, x17,x1, x14)

inst_114:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9086506183f67 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x9086506183f67 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb9086506183f67; valaddr_reg:x16; op2:x26; op2val:0xffb9086506183f67
offset:210*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x06183f67, 0x7fb90865,0x06183f67,0xffb90865,x16, 206*SIGALIGN, x17,x1, x14)

inst_115:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4c6c848cb47df and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4c6c848cb47df and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe4c6c848cb47df; valaddr_reg:x16; op2:x26; op2val:0xffe4c6c848cb47df
offset:212*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x48cb47df, 0x7fe4c6c8,0x48cb47df,0xffe4c6c8,x16, 208*SIGALIGN, x17,x1, x14)

inst_116:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1eb3cbd822141 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x1eb3cbd822141 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd1eb3cbd822141; valaddr_reg:x16; op2:x26; op2val:0xffd1eb3cbd822141
offset:214*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbd822141, 0x7fd1eb3c,0xbd822141,0xffd1eb3c,x16, 210*SIGALIGN, x17,x1, x14)

inst_117:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9a5710f3828f7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x9a5710f3828f7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb9a5710f3828f7; valaddr_reg:x16; op2:x26; op2val:0xffb9a5710f3828f7
offset:216*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0f3828f7, 0x7fb9a571,0x0f3828f7,0xffb9a571,x16, 212*SIGALIGN, x17,x1, x14)

inst_118:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x963785d0567a5 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x963785d0567a5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd963785d0567a5; valaddr_reg:x16; op2:x26; op2val:0xffd963785d0567a5
offset:218*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5d0567a5, 0x7fd96378,0x5d0567a5,0xffd96378,x16, 214*SIGALIGN, x17,x1, x14)

inst_119:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x194e95f4fa0e5 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x194e95f4fa0e5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd194e95f4fa0e5; valaddr_reg:x16; op2:x26; op2val:0xffd194e95f4fa0e5
offset:220*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5f4fa0e5, 0x7fd194e9,0x5f4fa0e5,0xffd194e9,x16, 216*SIGALIGN, x17,x1, x14)

inst_120:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x95adca0768ede and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x95adca0768ede and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe95adca0768ede; valaddr_reg:x16; op2:x26; op2val:0xffe95adca0768ede
offset:222*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa0768ede, 0x7fe95adc,0xa0768ede,0xffe95adc,x16, 218*SIGALIGN, x17,x1, x14)

inst_121:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x113ecba7502a7 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x113ecba7502a7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc113ecba7502a7; valaddr_reg:x16; op2:x26; op2val:0xffc113ecba7502a7
offset:224*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xba7502a7, 0x7fc113ec,0xba7502a7,0xffc113ec,x16, 220*SIGALIGN, x17,x1, x14)

inst_122:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d3375e946b52 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4d3375e946b52 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe4d3375e946b52; valaddr_reg:x16; op2:x26; op2val:0xffe4d3375e946b52
offset:226*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5e946b52, 0x7fe4d337,0x5e946b52,0xffe4d337,x16, 222*SIGALIGN, x17,x1, x14)

inst_123:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbe64efc9e258d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xbe64efc9e258d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febe64efc9e258d; valaddr_reg:x16; op2:x26; op2val:0xffebe64efc9e258d
offset:228*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfc9e258d, 0x7febe64e,0xfc9e258d,0xffebe64e,x16, 224*SIGALIGN, x17,x1, x14)

inst_124:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x30526056a01ff and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x30526056a01ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f930526056a01ff; valaddr_reg:x16; op2:x26; op2val:0xff930526056a01ff
offset:230*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x056a01ff, 0x7f930526,0x056a01ff,0xff930526,x16, 226*SIGALIGN, x17,x1, x14)

inst_125:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5cab9bd09e6c4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x5cab9bd09e6c4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe5cab9bd09e6c4; valaddr_reg:x16; op2:x26; op2val:0xffe5cab9bd09e6c4
offset:232*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbd09e6c4, 0x7fe5cab9,0xbd09e6c4,0xffe5cab9,x16, 228*SIGALIGN, x17,x1, x14)

inst_126:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe49bfb977b300 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xe49bfb977b300 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fee49bfb977b300; valaddr_reg:x16; op2:x26; op2val:0xffee49bfb977b300
offset:234*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb977b300, 0x7fee49bf,0xb977b300,0xffee49bf,x16, 230*SIGALIGN, x17,x1, x14)

inst_127:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1d803765d304 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd1d803765d304 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed1d803765d304; valaddr_reg:x16; op2:x26; op2val:0xffed1d803765d304
offset:236*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3765d304, 0x7fed1d80,0x3765d304,0xffed1d80,x16, 232*SIGALIGN, x17,x1, x14)

inst_128:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7f8e997d84592 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x7f8e997d84592 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe7f8e997d84592; valaddr_reg:x16; op2:x26; op2val:0xffe7f8e997d84592
offset:238*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x97d84592, 0x7fe7f8e9,0x97d84592,0xffe7f8e9,x16, 234*SIGALIGN, x17,x1, x14)

inst_129:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4f8b971fa5a72 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4f8b971fa5a72 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe4f8b971fa5a72; valaddr_reg:x16; op2:x26; op2val:0xffe4f8b971fa5a72
offset:240*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x71fa5a72, 0x7fe4f8b9,0x71fa5a72,0xffe4f8b9,x16, 236*SIGALIGN, x17,x1, x14)

inst_130:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xce30065d5ac1b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xce30065d5ac1b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fece30065d5ac1b; valaddr_reg:x16; op2:x26; op2val:0xffece30065d5ac1b
offset:242*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x65d5ac1b, 0x7fece300,0x65d5ac1b,0xffece300,x16, 238*SIGALIGN, x17,x1, x14)

inst_131:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7d6356ef8a62f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x7d6356ef8a62f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd7d6356ef8a62f; valaddr_reg:x16; op2:x26; op2val:0xffd7d6356ef8a62f
offset:244*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6ef8a62f, 0x7fd7d635,0x6ef8a62f,0xffd7d635,x16, 240*SIGALIGN, x17,x1, x14)

inst_132:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa9aa2b6025f07 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xa9aa2b6025f07 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fca9aa2b6025f07; valaddr_reg:x16; op2:x26; op2val:0xffca9aa2b6025f07
offset:246*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb6025f07, 0x7fca9aa2,0xb6025f07,0xffca9aa2,x16, 242*SIGALIGN, x17,x1, x14)

inst_133:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x238a22371e9ff and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x238a22371e9ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f8238a22371e9ff; valaddr_reg:x16; op2:x26; op2val:0xff8238a22371e9ff
offset:248*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2371e9ff, 0x7f8238a2,0x2371e9ff,0xff8238a2,x16, 244*SIGALIGN, x17,x1, x14)

inst_134:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5569022b338ff and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x5569022b338ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd5569022b338ff; valaddr_reg:x16; op2:x26; op2val:0xffd5569022b338ff
offset:250*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x22b338ff, 0x7fd55690,0x22b338ff,0xffd55690,x16, 246*SIGALIGN, x17,x1, x14)

inst_135:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6fdf2805ff4db and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6fdf2805ff4db and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe6fdf2805ff4db; valaddr_reg:x16; op2:x26; op2val:0xffe6fdf2805ff4db
offset:252*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x805ff4db, 0x7fe6fdf2,0x805ff4db,0xffe6fdf2,x16, 248*SIGALIGN, x17,x1, x14)

inst_136:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3db72bc24857c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3db72bc24857c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3db72bc24857c; valaddr_reg:x16; op2:x26; op2val:0xffe3db72bc24857c
offset:254*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbc24857c, 0x7fe3db72,0xbc24857c,0xffe3db72,x16, 250*SIGALIGN, x17,x1, x14)

inst_137:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4f961e264020f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x4f961e264020f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc4f961e264020f; valaddr_reg:x16; op2:x26; op2val:0xffc4f961e264020f
offset:256*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe264020f, 0x7fc4f961,0xe264020f,0xffc4f961,x16, 252*SIGALIGN, x17,x1, x14)

inst_138:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x287ac6ae322ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd287ac6ae322ff; valaddr_reg:x16; op2:x26; op2val:0xffd287ac6ae322ff
offset:258*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6ae322ff, 0x7fd287ac,0x6ae322ff,0xffd287ac,x16, 254*SIGALIGN, x17,x1, x14)

inst_139:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18d2ef084c097 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x18d2ef084c097 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe18d2ef084c097; valaddr_reg:x16; op2:x26; op2val:0xffe18d2ef084c097
offset:260*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf084c097, 0x7fe18d2e,0xf084c097,0xffe18d2e,x16, 256*SIGALIGN, x17,x1, x14)

inst_140:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe989c8dd81bc5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde989c8dd81bc5; valaddr_reg:x16; op2:x26; op2val:0xffde989c8dd81bc5
offset:262*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8dd81bc5, 0x7fde989c,0x8dd81bc5,0xffde989c,x16, 258*SIGALIGN, x17,x1, x14)

inst_141:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x8b50ed3b44d4f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa8b50ed3b44d4f; valaddr_reg:x16; op2:x26; op2val:0xffa8b50ed3b44d4f
offset:264*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd3b44d4f, 0x7fa8b50e,0xd3b44d4f,0xffa8b50e,x16, 260*SIGALIGN, x17,x1, x14)

inst_142:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0bcd3d6ea260a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0bcd3d6ea260a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0bcd3d6ea260a; valaddr_reg:x16; op2:x26; op2val:0xffe0bcd3d6ea260a
offset:266*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd6ea260a, 0x7fe0bcd3,0xd6ea260a,0xffe0bcd3,x16, 262*SIGALIGN, x17,x1, x14)

inst_143:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9cd85f6af39ef and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x9cd85f6af39ef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd9cd85f6af39ef; valaddr_reg:x16; op2:x26; op2val:0xffd9cd85f6af39ef
offset:268*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf6af39ef, 0x7fd9cd85,0xf6af39ef,0xffd9cd85,x16, 264*SIGALIGN, x17,x1, x14)

inst_144:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa8acc80de84a1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa8acc80de84a1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fda8acc80de84a1; valaddr_reg:x16; op2:x26; op2val:0xffda8acc80de84a1
offset:270*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x80de84a1, 0x7fda8acc,0x80de84a1,0xffda8acc,x16, 266*SIGALIGN, x17,x1, x14)

inst_145:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd13b901ecb86d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd13b901ecb86d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed13b901ecb86d; valaddr_reg:x16; op2:x26; op2val:0xffed13b901ecb86d
offset:272*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x01ecb86d, 0x7fed13b9,0x01ecb86d,0xffed13b9,x16, 268*SIGALIGN, x17,x1, x14)

inst_146:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae83ac33105f8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xae83ac33105f8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feae83ac33105f8; valaddr_reg:x16; op2:x26; op2val:0xffeae83ac33105f8
offset:274*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc33105f8, 0x7feae83a,0xc33105f8,0xffeae83a,x16, 270*SIGALIGN, x17,x1, x14)

inst_147:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5fe6340fe9dff and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x5fe6340fe9dff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd5fe6340fe9dff; valaddr_reg:x16; op2:x26; op2val:0xffd5fe6340fe9dff
offset:276*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x40fe9dff, 0x7fd5fe63,0x40fe9dff,0xffd5fe63,x16, 272*SIGALIGN, x17,x1, x14)

inst_148:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x66315a9fdae1d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x66315a9fdae1d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe66315a9fdae1d; valaddr_reg:x16; op2:x26; op2val:0xffe66315a9fdae1d
offset:278*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa9fdae1d, 0x7fe66315,0xa9fdae1d,0xffe66315,x16, 274*SIGALIGN, x17,x1, x14)

inst_149:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3526172ae3f6b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x3526172ae3f6b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd3526172ae3f6b; valaddr_reg:x16; op2:x26; op2val:0xffd3526172ae3f6b
offset:280*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x72ae3f6b, 0x7fd35261,0x72ae3f6b,0xffd35261,x16, 276*SIGALIGN, x17,x1, x14)

inst_150:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc9eec489f6667 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xc9eec489f6667 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fec9eec489f6667; valaddr_reg:x16; op2:x26; op2val:0xffec9eec489f6667
offset:282*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x489f6667, 0x7fec9eec,0x489f6667,0xffec9eec,x16, 278*SIGALIGN, x17,x1, x14)

inst_151:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x40e45564208fa and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x40e45564208fa and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe40e45564208fa; valaddr_reg:x16; op2:x26; op2val:0xffe40e45564208fa
offset:284*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x564208fa, 0x7fe40e45,0x564208fa,0xffe40e45,x16, 280*SIGALIGN, x17,x1, x14)

inst_152:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf2f998bf74bb4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf2f998bf74bb4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fef2f998bf74bb4; valaddr_reg:x16; op2:x26; op2val:0xffef2f998bf74bb4
offset:286*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8bf74bb4, 0x7fef2f99,0x8bf74bb4,0xffef2f99,x16, 282*SIGALIGN, x17,x1, x14)

inst_153:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0da8a99d945d7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0da8a99d945d7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb0da8a99d945d7; valaddr_reg:x16; op2:x26; op2val:0xffb0da8a99d945d7
offset:288*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x99d945d7, 0x7fb0da8a,0x99d945d7,0xffb0da8a,x16, 284*SIGALIGN, x17,x1, x14)

inst_154:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7feee78e25d36 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x7feee78e25d36 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe7feee78e25d36; valaddr_reg:x16; op2:x26; op2val:0xffe7feee78e25d36
offset:290*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x78e25d36, 0x7fe7feee,0x78e25d36,0xffe7feee,x16, 286*SIGALIGN, x17,x1, x14)

inst_155:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x01430191b8abf and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x01430191b8abf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f801430191b8abf; valaddr_reg:x16; op2:x26; op2val:0xff801430191b8abf
offset:292*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x191b8abf, 0x7f801430,0x191b8abf,0xff801430,x16, 288*SIGALIGN, x17,x1, x14)

inst_156:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x09badb528c6c8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe09badb528c6c8; valaddr_reg:x16; op2:x26; op2val:0xffe09badb528c6c8
offset:294*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb528c6c8, 0x7fe09bad,0xb528c6c8,0xffe09bad,x16, 290*SIGALIGN, x17,x1, x14)

inst_157:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf4587ce4e6a55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf4587ce4e6a55 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdf4587ce4e6a55; valaddr_reg:x16; op2:x26; op2val:0xffdf4587ce4e6a55
offset:296*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xce4e6a55, 0x7fdf4587,0xce4e6a55,0xffdf4587,x16, 292*SIGALIGN, x17,x1, x14)

inst_158:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5bcd8bcde77b5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x5bcd8bcde77b5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe5bcd8bcde77b5; valaddr_reg:x16; op2:x26; op2val:0xffe5bcd8bcde77b5
offset:298*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xbcde77b5, 0x7fe5bcd8,0xbcde77b5,0xffe5bcd8,x16, 294*SIGALIGN, x17,x1, x14)

inst_159:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x792be19c2d7a1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x792be19c2d7a1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd792be19c2d7a1; valaddr_reg:x16; op2:x26; op2val:0xffd792be19c2d7a1
offset:300*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x19c2d7a1, 0x7fd792be,0x19c2d7a1,0xffd792be,x16, 296*SIGALIGN, x17,x1, x14)

inst_160:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0b2db44ae8c01 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x0b2db44ae8c01 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd0b2db44ae8c01; valaddr_reg:x16; op2:x26; op2val:0xffd0b2db44ae8c01
offset:302*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x44ae8c01, 0x7fd0b2db,0x44ae8c01,0xffd0b2db,x16, 298*SIGALIGN, x17,x1, x14)

inst_161:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xb992011891a75 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdb992011891a75; valaddr_reg:x16; op2:x26; op2val:0xffdb992011891a75
offset:304*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x11891a75, 0x7fdb9920,0x11891a75,0xffdb9920,x16, 300*SIGALIGN, x17,x1, x14)

inst_162:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x058fe9a4daa6f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x058fe9a4daa6f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb058fe9a4daa6f; valaddr_reg:x16; op2:x26; op2val:0xffb058fe9a4daa6f
offset:306*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9a4daa6f, 0x7fb058fe,0x9a4daa6f,0xffb058fe,x16, 302*SIGALIGN, x17,x1, x14)

inst_163:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x676d1681c4823 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x676d1681c4823 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe676d1681c4823; valaddr_reg:x16; op2:x26; op2val:0xffe676d1681c4823
offset:308*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x681c4823, 0x7fe676d1,0x681c4823,0xffe676d1,x16, 304*SIGALIGN, x17,x1, x14)

inst_164:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xce7352604fe6b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xce7352604fe6b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdce7352604fe6b; valaddr_reg:x16; op2:x26; op2val:0xffdce7352604fe6b
offset:310*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2604fe6b, 0x7fdce735,0x2604fe6b,0xffdce735,x16, 306*SIGALIGN, x17,x1, x14)

inst_165:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xe70e78fe823f7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xe70e78fe823f7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbe70e78fe823f7; valaddr_reg:x16; op2:x26; op2val:0xffbe70e78fe823f7
offset:312*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8fe823f7, 0x7fbe70e7,0x8fe823f7,0xffbe70e7,x16, 308*SIGALIGN, x17,x1, x14)

inst_166:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xa8693ca418657 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fca8693ca418657; valaddr_reg:x16; op2:x26; op2val:0xffca8693ca418657
offset:314*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xca418657, 0x7fca8693,0xca418657,0xffca8693,x16, 310*SIGALIGN, x17,x1, x14)

inst_167:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xe55b30b309254 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fee55b30b309254; valaddr_reg:x16; op2:x26; op2val:0xffee55b30b309254
offset:316*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0b309254, 0x7fee55b3,0x0b309254,0xffee55b3,x16, 312*SIGALIGN, x17,x1, x14)

inst_168:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2bbbe71ac902b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x2bbbe71ac902b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc2bbbe71ac902b; valaddr_reg:x16; op2:x26; op2val:0xffc2bbbe71ac902b
offset:318*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x71ac902b, 0x7fc2bbbe,0x71ac902b,0xffc2bbbe,x16, 314*SIGALIGN, x17,x1, x14)

inst_169:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x831acfae4a49b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x831acfae4a49b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd831acfae4a49b; valaddr_reg:x16; op2:x26; op2val:0xffd831acfae4a49b
offset:320*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfae4a49b, 0x7fd831ac,0xfae4a49b,0xffd831ac,x16, 316*SIGALIGN, x17,x1, x14)

inst_170:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x35eecb1ad0a6b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x35eecb1ad0a6b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc35eecb1ad0a6b; valaddr_reg:x16; op2:x26; op2val:0xffc35eecb1ad0a6b
offset:322*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb1ad0a6b, 0x7fc35eec,0xb1ad0a6b,0xffc35eec,x16, 318*SIGALIGN, x17,x1, x14)

inst_171:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf74a5c9f39c6c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xf74a5c9f39c6c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fef74a5c9f39c6c; valaddr_reg:x16; op2:x26; op2val:0xffef74a5c9f39c6c
offset:324*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc9f39c6c, 0x7fef74a5,0xc9f39c6c,0xffef74a5,x16, 320*SIGALIGN, x17,x1, x14)

inst_172:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9fa60dd1b5e57 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x9fa60dd1b5e57 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd9fa60dd1b5e57; valaddr_reg:x16; op2:x26; op2val:0xffd9fa60dd1b5e57
offset:326*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdd1b5e57, 0x7fd9fa60,0xdd1b5e57,0xffd9fa60,x16, 322*SIGALIGN, x17,x1, x14)

inst_173:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc15c34215bcf5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xc15c34215bcf5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fec15c34215bcf5; valaddr_reg:x16; op2:x26; op2val:0xffec15c34215bcf5
offset:328*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4215bcf5, 0x7fec15c3,0x4215bcf5,0xffec15c3,x16, 324*SIGALIGN, x17,x1, x14)

inst_174:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd5872438d16b0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd5872438d16b0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed5872438d16b0; valaddr_reg:x16; op2:x26; op2val:0xffed5872438d16b0
offset:330*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x438d16b0, 0x7fed5872,0x438d16b0,0xffed5872,x16, 326*SIGALIGN, x17,x1, x14)

inst_175:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfe6749ffc4763 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdfe6749ffc4763; valaddr_reg:x16; op2:x26; op2val:0xffdfe6749ffc4763
offset:332*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9ffc4763, 0x7fdfe674,0x9ffc4763,0xffdfe674,x16, 328*SIGALIGN, x17,x1, x14)

inst_176:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x57132c37fb117 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x57132c37fb117 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe57132c37fb117; valaddr_reg:x16; op2:x26; op2val:0xffe57132c37fb117
offset:334*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc37fb117, 0x7fe57132,0xc37fb117,0xffe57132,x16, 330*SIGALIGN, x17,x1, x14)

inst_177:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3833da7b9aa37 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3833da7b9aa37 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3833da7b9aa37; valaddr_reg:x16; op2:x26; op2val:0xffe3833da7b9aa37
offset:336*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa7b9aa37, 0x7fe3833d,0xa7b9aa37,0xffe3833d,x16, 332*SIGALIGN, x17,x1, x14)

inst_178:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c62b6da50e51 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x5c62b6da50e51 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd5c62b6da50e51; valaddr_reg:x16; op2:x26; op2val:0xffd5c62b6da50e51
offset:338*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6da50e51, 0x7fd5c62b,0x6da50e51,0xffd5c62b,x16, 334*SIGALIGN, x17,x1, x14)

inst_179:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc4ac8145e5cc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcc4ac8145e5cc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecc4ac8145e5cc; valaddr_reg:x16; op2:x26; op2val:0xffecc4ac8145e5cc
offset:340*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8145e5cc, 0x7fecc4ac,0x8145e5cc,0xffecc4ac,x16, 336*SIGALIGN, x17,x1, x14)

inst_180:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x228e5619b5bff and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x228e5619b5bff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa228e5619b5bff; valaddr_reg:x16; op2:x26; op2val:0xffa228e5619b5bff
offset:342*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x619b5bff, 0x7fa228e5,0x619b5bff,0xffa228e5,x16, 338*SIGALIGN, x17,x1, x14)

inst_181:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x070c0d4d218f9 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x070c0d4d218f9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd070c0d4d218f9; valaddr_reg:x16; op2:x26; op2val:0xffd070c0d4d218f9
offset:344*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd4d218f9, 0x7fd070c0,0xd4d218f9,0xffd070c0,x16, 340*SIGALIGN, x17,x1, x14)

inst_182:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaf465058419e9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xaf465058419e9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feaf465058419e9; valaddr_reg:x16; op2:x26; op2val:0xffeaf465058419e9
offset:346*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x058419e9, 0x7feaf465,0x058419e9,0xffeaf465,x16, 342*SIGALIGN, x17,x1, x14)

inst_183:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6faef3ad3537e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6faef3ad3537e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe6faef3ad3537e; valaddr_reg:x16; op2:x26; op2val:0xffe6faef3ad3537e
offset:348*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3ad3537e, 0x7fe6faef,0x3ad3537e,0xffe6faef,x16, 344*SIGALIGN, x17,x1, x14)

inst_184:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0fce9799927f7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0fce9799927f7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb0fce9799927f7; valaddr_reg:x16; op2:x26; op2val:0xffb0fce9799927f7
offset:350*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x799927f7, 0x7fb0fce9,0x799927f7,0xffb0fce9,x16, 346*SIGALIGN, x17,x1, x14)

inst_185:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbcdfd8ba97c91 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xbcdfd8ba97c91 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febcdfd8ba97c91; valaddr_reg:x16; op2:x26; op2val:0xffebcdfd8ba97c91
offset:352*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8ba97c91, 0x7febcdfd,0x8ba97c91,0xffebcdfd,x16, 348*SIGALIGN, x17,x1, x14)

inst_186:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xccfc542168107 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xccfc542168107 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fcccfc542168107; valaddr_reg:x16; op2:x26; op2val:0xffcccfc542168107
offset:354*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x42168107, 0x7fcccfc5,0x42168107,0xffcccfc5,x16, 350*SIGALIGN, x17,x1, x14)

inst_187:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xf4dd0c2472fbf and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0xf4dd0c2472fbf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f8f4dd0c2472fbf; valaddr_reg:x16; op2:x26; op2val:0xff8f4dd0c2472fbf
offset:356*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc2472fbf, 0x7f8f4dd0,0xc2472fbf,0xff8f4dd0,x16, 352*SIGALIGN, x17,x1, x14)

inst_188:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5287546e52d99 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x5287546e52d99 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd5287546e52d99; valaddr_reg:x16; op2:x26; op2val:0xffd5287546e52d99
offset:358*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x46e52d99, 0x7fd52875,0x46e52d99,0xffd52875,x16, 354*SIGALIGN, x17,x1, x14)

inst_189:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x30c845de62d3f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x30c845de62d3f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc30c845de62d3f; valaddr_reg:x16; op2:x26; op2val:0xffc30c845de62d3f
offset:360*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5de62d3f, 0x7fc30c84,0x5de62d3f,0xffc30c84,x16, 356*SIGALIGN, x17,x1, x14)

inst_190:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xefec1cd7c3bcb and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xefec1cd7c3bcb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feefec1cd7c3bcb; valaddr_reg:x16; op2:x26; op2val:0xffeefec1cd7c3bcb
offset:362*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xcd7c3bcb, 0x7feefec1,0xcd7c3bcb,0xffeefec1,x16, 358*SIGALIGN, x17,x1, x14)

inst_191:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd5bbb21e85e5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcd5bbb21e85e5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecd5bbb21e85e5; valaddr_reg:x16; op2:x26; op2val:0xffecd5bbb21e85e5
offset:364*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb21e85e5, 0x7fecd5bb,0xb21e85e5,0xffecd5bb,x16, 360*SIGALIGN, x17,x1, x14)

inst_192:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x25d29d05cd288 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x25d29d05cd288 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe25d29d05cd288; valaddr_reg:x16; op2:x26; op2val:0xffe25d29d05cd288
offset:366*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd05cd288, 0x7fe25d29,0xd05cd288,0xffe25d29,x16, 362*SIGALIGN, x17,x1, x14)

inst_193:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c37606126e28 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9c37606126e28 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9c37606126e28; valaddr_reg:x16; op2:x26; op2val:0xffe9c37606126e28
offset:368*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x06126e28, 0x7fe9c376,0x06126e28,0xffe9c376,x16, 364*SIGALIGN, x17,x1, x14)

inst_194:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfb271584e30d0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfb271584e30d0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fefb271584e30d0; valaddr_reg:x16; op2:x26; op2val:0xffefb271584e30d0
offset:370*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x584e30d0, 0x7fefb271,0x584e30d0,0xffefb271,x16, 366*SIGALIGN, x17,x1, x14)

inst_195:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcfc27db04baa5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcfc27db04baa5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecfc27db04baa5; valaddr_reg:x16; op2:x26; op2val:0xffecfc27db04baa5
offset:372*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdb04baa5, 0x7fecfc27,0xdb04baa5,0xffecfc27,x16, 368*SIGALIGN, x17,x1, x14)

inst_196:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x122215f9ac41a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x122215f9ac41a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe122215f9ac41a; valaddr_reg:x16; op2:x26; op2val:0xffe122215f9ac41a
offset:374*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5f9ac41a, 0x7fe12221,0x5f9ac41a,0xffe12221,x16, 370*SIGALIGN, x17,x1, x14)

inst_197:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa6c1b4fe3e3c0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa6c1b4fe3e3c0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea6c1b4fe3e3c0; valaddr_reg:x16; op2:x26; op2val:0xffea6c1b4fe3e3c0
offset:376*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4fe3e3c0, 0x7fea6c1b,0x4fe3e3c0,0xffea6c1b,x16, 372*SIGALIGN, x17,x1, x14)

inst_198:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x950338fe39141 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x950338fe39141 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe950338fe39141; valaddr_reg:x16; op2:x26; op2val:0xffe950338fe39141
offset:378*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8fe39141, 0x7fe95033,0x8fe39141,0xffe95033,x16, 374*SIGALIGN, x17,x1, x14)

inst_199:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2c3b1b8ef2d41 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x2c3b1b8ef2d41 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2c3b1b8ef2d41; valaddr_reg:x16; op2:x26; op2val:0xffe2c3b1b8ef2d41
offset:380*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb8ef2d41, 0x7fe2c3b1,0xb8ef2d41,0xffe2c3b1,x16, 376*SIGALIGN, x17,x1, x14)

inst_200:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x989b40414f92c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x989b40414f92c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe989b40414f92c; valaddr_reg:x16; op2:x26; op2val:0xffe989b40414f92c
offset:382*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0414f92c, 0x7fe989b4,0x0414f92c,0xffe989b4,x16, 378*SIGALIGN, x17,x1, x14)

inst_201:// fs1 == 0 and fe1 == 0x7f2 and fm1 == 0xf8c6f685f5fff and fs2 == 1 and fe2 == 0x7f2 and fm2 == 0xf8c6f685f5fff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f2f8c6f685f5fff; valaddr_reg:x16; op2:x26; op2val:0xff2f8c6f685f5fff
offset:384*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x685f5fff, 0x7f2f8c6f,0x685f5fff,0xff2f8c6f,x16, 380*SIGALIGN, x17,x1, x14)

inst_202:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0382dd247f3f9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0382dd247f3f9; valaddr_reg:x16; op2:x26; op2val:0xffe0382dd247f3f9
offset:386*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd247f3f9, 0x7fe0382d,0xd247f3f9,0xffe0382d,x16, 382*SIGALIGN, x17,x1, x14)

inst_203:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0cc870fcad57f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0cc870fcad57f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb0cc870fcad57f; valaddr_reg:x16; op2:x26; op2val:0xffb0cc870fcad57f
offset:388*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0fcad57f, 0x7fb0cc87,0x0fcad57f,0xffb0cc87,x16, 384*SIGALIGN, x17,x1, x14)

inst_204:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2c9f3b4cd220 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xe2c9f3b4cd220 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fee2c9f3b4cd220; valaddr_reg:x16; op2:x26; op2val:0xffee2c9f3b4cd220
offset:390*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3b4cd220, 0x7fee2c9f,0x3b4cd220,0xffee2c9f,x16, 386*SIGALIGN, x17,x1, x14)

inst_205:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa1ddeeb12c253 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa1ddeeb12c253 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fda1ddeeb12c253; valaddr_reg:x16; op2:x26; op2val:0xffda1ddeeb12c253
offset:392*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xeb12c253, 0x7fda1dde,0xeb12c253,0xffda1dde,x16, 388*SIGALIGN, x17,x1, x14)

inst_206:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xfe0614a7b9fbf and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xfe0614a7b9fbf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fafe0614a7b9fbf; valaddr_reg:x16; op2:x26; op2val:0xffafe0614a7b9fbf
offset:394*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4a7b9fbf, 0x7fafe061,0x4a7b9fbf,0xffafe061,x16, 390*SIGALIGN, x17,x1, x14)

inst_207:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x04c0c63d2bf03 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x04c0c63d2bf03 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc04c0c63d2bf03; valaddr_reg:x16; op2:x26; op2val:0xffc04c0c63d2bf03
offset:396*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x63d2bf03, 0x7fc04c0c,0x63d2bf03,0xffc04c0c,x16, 392*SIGALIGN, x17,x1, x14)

inst_208:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa8edfc5560a8d and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa8edfc5560a8d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea8edfc5560a8d; valaddr_reg:x16; op2:x26; op2val:0xffea8edfc5560a8d
offset:398*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc5560a8d, 0x7fea8edf,0xc5560a8d,0xffea8edf,x16, 394*SIGALIGN, x17,x1, x14)

inst_209:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x265eb5ece1e0f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x265eb5ece1e0f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa265eb5ece1e0f; valaddr_reg:x16; op2:x26; op2val:0xffa265eb5ece1e0f
offset:400*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5ece1e0f, 0x7fa265eb,0x5ece1e0f,0xffa265eb,x16, 396*SIGALIGN, x17,x1, x14)

inst_210:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf7a288f1ea41f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf7a288f1ea41f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdf7a288f1ea41f; valaddr_reg:x16; op2:x26; op2val:0xffdf7a288f1ea41f
offset:402*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8f1ea41f, 0x7fdf7a28,0x8f1ea41f,0xffdf7a28,x16, 398*SIGALIGN, x17,x1, x14)

inst_211:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6f335d0539418 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x6f335d0539418 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe6f335d0539418; valaddr_reg:x16; op2:x26; op2val:0xffe6f335d0539418
offset:404*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd0539418, 0x7fe6f335,0xd0539418,0xffe6f335,x16, 400*SIGALIGN, x17,x1, x14)

inst_212:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x360373cf6f10f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x360373cf6f10f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc360373cf6f10f; valaddr_reg:x16; op2:x26; op2val:0xffc360373cf6f10f
offset:406*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3cf6f10f, 0x7fc36037,0x3cf6f10f,0xffc36037,x16, 402*SIGALIGN, x17,x1, x14)

inst_213:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa501ef8480c55 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa501ef8480c55 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fda501ef8480c55; valaddr_reg:x16; op2:x26; op2val:0xffda501ef8480c55
offset:408*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf8480c55, 0x7fda501e,0xf8480c55,0xffda501e,x16, 404*SIGALIGN, x17,x1, x14)

inst_214:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8bf6a13abca7f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x8bf6a13abca7f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd8bf6a13abca7f; valaddr_reg:x16; op2:x26; op2val:0xffd8bf6a13abca7f
offset:410*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x13abca7f, 0x7fd8bf6a,0x13abca7f,0xffd8bf6a,x16, 406*SIGALIGN, x17,x1, x14)

inst_215:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe230c7e39a5d7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe230c7e39a5d7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde230c7e39a5d7; valaddr_reg:x16; op2:x26; op2val:0xffde230c7e39a5d7
offset:412*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7e39a5d7, 0x7fde230c,0x7e39a5d7,0xffde230c,x16, 408*SIGALIGN, x17,x1, x14)

inst_216:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x09f50264a8d1f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x09f50264a8d1f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa09f50264a8d1f; valaddr_reg:x16; op2:x26; op2val:0xffa09f50264a8d1f
offset:414*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x264a8d1f, 0x7fa09f50,0x264a8d1f,0xffa09f50,x16, 410*SIGALIGN, x17,x1, x14)

inst_217:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x428af114baf6a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x428af114baf6a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe428af114baf6a; valaddr_reg:x16; op2:x26; op2val:0xffe428af114baf6a
offset:416*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x114baf6a, 0x7fe428af,0x114baf6a,0xffe428af,x16, 412*SIGALIGN, x17,x1, x14)

inst_218:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19295f298916c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x19295f298916c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe19295f298916c; valaddr_reg:x16; op2:x26; op2val:0xffe19295f298916c
offset:418*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf298916c, 0x7fe19295,0xf298916c,0xffe19295,x16, 414*SIGALIGN, x17,x1, x14)

inst_219:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x889db2e44701b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x889db2e44701b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd889db2e44701b; valaddr_reg:x16; op2:x26; op2val:0xffd889db2e44701b
offset:420*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2e44701b, 0x7fd889db,0x2e44701b,0xffd889db,x16, 416*SIGALIGN, x17,x1, x14)

inst_220:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf6165c8e35259 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf6165c8e35259 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdf6165c8e35259; valaddr_reg:x16; op2:x26; op2val:0xffdf6165c8e35259
offset:422*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc8e35259, 0x7fdf6165,0xc8e35259,0xffdf6165,x16, 418*SIGALIGN, x17,x1, x14)

inst_221:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x38619d6cda314 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x38619d6cda314 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe38619d6cda314; valaddr_reg:x16; op2:x26; op2val:0xffe38619d6cda314
offset:424*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd6cda314, 0x7fe38619,0xd6cda314,0xffe38619,x16, 420*SIGALIGN, x17,x1, x14)

inst_222:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x43be7b7bc5458 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x43be7b7bc5458 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe43be7b7bc5458; valaddr_reg:x16; op2:x26; op2val:0xffe43be7b7bc5458
offset:426*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb7bc5458, 0x7fe43be7,0xb7bc5458,0xffe43be7,x16, 422*SIGALIGN, x17,x1, x14)

inst_223:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfd3af1f060647 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xfd3af1f060647 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbfd3af1f060647; valaddr_reg:x16; op2:x26; op2val:0xffbfd3af1f060647
offset:428*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1f060647, 0x7fbfd3af,0x1f060647,0xffbfd3af,x16, 424*SIGALIGN, x17,x1, x14)

inst_224:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3e7bb112f7fe8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3e7bb112f7fe8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3e7bb112f7fe8; valaddr_reg:x16; op2:x26; op2val:0xffe3e7bb112f7fe8
offset:430*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x112f7fe8, 0x7fe3e7bb,0x112f7fe8,0xffe3e7bb,x16, 426*SIGALIGN, x17,x1, x14)

inst_225:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0451c9f55e3a7 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0451c9f55e3a7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc0451c9f55e3a7; valaddr_reg:x16; op2:x26; op2val:0xffc0451c9f55e3a7
offset:432*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9f55e3a7, 0x7fc0451c,0x9f55e3a7,0xffc0451c,x16, 428*SIGALIGN, x17,x1, x14)

inst_226:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x99434052cdad4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x99434052cdad4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe99434052cdad4; valaddr_reg:x16; op2:x26; op2val:0xffe99434052cdad4
offset:434*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x052cdad4, 0x7fe99434,0x052cdad4,0xffe99434,x16, 430*SIGALIGN, x17,x1, x14)

inst_227:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbebcdefd48729 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xbebcdefd48729 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7febebcdefd48729; valaddr_reg:x16; op2:x26; op2val:0xffebebcdefd48729
offset:436*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xefd48729, 0x7febebcd,0xefd48729,0xffebebcd,x16, 432*SIGALIGN, x17,x1, x14)

inst_228:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9ed93307c783a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9ed93307c783a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9ed93307c783a; valaddr_reg:x16; op2:x26; op2val:0xffe9ed93307c783a
offset:438*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x307c783a, 0x7fe9ed93,0x307c783a,0xffe9ed93,x16, 434*SIGALIGN, x17,x1, x14)

inst_229:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x922ba23fbbdc6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x922ba23fbbdc6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe922ba23fbbdc6; valaddr_reg:x16; op2:x26; op2val:0xffe922ba23fbbdc6
offset:440*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x23fbbdc6, 0x7fe922ba,0x23fbbdc6,0xffe922ba,x16, 436*SIGALIGN, x17,x1, x14)

inst_230:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9071429916f5c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9071429916f5c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9071429916f5c; valaddr_reg:x16; op2:x26; op2val:0xffe9071429916f5c
offset:442*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x29916f5c, 0x7fe90714,0x29916f5c,0xffe90714,x16, 438*SIGALIGN, x17,x1, x14)

inst_231:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8363338c30c8b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8363338c30c8b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe8363338c30c8b; valaddr_reg:x16; op2:x26; op2val:0xffe8363338c30c8b
offset:444*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x38c30c8b, 0x7fe83633,0x38c30c8b,0xffe83633,x16, 440*SIGALIGN, x17,x1, x14)

inst_232:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94410aa872e85 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x94410aa872e85 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe94410aa872e85; valaddr_reg:x16; op2:x26; op2val:0xffe94410aa872e85
offset:446*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xaa872e85, 0x7fe94410,0xaa872e85,0xffe94410,x16, 442*SIGALIGN, x17,x1, x14)

inst_233:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x6db2c39b92e2f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x6db2c39b92e2f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa6db2c39b92e2f; valaddr_reg:x16; op2:x26; op2val:0xffa6db2c39b92e2f
offset:448*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x39b92e2f, 0x7fa6db2c,0x39b92e2f,0xffa6db2c,x16, 444*SIGALIGN, x17,x1, x14)

inst_234:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf1d543a0b07fb and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf1d543a0b07fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdf1d543a0b07fb; valaddr_reg:x16; op2:x26; op2val:0xffdf1d543a0b07fb
offset:450*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3a0b07fb, 0x7fdf1d54,0x3a0b07fb,0xffdf1d54,x16, 446*SIGALIGN, x17,x1, x14)

inst_235:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe3baa16148b70 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xe3baa16148b70 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fee3baa16148b70; valaddr_reg:x16; op2:x26; op2val:0xffee3baa16148b70
offset:452*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x16148b70, 0x7fee3baa,0x16148b70,0xffee3baa,x16, 448*SIGALIGN, x17,x1, x14)

inst_236:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x24c28db80e5f8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x24c28db80e5f8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe24c28db80e5f8; valaddr_reg:x16; op2:x26; op2val:0xffe24c28db80e5f8
offset:454*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdb80e5f8, 0x7fe24c28,0xdb80e5f8,0xffe24c28,x16, 450*SIGALIGN, x17,x1, x14)

inst_237:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7ee0eb8d7cc7f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7ee0eb8d7cc7f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb7ee0eb8d7cc7f; valaddr_reg:x16; op2:x26; op2val:0xffb7ee0eb8d7cc7f
offset:456*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb8d7cc7f, 0x7fb7ee0e,0xb8d7cc7f,0xffb7ee0e,x16, 452*SIGALIGN, x17,x1, x14)

inst_238:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc70d21e827c6a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xc70d21e827c6a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fec70d21e827c6a; valaddr_reg:x16; op2:x26; op2val:0xffec70d21e827c6a
offset:458*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1e827c6a, 0x7fec70d2,0x1e827c6a,0xffec70d2,x16, 454*SIGALIGN, x17,x1, x14)

inst_239:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x65a21c61847d5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x65a21c61847d5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe65a21c61847d5; valaddr_reg:x16; op2:x26; op2val:0xffe65a21c61847d5
offset:460*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc61847d5, 0x7fe65a21,0xc61847d5,0xffe65a21,x16, 456*SIGALIGN, x17,x1, x14)

inst_240:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x38a399f905ab9 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x38a399f905ab9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd38a399f905ab9; valaddr_reg:x16; op2:x26; op2val:0xffd38a399f905ab9
offset:462*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9f905ab9, 0x7fd38a39,0x9f905ab9,0xffd38a39,x16, 458*SIGALIGN, x17,x1, x14)

inst_241:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb4318b7227e1b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xb4318b7227e1b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdb4318b7227e1b; valaddr_reg:x16; op2:x26; op2val:0xffdb4318b7227e1b
offset:464*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb7227e1b, 0x7fdb4318,0xb7227e1b,0xffdb4318,x16, 460*SIGALIGN, x17,x1, x14)

inst_242:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd883cdc560c7e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd883cdc560c7e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed883cdc560c7e; valaddr_reg:x16; op2:x26; op2val:0xffed883cdc560c7e
offset:466*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdc560c7e, 0x7fed883c,0xdc560c7e,0xffed883c,x16, 462*SIGALIGN, x17,x1, x14)

inst_243:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa99dd8880ddad and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa99dd8880ddad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fda99dd8880ddad; valaddr_reg:x16; op2:x26; op2val:0xffda99dd8880ddad
offset:468*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x8880ddad, 0x7fda99dd,0x8880ddad,0xffda99dd,x16, 464*SIGALIGN, x17,x1, x14)

inst_244:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8c31f809fe79b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8c31f809fe79b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe8c31f809fe79b; valaddr_reg:x16; op2:x26; op2val:0xffe8c31f809fe79b
offset:470*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x809fe79b, 0x7fe8c31f,0x809fe79b,0xffe8c31f,x16, 466*SIGALIGN, x17,x1, x14)

inst_245:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xf700ae54ab8df and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0xf700ae54ab8df and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f9f700ae54ab8df; valaddr_reg:x16; op2:x26; op2val:0xff9f700ae54ab8df
offset:472*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe54ab8df, 0x7f9f700a,0xe54ab8df,0xff9f700a,x16, 468*SIGALIGN, x17,x1, x14)

inst_246:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5f72319ab0728 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x5f72319ab0728 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe5f72319ab0728; valaddr_reg:x16; op2:x26; op2val:0xffe5f72319ab0728
offset:474*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x19ab0728, 0x7fe5f723,0x19ab0728,0xffe5f723,x16, 470*SIGALIGN, x17,x1, x14)

inst_247:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd6ac2d374cb87 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xd6ac2d374cb87 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fed6ac2d374cb87; valaddr_reg:x16; op2:x26; op2val:0xffed6ac2d374cb87
offset:476*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd374cb87, 0x7fed6ac2,0xd374cb87,0xffed6ac2,x16, 472*SIGALIGN, x17,x1, x14)

inst_248:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x71f120502a5e1 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x71f120502a5e1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe71f120502a5e1; valaddr_reg:x16; op2:x26; op2val:0xffe71f120502a5e1
offset:478*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0502a5e1, 0x7fe71f12,0x0502a5e1,0xffe71f12,x16, 474*SIGALIGN, x17,x1, x14)

inst_249:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2011ca3e25417 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x2011ca3e25417 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb2011ca3e25417; valaddr_reg:x16; op2:x26; op2val:0xffb2011ca3e25417
offset:480*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa3e25417, 0x7fb2011c,0xa3e25417,0xffb2011c,x16, 476*SIGALIGN, x17,x1, x14)

inst_250:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe15232c378b7f and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0xe15232c378b7f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f9e15232c378b7f; valaddr_reg:x16; op2:x26; op2val:0xff9e15232c378b7f
offset:482*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x2c378b7f, 0x7f9e1523,0x2c378b7f,0xff9e1523,x16, 478*SIGALIGN, x17,x1, x14)

inst_251:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x46821d48c93bf and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x46821d48c93bf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f846821d48c93bf; valaddr_reg:x16; op2:x26; op2val:0xff846821d48c93bf
offset:484*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd48c93bf, 0x7f846821,0xd48c93bf,0xff846821,x16, 480*SIGALIGN, x17,x1, x14)

inst_252:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa354d897694eb and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xa354d897694eb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fea354d897694eb; valaddr_reg:x16; op2:x26; op2val:0xffea354d897694eb
offset:486*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x897694eb, 0x7fea354d,0x897694eb,0xffea354d,x16, 482*SIGALIGN, x17,x1, x14)

inst_253:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc97053092bae8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xc97053092bae8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fec97053092bae8; valaddr_reg:x16; op2:x26; op2val:0xffec97053092bae8
offset:488*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3092bae8, 0x7fec9705,0x3092bae8,0xffec9705,x16, 484*SIGALIGN, x17,x1, x14)

inst_254:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa3695ba8b56f7 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xa3695ba8b56f7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fca3695ba8b56f7; valaddr_reg:x16; op2:x26; op2val:0xffca3695ba8b56f7
offset:490*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xba8b56f7, 0x7fca3695,0xba8b56f7,0xffca3695,x16, 486*SIGALIGN, x17,x1, x14)

inst_255:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe063e979a868f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xe063e979a868f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fee063e979a868f; valaddr_reg:x16; op2:x26; op2val:0xffee063e979a868f
offset:492*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x979a868f, 0x7fee063e,0x979a868f,0xffee063e,x16, 488*SIGALIGN, x17,x1, x14)

inst_256:// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xd6d9096268f7f and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0xd6d9096268f7f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f7d6d9096268f7f; valaddr_reg:x16; op2:x26; op2val:0xff7d6d9096268f7f
offset:494*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x96268f7f, 0x7f7d6d90,0x96268f7f,0xff7d6d90,x16, 490*SIGALIGN, x17,x1, x14)

inst_257:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x93dda7765991f and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x93dda7765991f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f993dda7765991f; valaddr_reg:x16; op2:x26; op2val:0xff993dda7765991f
offset:496*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7765991f, 0x7f993dda,0x7765991f,0xff993dda,x16, 492*SIGALIGN, x17,x1, x14)

inst_258:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7e5dd8914aef and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb7e5dd8914aef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feb7e5dd8914aef; valaddr_reg:x16; op2:x26; op2val:0xffeb7e5dd8914aef
offset:498*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd8914aef, 0x7feb7e5d,0xd8914aef,0xffeb7e5d,x16, 494*SIGALIGN, x17,x1, x14)

inst_259:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcc5a8af41138f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xcc5a8af41138f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbcc5a8af41138f; valaddr_reg:x16; op2:x26; op2val:0xffbcc5a8af41138f
offset:500*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xaf41138f, 0x7fbcc5a8,0xaf41138f,0xffbcc5a8,x16, 496*SIGALIGN, x17,x1, x14)

inst_260:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb18879086a84 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xeb18879086a84 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feeb18879086a84; valaddr_reg:x16; op2:x26; op2val:0xffeeb18879086a84
offset:502*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x79086a84, 0x7feeb188,0x79086a84,0xffeeb188,x16, 498*SIGALIGN, x17,x1, x14)

inst_261:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeedb9ccd51d70 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xeedb9ccd51d70 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feeedb9ccd51d70; valaddr_reg:x16; op2:x26; op2val:0xffeeedb9ccd51d70
offset:504*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xccd51d70, 0x7feeedb9,0xccd51d70,0xffeeedb9,x16, 500*SIGALIGN, x17,x1, x14)

inst_262:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe4bb35faff00f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe4bb35faff00f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde4bb35faff00f; valaddr_reg:x16; op2:x26; op2val:0xffde4bb35faff00f
offset:506*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5faff00f, 0x7fde4bb3,0x5faff00f,0xffde4bb3,x16, 502*SIGALIGN, x17,x1, x14)

inst_263:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdfcf16f837dfc and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xdfcf16f837dfc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fedfcf16f837dfc; valaddr_reg:x16; op2:x26; op2val:0xffedfcf16f837dfc
offset:508*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6f837dfc, 0x7fedfcf1,0x6f837dfc,0xffedfcf1,x16, 504*SIGALIGN, x17,x1, x14)

inst_264:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4596be54ed4ed and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4596be54ed4ed and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe4596be54ed4ed; valaddr_reg:x16; op2:x26; op2val:0xffe4596be54ed4ed
offset:510*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe54ed4ed, 0x7fe4596b,0xe54ed4ed,0xffe4596b,x16, 506*SIGALIGN, x17,x1, x14)

inst_265:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfc642d452bf98 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xfc642d452bf98 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fefc642d452bf98; valaddr_reg:x16; op2:x26; op2val:0xffefc642d452bf98
offset:512*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd452bf98, 0x7fefc642,0xd452bf98,0xffefc642,x16, 508*SIGALIGN, x17,x1, x14)

inst_266:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x29651713b2616 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x29651713b2616 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe29651713b2616; valaddr_reg:x16; op2:x26; op2val:0xffe29651713b2616
offset:514*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x713b2616, 0x7fe29651,0x713b2616,0xffe29651,x16, 510*SIGALIGN, x17,x1, x14)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_267:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcb9c1949673fd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xcb9c1949673fd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fecb9c1949673fd; valaddr_reg:x16; op2:x26; op2val:0xffecb9c1949673fd
offset:516*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x949673fd, 0x7fecb9c1,0x949673fd,0xffecb9c1,x16, 0*SIGALIGN, x17,x1, x14)

inst_268:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9bd90b8e42a3f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x9bd90b8e42a3f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe9bd90b8e42a3f; valaddr_reg:x16; op2:x26; op2val:0xffe9bd90b8e42a3f
offset:518*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb8e42a3f, 0x7fe9bd90,0xb8e42a3f,0xffe9bd90,x16, 2*SIGALIGN, x17,x1, x14)

inst_269:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf155693c9590b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xf155693c9590b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fcf155693c9590b; valaddr_reg:x16; op2:x26; op2val:0xffcf155693c9590b
offset:520*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x93c9590b, 0x7fcf1556,0x93c9590b,0xffcf1556,x16, 4*SIGALIGN, x17,x1, x14)

inst_270:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2a0b81afacd4f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x2a0b81afacd4f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd2a0b81afacd4f; valaddr_reg:x16; op2:x26; op2val:0xffd2a0b81afacd4f
offset:522*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1afacd4f, 0x7fd2a0b8,0x1afacd4f,0xffd2a0b8,x16, 6*SIGALIGN, x17,x1, x14)

inst_271:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x7aed2f71a352f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x7aed2f71a352f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa7aed2f71a352f; valaddr_reg:x16; op2:x26; op2val:0xffa7aed2f71a352f
offset:524*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf71a352f, 0x7fa7aed2,0xf71a352f,0xffa7aed2,x16, 8*SIGALIGN, x17,x1, x14)

inst_272:// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x50af5b268139f and fs2 == 1 and fe2 == 0x7f9 and fm2 == 0x50af5b268139f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f950af5b268139f; valaddr_reg:x16; op2:x26; op2val:0xff950af5b268139f
offset:526*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb268139f, 0x7f950af5,0xb268139f,0xff950af5,x16, 10*SIGALIGN, x17,x1, x14)

inst_273:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2bdf74439828f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x2bdf74439828f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb2bdf74439828f; valaddr_reg:x16; op2:x26; op2val:0xffb2bdf74439828f
offset:528*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4439828f, 0x7fb2bdf7,0x4439828f,0xffb2bdf7,x16, 12*SIGALIGN, x17,x1, x14)

inst_274:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19ff775aac054 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x19ff775aac054 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe19ff775aac054; valaddr_reg:x16; op2:x26; op2val:0xffe19ff775aac054
offset:530*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x75aac054, 0x7fe19ff7,0x75aac054,0xffe19ff7,x16, 14*SIGALIGN, x17,x1, x14)

inst_275:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2365849750ca3 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x2365849750ca3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc2365849750ca3; valaddr_reg:x16; op2:x26; op2val:0xffc2365849750ca3
offset:532*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x49750ca3, 0x7fc23658,0x49750ca3,0xffc23658,x16, 16*SIGALIGN, x17,x1, x14)

inst_276:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46206996b12da and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x46206996b12da and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe46206996b12da; valaddr_reg:x16; op2:x26; op2val:0xffe46206996b12da
offset:534*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x996b12da, 0x7fe46206,0x996b12da,0xffe46206,x16, 18*SIGALIGN, x17,x1, x14)

inst_277:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc77c9350fee6d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xc77c9350fee6d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdc77c9350fee6d; valaddr_reg:x16; op2:x26; op2val:0xffdc77c9350fee6d
offset:536*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x350fee6d, 0x7fdc77c9,0x350fee6d,0xffdc77c9,x16, 20*SIGALIGN, x17,x1, x14)

inst_278:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe5da67e1de883 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xe5da67e1de883 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fee5da67e1de883; valaddr_reg:x16; op2:x26; op2val:0xffee5da67e1de883
offset:538*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7e1de883, 0x7fee5da6,0x7e1de883,0xffee5da6,x16, 22*SIGALIGN, x17,x1, x14)

inst_279:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa26ee9811427d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xa26ee9811427d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fda26ee9811427d; valaddr_reg:x16; op2:x26; op2val:0xffda26ee9811427d
offset:540*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9811427d, 0x7fda26ee,0x9811427d,0xffda26ee,x16, 24*SIGALIGN, x17,x1, x14)

inst_280:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x74d41339ae482 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x74d41339ae482 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe74d41339ae482; valaddr_reg:x16; op2:x26; op2val:0xffe74d41339ae482
offset:542*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x339ae482, 0x7fe74d41,0x339ae482,0xffe74d41,x16, 26*SIGALIGN, x17,x1, x14)

inst_281:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa1c5a75f20f3f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xa1c5a75f20f3f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fca1c5a75f20f3f; valaddr_reg:x16; op2:x26; op2val:0xffca1c5a75f20f3f
offset:544*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x75f20f3f, 0x7fca1c5a,0x75f20f3f,0xffca1c5a,x16, 28*SIGALIGN, x17,x1, x14)

inst_282:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe230580ba7bd1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe230580ba7bd1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde230580ba7bd1; valaddr_reg:x16; op2:x26; op2val:0xffde230580ba7bd1
offset:546*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x80ba7bd1, 0x7fde2305,0x80ba7bd1,0xffde2305,x16, 30*SIGALIGN, x17,x1, x14)

inst_283:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97d11446f38d6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x97d11446f38d6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe97d11446f38d6; valaddr_reg:x16; op2:x26; op2val:0xffe97d11446f38d6
offset:548*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x446f38d6, 0x7fe97d11,0x446f38d6,0xffe97d11,x16, 32*SIGALIGN, x17,x1, x14)

inst_284:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1dc9fa26c1435 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x1dc9fa26c1435 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe1dc9fa26c1435; valaddr_reg:x16; op2:x26; op2val:0xffe1dc9fa26c1435
offset:550*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa26c1435, 0x7fe1dc9f,0xa26c1435,0xffe1dc9f,x16, 34*SIGALIGN, x17,x1, x14)

inst_285:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97605fecf75de and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x97605fecf75de and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe97605fecf75de; valaddr_reg:x16; op2:x26; op2val:0xffe97605fecf75de
offset:552*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfecf75de, 0x7fe97605,0xfecf75de,0xffe97605,x16, 36*SIGALIGN, x17,x1, x14)

inst_286:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9858f917ba8dd and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x9858f917ba8dd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd9858f917ba8dd; valaddr_reg:x16; op2:x26; op2val:0xffd9858f917ba8dd
offset:554*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x917ba8dd, 0x7fd9858f,0x917ba8dd,0xffd9858f,x16, 38*SIGALIGN, x17,x1, x14)

inst_287:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xba13e3965dc9d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xba13e3965dc9d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdba13e3965dc9d; valaddr_reg:x16; op2:x26; op2val:0xffdba13e3965dc9d
offset:556*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3965dc9d, 0x7fdba13e,0x3965dc9d,0xffdba13e,x16, 40*SIGALIGN, x17,x1, x14)

inst_288:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd0546b2b91d49 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd0546b2b91d49 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdd0546b2b91d49; valaddr_reg:x16; op2:x26; op2val:0xffdd0546b2b91d49
offset:558*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb2b91d49, 0x7fdd0546,0xb2b91d49,0xffdd0546,x16, 42*SIGALIGN, x17,x1, x14)

inst_289:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23fa6c5af95c3 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x23fa6c5af95c3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc23fa6c5af95c3; valaddr_reg:x16; op2:x26; op2val:0xffc23fa6c5af95c3
offset:560*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc5af95c3, 0x7fc23fa6,0xc5af95c3,0xffc23fa6,x16, 44*SIGALIGN, x17,x1, x14)

inst_290:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x464ca5c58934b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x464ca5c58934b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe464ca5c58934b; valaddr_reg:x16; op2:x26; op2val:0xffe464ca5c58934b
offset:562*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x5c58934b, 0x7fe464ca,0x5c58934b,0xffe464ca,x16, 46*SIGALIGN, x17,x1, x14)

inst_291:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa10df54b7350b and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xa10df54b7350b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fca10df54b7350b; valaddr_reg:x16; op2:x26; op2val:0xffca10df54b7350b
offset:564*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x54b7350b, 0x7fca10df,0x54b7350b,0xffca10df,x16, 48*SIGALIGN, x17,x1, x14)

inst_292:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x65e23ddcbddd1 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x65e23ddcbddd1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe65e23ddcbddd1; valaddr_reg:x16; op2:x26; op2val:0xffe65e23ddcbddd1
offset:566*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xddcbddd1, 0x7fe65e23,0xddcbddd1,0xffe65e23,x16, 50*SIGALIGN, x17,x1, x14)

inst_293:// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0xfda686ffdecff and fs2 == 1 and fe2 == 0x7f7 and fm2 == 0xfda686ffdecff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f7fda686ffdecff; valaddr_reg:x16; op2:x26; op2val:0xff7fda686ffdecff
offset:568*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6ffdecff, 0x7f7fda68,0x6ffdecff,0xff7fda68,x16, 52*SIGALIGN, x17,x1, x14)

inst_294:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x898a6dfea4b33 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x898a6dfea4b33 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe898a6dfea4b33; valaddr_reg:x16; op2:x26; op2val:0xffe898a6dfea4b33
offset:570*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xdfea4b33, 0x7fe898a6,0xdfea4b33,0xffe898a6,x16, 54*SIGALIGN, x17,x1, x14)

inst_295:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x172584a6fc7c6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x172584a6fc7c6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe172584a6fc7c6; valaddr_reg:x16; op2:x26; op2val:0xffe172584a6fc7c6
offset:572*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4a6fc7c6, 0x7fe17258,0x4a6fc7c6,0xffe17258,x16, 56*SIGALIGN, x17,x1, x14)

inst_296:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x699f5f701628b and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x699f5f701628b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe699f5f701628b; valaddr_reg:x16; op2:x26; op2val:0xffe699f5f701628b
offset:574*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf701628b, 0x7fe699f5,0xf701628b,0xffe699f5,x16, 58*SIGALIGN, x17,x1, x14)

inst_297:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5b3a3e9fd9fb7 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x5b3a3e9fd9fb7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe5b3a3e9fd9fb7; valaddr_reg:x16; op2:x26; op2val:0xffe5b3a3e9fd9fb7
offset:576*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe9fd9fb7, 0x7fe5b3a3,0xe9fd9fb7,0xffe5b3a3,x16, 60*SIGALIGN, x17,x1, x14)

inst_298:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdbe0fc8b3298f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xdbe0fc8b3298f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fcdbe0fc8b3298f; valaddr_reg:x16; op2:x26; op2val:0xffcdbe0fc8b3298f
offset:578*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc8b3298f, 0x7fcdbe0f,0xc8b3298f,0xffcdbe0f,x16, 62*SIGALIGN, x17,x1, x14)

inst_299:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1ecf7d50e7867 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x1ecf7d50e7867 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd1ecf7d50e7867; valaddr_reg:x16; op2:x26; op2val:0xffd1ecf7d50e7867
offset:580*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd50e7867, 0x7fd1ecf7,0xd50e7867,0xffd1ecf7,x16, 64*SIGALIGN, x17,x1, x14)

inst_300:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xeeed208a47b6f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xeeed208a47b6f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fbeeed208a47b6f; valaddr_reg:x16; op2:x26; op2val:0xffbeeed208a47b6f
offset:582*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x08a47b6f, 0x7fbeeed2,0x08a47b6f,0xffbeeed2,x16, 66*SIGALIGN, x17,x1, x14)

inst_301:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x4c297c00425ff and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x4c297c00425ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa4c297c00425ff; valaddr_reg:x16; op2:x26; op2val:0xffa4c297c00425ff
offset:584*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc00425ff, 0x7fa4c297,0xc00425ff,0xffa4c297,x16, 68*SIGALIGN, x17,x1, x14)

inst_302:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d5d3ab8fef6e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0d5d3ab8fef6e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe0d5d3ab8fef6e; valaddr_reg:x16; op2:x26; op2val:0xffe0d5d3ab8fef6e
offset:586*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xab8fef6e, 0x7fe0d5d3,0xab8fef6e,0xffe0d5d3,x16, 70*SIGALIGN, x17,x1, x14)

inst_303:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x95be9fb8e8257 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x95be9fb8e8257 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd95be9fb8e8257; valaddr_reg:x16; op2:x26; op2val:0xffd95be9fb8e8257
offset:588*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfb8e8257, 0x7fd95be9,0xfb8e8257,0xffd95be9,x16, 72*SIGALIGN, x17,x1, x14)

inst_304:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x02abb1ad4a0a3 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x02abb1ad4a0a3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd02abb1ad4a0a3; valaddr_reg:x16; op2:x26; op2val:0xffd02abb1ad4a0a3
offset:590*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1ad4a0a3, 0x7fd02abb,0x1ad4a0a3,0xffd02abb,x16, 74*SIGALIGN, x17,x1, x14)

inst_305:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x82ac91eb0b042 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x82ac91eb0b042 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe82ac91eb0b042; valaddr_reg:x16; op2:x26; op2val:0xffe82ac91eb0b042
offset:592*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1eb0b042, 0x7fe82ac9,0x1eb0b042,0xffe82ac9,x16, 76*SIGALIGN, x17,x1, x14)

inst_306:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x30d9918574e31 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x30d9918574e31 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe30d9918574e31; valaddr_reg:x16; op2:x26; op2val:0xffe30d9918574e31
offset:594*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x18574e31, 0x7fe30d99,0x18574e31,0xffe30d99,x16, 78*SIGALIGN, x17,x1, x14)

inst_307:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x95a004d0cc955 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x95a004d0cc955 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe95a004d0cc955; valaddr_reg:x16; op2:x26; op2val:0xffe95a004d0cc955
offset:596*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x4d0cc955, 0x7fe95a00,0x4d0cc955,0xffe95a00,x16, 80*SIGALIGN, x17,x1, x14)

inst_308:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c0c3b0f20ae1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x5c0c3b0f20ae1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd5c0c3b0f20ae1; valaddr_reg:x16; op2:x26; op2val:0xffd5c0c3b0f20ae1
offset:598*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xb0f20ae1, 0x7fd5c0c3,0xb0f20ae1,0xffd5c0c3,x16, 82*SIGALIGN, x17,x1, x14)

inst_309:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xfe0c60e404d7f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xfe0c60e404d7f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fcfe0c60e404d7f; valaddr_reg:x16; op2:x26; op2val:0xffcfe0c60e404d7f
offset:600*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0e404d7f, 0x7fcfe0c6,0x0e404d7f,0xffcfe0c6,x16, 84*SIGALIGN, x17,x1, x14)

inst_310:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4ef5cc116e8a3 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x4ef5cc116e8a3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fc4ef5cc116e8a3; valaddr_reg:x16; op2:x26; op2val:0xffc4ef5cc116e8a3
offset:602*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc116e8a3, 0x7fc4ef5c,0xc116e8a3,0xffc4ef5c,x16, 86*SIGALIGN, x17,x1, x14)

inst_311:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x28a501a431151 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x28a501a431151 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd28a501a431151; valaddr_reg:x16; op2:x26; op2val:0xffd28a501a431151
offset:604*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1a431151, 0x7fd28a50,0x1a431151,0xffd28a50,x16, 88*SIGALIGN, x17,x1, x14)

inst_312:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x25e0f16179d08 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x25e0f16179d08 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe25e0f16179d08; valaddr_reg:x16; op2:x26; op2val:0xffe25e0f16179d08
offset:606*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x16179d08, 0x7fe25e0f,0x16179d08,0xffe25e0f,x16, 90*SIGALIGN, x17,x1, x14)

inst_313:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x10107d46bd56f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x10107d46bd56f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe10107d46bd56f; valaddr_reg:x16; op2:x26; op2val:0xffe10107d46bd56f
offset:608*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd46bd56f, 0x7fe10107,0xd46bd56f,0xffe10107,x16, 92*SIGALIGN, x17,x1, x14)

inst_314:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x44e981a2c9e6f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x44e981a2c9e6f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe44e981a2c9e6f; valaddr_reg:x16; op2:x26; op2val:0xffe44e981a2c9e6f
offset:610*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1a2c9e6f, 0x7fe44e98,0x1a2c9e6f,0xffe44e98,x16, 94*SIGALIGN, x17,x1, x14)

inst_315:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e9e23b9dbe28 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8e9e23b9dbe28 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe8e9e23b9dbe28; valaddr_reg:x16; op2:x26; op2val:0xffe8e9e23b9dbe28
offset:612*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x3b9dbe28, 0x7fe8e9e2,0x3b9dbe28,0xffe8e9e2,x16, 96*SIGALIGN, x17,x1, x14)

inst_316:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2b44ad389f673 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x2b44ad389f673 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd2b44ad389f673; valaddr_reg:x16; op2:x26; op2val:0xffd2b44ad389f673
offset:614*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd389f673, 0x7fd2b44a,0xd389f673,0xffd2b44a,x16, 98*SIGALIGN, x17,x1, x14)

inst_317:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x41f380c8d1ec8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x41f380c8d1ec8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe41f380c8d1ec8; valaddr_reg:x16; op2:x26; op2val:0xffe41f380c8d1ec8
offset:616*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0c8d1ec8, 0x7fe41f38,0x0c8d1ec8,0xffe41f38,x16, 100*SIGALIGN, x17,x1, x14)

inst_318:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x64e15e87b6907 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x64e15e87b6907 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe64e15e87b6907; valaddr_reg:x16; op2:x26; op2val:0xffe64e15e87b6907
offset:618*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xe87b6907, 0x7fe64e15,0xe87b6907,0xffe64e15,x16, 102*SIGALIGN, x17,x1, x14)

inst_319:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2e9fbd9df2c67 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x2e9fbd9df2c67 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe2e9fbd9df2c67; valaddr_reg:x16; op2:x26; op2val:0xffe2e9fbd9df2c67
offset:620*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd9df2c67, 0x7fe2e9fb,0xd9df2c67,0xffe2e9fb,x16, 104*SIGALIGN, x17,x1, x14)

inst_320:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5625f693222e6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x5625f693222e6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe5625f693222e6; valaddr_reg:x16; op2:x26; op2val:0xffe5625f693222e6
offset:622*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x693222e6, 0x7fe5625f,0x693222e6,0xffe5625f,x16, 106*SIGALIGN, x17,x1, x14)

inst_321:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe40271df052d1 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe40271df052d1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde40271df052d1; valaddr_reg:x16; op2:x26; op2val:0xffde40271df052d1
offset:624*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1df052d1, 0x7fde4027,0x1df052d1,0xffde4027,x16, 108*SIGALIGN, x17,x1, x14)

inst_322:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe8280abe92e75 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe8280abe92e75 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde8280abe92e75; valaddr_reg:x16; op2:x26; op2val:0xffde8280abe92e75
offset:626*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xabe92e75, 0x7fde8280,0xabe92e75,0xffde8280,x16, 110*SIGALIGN, x17,x1, x14)

inst_323:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x45e0c0bf1170b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x45e0c0bf1170b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fd45e0c0bf1170b; valaddr_reg:x16; op2:x26; op2val:0xffd45e0c0bf1170b
offset:628*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x0bf1170b, 0x7fd45e0c,0x0bf1170b,0xffd45e0c,x16, 112*SIGALIGN, x17,x1, x14)

inst_324:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xed56e9c6a326f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0xed56e9c6a326f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7faed56e9c6a326f; valaddr_reg:x16; op2:x26; op2val:0xffaed56e9c6a326f
offset:630*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9c6a326f, 0x7faed56e,0x9c6a326f,0xffaed56e,x16, 114*SIGALIGN, x17,x1, x14)

inst_325:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d8c1fdfb6a69 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x7d8c1fdfb6a69 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe7d8c1fdfb6a69; valaddr_reg:x16; op2:x26; op2val:0xffe7d8c1fdfb6a69
offset:632*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xfdfb6a69, 0x7fe7d8c1,0xfdfb6a69,0xffe7d8c1,x16, 116*SIGALIGN, x17,x1, x14)

inst_326:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3e06598dce41c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x3e06598dce41c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe3e06598dce41c; valaddr_reg:x16; op2:x26; op2val:0xffe3e06598dce41c
offset:634*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x98dce41c, 0x7fe3e065,0x98dce41c,0xffe3e065,x16, 118*SIGALIGN, x17,x1, x14)

inst_327:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2d876b20b2cd and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xe2d876b20b2cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fde2d876b20b2cd; valaddr_reg:x16; op2:x26; op2val:0xffde2d876b20b2cd
offset:636*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x6b20b2cd, 0x7fde2d87,0x6b20b2cd,0xffde2d87,x16, 120*SIGALIGN, x17,x1, x14)

inst_328:// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x4b499d8a230bf and fs2 == 1 and fe2 == 0x7f8 and fm2 == 0x4b499d8a230bf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7f84b499d8a230bf; valaddr_reg:x16; op2:x26; op2val:0xff84b499d8a230bf
offset:638*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xd8a230bf, 0x7f84b499,0xd8a230bf,0xff84b499,x16, 122*SIGALIGN, x17,x1, x14)

inst_329:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1035095fb0c7f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x1035095fb0c7f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fb1035095fb0c7f; valaddr_reg:x16; op2:x26; op2val:0xffb1035095fb0c7f
offset:640*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x95fb0c7f, 0x7fb10350,0x95fb0c7f,0xffb10350,x16, 124*SIGALIGN, x17,x1, x14)

inst_330:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5f6241fcc17b9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x5f6241fcc17b9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe5f6241fcc17b9; valaddr_reg:x16; op2:x26; op2val:0xffe5f6241fcc17b9
offset:642*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1fcc17b9, 0x7fe5f624,0x1fcc17b9,0xffe5f624,x16, 126*SIGALIGN, x17,x1, x14)

inst_331:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5688295949924 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x5688295949924 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe5688295949924; valaddr_reg:x16; op2:x26; op2val:0xffe5688295949924
offset:644*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x95949924, 0x7fe56882,0x95949924,0xffe56882,x16, 128*SIGALIGN, x17,x1, x14)

inst_332:// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x51543c76f092f and fs2 == 1 and fe2 == 0x7fa and fm2 == 0x51543c76f092f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fa51543c76f092f; valaddr_reg:x16; op2:x26; op2val:0xffa51543c76f092f
offset:646*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xc76f092f, 0x7fa51543,0xc76f092f,0xffa51543,x16, 130*SIGALIGN, x17,x1, x14)

inst_333:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xffd6ba914d0ca and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xffd6ba914d0ca and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feffd6ba914d0ca; valaddr_reg:x16; op2:x26; op2val:0xffeffd6ba914d0ca
offset:648*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xa914d0ca, 0x7feffd6b,0xa914d0ca,0xffeffd6b,x16, 132*SIGALIGN, x17,x1, x14)

inst_334:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x663d37d2b8c0a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x663d37d2b8c0a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fe663d37d2b8c0a; valaddr_reg:x16; op2:x26; op2val:0xffe663d37d2b8c0a
offset:650*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x7d2b8c0a, 0x7fe663d3,0x7d2b8c0a,0xffe663d3,x16, 134*SIGALIGN, x17,x1, x14)

inst_335:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd04149240396f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0xd04149240396f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fcd04149240396f; valaddr_reg:x16; op2:x26; op2val:0xffcd04149240396f
offset:652*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x9240396f, 0x7fcd0414,0x9240396f,0xffcd0414,x16, 136*SIGALIGN, x17,x1, x14)

inst_336:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb0580f98a7dbd and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xb0580f98a7dbd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7feb0580f98a7dbd; valaddr_reg:x16; op2:x26; op2val:0xffeb0580f98a7dbd
offset:654*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0xf98a7dbd, 0x7feb0580,0xf98a7dbd,0xffeb0580,x16, 138*SIGALIGN, x17,x1, x14)

inst_337:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeaa51052e977 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xaeaa51052e977 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fadd.d ; op1:x28; dest:x30; op1val:0x7fdaeaa51052e977; valaddr_reg:x16; op2:x26; op2val:0xffdaeaa51052e977
offset:656*FLEN/8; correctval:??; testreg:x14;
fcsr_val:96*/
TEST_ZDINX_PPP_OP_32(fadd.d, x30, x31, x28, x29,x26,x27,96, 0, 0, 0x1052e977, 0x7fdaeaa5,0x1052e977,0xffdaeaa5,x16, 140*SIGALIGN, x17,x1, x14)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xcdf19706,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0xc751c4f4,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0x82dd48fb,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0xc0dfaf72,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0x991e3307,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0xc7329695,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
NAN_BOXED(0x2e21585b,64,FLEN)
test_dataset_1:
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0xb2685903,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x30ca446d,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x8366e29b,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0x147a7f97,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xaa879221,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0xf4d1629c,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0x038aa2cf,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xf07f8c6f,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0xd7a9fa74,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x1f5c40de,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0x4b23e38e,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe52a4bff,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xe555215f,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xf5a10f55,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0xeeac1c13,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x7cda8053,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0x6e2c058e,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xdfc8788f,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0xbbfdec45,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0x09a573b7,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xac7fce60,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xcfb0623a,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0xef329d04,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x4d268f9f,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0x2f3115df,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0xacf7eaef,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x9d24bacb,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0x7fecd9d5,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0xd88d7c8f,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x9485598d,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x582791a6,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x8ecc1b45,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x36bbe6ff,64,FLEN)
NAN_BOXED(0x7e1929e8,64,FLEN)
NAN_BOXED(0x7e1929e8,64,FLEN)
NAN_BOXED(0xc4f1275c,64,FLEN)
NAN_BOXED(0xc4f1275c,64,FLEN)
NAN_BOXED(0xc2b7c81f,64,FLEN)
NAN_BOXED(0xc2b7c81f,64,FLEN)
NAN_BOXED(0x4dad7d48,64,FLEN)
NAN_BOXED(0x4dad7d48,64,FLEN)
NAN_BOXED(0xa3f0f54d,64,FLEN)
NAN_BOXED(0xa3f0f54d,64,FLEN)
NAN_BOXED(0x1ecd07ea,64,FLEN)
NAN_BOXED(0x1ecd07ea,64,FLEN)
NAN_BOXED(0x496df1c1,64,FLEN)
NAN_BOXED(0x496df1c1,64,FLEN)
NAN_BOXED(0x50761e3d,64,FLEN)
NAN_BOXED(0x50761e3d,64,FLEN)
NAN_BOXED(0xc1575123,64,FLEN)
NAN_BOXED(0xc1575123,64,FLEN)
NAN_BOXED(0x90426463,64,FLEN)
NAN_BOXED(0x90426463,64,FLEN)
NAN_BOXED(0x569216bf,64,FLEN)
NAN_BOXED(0x569216bf,64,FLEN)
NAN_BOXED(0x44ae92c5,64,FLEN)
NAN_BOXED(0x44ae92c5,64,FLEN)
NAN_BOXED(0xc83faf60,64,FLEN)
NAN_BOXED(0xc83faf60,64,FLEN)
NAN_BOXED(0xfdaf66c3,64,FLEN)
NAN_BOXED(0xfdaf66c3,64,FLEN)
NAN_BOXED(0x744bb2ef,64,FLEN)
NAN_BOXED(0x744bb2ef,64,FLEN)
NAN_BOXED(0xe7beff05,64,FLEN)
NAN_BOXED(0xe7beff05,64,FLEN)
NAN_BOXED(0xdc4bc5d6,64,FLEN)
NAN_BOXED(0xdc4bc5d6,64,FLEN)
NAN_BOXED(0x54c10b8b,64,FLEN)
NAN_BOXED(0x54c10b8b,64,FLEN)
NAN_BOXED(0xe07a9172,64,FLEN)
NAN_BOXED(0xe07a9172,64,FLEN)
NAN_BOXED(0x6eabb69f,64,FLEN)
NAN_BOXED(0x6eabb69f,64,FLEN)
NAN_BOXED(0x26c0948f,64,FLEN)
NAN_BOXED(0x26c0948f,64,FLEN)
NAN_BOXED(0xabe1fd0e,64,FLEN)
NAN_BOXED(0xabe1fd0e,64,FLEN)
NAN_BOXED(0xef55e1cf,64,FLEN)
NAN_BOXED(0xef55e1cf,64,FLEN)
NAN_BOXED(0x503e8d08,64,FLEN)
NAN_BOXED(0x503e8d08,64,FLEN)
NAN_BOXED(0xc5a9817f,64,FLEN)
NAN_BOXED(0xc5a9817f,64,FLEN)
NAN_BOXED(0x1abfb6e7,64,FLEN)
NAN_BOXED(0x1abfb6e7,64,FLEN)
NAN_BOXED(0x3126cbc7,64,FLEN)
NAN_BOXED(0x3126cbc7,64,FLEN)
NAN_BOXED(0x637d118d,64,FLEN)
NAN_BOXED(0x637d118d,64,FLEN)
NAN_BOXED(0x4dde57a5,64,FLEN)
NAN_BOXED(0x4dde57a5,64,FLEN)
NAN_BOXED(0x7660dadf,64,FLEN)
NAN_BOXED(0x7660dadf,64,FLEN)
NAN_BOXED(0x9429817b,64,FLEN)
NAN_BOXED(0x9429817b,64,FLEN)
NAN_BOXED(0xd9e18057,64,FLEN)
NAN_BOXED(0xd9e18057,64,FLEN)
NAN_BOXED(0x7e477166,64,FLEN)
NAN_BOXED(0x7e477166,64,FLEN)
NAN_BOXED(0x80d04bef,64,FLEN)
NAN_BOXED(0x80d04bef,64,FLEN)
NAN_BOXED(0x7279369f,64,FLEN)
NAN_BOXED(0x7279369f,64,FLEN)
NAN_BOXED(0xe0a5d748,64,FLEN)
NAN_BOXED(0xe0a5d748,64,FLEN)
NAN_BOXED(0xe8f00d47,64,FLEN)
NAN_BOXED(0xe8f00d47,64,FLEN)
NAN_BOXED(0x85532923,64,FLEN)
NAN_BOXED(0x85532923,64,FLEN)
NAN_BOXED(0x5d734347,64,FLEN)
NAN_BOXED(0x5d734347,64,FLEN)
NAN_BOXED(0xeb7fcccc,64,FLEN)
NAN_BOXED(0xeb7fcccc,64,FLEN)
NAN_BOXED(0x35310409,64,FLEN)
NAN_BOXED(0x35310409,64,FLEN)
NAN_BOXED(0xcea16623,64,FLEN)
NAN_BOXED(0xcea16623,64,FLEN)
NAN_BOXED(0xdec36709,64,FLEN)
NAN_BOXED(0xdec36709,64,FLEN)
NAN_BOXED(0x3050f8b7,64,FLEN)
NAN_BOXED(0x3050f8b7,64,FLEN)
NAN_BOXED(0xe2d6216f,64,FLEN)
NAN_BOXED(0xe2d6216f,64,FLEN)
NAN_BOXED(0xdc31d5a7,64,FLEN)
NAN_BOXED(0xdc31d5a7,64,FLEN)
NAN_BOXED(0x14e18ecb,64,FLEN)
NAN_BOXED(0x14e18ecb,64,FLEN)
NAN_BOXED(0x04b8e37f,64,FLEN)
NAN_BOXED(0x04b8e37f,64,FLEN)
NAN_BOXED(0x936a43d3,64,FLEN)
NAN_BOXED(0x936a43d3,64,FLEN)
NAN_BOXED(0x8d3dbea5,64,FLEN)
NAN_BOXED(0x8d3dbea5,64,FLEN)
NAN_BOXED(0x06a197c5,64,FLEN)
NAN_BOXED(0x06a197c5,64,FLEN)
NAN_BOXED(0xc1b18bff,64,FLEN)
NAN_BOXED(0xc1b18bff,64,FLEN)
NAN_BOXED(0x5947d7e7,64,FLEN)
NAN_BOXED(0x5947d7e7,64,FLEN)
NAN_BOXED(0x6dcae3fb,64,FLEN)
NAN_BOXED(0x6dcae3fb,64,FLEN)
NAN_BOXED(0xeab1f21f,64,FLEN)
NAN_BOXED(0xeab1f21f,64,FLEN)
NAN_BOXED(0x68409ae9,64,FLEN)
NAN_BOXED(0x68409ae9,64,FLEN)
NAN_BOXED(0x66451777,64,FLEN)
NAN_BOXED(0x66451777,64,FLEN)
NAN_BOXED(0x6ed605ac,64,FLEN)
NAN_BOXED(0x6ed605ac,64,FLEN)
NAN_BOXED(0x7882d6d1,64,FLEN)
NAN_BOXED(0x7882d6d1,64,FLEN)
NAN_BOXED(0xd7244f4f,64,FLEN)
NAN_BOXED(0xd7244f4f,64,FLEN)
NAN_BOXED(0x0f43aa65,64,FLEN)
NAN_BOXED(0x0f43aa65,64,FLEN)
NAN_BOXED(0x64001220,64,FLEN)
NAN_BOXED(0x64001220,64,FLEN)
NAN_BOXED(0x129b8879,64,FLEN)
NAN_BOXED(0x129b8879,64,FLEN)
NAN_BOXED(0xf8661b6b,64,FLEN)
NAN_BOXED(0xf8661b6b,64,FLEN)
NAN_BOXED(0x3fe58e9e,64,FLEN)
NAN_BOXED(0x3fe58e9e,64,FLEN)
NAN_BOXED(0x28c6e8ff,64,FLEN)
NAN_BOXED(0x28c6e8ff,64,FLEN)
NAN_BOXED(0x5bea0eb5,64,FLEN)
NAN_BOXED(0x5bea0eb5,64,FLEN)
NAN_BOXED(0xc485a77d,64,FLEN)
NAN_BOXED(0xc485a77d,64,FLEN)
NAN_BOXED(0xe798ac5f,64,FLEN)
NAN_BOXED(0xe798ac5f,64,FLEN)
NAN_BOXED(0x0806f2cd,64,FLEN)
NAN_BOXED(0x0806f2cd,64,FLEN)
NAN_BOXED(0xc304de2e,64,FLEN)
NAN_BOXED(0xc304de2e,64,FLEN)
NAN_BOXED(0xd2b3faec,64,FLEN)
NAN_BOXED(0xd2b3faec,64,FLEN)
NAN_BOXED(0x06183f67,64,FLEN)
NAN_BOXED(0x06183f67,64,FLEN)
NAN_BOXED(0x48cb47df,64,FLEN)
NAN_BOXED(0x48cb47df,64,FLEN)
NAN_BOXED(0xbd822141,64,FLEN)
NAN_BOXED(0xbd822141,64,FLEN)
NAN_BOXED(0x0f3828f7,64,FLEN)
NAN_BOXED(0x0f3828f7,64,FLEN)
NAN_BOXED(0x5d0567a5,64,FLEN)
NAN_BOXED(0x5d0567a5,64,FLEN)
NAN_BOXED(0x5f4fa0e5,64,FLEN)
NAN_BOXED(0x5f4fa0e5,64,FLEN)
NAN_BOXED(0xa0768ede,64,FLEN)
NAN_BOXED(0xa0768ede,64,FLEN)
NAN_BOXED(0xba7502a7,64,FLEN)
NAN_BOXED(0xba7502a7,64,FLEN)
NAN_BOXED(0x5e946b52,64,FLEN)
NAN_BOXED(0x5e946b52,64,FLEN)
NAN_BOXED(0xfc9e258d,64,FLEN)
NAN_BOXED(0xfc9e258d,64,FLEN)
NAN_BOXED(0x056a01ff,64,FLEN)
NAN_BOXED(0x056a01ff,64,FLEN)
NAN_BOXED(0xbd09e6c4,64,FLEN)
NAN_BOXED(0xbd09e6c4,64,FLEN)
NAN_BOXED(0xb977b300,64,FLEN)
NAN_BOXED(0xb977b300,64,FLEN)
NAN_BOXED(0x3765d304,64,FLEN)
NAN_BOXED(0x3765d304,64,FLEN)
NAN_BOXED(0x97d84592,64,FLEN)
NAN_BOXED(0x97d84592,64,FLEN)
NAN_BOXED(0x71fa5a72,64,FLEN)
NAN_BOXED(0x71fa5a72,64,FLEN)
NAN_BOXED(0x65d5ac1b,64,FLEN)
NAN_BOXED(0x65d5ac1b,64,FLEN)
NAN_BOXED(0x6ef8a62f,64,FLEN)
NAN_BOXED(0x6ef8a62f,64,FLEN)
NAN_BOXED(0xb6025f07,64,FLEN)
NAN_BOXED(0xb6025f07,64,FLEN)
NAN_BOXED(0x2371e9ff,64,FLEN)
NAN_BOXED(0x2371e9ff,64,FLEN)
NAN_BOXED(0x22b338ff,64,FLEN)
NAN_BOXED(0x22b338ff,64,FLEN)
NAN_BOXED(0x805ff4db,64,FLEN)
NAN_BOXED(0x805ff4db,64,FLEN)
NAN_BOXED(0xbc24857c,64,FLEN)
NAN_BOXED(0xbc24857c,64,FLEN)
NAN_BOXED(0xe264020f,64,FLEN)
NAN_BOXED(0xe264020f,64,FLEN)
NAN_BOXED(0x6ae322ff,64,FLEN)
NAN_BOXED(0x6ae322ff,64,FLEN)
NAN_BOXED(0xf084c097,64,FLEN)
NAN_BOXED(0xf084c097,64,FLEN)
NAN_BOXED(0x8dd81bc5,64,FLEN)
NAN_BOXED(0x8dd81bc5,64,FLEN)
NAN_BOXED(0xd3b44d4f,64,FLEN)
NAN_BOXED(0xd3b44d4f,64,FLEN)
NAN_BOXED(0xd6ea260a,64,FLEN)
NAN_BOXED(0xd6ea260a,64,FLEN)
NAN_BOXED(0xf6af39ef,64,FLEN)
NAN_BOXED(0xf6af39ef,64,FLEN)
NAN_BOXED(0x80de84a1,64,FLEN)
NAN_BOXED(0x80de84a1,64,FLEN)
NAN_BOXED(0x01ecb86d,64,FLEN)
NAN_BOXED(0x01ecb86d,64,FLEN)
NAN_BOXED(0xc33105f8,64,FLEN)
NAN_BOXED(0xc33105f8,64,FLEN)
NAN_BOXED(0x40fe9dff,64,FLEN)
NAN_BOXED(0x40fe9dff,64,FLEN)
NAN_BOXED(0xa9fdae1d,64,FLEN)
NAN_BOXED(0xa9fdae1d,64,FLEN)
NAN_BOXED(0x72ae3f6b,64,FLEN)
NAN_BOXED(0x72ae3f6b,64,FLEN)
NAN_BOXED(0x489f6667,64,FLEN)
NAN_BOXED(0x489f6667,64,FLEN)
NAN_BOXED(0x564208fa,64,FLEN)
NAN_BOXED(0x564208fa,64,FLEN)
NAN_BOXED(0x8bf74bb4,64,FLEN)
NAN_BOXED(0x8bf74bb4,64,FLEN)
NAN_BOXED(0x99d945d7,64,FLEN)
NAN_BOXED(0x99d945d7,64,FLEN)
NAN_BOXED(0x78e25d36,64,FLEN)
NAN_BOXED(0x78e25d36,64,FLEN)
NAN_BOXED(0x191b8abf,64,FLEN)
NAN_BOXED(0x191b8abf,64,FLEN)
NAN_BOXED(0xb528c6c8,64,FLEN)
NAN_BOXED(0xb528c6c8,64,FLEN)
NAN_BOXED(0xce4e6a55,64,FLEN)
NAN_BOXED(0xce4e6a55,64,FLEN)
NAN_BOXED(0xbcde77b5,64,FLEN)
NAN_BOXED(0xbcde77b5,64,FLEN)
NAN_BOXED(0x19c2d7a1,64,FLEN)
NAN_BOXED(0x19c2d7a1,64,FLEN)
NAN_BOXED(0x44ae8c01,64,FLEN)
NAN_BOXED(0x44ae8c01,64,FLEN)
NAN_BOXED(0x11891a75,64,FLEN)
NAN_BOXED(0x11891a75,64,FLEN)
NAN_BOXED(0x9a4daa6f,64,FLEN)
NAN_BOXED(0x9a4daa6f,64,FLEN)
NAN_BOXED(0x681c4823,64,FLEN)
NAN_BOXED(0x681c4823,64,FLEN)
NAN_BOXED(0x2604fe6b,64,FLEN)
NAN_BOXED(0x2604fe6b,64,FLEN)
NAN_BOXED(0x8fe823f7,64,FLEN)
NAN_BOXED(0x8fe823f7,64,FLEN)
NAN_BOXED(0xca418657,64,FLEN)
NAN_BOXED(0xca418657,64,FLEN)
NAN_BOXED(0x0b309254,64,FLEN)
NAN_BOXED(0x0b309254,64,FLEN)
NAN_BOXED(0x71ac902b,64,FLEN)
NAN_BOXED(0x71ac902b,64,FLEN)
NAN_BOXED(0xfae4a49b,64,FLEN)
NAN_BOXED(0xfae4a49b,64,FLEN)
NAN_BOXED(0xb1ad0a6b,64,FLEN)
NAN_BOXED(0xb1ad0a6b,64,FLEN)
NAN_BOXED(0xc9f39c6c,64,FLEN)
NAN_BOXED(0xc9f39c6c,64,FLEN)
NAN_BOXED(0xdd1b5e57,64,FLEN)
NAN_BOXED(0xdd1b5e57,64,FLEN)
NAN_BOXED(0x4215bcf5,64,FLEN)
NAN_BOXED(0x4215bcf5,64,FLEN)
NAN_BOXED(0x438d16b0,64,FLEN)
NAN_BOXED(0x438d16b0,64,FLEN)
NAN_BOXED(0x9ffc4763,64,FLEN)
NAN_BOXED(0x9ffc4763,64,FLEN)
NAN_BOXED(0xc37fb117,64,FLEN)
NAN_BOXED(0xc37fb117,64,FLEN)
NAN_BOXED(0xa7b9aa37,64,FLEN)
NAN_BOXED(0xa7b9aa37,64,FLEN)
NAN_BOXED(0x6da50e51,64,FLEN)
NAN_BOXED(0x6da50e51,64,FLEN)
NAN_BOXED(0x8145e5cc,64,FLEN)
NAN_BOXED(0x8145e5cc,64,FLEN)
NAN_BOXED(0x619b5bff,64,FLEN)
NAN_BOXED(0x619b5bff,64,FLEN)
NAN_BOXED(0xd4d218f9,64,FLEN)
NAN_BOXED(0xd4d218f9,64,FLEN)
NAN_BOXED(0x058419e9,64,FLEN)
NAN_BOXED(0x058419e9,64,FLEN)
NAN_BOXED(0x3ad3537e,64,FLEN)
NAN_BOXED(0x3ad3537e,64,FLEN)
NAN_BOXED(0x799927f7,64,FLEN)
NAN_BOXED(0x799927f7,64,FLEN)
NAN_BOXED(0x8ba97c91,64,FLEN)
NAN_BOXED(0x8ba97c91,64,FLEN)
NAN_BOXED(0x42168107,64,FLEN)
NAN_BOXED(0x42168107,64,FLEN)
NAN_BOXED(0xc2472fbf,64,FLEN)
NAN_BOXED(0xc2472fbf,64,FLEN)
NAN_BOXED(0x46e52d99,64,FLEN)
NAN_BOXED(0x46e52d99,64,FLEN)
NAN_BOXED(0x5de62d3f,64,FLEN)
NAN_BOXED(0x5de62d3f,64,FLEN)
NAN_BOXED(0xcd7c3bcb,64,FLEN)
NAN_BOXED(0xcd7c3bcb,64,FLEN)
NAN_BOXED(0xb21e85e5,64,FLEN)
NAN_BOXED(0xb21e85e5,64,FLEN)
NAN_BOXED(0xd05cd288,64,FLEN)
NAN_BOXED(0xd05cd288,64,FLEN)
NAN_BOXED(0x06126e28,64,FLEN)
NAN_BOXED(0x06126e28,64,FLEN)
NAN_BOXED(0x584e30d0,64,FLEN)
NAN_BOXED(0x584e30d0,64,FLEN)
NAN_BOXED(0xdb04baa5,64,FLEN)
NAN_BOXED(0xdb04baa5,64,FLEN)
NAN_BOXED(0x5f9ac41a,64,FLEN)
NAN_BOXED(0x5f9ac41a,64,FLEN)
NAN_BOXED(0x4fe3e3c0,64,FLEN)
NAN_BOXED(0x4fe3e3c0,64,FLEN)
NAN_BOXED(0x8fe39141,64,FLEN)
NAN_BOXED(0x8fe39141,64,FLEN)
NAN_BOXED(0xb8ef2d41,64,FLEN)
NAN_BOXED(0xb8ef2d41,64,FLEN)
NAN_BOXED(0x0414f92c,64,FLEN)
NAN_BOXED(0x0414f92c,64,FLEN)
NAN_BOXED(0x685f5fff,64,FLEN)
NAN_BOXED(0x685f5fff,64,FLEN)
NAN_BOXED(0xd247f3f9,64,FLEN)
NAN_BOXED(0xd247f3f9,64,FLEN)
NAN_BOXED(0x0fcad57f,64,FLEN)
NAN_BOXED(0x0fcad57f,64,FLEN)
NAN_BOXED(0x3b4cd220,64,FLEN)
NAN_BOXED(0x3b4cd220,64,FLEN)
NAN_BOXED(0xeb12c253,64,FLEN)
NAN_BOXED(0xeb12c253,64,FLEN)
NAN_BOXED(0x4a7b9fbf,64,FLEN)
NAN_BOXED(0x4a7b9fbf,64,FLEN)
NAN_BOXED(0x63d2bf03,64,FLEN)
NAN_BOXED(0x63d2bf03,64,FLEN)
NAN_BOXED(0xc5560a8d,64,FLEN)
NAN_BOXED(0xc5560a8d,64,FLEN)
NAN_BOXED(0x5ece1e0f,64,FLEN)
NAN_BOXED(0x5ece1e0f,64,FLEN)
NAN_BOXED(0x8f1ea41f,64,FLEN)
NAN_BOXED(0x8f1ea41f,64,FLEN)
NAN_BOXED(0xd0539418,64,FLEN)
NAN_BOXED(0xd0539418,64,FLEN)
NAN_BOXED(0x3cf6f10f,64,FLEN)
NAN_BOXED(0x3cf6f10f,64,FLEN)
NAN_BOXED(0xf8480c55,64,FLEN)
NAN_BOXED(0xf8480c55,64,FLEN)
NAN_BOXED(0x13abca7f,64,FLEN)
NAN_BOXED(0x13abca7f,64,FLEN)
NAN_BOXED(0x7e39a5d7,64,FLEN)
NAN_BOXED(0x7e39a5d7,64,FLEN)
NAN_BOXED(0x264a8d1f,64,FLEN)
NAN_BOXED(0x264a8d1f,64,FLEN)
NAN_BOXED(0x114baf6a,64,FLEN)
NAN_BOXED(0x114baf6a,64,FLEN)
NAN_BOXED(0xf298916c,64,FLEN)
NAN_BOXED(0xf298916c,64,FLEN)
NAN_BOXED(0x2e44701b,64,FLEN)
NAN_BOXED(0x2e44701b,64,FLEN)
NAN_BOXED(0xc8e35259,64,FLEN)
NAN_BOXED(0xc8e35259,64,FLEN)
NAN_BOXED(0xd6cda314,64,FLEN)
NAN_BOXED(0xd6cda314,64,FLEN)
NAN_BOXED(0xb7bc5458,64,FLEN)
NAN_BOXED(0xb7bc5458,64,FLEN)
NAN_BOXED(0x1f060647,64,FLEN)
NAN_BOXED(0x1f060647,64,FLEN)
NAN_BOXED(0x112f7fe8,64,FLEN)
NAN_BOXED(0x112f7fe8,64,FLEN)
NAN_BOXED(0x9f55e3a7,64,FLEN)
NAN_BOXED(0x9f55e3a7,64,FLEN)
NAN_BOXED(0x052cdad4,64,FLEN)
NAN_BOXED(0x052cdad4,64,FLEN)
NAN_BOXED(0xefd48729,64,FLEN)
NAN_BOXED(0xefd48729,64,FLEN)
NAN_BOXED(0x307c783a,64,FLEN)
NAN_BOXED(0x307c783a,64,FLEN)
NAN_BOXED(0x23fbbdc6,64,FLEN)
NAN_BOXED(0x23fbbdc6,64,FLEN)
NAN_BOXED(0x29916f5c,64,FLEN)
NAN_BOXED(0x29916f5c,64,FLEN)
NAN_BOXED(0x38c30c8b,64,FLEN)
NAN_BOXED(0x38c30c8b,64,FLEN)
NAN_BOXED(0xaa872e85,64,FLEN)
NAN_BOXED(0xaa872e85,64,FLEN)
NAN_BOXED(0x39b92e2f,64,FLEN)
NAN_BOXED(0x39b92e2f,64,FLEN)
NAN_BOXED(0x3a0b07fb,64,FLEN)
NAN_BOXED(0x3a0b07fb,64,FLEN)
NAN_BOXED(0x16148b70,64,FLEN)
NAN_BOXED(0x16148b70,64,FLEN)
NAN_BOXED(0xdb80e5f8,64,FLEN)
NAN_BOXED(0xdb80e5f8,64,FLEN)
NAN_BOXED(0xb8d7cc7f,64,FLEN)
NAN_BOXED(0xb8d7cc7f,64,FLEN)
NAN_BOXED(0x1e827c6a,64,FLEN)
NAN_BOXED(0x1e827c6a,64,FLEN)
NAN_BOXED(0xc61847d5,64,FLEN)
NAN_BOXED(0xc61847d5,64,FLEN)
NAN_BOXED(0x9f905ab9,64,FLEN)
NAN_BOXED(0x9f905ab9,64,FLEN)
NAN_BOXED(0xb7227e1b,64,FLEN)
NAN_BOXED(0xb7227e1b,64,FLEN)
NAN_BOXED(0xdc560c7e,64,FLEN)
NAN_BOXED(0xdc560c7e,64,FLEN)
NAN_BOXED(0x8880ddad,64,FLEN)
NAN_BOXED(0x8880ddad,64,FLEN)
NAN_BOXED(0x809fe79b,64,FLEN)
NAN_BOXED(0x809fe79b,64,FLEN)
NAN_BOXED(0xe54ab8df,64,FLEN)
NAN_BOXED(0xe54ab8df,64,FLEN)
NAN_BOXED(0x19ab0728,64,FLEN)
NAN_BOXED(0x19ab0728,64,FLEN)
NAN_BOXED(0xd374cb87,64,FLEN)
NAN_BOXED(0xd374cb87,64,FLEN)
NAN_BOXED(0x0502a5e1,64,FLEN)
NAN_BOXED(0x0502a5e1,64,FLEN)
NAN_BOXED(0xa3e25417,64,FLEN)
NAN_BOXED(0xa3e25417,64,FLEN)
NAN_BOXED(0x2c378b7f,64,FLEN)
NAN_BOXED(0x2c378b7f,64,FLEN)
NAN_BOXED(0xd48c93bf,64,FLEN)
NAN_BOXED(0xd48c93bf,64,FLEN)
NAN_BOXED(0x897694eb,64,FLEN)
NAN_BOXED(0x897694eb,64,FLEN)
NAN_BOXED(0x3092bae8,64,FLEN)
NAN_BOXED(0x3092bae8,64,FLEN)
NAN_BOXED(0xba8b56f7,64,FLEN)
NAN_BOXED(0xba8b56f7,64,FLEN)
NAN_BOXED(0x979a868f,64,FLEN)
NAN_BOXED(0x979a868f,64,FLEN)
NAN_BOXED(0x96268f7f,64,FLEN)
NAN_BOXED(0x96268f7f,64,FLEN)
NAN_BOXED(0x7765991f,64,FLEN)
NAN_BOXED(0x7765991f,64,FLEN)
NAN_BOXED(0xd8914aef,64,FLEN)
NAN_BOXED(0xd8914aef,64,FLEN)
NAN_BOXED(0xaf41138f,64,FLEN)
NAN_BOXED(0xaf41138f,64,FLEN)
NAN_BOXED(0x79086a84,64,FLEN)
NAN_BOXED(0x79086a84,64,FLEN)
NAN_BOXED(0xccd51d70,64,FLEN)
NAN_BOXED(0xccd51d70,64,FLEN)
NAN_BOXED(0x5faff00f,64,FLEN)
NAN_BOXED(0x5faff00f,64,FLEN)
NAN_BOXED(0x6f837dfc,64,FLEN)
NAN_BOXED(0x6f837dfc,64,FLEN)
NAN_BOXED(0xe54ed4ed,64,FLEN)
NAN_BOXED(0xe54ed4ed,64,FLEN)
NAN_BOXED(0xd452bf98,64,FLEN)
NAN_BOXED(0xd452bf98,64,FLEN)
NAN_BOXED(0x713b2616,64,FLEN)
NAN_BOXED(0x713b2616,64,FLEN)
NAN_BOXED(0x949673fd,64,FLEN)
NAN_BOXED(0x949673fd,64,FLEN)
NAN_BOXED(0xb8e42a3f,64,FLEN)
NAN_BOXED(0xb8e42a3f,64,FLEN)
NAN_BOXED(0x93c9590b,64,FLEN)
NAN_BOXED(0x93c9590b,64,FLEN)
NAN_BOXED(0x1afacd4f,64,FLEN)
NAN_BOXED(0x1afacd4f,64,FLEN)
NAN_BOXED(0xf71a352f,64,FLEN)
NAN_BOXED(0xf71a352f,64,FLEN)
NAN_BOXED(0xb268139f,64,FLEN)
NAN_BOXED(0xb268139f,64,FLEN)
NAN_BOXED(0x4439828f,64,FLEN)
NAN_BOXED(0x4439828f,64,FLEN)
NAN_BOXED(0x75aac054,64,FLEN)
NAN_BOXED(0x75aac054,64,FLEN)
NAN_BOXED(0x49750ca3,64,FLEN)
NAN_BOXED(0x49750ca3,64,FLEN)
NAN_BOXED(0x996b12da,64,FLEN)
NAN_BOXED(0x996b12da,64,FLEN)
NAN_BOXED(0x350fee6d,64,FLEN)
NAN_BOXED(0x350fee6d,64,FLEN)
NAN_BOXED(0x7e1de883,64,FLEN)
NAN_BOXED(0x7e1de883,64,FLEN)
NAN_BOXED(0x9811427d,64,FLEN)
NAN_BOXED(0x9811427d,64,FLEN)
NAN_BOXED(0x339ae482,64,FLEN)
NAN_BOXED(0x339ae482,64,FLEN)
NAN_BOXED(0x75f20f3f,64,FLEN)
NAN_BOXED(0x75f20f3f,64,FLEN)
NAN_BOXED(0x80ba7bd1,64,FLEN)
NAN_BOXED(0x80ba7bd1,64,FLEN)
NAN_BOXED(0x446f38d6,64,FLEN)
NAN_BOXED(0x446f38d6,64,FLEN)
NAN_BOXED(0xa26c1435,64,FLEN)
NAN_BOXED(0xa26c1435,64,FLEN)
NAN_BOXED(0xfecf75de,64,FLEN)
NAN_BOXED(0xfecf75de,64,FLEN)
NAN_BOXED(0x917ba8dd,64,FLEN)
NAN_BOXED(0x917ba8dd,64,FLEN)
NAN_BOXED(0x3965dc9d,64,FLEN)
NAN_BOXED(0x3965dc9d,64,FLEN)
NAN_BOXED(0xb2b91d49,64,FLEN)
NAN_BOXED(0xb2b91d49,64,FLEN)
NAN_BOXED(0xc5af95c3,64,FLEN)
NAN_BOXED(0xc5af95c3,64,FLEN)
NAN_BOXED(0x5c58934b,64,FLEN)
NAN_BOXED(0x5c58934b,64,FLEN)
NAN_BOXED(0x54b7350b,64,FLEN)
NAN_BOXED(0x54b7350b,64,FLEN)
NAN_BOXED(0xddcbddd1,64,FLEN)
NAN_BOXED(0xddcbddd1,64,FLEN)
NAN_BOXED(0x6ffdecff,64,FLEN)
NAN_BOXED(0x6ffdecff,64,FLEN)
NAN_BOXED(0xdfea4b33,64,FLEN)
NAN_BOXED(0xdfea4b33,64,FLEN)
NAN_BOXED(0x4a6fc7c6,64,FLEN)
NAN_BOXED(0x4a6fc7c6,64,FLEN)
NAN_BOXED(0xf701628b,64,FLEN)
NAN_BOXED(0xf701628b,64,FLEN)
NAN_BOXED(0xe9fd9fb7,64,FLEN)
NAN_BOXED(0xe9fd9fb7,64,FLEN)
NAN_BOXED(0xc8b3298f,64,FLEN)
NAN_BOXED(0xc8b3298f,64,FLEN)
NAN_BOXED(0xd50e7867,64,FLEN)
NAN_BOXED(0xd50e7867,64,FLEN)
NAN_BOXED(0x08a47b6f,64,FLEN)
NAN_BOXED(0x08a47b6f,64,FLEN)
NAN_BOXED(0xc00425ff,64,FLEN)
NAN_BOXED(0xc00425ff,64,FLEN)
NAN_BOXED(0xab8fef6e,64,FLEN)
NAN_BOXED(0xab8fef6e,64,FLEN)
NAN_BOXED(0xfb8e8257,64,FLEN)
NAN_BOXED(0xfb8e8257,64,FLEN)
NAN_BOXED(0x1ad4a0a3,64,FLEN)
NAN_BOXED(0x1ad4a0a3,64,FLEN)
NAN_BOXED(0x1eb0b042,64,FLEN)
NAN_BOXED(0x1eb0b042,64,FLEN)
NAN_BOXED(0x18574e31,64,FLEN)
NAN_BOXED(0x18574e31,64,FLEN)
NAN_BOXED(0x4d0cc955,64,FLEN)
NAN_BOXED(0x4d0cc955,64,FLEN)
NAN_BOXED(0xb0f20ae1,64,FLEN)
NAN_BOXED(0xb0f20ae1,64,FLEN)
NAN_BOXED(0x0e404d7f,64,FLEN)
NAN_BOXED(0x0e404d7f,64,FLEN)
NAN_BOXED(0xc116e8a3,64,FLEN)
NAN_BOXED(0xc116e8a3,64,FLEN)
NAN_BOXED(0x1a431151,64,FLEN)
NAN_BOXED(0x1a431151,64,FLEN)
NAN_BOXED(0x16179d08,64,FLEN)
NAN_BOXED(0x16179d08,64,FLEN)
NAN_BOXED(0xd46bd56f,64,FLEN)
NAN_BOXED(0xd46bd56f,64,FLEN)
NAN_BOXED(0x1a2c9e6f,64,FLEN)
NAN_BOXED(0x1a2c9e6f,64,FLEN)
NAN_BOXED(0x3b9dbe28,64,FLEN)
NAN_BOXED(0x3b9dbe28,64,FLEN)
NAN_BOXED(0xd389f673,64,FLEN)
NAN_BOXED(0xd389f673,64,FLEN)
NAN_BOXED(0x0c8d1ec8,64,FLEN)
NAN_BOXED(0x0c8d1ec8,64,FLEN)
NAN_BOXED(0xe87b6907,64,FLEN)
NAN_BOXED(0xe87b6907,64,FLEN)
NAN_BOXED(0xd9df2c67,64,FLEN)
NAN_BOXED(0xd9df2c67,64,FLEN)
NAN_BOXED(0x693222e6,64,FLEN)
NAN_BOXED(0x693222e6,64,FLEN)
NAN_BOXED(0x1df052d1,64,FLEN)
NAN_BOXED(0x1df052d1,64,FLEN)
NAN_BOXED(0xabe92e75,64,FLEN)
NAN_BOXED(0xabe92e75,64,FLEN)
NAN_BOXED(0x0bf1170b,64,FLEN)
NAN_BOXED(0x0bf1170b,64,FLEN)
NAN_BOXED(0x9c6a326f,64,FLEN)
NAN_BOXED(0x9c6a326f,64,FLEN)
NAN_BOXED(0xfdfb6a69,64,FLEN)
NAN_BOXED(0xfdfb6a69,64,FLEN)
NAN_BOXED(0x98dce41c,64,FLEN)
NAN_BOXED(0x98dce41c,64,FLEN)
NAN_BOXED(0x6b20b2cd,64,FLEN)
NAN_BOXED(0x6b20b2cd,64,FLEN)
NAN_BOXED(0xd8a230bf,64,FLEN)
NAN_BOXED(0xd8a230bf,64,FLEN)
NAN_BOXED(0x95fb0c7f,64,FLEN)
NAN_BOXED(0x95fb0c7f,64,FLEN)
NAN_BOXED(0x1fcc17b9,64,FLEN)
NAN_BOXED(0x1fcc17b9,64,FLEN)
NAN_BOXED(0x95949924,64,FLEN)
NAN_BOXED(0x95949924,64,FLEN)
NAN_BOXED(0xc76f092f,64,FLEN)
NAN_BOXED(0xc76f092f,64,FLEN)
NAN_BOXED(0xa914d0ca,64,FLEN)
NAN_BOXED(0xa914d0ca,64,FLEN)
NAN_BOXED(0x7d2b8c0a,64,FLEN)
NAN_BOXED(0x7d2b8c0a,64,FLEN)
NAN_BOXED(0x9240396f,64,FLEN)
NAN_BOXED(0x9240396f,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0xf98a7dbd,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
NAN_BOXED(0x1052e977,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 22*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 512*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 142*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
