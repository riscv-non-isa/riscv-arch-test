
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Tue Feb 28 07:09:04 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/anusha/new/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/anusha/new/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32H/rv32h_fmul.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmul.h instruction of the RISC-V RV32F_Zicsr_Zfh,RV64F_Zicsr_Zfh extension for the fmul_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr_Zfh,RV64IF_Zicsr_Zfh")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*Zfh.*);def TEST_CASE_1=True;",fmul_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f30, rs2==f29, rd==f31,fs1 == 0 and fe1 == 0x0a and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02d and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x29a0; op2val:0x2d;
   valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rd, rs1==f28, rs2==f28, rd==f28,fs1 == 0 and fe1 == 0x0a and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02d and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f28; op2:f28; dest:f28; op1val:0x29a0; op2val:0x29a0;
   valaddr_reg:x3; val_offset:2*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f28, f28, f28, dyn, 32, 0, x3, 2*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd != rs2, rs1==f29, rs2==f31, rd==f29,fs1 == 0 and fe1 == 0x0a and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02d and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f29; op2:f31; dest:f29; op1val:0x29a0; op2val:0x2d;
   valaddr_reg:x3; val_offset:4*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f29, f29, f31, dyn, 64, 0, x3, 4*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 != rd, rs1==f27, rs2==f27, rd==f30,fs1 == 0 and fe1 == 0x0a and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02d and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f27; op2:f27; dest:f30; op1val:0x29a0; op2val:0x29a0;
   valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f30, f27, f27, dyn, 96, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_4:
// rs2 == rd != rs1, rs1==f31, rs2==f26, rd==f26,fs1 == 0 and fe1 == 0x0a and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02d and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f31; op2:f26; dest:f26; op1val:0x29a0; op2val:0x2d;
   valaddr_reg:x3; val_offset:8*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f26, f31, f26, dyn, 128, 0, x3, 8*FLEN/8, x4, x1, x2)

inst_5:
// rs1==f26, rs2==f30, rd==f27,fs1 == 0 and fe1 == 0x0e and fm1 == 0x38c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f26; op2:f30; dest:f27; op1val:0x3b8c; op2val:0x2;
   valaddr_reg:x3; val_offset:10*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f27, f26, f30, dyn, 0, 0, x3, 10*FLEN/8, x4, x1, x2)

inst_6:
// rs1==f24, rs2==f23, rd==f25,fs1 == 0 and fe1 == 0x0e and fm1 == 0x38c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f24; op2:f23; dest:f25; op1val:0x3b8c; op2val:0x2;
   valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f25, f24, f23, dyn, 32, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_7:
// rs1==f23, rs2==f25, rd==f24,fs1 == 0 and fe1 == 0x0e and fm1 == 0x38c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f23; op2:f25; dest:f24; op1val:0x3b8c; op2val:0x2;
   valaddr_reg:x3; val_offset:14*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f24, f23, f25, dyn, 64, 0, x3, 14*FLEN/8, x4, x1, x2)

inst_8:
// rs1==f25, rs2==f24, rd==f23,fs1 == 0 and fe1 == 0x0e and fm1 == 0x38c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f25; op2:f24; dest:f23; op1val:0x3b8c; op2val:0x2;
   valaddr_reg:x3; val_offset:16*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f23, f25, f24, dyn, 96, 0, x3, 16*FLEN/8, x4, x1, x2)

inst_9:
// rs1==f21, rs2==f20, rd==f22,fs1 == 0 and fe1 == 0x0e and fm1 == 0x38c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f21; op2:f20; dest:f22; op1val:0x3b8c; op2val:0x2;
   valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f22, f21, f20, dyn, 128, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_10:
// rs1==f20, rs2==f22, rd==f21,fs1 == 0 and fe1 == 0x0c and fm1 == 0x143 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f20; op2:f22; dest:f21; op1val:0x3143; op2val:0xc;
   valaddr_reg:x3; val_offset:20*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f21, f20, f22, dyn, 0, 0, x3, 20*FLEN/8, x4, x1, x2)

inst_11:
// rs1==f22, rs2==f21, rd==f20,fs1 == 0 and fe1 == 0x0c and fm1 == 0x143 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f22; op2:f21; dest:f20; op1val:0x3143; op2val:0xc;
   valaddr_reg:x3; val_offset:22*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f20, f22, f21, dyn, 32, 0, x3, 22*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f18, rs2==f17, rd==f19,fs1 == 0 and fe1 == 0x0c and fm1 == 0x143 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f18; op2:f17; dest:f19; op1val:0x3143; op2val:0xc;
   valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f19, f18, f17, dyn, 64, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f17, rs2==f19, rd==f18,fs1 == 0 and fe1 == 0x0c and fm1 == 0x143 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f17; op2:f19; dest:f18; op1val:0x3143; op2val:0xc;
   valaddr_reg:x3; val_offset:26*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f18, f17, f19, dyn, 96, 0, x3, 26*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f19, rs2==f18, rd==f17,fs1 == 0 and fe1 == 0x0c and fm1 == 0x143 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00c and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f19; op2:f18; dest:f17; op1val:0x3143; op2val:0xc;
   valaddr_reg:x3; val_offset:28*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f17, f19, f18, dyn, 128, 0, x3, 28*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f15, rs2==f14, rd==f16,fs1 == 0 and fe1 == 0x0d and fm1 == 0x148 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f15; op2:f14; dest:f16; op1val:0x3548; op2val:0x6;
   valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f16, f15, f14, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f14, rs2==f16, rd==f15,fs1 == 0 and fe1 == 0x0d and fm1 == 0x148 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f14; op2:f16; dest:f15; op1val:0x3548; op2val:0x6;
   valaddr_reg:x3; val_offset:32*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f15, f14, f16, dyn, 32, 0, x3, 32*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f16, rs2==f15, rd==f14,fs1 == 0 and fe1 == 0x0d and fm1 == 0x148 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f16; op2:f15; dest:f14; op1val:0x3548; op2val:0x6;
   valaddr_reg:x3; val_offset:34*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f14, f16, f15, dyn, 64, 0, x3, 34*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f12, rs2==f11, rd==f13,fs1 == 0 and fe1 == 0x0d and fm1 == 0x148 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f12; op2:f11; dest:f13; op1val:0x3548; op2val:0x6;
   valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f13, f12, f11, dyn, 96, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f11, rs2==f13, rd==f12,fs1 == 0 and fe1 == 0x0d and fm1 == 0x148 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f11; op2:f13; dest:f12; op1val:0x3548; op2val:0x6;
   valaddr_reg:x3; val_offset:38*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f12, f11, f13, dyn, 128, 0, x3, 38*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f13, rs2==f12, rd==f11,fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f13; op2:f12; dest:f11; op1val:0x364e; op2val:0x5;
   valaddr_reg:x3; val_offset:40*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f11, f13, f12, dyn, 0, 0, x3, 40*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f9, rs2==f8, rd==f10,fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f9; op2:f8; dest:f10; op1val:0x364e; op2val:0x5;
   valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f10, f9, f8, dyn, 32, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f8, rs2==f10, rd==f9,fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f8; op2:f10; dest:f9; op1val:0x364e; op2val:0x5;
   valaddr_reg:x3; val_offset:44*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f9, f8, f10, dyn, 64, 0, x3, 44*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f10, rs2==f9, rd==f8,fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f10; op2:f9; dest:f8; op1val:0x364e; op2val:0x5;
   valaddr_reg:x3; val_offset:46*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f8, f10, f9, dyn, 96, 0, x3, 46*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f6, rs2==f5, rd==f7,fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f6; op2:f5; dest:f7; op1val:0x364e; op2val:0x5;
   valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f7, f6, f5, dyn, 128, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f5, rs2==f7, rd==f6,fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f5; op2:f7; dest:f6; op1val:0x36b3; op2val:0x4;
   valaddr_reg:x3; val_offset:50*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f6, f5, f7, dyn, 0, 0, x3, 50*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f7, rs2==f6, rd==f5,fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f7; op2:f6; dest:f5; op1val:0x36b3; op2val:0x4;
   valaddr_reg:x3; val_offset:52*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f5, f7, f6, dyn, 32, 0, x3, 52*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f3, rs2==f2, rd==f4,fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f3; op2:f2; dest:f4; op1val:0x36b3; op2val:0x4;
   valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f4, f3, f2, dyn, 64, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f2, rs2==f4, rd==f3,fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f2; op2:f4; dest:f3; op1val:0x36b3; op2val:0x4;
   valaddr_reg:x3; val_offset:56*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f3, f2, f4, dyn, 96, 0, x3, 56*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f4, rs2==f3, rd==f2,fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f4; op2:f3; dest:f2; op1val:0x36b3; op2val:0x4;
   valaddr_reg:x3; val_offset:58*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f2, f4, f3, dyn, 128, 0, x3, 58*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f1,fs1 == 0 and fe1 == 0x0e and fm1 == 0x08d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f1; op2:f30; dest:f31; op1val:0x388d; op2val:0x3;
   valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f1, f30, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f0,fs1 == 0 and fe1 == 0x0e and fm1 == 0x08d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f0; op2:f30; dest:f31; op1val:0x388d; op2val:0x3;
   valaddr_reg:x3; val_offset:62*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f0, f30, dyn, 32, 0, x3, 62*FLEN/8, x4, x1, x2)

inst_32:
// rs2==f1,fs1 == 0 and fe1 == 0x0e and fm1 == 0x08d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f1; dest:f31; op1val:0x388d; op2val:0x3;
   valaddr_reg:x3; val_offset:64*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f1, dyn, 64, 0, x3, 64*FLEN/8, x4, x1, x2)

inst_33:
// rs2==f0,fs1 == 0 and fe1 == 0x0e and fm1 == 0x08d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f0; dest:f31; op1val:0x388d; op2val:0x3;
   valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f0, dyn, 96, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_34:
// rd==f1,fs1 == 0 and fe1 == 0x0e and fm1 == 0x08d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f31; op2:f30; dest:f1; op1val:0x388d; op2val:0x3;
   valaddr_reg:x3; val_offset:68*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f1, f31, f30, dyn, 128, 0, x3, 68*FLEN/8, x4, x1, x2)

inst_35:
// rd==f0,fs1 == 0 and fe1 == 0x0d and fm1 == 0x06e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f31; op2:f30; dest:f0; op1val:0x346e; op2val:0x7;
   valaddr_reg:x3; val_offset:70*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f0, f31, f30, dyn, 0, 0, x3, 70*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346e; op2val:0x7;
   valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346e; op2val:0x7;
   valaddr_reg:x3; val_offset:74*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 74*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346e; op2val:0x7;
   valaddr_reg:x3; val_offset:76*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 76*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346e; op2val:0x7;
   valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x27a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x027 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a7a; op2val:0x27;
   valaddr_reg:x3; val_offset:80*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 80*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x27a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x027 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a7a; op2val:0x27;
   valaddr_reg:x3; val_offset:82*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 82*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x27a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x027 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a7a; op2val:0x27;
   valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x27a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x027 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a7a; op2val:0x27;
   valaddr_reg:x3; val_offset:86*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 86*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x27a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x027 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a7a; op2val:0x27;
   valaddr_reg:x3; val_offset:88*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 88*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3870; op2val:0x3;
   valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3870; op2val:0x3;
   valaddr_reg:x3; val_offset:92*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 92*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3870; op2val:0x3;
   valaddr_reg:x3; val_offset:94*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 94*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3870; op2val:0x3;
   valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3870; op2val:0x3;
   valaddr_reg:x3; val_offset:98*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 98*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb6; op2val:0x2;
   valaddr_reg:x3; val_offset:100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 100*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb6; op2val:0x2;
   valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb6; op2val:0x2;
   valaddr_reg:x3; val_offset:104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 104*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb6; op2val:0x2;
   valaddr_reg:x3; val_offset:106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 106*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb6; op2val:0x2;
   valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x047 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3847; op2val:0x3;
   valaddr_reg:x3; val_offset:110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 110*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x047 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3847; op2val:0x3;
   valaddr_reg:x3; val_offset:112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 112*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x047 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3847; op2val:0x3;
   valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x047 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3847; op2val:0x3;
   valaddr_reg:x3; val_offset:116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 116*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x047 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3847; op2val:0x3;
   valaddr_reg:x3; val_offset:118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 118*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x3;
   valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x3;
   valaddr_reg:x3; val_offset:122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 122*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x3;
   valaddr_reg:x3; val_offset:124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 124*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x3;
   valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x3;
   valaddr_reg:x3; val_offset:128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 128*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3796; op2val:0x4;
   valaddr_reg:x3; val_offset:130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 130*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3796; op2val:0x4;
   valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3796; op2val:0x4;
   valaddr_reg:x3; val_offset:134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 134*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3796; op2val:0x4;
   valaddr_reg:x3; val_offset:136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 136*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3796; op2val:0x4;
   valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x21c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a1c; op2val:0x2;
   valaddr_reg:x3; val_offset:140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 140*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x21c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a1c; op2val:0x2;
   valaddr_reg:x3; val_offset:142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 142*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x21c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a1c; op2val:0x2;
   valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x21c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a1c; op2val:0x2;
   valaddr_reg:x3; val_offset:146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 146*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x21c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a1c; op2val:0x2;
   valaddr_reg:x3; val_offset:148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 148*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x166 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3966; op2val:0x2;
   valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x166 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3966; op2val:0x2;
   valaddr_reg:x3; val_offset:152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 152*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x166 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3966; op2val:0x2;
   valaddr_reg:x3; val_offset:154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 154*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x166 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3966; op2val:0x2;
   valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x166 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3966; op2val:0x2;
   valaddr_reg:x3; val_offset:158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 158*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37d6; op2val:0x4;
   valaddr_reg:x3; val_offset:160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 160*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37d6; op2val:0x4;
   valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37d6; op2val:0x4;
   valaddr_reg:x3; val_offset:164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 164*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37d6; op2val:0x4;
   valaddr_reg:x3; val_offset:166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 166*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3d6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37d6; op2val:0x4;
   valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x135 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3535; op2val:0x6;
   valaddr_reg:x3; val_offset:170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 170*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x135 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3535; op2val:0x6;
   valaddr_reg:x3; val_offset:172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 172*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x135 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3535; op2val:0x6;
   valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x135 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3535; op2val:0x6;
   valaddr_reg:x3; val_offset:176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 176*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x135 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3535; op2val:0x6;
   valaddr_reg:x3; val_offset:178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 178*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ecf; op2val:0x12;
   valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ecf; op2val:0x12;
   valaddr_reg:x3; val_offset:182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 182*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ecf; op2val:0x12;
   valaddr_reg:x3; val_offset:184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 184*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ecf; op2val:0x12;
   valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x012 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ecf; op2val:0x12;
   valaddr_reg:x3; val_offset:188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 188*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x03f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x343f; op2val:0x7;
   valaddr_reg:x3; val_offset:190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 190*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x03f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x343f; op2val:0x7;
   valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x03f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x343f; op2val:0x7;
   valaddr_reg:x3; val_offset:194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 194*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x03f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x343f; op2val:0x7;
   valaddr_reg:x3; val_offset:196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 196*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x03f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x343f; op2val:0x7;
   valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3396; op2val:0x8;
   valaddr_reg:x3; val_offset:200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 200*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3396; op2val:0x8;
   valaddr_reg:x3; val_offset:202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 202*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3396; op2val:0x8;
   valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3396; op2val:0x8;
   valaddr_reg:x3; val_offset:206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 206*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x396 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3396; op2val:0x8;
   valaddr_reg:x3; val_offset:208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 208*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x392b; op2val:0x3;
   valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x392b; op2val:0x3;
   valaddr_reg:x3; val_offset:212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 212*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x392b; op2val:0x3;
   valaddr_reg:x3; val_offset:214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 214*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x392b; op2val:0x3;
   valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x12b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x392b; op2val:0x3;
   valaddr_reg:x3; val_offset:218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 218*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x034 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28e0; op2val:0x34;
   valaddr_reg:x3; val_offset:220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 220*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x034 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28e0; op2val:0x34;
   valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x034 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28e0; op2val:0x34;
   valaddr_reg:x3; val_offset:224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 224*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x034 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28e0; op2val:0x34;
   valaddr_reg:x3; val_offset:226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 226*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x034 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28e0; op2val:0x34;
   valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33df; op2val:0x8;
   valaddr_reg:x3; val_offset:230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 230*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33df; op2val:0x8;
   valaddr_reg:x3; val_offset:232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 232*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33df; op2val:0x8;
   valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33df; op2val:0x8;
   valaddr_reg:x3; val_offset:236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 236*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x008 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33df; op2val:0x8;
   valaddr_reg:x3; val_offset:238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 238*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x384f; op2val:0x3;
   valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x384f; op2val:0x3;
   valaddr_reg:x3; val_offset:242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 242*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x384f; op2val:0x3;
   valaddr_reg:x3; val_offset:244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 244*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x384f; op2val:0x3;
   valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x04f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x384f; op2val:0x3;
   valaddr_reg:x3; val_offset:248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 248*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3814; op2val:0x3;
   valaddr_reg:x3; val_offset:250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 250*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3814; op2val:0x3;
   valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3814; op2val:0x3;
   valaddr_reg:x3; val_offset:254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 254*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3814; op2val:0x3;
   valaddr_reg:x3; val_offset:256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 256*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x014 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3814; op2val:0x3;
   valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37fc; op2val:0x4;
   valaddr_reg:x3; val_offset:260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 260*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37fc; op2val:0x4;
   valaddr_reg:x3; val_offset:262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 262*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37fc; op2val:0x4;
   valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37fc; op2val:0x4;
   valaddr_reg:x3; val_offset:266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 266*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3fc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37fc; op2val:0x4;
   valaddr_reg:x3; val_offset:268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 268*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x26b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e6b; op2val:0x13;
   valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x26b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e6b; op2val:0x13;
   valaddr_reg:x3; val_offset:272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 272*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x26b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e6b; op2val:0x13;
   valaddr_reg:x3; val_offset:274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 274*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x26b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e6b; op2val:0x13;
   valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x26b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x013 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e6b; op2val:0x13;
   valaddr_reg:x3; val_offset:278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 278*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ea; op2val:0x4;
   valaddr_reg:x3; val_offset:280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 280*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ea; op2val:0x4;
   valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ea; op2val:0x4;
   valaddr_reg:x3; val_offset:284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 284*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ea; op2val:0x4;
   valaddr_reg:x3; val_offset:286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 286*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ea; op2val:0x4;
   valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x7;
   valaddr_reg:x3; val_offset:290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 290*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x7;
   valaddr_reg:x3; val_offset:292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 292*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x7;
   valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x7;
   valaddr_reg:x3; val_offset:296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 296*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x007 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x7;
   valaddr_reg:x3; val_offset:298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 298*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x239 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a39; op2val:0x2;
   valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x239 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a39; op2val:0x2;
   valaddr_reg:x3; val_offset:302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 302*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x239 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a39; op2val:0x2;
   valaddr_reg:x3; val_offset:304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 304*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x239 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a39; op2val:0x2;
   valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x239 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a39; op2val:0x2;
   valaddr_reg:x3; val_offset:308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 308*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34ce; op2val:0x6;
   valaddr_reg:x3; val_offset:310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 310*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34ce; op2val:0x6;
   valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34ce; op2val:0x6;
   valaddr_reg:x3; val_offset:314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 314*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34ce; op2val:0x6;
   valaddr_reg:x3; val_offset:316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 316*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x006 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34ce; op2val:0x6;
   valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de4; op2val:0x15;
   valaddr_reg:x3; val_offset:320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 320*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de4; op2val:0x15;
   valaddr_reg:x3; val_offset:322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 322*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de4; op2val:0x15;
   valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de4; op2val:0x15;
   valaddr_reg:x3; val_offset:326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 326*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x015 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de4; op2val:0x15;
   valaddr_reg:x3; val_offset:328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 328*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1ab and fs2 == 0 and fe2 == 0x00 and fm2 == 0x016 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2dab; op2val:0x16;
   valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1ab and fs2 == 0 and fe2 == 0x00 and fm2 == 0x016 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2dab; op2val:0x16;
   valaddr_reg:x3; val_offset:332*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 332*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1ab and fs2 == 0 and fe2 == 0x00 and fm2 == 0x016 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2dab; op2val:0x16;
   valaddr_reg:x3; val_offset:334*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 334*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1ab and fs2 == 0 and fe2 == 0x00 and fm2 == 0x016 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2dab; op2val:0x16;
   valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1ab and fs2 == 0 and fe2 == 0x00 and fm2 == 0x016 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2dab; op2val:0x16;
   valaddr_reg:x3; val_offset:338*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 338*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x175 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2975; op2val:0x2e;
   valaddr_reg:x3; val_offset:340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 340*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x175 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2975; op2val:0x2e;
   valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x175 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2975; op2val:0x2e;
   valaddr_reg:x3; val_offset:344*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 344*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x175 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2975; op2val:0x2e;
   valaddr_reg:x3; val_offset:346*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 346*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x175 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2975; op2val:0x2e;
   valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ee and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ee; op2val:0x4;
   valaddr_reg:x3; val_offset:350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 350*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ee and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ee; op2val:0x4;
   valaddr_reg:x3; val_offset:352*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 352*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ee and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ee; op2val:0x4;
   valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ee and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ee; op2val:0x4;
   valaddr_reg:x3; val_offset:356*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 356*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ee and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ee; op2val:0x4;
   valaddr_reg:x3; val_offset:358*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 358*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x193 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3593; op2val:0x5;
   valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x193 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3593; op2val:0x5;
   valaddr_reg:x3; val_offset:362*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 362*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x193 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3593; op2val:0x5;
   valaddr_reg:x3; val_offset:364*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 364*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x193 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3593; op2val:0x5;
   valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x193 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3593; op2val:0x5;
   valaddr_reg:x3; val_offset:368*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 368*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x181 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3981; op2val:0x2;
   valaddr_reg:x3; val_offset:370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 370*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x181 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3981; op2val:0x2;
   valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x181 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3981; op2val:0x2;
   valaddr_reg:x3; val_offset:374*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 374*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x181 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3981; op2val:0x2;
   valaddr_reg:x3; val_offset:376*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 376*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x181 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3981; op2val:0x2;
   valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37cf; op2val:0x4;
   valaddr_reg:x3; val_offset:380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 380*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37cf; op2val:0x4;
   valaddr_reg:x3; val_offset:382*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 382*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37cf; op2val:0x4;
   valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37cf; op2val:0x4;
   valaddr_reg:x3; val_offset:386*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 386*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3cf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x004 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37cf; op2val:0x4;
   valaddr_reg:x3; val_offset:388*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 388*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3607; op2val:0x5;
   valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3607; op2val:0x5;
   valaddr_reg:x3; val_offset:392*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 392*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3607; op2val:0x5;
   valaddr_reg:x3; val_offset:394*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 394*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3607; op2val:0x5;
   valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x005 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3607; op2val:0x5;
   valaddr_reg:x3; val_offset:398*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 398*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31bf; op2val:0xb;
   valaddr_reg:x3; val_offset:400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 400*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31bf; op2val:0xb;
   valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31bf; op2val:0xb;
   valaddr_reg:x3; val_offset:404*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 404*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31bf; op2val:0xb;
   valaddr_reg:x3; val_offset:406*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 406*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31bf; op2val:0xb;
   valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x166 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de9; op2val:0x1166;
   valaddr_reg:x3; val_offset:410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 410*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x166 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de9; op2val:0x1166;
   valaddr_reg:x3; val_offset:412*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 412*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x166 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de9; op2val:0x1166;
   valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x166 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de9; op2val:0x1166;
   valaddr_reg:x3; val_offset:416*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 416*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x1e9 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x166 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2de9; op2val:0x1166;
   valaddr_reg:x3; val_offset:418*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 418*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x015 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3415; op2val:0xbd1;
   valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x015 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3415; op2val:0xbd1;
   valaddr_reg:x3; val_offset:422*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 422*FLEN/8, x4, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x015 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3415; op2val:0xbd1;
   valaddr_reg:x3; val_offset:424*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 424*FLEN/8, x4, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x015 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3415; op2val:0xbd1;
   valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x015 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3415; op2val:0xbd1;
   valaddr_reg:x3; val_offset:428*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 428*FLEN/8, x4, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1c0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358d; op2val:0x9c0;
   valaddr_reg:x3; val_offset:430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 430*FLEN/8, x4, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1c0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358d; op2val:0x9c0;
   valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1c0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358d; op2val:0x9c0;
   valaddr_reg:x3; val_offset:434*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 434*FLEN/8, x4, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1c0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358d; op2val:0x9c0;
   valaddr_reg:x3; val_offset:436*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 436*FLEN/8, x4, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1c0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358d; op2val:0x9c0;
   valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x22f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a2f; op2val:0x529;
   valaddr_reg:x3; val_offset:440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 440*FLEN/8, x4, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x22f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a2f; op2val:0x529;
   valaddr_reg:x3; val_offset:442*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 442*FLEN/8, x4, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x22f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a2f; op2val:0x529;
   valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x22f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a2f; op2val:0x529;
   valaddr_reg:x3; val_offset:446*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 446*FLEN/8, x4, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x22f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x129 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a2f; op2val:0x529;
   valaddr_reg:x3; val_offset:448*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 448*FLEN/8, x4, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x326 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x077 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b26; op2val:0x477;
   valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x326 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x077 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b26; op2val:0x477;
   valaddr_reg:x3; val_offset:452*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 452*FLEN/8, x4, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x326 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x077 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b26; op2val:0x477;
   valaddr_reg:x3; val_offset:454*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 454*FLEN/8, x4, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x326 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x077 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b26; op2val:0x477;
   valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x326 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x077 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b26; op2val:0x477;
   valaddr_reg:x3; val_offset:458*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 458*FLEN/8, x4, x1, x2)

inst_230:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0ac and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2d4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30ac; op2val:0xed4;
   valaddr_reg:x3; val_offset:460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 460*FLEN/8, x4, x1, x2)

inst_231:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0ac and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2d4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30ac; op2val:0xed4;
   valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_232:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0ac and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2d4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30ac; op2val:0xed4;
   valaddr_reg:x3; val_offset:464*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 464*FLEN/8, x4, x1, x2)

inst_233:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0ac and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2d4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30ac; op2val:0xed4;
   valaddr_reg:x3; val_offset:466*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 466*FLEN/8, x4, x1, x2)

inst_234:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0ac and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2d4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30ac; op2val:0xed4;
   valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_235:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x250 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a50; op2val:0x50e;
   valaddr_reg:x3; val_offset:470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 470*FLEN/8, x4, x1, x2)

inst_236:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x250 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a50; op2val:0x50e;
   valaddr_reg:x3; val_offset:472*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 472*FLEN/8, x4, x1, x2)

inst_237:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x250 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a50; op2val:0x50e;
   valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_238:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x250 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a50; op2val:0x50e;
   valaddr_reg:x3; val_offset:476*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 476*FLEN/8, x4, x1, x2)

inst_239:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x250 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x10e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a50; op2val:0x50e;
   valaddr_reg:x3; val_offset:478*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 478*FLEN/8, x4, x1, x2)

inst_240:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2eb and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x6eb;
   valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_241:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2eb and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x6eb;
   valaddr_reg:x3; val_offset:482*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 482*FLEN/8, x4, x1, x2)

inst_242:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2eb and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x6eb;
   valaddr_reg:x3; val_offset:484*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 484*FLEN/8, x4, x1, x2)

inst_243:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2eb and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x6eb;
   valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_244:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2eb and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x6eb;
   valaddr_reg:x3; val_offset:488*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 488*FLEN/8, x4, x1, x2)

inst_245:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbe; op2val:0x41f;
   valaddr_reg:x3; val_offset:490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 490*FLEN/8, x4, x1, x2)

inst_246:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbe; op2val:0x41f;
   valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_247:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbe; op2val:0x41f;
   valaddr_reg:x3; val_offset:494*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 494*FLEN/8, x4, x1, x2)

inst_248:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbe; op2val:0x41f;
   valaddr_reg:x3; val_offset:496*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 496*FLEN/8, x4, x1, x2)

inst_249:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbe; op2val:0x41f;
   valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_250:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aa0; op2val:0x4d2;
   valaddr_reg:x3; val_offset:500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 500*FLEN/8, x4, x1, x2)

inst_251:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aa0; op2val:0x4d2;
   valaddr_reg:x3; val_offset:502*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 502*FLEN/8, x4, x1, x2)

inst_252:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aa0; op2val:0x4d2;
   valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_253:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aa0; op2val:0x4d2;
   valaddr_reg:x3; val_offset:506*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 506*FLEN/8, x4, x1, x2)

inst_254:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2a0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0d2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aa0; op2val:0x4d2;
   valaddr_reg:x3; val_offset:508*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 508*FLEN/8, x4, x1, x2)

inst_255:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x356 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x05a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b56; op2val:0x45a;
   valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_256:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x356 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x05a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b56; op2val:0x45a;
   valaddr_reg:x3; val_offset:512*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 512*FLEN/8, x4, x1, x2)

inst_257:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x356 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x05a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b56; op2val:0x45a;
   valaddr_reg:x3; val_offset:514*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 514*FLEN/8, x4, x1, x2)

inst_258:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x356 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x05a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b56; op2val:0x45a;
   valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_259:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x356 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x05a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b56; op2val:0x45a;
   valaddr_reg:x3; val_offset:518*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 518*FLEN/8, x4, x1, x2)

inst_260:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x018 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bcc; op2val:0x418;
   valaddr_reg:x3; val_offset:520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 520*FLEN/8, x4, x1, x2)

inst_261:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x018 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bcc; op2val:0x418;
   valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_262:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x018 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bcc; op2val:0x418;
   valaddr_reg:x3; val_offset:524*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 524*FLEN/8, x4, x1, x2)

inst_263:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x018 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bcc; op2val:0x418;
   valaddr_reg:x3; val_offset:526*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 526*FLEN/8, x4, x1, x2)

inst_264:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x018 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bcc; op2val:0x418;
   valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_265:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x014 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd4; op2val:0x414;
   valaddr_reg:x3; val_offset:530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 530*FLEN/8, x4, x1, x2)

inst_266:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x014 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd4; op2val:0x414;
   valaddr_reg:x3; val_offset:532*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 532*FLEN/8, x4, x1, x2)

inst_267:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x014 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd4; op2val:0x414;
   valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_268:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x014 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd4; op2val:0x414;
   valaddr_reg:x3; val_offset:536*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 536*FLEN/8, x4, x1, x2)

inst_269:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x014 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd4; op2val:0x414;
   valaddr_reg:x3; val_offset:538*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 538*FLEN/8, x4, x1, x2)

inst_270:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1f9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x158 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31f9; op2val:0xd58;
   valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_271:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1f9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x158 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31f9; op2val:0xd58;
   valaddr_reg:x3; val_offset:542*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 542*FLEN/8, x4, x1, x2)

inst_272:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1f9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x158 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31f9; op2val:0xd58;
   valaddr_reg:x3; val_offset:544*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 544*FLEN/8, x4, x1, x2)

inst_273:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1f9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x158 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31f9; op2val:0xd58;
   valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_274:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1f9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x158 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31f9; op2val:0xd58;
   valaddr_reg:x3; val_offset:548*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 548*FLEN/8, x4, x1, x2)

inst_275:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x287 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a87; op2val:0x4e4;
   valaddr_reg:x3; val_offset:550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 550*FLEN/8, x4, x1, x2)

inst_276:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x287 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a87; op2val:0x4e4;
   valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_277:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x287 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a87; op2val:0x4e4;
   valaddr_reg:x3; val_offset:554*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 554*FLEN/8, x4, x1, x2)

inst_278:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x287 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a87; op2val:0x4e4;
   valaddr_reg:x3; val_offset:556*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 556*FLEN/8, x4, x1, x2)

inst_279:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x287 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a87; op2val:0x4e4;
   valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_280:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ea; op2val:0x67f;
   valaddr_reg:x3; val_offset:560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 560*FLEN/8, x4, x1, x2)

inst_281:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ea; op2val:0x67f;
   valaddr_reg:x3; val_offset:562*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 562*FLEN/8, x4, x1, x2)

inst_282:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ea; op2val:0x67f;
   valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_283:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ea; op2val:0x67f;
   valaddr_reg:x3; val_offset:566*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 566*FLEN/8, x4, x1, x2)

inst_284:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x27f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ea; op2val:0x67f;
   valaddr_reg:x3; val_offset:568*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 568*FLEN/8, x4, x1, x2)

inst_285:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x126 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x233 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2126; op2val:0x1e33;
   valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_286:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x126 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x233 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2126; op2val:0x1e33;
   valaddr_reg:x3; val_offset:572*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 572*FLEN/8, x4, x1, x2)

inst_287:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x126 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x233 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2126; op2val:0x1e33;
   valaddr_reg:x3; val_offset:574*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 574*FLEN/8, x4, x1, x2)

inst_288:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x126 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x233 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2126; op2val:0x1e33;
   valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_289:
// fs1 == 0 and fe1 == 0x08 and fm1 == 0x126 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x233 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2126; op2val:0x1e33;
   valaddr_reg:x3; val_offset:578*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 578*FLEN/8, x4, x1, x2)

inst_290:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x024 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb5; op2val:0x424;
   valaddr_reg:x3; val_offset:580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 580*FLEN/8, x4, x1, x2)

inst_291:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x024 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb5; op2val:0x424;
   valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_292:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x024 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb5; op2val:0x424;
   valaddr_reg:x3; val_offset:584*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 584*FLEN/8, x4, x1, x2)

inst_293:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x024 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb5; op2val:0x424;
   valaddr_reg:x3; val_offset:586*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 586*FLEN/8, x4, x1, x2)

inst_294:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3b5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x024 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bb5; op2val:0x424;
   valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_295:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x228 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x130 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3628; op2val:0x930;
   valaddr_reg:x3; val_offset:590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 590*FLEN/8, x4, x1, x2)

inst_296:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x228 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x130 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3628; op2val:0x930;
   valaddr_reg:x3; val_offset:592*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 592*FLEN/8, x4, x1, x2)

inst_297:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x228 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x130 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3628; op2val:0x930;
   valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_298:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x228 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x130 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3628; op2val:0x930;
   valaddr_reg:x3; val_offset:596*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 596*FLEN/8, x4, x1, x2)

inst_299:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x228 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x130 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3628; op2val:0x930;
   valaddr_reg:x3; val_offset:598*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 598*FLEN/8, x4, x1, x2)

inst_300:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x080 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b18; op2val:0x480;
   valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_301:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x080 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b18; op2val:0x480;
   valaddr_reg:x3; val_offset:602*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 602*FLEN/8, x4, x1, x2)

inst_302:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x080 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b18; op2val:0x480;
   valaddr_reg:x3; val_offset:604*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 604*FLEN/8, x4, x1, x2)

inst_303:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x080 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b18; op2val:0x480;
   valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_304:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x318 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x080 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b18; op2val:0x480;
   valaddr_reg:x3; val_offset:608*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 608*FLEN/8, x4, x1, x2)

inst_305:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bc0; op2val:0x41e;
   valaddr_reg:x3; val_offset:610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 610*FLEN/8, x4, x1, x2)

inst_306:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bc0; op2val:0x41e;
   valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_307:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bc0; op2val:0x41e;
   valaddr_reg:x3; val_offset:614*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 614*FLEN/8, x4, x1, x2)

inst_308:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bc0; op2val:0x41e;
   valaddr_reg:x3; val_offset:616*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 616*FLEN/8, x4, x1, x2)

inst_309:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3c0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x01e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bc0; op2val:0x41e;
   valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_310:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x37d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x043 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x337d; op2val:0xc43;
   valaddr_reg:x3; val_offset:620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 620*FLEN/8, x4, x1, x2)

inst_311:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x37d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x043 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x337d; op2val:0xc43;
   valaddr_reg:x3; val_offset:622*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 622*FLEN/8, x4, x1, x2)

inst_312:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x37d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x043 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x337d; op2val:0xc43;
   valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_313:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x37d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x043 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x337d; op2val:0xc43;
   valaddr_reg:x3; val_offset:626*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 626*FLEN/8, x4, x1, x2)

inst_314:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x37d and fs2 == 0 and fe2 == 0x03 and fm2 == 0x043 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x337d; op2val:0xc43;
   valaddr_reg:x3; val_offset:628*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 628*FLEN/8, x4, x1, x2)

inst_315:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x246 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x117 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e46; op2val:0x1117;
   valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)

inst_316:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x246 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x117 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e46; op2val:0x1117;
   valaddr_reg:x3; val_offset:632*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 632*FLEN/8, x4, x1, x2)

inst_317:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x246 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x117 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e46; op2val:0x1117;
   valaddr_reg:x3; val_offset:634*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 634*FLEN/8, x4, x1, x2)

inst_318:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x246 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x117 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e46; op2val:0x1117;
   valaddr_reg:x3; val_offset:636*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 636*FLEN/8, x4, x1, x2)

inst_319:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x246 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x117 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e46; op2val:0x1117;
   valaddr_reg:x3; val_offset:638*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 638*FLEN/8, x4, x1, x2)

inst_320:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x067 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x340 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3067; op2val:0xf40;
   valaddr_reg:x3; val_offset:640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 640*FLEN/8, x4, x1, x2)

inst_321:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x067 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x340 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3067; op2val:0xf40;
   valaddr_reg:x3; val_offset:642*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 642*FLEN/8, x4, x1, x2)

inst_322:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x067 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x340 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3067; op2val:0xf40;
   valaddr_reg:x3; val_offset:644*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 644*FLEN/8, x4, x1, x2)

inst_323:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x067 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x340 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3067; op2val:0xf40;
   valaddr_reg:x3; val_offset:646*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 646*FLEN/8, x4, x1, x2)

inst_324:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x067 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x340 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3067; op2val:0xf40;
   valaddr_reg:x3; val_offset:648*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 648*FLEN/8, x4, x1, x2)

inst_325:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x037 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x392 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3837; op2val:0x792;
   valaddr_reg:x3; val_offset:650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 650*FLEN/8, x4, x1, x2)

inst_326:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x037 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x392 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3837; op2val:0x792;
   valaddr_reg:x3; val_offset:652*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 652*FLEN/8, x4, x1, x2)

inst_327:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x037 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x392 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3837; op2val:0x792;
   valaddr_reg:x3; val_offset:654*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 654*FLEN/8, x4, x1, x2)

inst_328:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x037 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x392 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3837; op2val:0x792;
   valaddr_reg:x3; val_offset:656*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 656*FLEN/8, x4, x1, x2)

inst_329:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x037 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x392 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3837; op2val:0x792;
   valaddr_reg:x3; val_offset:658*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 658*FLEN/8, x4, x1, x2)

inst_330:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x16d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x356d; op2val:0x9e2;
   valaddr_reg:x3; val_offset:660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 660*FLEN/8, x4, x1, x2)

inst_331:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x16d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x356d; op2val:0x9e2;
   valaddr_reg:x3; val_offset:662*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 662*FLEN/8, x4, x1, x2)

inst_332:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x16d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x356d; op2val:0x9e2;
   valaddr_reg:x3; val_offset:664*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 664*FLEN/8, x4, x1, x2)

inst_333:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x16d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x356d; op2val:0x9e2;
   valaddr_reg:x3; val_offset:666*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 666*FLEN/8, x4, x1, x2)

inst_334:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x16d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x356d; op2val:0x9e2;
   valaddr_reg:x3; val_offset:668*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 668*FLEN/8, x4, x1, x2)

inst_335:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x32f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x072 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b2f; op2val:0x472;
   valaddr_reg:x3; val_offset:670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 670*FLEN/8, x4, x1, x2)

inst_336:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x32f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x072 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b2f; op2val:0x472;
   valaddr_reg:x3; val_offset:672*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 672*FLEN/8, x4, x1, x2)

inst_337:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x32f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x072 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b2f; op2val:0x472;
   valaddr_reg:x3; val_offset:674*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 674*FLEN/8, x4, x1, x2)

inst_338:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x32f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x072 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b2f; op2val:0x472;
   valaddr_reg:x3; val_offset:676*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 676*FLEN/8, x4, x1, x2)

inst_339:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x32f and fs2 == 0 and fe2 == 0x01 and fm2 == 0x072 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b2f; op2val:0x472;
   valaddr_reg:x3; val_offset:678*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 678*FLEN/8, x4, x1, x2)

inst_340:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x002 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f7 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3002; op2val:0xff7;
   valaddr_reg:x3; val_offset:680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 680*FLEN/8, x4, x1, x2)

inst_341:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x002 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f7 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3002; op2val:0xff7;
   valaddr_reg:x3; val_offset:682*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 682*FLEN/8, x4, x1, x2)

inst_342:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x002 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f7 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3002; op2val:0xff7;
   valaddr_reg:x3; val_offset:684*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 684*FLEN/8, x4, x1, x2)

inst_343:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x002 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f7 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3002; op2val:0xff7;
   valaddr_reg:x3; val_offset:686*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 686*FLEN/8, x4, x1, x2)

inst_344:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x002 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f7 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3002; op2val:0xff7;
   valaddr_reg:x3; val_offset:688*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 688*FLEN/8, x4, x1, x2)

inst_345:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0cf and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36a4; op2val:0x8cf;
   valaddr_reg:x3; val_offset:690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 690*FLEN/8, x4, x1, x2)

inst_346:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0cf and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36a4; op2val:0x8cf;
   valaddr_reg:x3; val_offset:692*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 692*FLEN/8, x4, x1, x2)

inst_347:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0cf and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36a4; op2val:0x8cf;
   valaddr_reg:x3; val_offset:694*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 694*FLEN/8, x4, x1, x2)

inst_348:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0cf and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36a4; op2val:0x8cf;
   valaddr_reg:x3; val_offset:696*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 696*FLEN/8, x4, x1, x2)

inst_349:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2a4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0cf and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36a4; op2val:0x8cf;
   valaddr_reg:x3; val_offset:698*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 698*FLEN/8, x4, x1, x2)

inst_350:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01d and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37c3; op2val:0x81d;
   valaddr_reg:x3; val_offset:700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 700*FLEN/8, x4, x1, x2)

inst_351:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01d and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37c3; op2val:0x81d;
   valaddr_reg:x3; val_offset:702*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 702*FLEN/8, x4, x1, x2)

inst_352:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01d and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37c3; op2val:0x81d;
   valaddr_reg:x3; val_offset:704*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 704*FLEN/8, x4, x1, x2)

inst_353:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01d and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37c3; op2val:0x81d;
   valaddr_reg:x3; val_offset:706*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 706*FLEN/8, x4, x1, x2)

inst_354:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3c3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x01d and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37c3; op2val:0x81d;
   valaddr_reg:x3; val_offset:708*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 708*FLEN/8, x4, x1, x2)

inst_355:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x129 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x22f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2929; op2val:0x162f;
   valaddr_reg:x3; val_offset:710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 710*FLEN/8, x4, x1, x2)

inst_356:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x129 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x22f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2929; op2val:0x162f;
   valaddr_reg:x3; val_offset:712*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 712*FLEN/8, x4, x1, x2)

inst_357:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x129 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x22f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2929; op2val:0x162f;
   valaddr_reg:x3; val_offset:714*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 714*FLEN/8, x4, x1, x2)

inst_358:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x129 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x22f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2929; op2val:0x162f;
   valaddr_reg:x3; val_offset:716*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 716*FLEN/8, x4, x1, x2)

inst_359:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x129 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x22f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2929; op2val:0x162f;
   valaddr_reg:x3; val_offset:718*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 718*FLEN/8, x4, x1, x2)

inst_360:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x111 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364d; op2val:0x911;
   valaddr_reg:x3; val_offset:720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 720*FLEN/8, x4, x1, x2)

inst_361:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x111 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364d; op2val:0x911;
   valaddr_reg:x3; val_offset:722*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 722*FLEN/8, x4, x1, x2)

inst_362:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x111 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364d; op2val:0x911;
   valaddr_reg:x3; val_offset:724*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 724*FLEN/8, x4, x1, x2)

inst_363:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x111 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364d; op2val:0x911;
   valaddr_reg:x3; val_offset:726*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 726*FLEN/8, x4, x1, x2)

inst_364:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x111 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364d; op2val:0x911;
   valaddr_reg:x3; val_offset:728*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 728*FLEN/8, x4, x1, x2)

inst_365:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x010 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdb; op2val:0x410;
   valaddr_reg:x3; val_offset:730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 730*FLEN/8, x4, x1, x2)

inst_366:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x010 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdb; op2val:0x410;
   valaddr_reg:x3; val_offset:732*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 732*FLEN/8, x4, x1, x2)

inst_367:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x010 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdb; op2val:0x410;
   valaddr_reg:x3; val_offset:734*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 734*FLEN/8, x4, x1, x2)

inst_368:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x010 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdb; op2val:0x410;
   valaddr_reg:x3; val_offset:736*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 736*FLEN/8, x4, x1, x2)

inst_369:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3db and fs2 == 0 and fe2 == 0x01 and fm2 == 0x010 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdb; op2val:0x410;
   valaddr_reg:x3; val_offset:738*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 738*FLEN/8, x4, x1, x2)

inst_370:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae0; op2val:0x4a5;
   valaddr_reg:x3; val_offset:740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 740*FLEN/8, x4, x1, x2)

inst_371:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae0; op2val:0x4a5;
   valaddr_reg:x3; val_offset:742*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 742*FLEN/8, x4, x1, x2)

inst_372:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae0; op2val:0x4a5;
   valaddr_reg:x3; val_offset:744*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 744*FLEN/8, x4, x1, x2)

inst_373:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae0; op2val:0x4a5;
   valaddr_reg:x3; val_offset:746*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 746*FLEN/8, x4, x1, x2)

inst_374:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e0 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0a5 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae0; op2val:0x4a5;
   valaddr_reg:x3; val_offset:748*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 748*FLEN/8, x4, x1, x2)

inst_375:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x021 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbb; op2val:0x421;
   valaddr_reg:x3; val_offset:750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 750*FLEN/8, x4, x1, x2)

inst_376:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x021 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbb; op2val:0x421;
   valaddr_reg:x3; val_offset:752*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 752*FLEN/8, x4, x1, x2)

inst_377:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x021 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbb; op2val:0x421;
   valaddr_reg:x3; val_offset:754*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 754*FLEN/8, x4, x1, x2)

inst_378:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x021 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbb; op2val:0x421;
   valaddr_reg:x3; val_offset:756*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 756*FLEN/8, x4, x1, x2)

inst_379:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3bb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x021 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bbb; op2val:0x421;
   valaddr_reg:x3; val_offset:758*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 758*FLEN/8, x4, x1, x2)

inst_380:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46a;
   valaddr_reg:x3; val_offset:760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 760*FLEN/8, x4, x1, x2)

inst_381:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46a;
   valaddr_reg:x3; val_offset:762*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 762*FLEN/8, x4, x1, x2)

inst_382:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46a;
   valaddr_reg:x3; val_offset:764*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 764*FLEN/8, x4, x1, x2)

inst_383:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46a;
   valaddr_reg:x3; val_offset:766*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 766*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_384:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46a;
   valaddr_reg:x3; val_offset:768*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 768*FLEN/8, x4, x1, x2)

inst_385:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37de; op2val:0x80f;
   valaddr_reg:x3; val_offset:770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 770*FLEN/8, x4, x1, x2)

inst_386:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37de; op2val:0x80f;
   valaddr_reg:x3; val_offset:772*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 772*FLEN/8, x4, x1, x2)

inst_387:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37de; op2val:0x80f;
   valaddr_reg:x3; val_offset:774*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 774*FLEN/8, x4, x1, x2)

inst_388:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37de; op2val:0x80f;
   valaddr_reg:x3; val_offset:776*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 776*FLEN/8, x4, x1, x2)

inst_389:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37de; op2val:0x80f;
   valaddr_reg:x3; val_offset:778*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 778*FLEN/8, x4, x1, x2)

inst_390:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x038 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x391 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c38; op2val:0x1391;
   valaddr_reg:x3; val_offset:780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 780*FLEN/8, x4, x1, x2)

inst_391:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x038 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x391 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c38; op2val:0x1391;
   valaddr_reg:x3; val_offset:782*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 782*FLEN/8, x4, x1, x2)

inst_392:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x038 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x391 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c38; op2val:0x1391;
   valaddr_reg:x3; val_offset:784*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 784*FLEN/8, x4, x1, x2)

inst_393:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x038 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x391 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c38; op2val:0x1391;
   valaddr_reg:x3; val_offset:786*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 786*FLEN/8, x4, x1, x2)

inst_394:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x038 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x391 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c38; op2val:0x1391;
   valaddr_reg:x3; val_offset:788*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 788*FLEN/8, x4, x1, x2)

inst_395:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x223 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x133 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a23; op2val:0x533;
   valaddr_reg:x3; val_offset:790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 790*FLEN/8, x4, x1, x2)

inst_396:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x223 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x133 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a23; op2val:0x533;
   valaddr_reg:x3; val_offset:792*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 792*FLEN/8, x4, x1, x2)

inst_397:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x223 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x133 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a23; op2val:0x533;
   valaddr_reg:x3; val_offset:794*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 794*FLEN/8, x4, x1, x2)

inst_398:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x223 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x133 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a23; op2val:0x533;
   valaddr_reg:x3; val_offset:796*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 796*FLEN/8, x4, x1, x2)

inst_399:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x223 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x133 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a23; op2val:0x533;
   valaddr_reg:x3; val_offset:798*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 798*FLEN/8, x4, x1, x2)

inst_400:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x154 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x554;
   valaddr_reg:x3; val_offset:800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 800*FLEN/8, x4, x1, x2)

inst_401:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x154 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x554;
   valaddr_reg:x3; val_offset:802*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 802*FLEN/8, x4, x1, x2)

inst_402:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x154 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x554;
   valaddr_reg:x3; val_offset:804*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 804*FLEN/8, x4, x1, x2)

inst_403:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x154 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x554;
   valaddr_reg:x3; val_offset:806*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 806*FLEN/8, x4, x1, x2)

inst_404:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x154 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x554;
   valaddr_reg:x3; val_offset:808*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 808*FLEN/8, x4, x1, x2)

inst_405:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x203 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x14f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3603; op2val:0x94f;
   valaddr_reg:x3; val_offset:810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 810*FLEN/8, x4, x1, x2)

inst_406:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x203 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x14f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3603; op2val:0x94f;
   valaddr_reg:x3; val_offset:812*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 812*FLEN/8, x4, x1, x2)

inst_407:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x203 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x14f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3603; op2val:0x94f;
   valaddr_reg:x3; val_offset:814*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 814*FLEN/8, x4, x1, x2)

inst_408:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x203 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x14f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3603; op2val:0x94f;
   valaddr_reg:x3; val_offset:816*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 816*FLEN/8, x4, x1, x2)

inst_409:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x203 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x14f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3603; op2val:0x94f;
   valaddr_reg:x3; val_offset:818*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 818*FLEN/8, x4, x1, x2)

inst_410:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2de and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a6; op2val:0xade;
   valaddr_reg:x3; val_offset:820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 820*FLEN/8, x4, x1, x2)

inst_411:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2de and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a6; op2val:0xade;
   valaddr_reg:x3; val_offset:822*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 822*FLEN/8, x4, x1, x2)

inst_412:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2de and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a6; op2val:0xade;
   valaddr_reg:x3; val_offset:824*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 824*FLEN/8, x4, x1, x2)

inst_413:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2de and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a6; op2val:0xade;
   valaddr_reg:x3; val_offset:826*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 826*FLEN/8, x4, x1, x2)

inst_414:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2de and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a6; op2val:0xade;
   valaddr_reg:x3; val_offset:828*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 828*FLEN/8, x4, x1, x2)

inst_415:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x09e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x49e;
   valaddr_reg:x3; val_offset:830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 830*FLEN/8, x4, x1, x2)

inst_416:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x09e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x49e;
   valaddr_reg:x3; val_offset:832*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 832*FLEN/8, x4, x1, x2)

inst_417:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x09e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x49e;
   valaddr_reg:x3; val_offset:834*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 834*FLEN/8, x4, x1, x2)

inst_418:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x09e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x49e;
   valaddr_reg:x3; val_offset:836*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 836*FLEN/8, x4, x1, x2)

inst_419:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x09d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x09e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x389d; op2val:0x49e;
   valaddr_reg:x3; val_offset:838*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 838*FLEN/8, x4, x1, x2)

inst_420:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2ad and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bf6; op2val:0x2ad;
   valaddr_reg:x3; val_offset:840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 840*FLEN/8, x4, x1, x2)

inst_421:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2ad and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bf6; op2val:0x2ad;
   valaddr_reg:x3; val_offset:842*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 842*FLEN/8, x4, x1, x2)

inst_422:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2ad and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bf6; op2val:0x2ad;
   valaddr_reg:x3; val_offset:844*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 844*FLEN/8, x4, x1, x2)

inst_423:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2ad and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bf6; op2val:0x2ad;
   valaddr_reg:x3; val_offset:846*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 846*FLEN/8, x4, x1, x2)

inst_424:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3f6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2ad and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bf6; op2val:0x2ad;
   valaddr_reg:x3; val_offset:848*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 848*FLEN/8, x4, x1, x2)

inst_425:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x01 and fm2 == 0x081 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ba; op2val:0x481;
   valaddr_reg:x3; val_offset:850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 850*FLEN/8, x4, x1, x2)

inst_426:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x01 and fm2 == 0x081 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ba; op2val:0x481;
   valaddr_reg:x3; val_offset:852*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 852*FLEN/8, x4, x1, x2)

inst_427:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x01 and fm2 == 0x081 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ba; op2val:0x481;
   valaddr_reg:x3; val_offset:854*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 854*FLEN/8, x4, x1, x2)

inst_428:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x01 and fm2 == 0x081 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ba; op2val:0x481;
   valaddr_reg:x3; val_offset:856*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 856*FLEN/8, x4, x1, x2)

inst_429:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x01 and fm2 == 0x081 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38ba; op2val:0x481;
   valaddr_reg:x3; val_offset:858*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 858*FLEN/8, x4, x1, x2)

inst_430:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x8d2;
   valaddr_reg:x3; val_offset:860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 860*FLEN/8, x4, x1, x2)

inst_431:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x8d2;
   valaddr_reg:x3; val_offset:862*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 862*FLEN/8, x4, x1, x2)

inst_432:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x8d2;
   valaddr_reg:x3; val_offset:864*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 864*FLEN/8, x4, x1, x2)

inst_433:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x8d2;
   valaddr_reg:x3; val_offset:866*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 866*FLEN/8, x4, x1, x2)

inst_434:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346b; op2val:0x8d2;
   valaddr_reg:x3; val_offset:868*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 868*FLEN/8, x4, x1, x2)

inst_435:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x333 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f5 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b33; op2val:0x2f5;
   valaddr_reg:x3; val_offset:870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 870*FLEN/8, x4, x1, x2)

inst_436:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x333 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f5 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b33; op2val:0x2f5;
   valaddr_reg:x3; val_offset:872*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 872*FLEN/8, x4, x1, x2)

inst_437:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x333 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f5 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b33; op2val:0x2f5;
   valaddr_reg:x3; val_offset:874*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 874*FLEN/8, x4, x1, x2)

inst_438:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x333 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f5 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b33; op2val:0x2f5;
   valaddr_reg:x3; val_offset:876*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 876*FLEN/8, x4, x1, x2)

inst_439:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x333 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f5 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b33; op2val:0x2f5;
   valaddr_reg:x3; val_offset:878*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 878*FLEN/8, x4, x1, x2)

inst_440:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x225 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x377 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a25; op2val:0x377;
   valaddr_reg:x3; val_offset:880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 880*FLEN/8, x4, x1, x2)

inst_441:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x225 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x377 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a25; op2val:0x377;
   valaddr_reg:x3; val_offset:882*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 882*FLEN/8, x4, x1, x2)

inst_442:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x225 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x377 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a25; op2val:0x377;
   valaddr_reg:x3; val_offset:884*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 884*FLEN/8, x4, x1, x2)

inst_443:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x225 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x377 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a25; op2val:0x377;
   valaddr_reg:x3; val_offset:886*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 886*FLEN/8, x4, x1, x2)

inst_444:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x225 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x377 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a25; op2val:0x377;
   valaddr_reg:x3; val_offset:888*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 888*FLEN/8, x4, x1, x2)

inst_445:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ab; op2val:0x58f;
   valaddr_reg:x3; val_offset:890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 890*FLEN/8, x4, x1, x2)

inst_446:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ab; op2val:0x58f;
   valaddr_reg:x3; val_offset:892*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 892*FLEN/8, x4, x1, x2)

inst_447:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ab; op2val:0x58f;
   valaddr_reg:x3; val_offset:894*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 894*FLEN/8, x4, x1, x2)

inst_448:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ab; op2val:0x58f;
   valaddr_reg:x3; val_offset:896*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 896*FLEN/8, x4, x1, x2)

inst_449:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3ab and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37ab; op2val:0x58f;
   valaddr_reg:x3; val_offset:898*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 898*FLEN/8, x4, x1, x2)

inst_450:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x185 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3dc and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3985; op2val:0x3dc;
   valaddr_reg:x3; val_offset:900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 900*FLEN/8, x4, x1, x2)

inst_451:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x185 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3dc and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3985; op2val:0x3dc;
   valaddr_reg:x3; val_offset:902*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 902*FLEN/8, x4, x1, x2)

inst_452:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x185 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3dc and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3985; op2val:0x3dc;
   valaddr_reg:x3; val_offset:904*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 904*FLEN/8, x4, x1, x2)

inst_453:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x185 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3dc and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3985; op2val:0x3dc;
   valaddr_reg:x3; val_offset:906*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 906*FLEN/8, x4, x1, x2)

inst_454:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x185 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3dc and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3985; op2val:0x3dc;
   valaddr_reg:x3; val_offset:908*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 908*FLEN/8, x4, x1, x2)

inst_455:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x24c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x362 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a4c; op2val:0x362;
   valaddr_reg:x3; val_offset:910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 910*FLEN/8, x4, x1, x2)

inst_456:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x24c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x362 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a4c; op2val:0x362;
   valaddr_reg:x3; val_offset:912*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 912*FLEN/8, x4, x1, x2)

inst_457:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x24c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x362 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a4c; op2val:0x362;
   valaddr_reg:x3; val_offset:914*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 914*FLEN/8, x4, x1, x2)

inst_458:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x24c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x362 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a4c; op2val:0x362;
   valaddr_reg:x3; val_offset:916*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 916*FLEN/8, x4, x1, x2)

inst_459:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x24c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x362 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a4c; op2val:0x362;
   valaddr_reg:x3; val_offset:918*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 918*FLEN/8, x4, x1, x2)

inst_460:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0b9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x082 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28b9; op2val:0x1482;
   valaddr_reg:x3; val_offset:920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 920*FLEN/8, x4, x1, x2)

inst_461:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0b9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x082 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28b9; op2val:0x1482;
   valaddr_reg:x3; val_offset:922*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 922*FLEN/8, x4, x1, x2)

inst_462:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0b9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x082 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28b9; op2val:0x1482;
   valaddr_reg:x3; val_offset:924*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 924*FLEN/8, x4, x1, x2)

inst_463:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0b9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x082 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28b9; op2val:0x1482;
   valaddr_reg:x3; val_offset:926*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 926*FLEN/8, x4, x1, x2)

inst_464:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0b9 and fs2 == 0 and fe2 == 0x05 and fm2 == 0x082 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28b9; op2val:0x1482;
   valaddr_reg:x3; val_offset:928*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 928*FLEN/8, x4, x1, x2)

inst_465:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x087 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3887; op2val:0x4b4;
   valaddr_reg:x3; val_offset:930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 930*FLEN/8, x4, x1, x2)

inst_466:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x087 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3887; op2val:0x4b4;
   valaddr_reg:x3; val_offset:932*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 932*FLEN/8, x4, x1, x2)

inst_467:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x087 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3887; op2val:0x4b4;
   valaddr_reg:x3; val_offset:934*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 934*FLEN/8, x4, x1, x2)

inst_468:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x087 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3887; op2val:0x4b4;
   valaddr_reg:x3; val_offset:936*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 936*FLEN/8, x4, x1, x2)

inst_469:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x087 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3887; op2val:0x4b4;
   valaddr_reg:x3; val_offset:938*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 938*FLEN/8, x4, x1, x2)

inst_470:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25c and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36b4; op2val:0x65c;
   valaddr_reg:x3; val_offset:940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 940*FLEN/8, x4, x1, x2)

inst_471:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25c and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36b4; op2val:0x65c;
   valaddr_reg:x3; val_offset:942*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 942*FLEN/8, x4, x1, x2)

inst_472:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25c and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36b4; op2val:0x65c;
   valaddr_reg:x3; val_offset:944*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 944*FLEN/8, x4, x1, x2)

inst_473:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25c and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36b4; op2val:0x65c;
   valaddr_reg:x3; val_offset:946*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 946*FLEN/8, x4, x1, x2)

inst_474:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2b4 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25c and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36b4; op2val:0x65c;
   valaddr_reg:x3; val_offset:948*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 948*FLEN/8, x4, x1, x2)

inst_475:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x094 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38a7; op2val:0x494;
   valaddr_reg:x3; val_offset:950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 950*FLEN/8, x4, x1, x2)

inst_476:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x094 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38a7; op2val:0x494;
   valaddr_reg:x3; val_offset:952*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 952*FLEN/8, x4, x1, x2)

inst_477:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x094 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38a7; op2val:0x494;
   valaddr_reg:x3; val_offset:954*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 954*FLEN/8, x4, x1, x2)

inst_478:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x094 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38a7; op2val:0x494;
   valaddr_reg:x3; val_offset:956*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 956*FLEN/8, x4, x1, x2)

inst_479:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0a7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x094 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38a7; op2val:0x494;
   valaddr_reg:x3; val_offset:958*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 958*FLEN/8, x4, x1, x2)

inst_480:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x341 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8c; op2val:0x341;
   valaddr_reg:x3; val_offset:960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 960*FLEN/8, x4, x1, x2)

inst_481:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x341 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8c; op2val:0x341;
   valaddr_reg:x3; val_offset:962*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 962*FLEN/8, x4, x1, x2)

inst_482:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x341 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8c; op2val:0x341;
   valaddr_reg:x3; val_offset:964*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 964*FLEN/8, x4, x1, x2)

inst_483:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x341 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8c; op2val:0x341;
   valaddr_reg:x3; val_offset:966*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 966*FLEN/8, x4, x1, x2)

inst_484:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x341 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8c; op2val:0x341;
   valaddr_reg:x3; val_offset:968*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 968*FLEN/8, x4, x1, x2)

inst_485:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x250 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2bf and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3250; op2val:0xabf;
   valaddr_reg:x3; val_offset:970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 970*FLEN/8, x4, x1, x2)

inst_486:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x250 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2bf and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3250; op2val:0xabf;
   valaddr_reg:x3; val_offset:972*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 972*FLEN/8, x4, x1, x2)

inst_487:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x250 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2bf and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3250; op2val:0xabf;
   valaddr_reg:x3; val_offset:974*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 974*FLEN/8, x4, x1, x2)

inst_488:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x250 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2bf and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3250; op2val:0xabf;
   valaddr_reg:x3; val_offset:976*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 976*FLEN/8, x4, x1, x2)

inst_489:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x250 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2bf and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3250; op2val:0xabf;
   valaddr_reg:x3; val_offset:978*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 978*FLEN/8, x4, x1, x2)

inst_490:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37b1; op2val:0x58a;
   valaddr_reg:x3; val_offset:980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 980*FLEN/8, x4, x1, x2)

inst_491:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37b1; op2val:0x58a;
   valaddr_reg:x3; val_offset:982*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 982*FLEN/8, x4, x1, x2)

inst_492:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37b1; op2val:0x58a;
   valaddr_reg:x3; val_offset:984*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 984*FLEN/8, x4, x1, x2)

inst_493:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37b1; op2val:0x58a;
   valaddr_reg:x3; val_offset:986*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 986*FLEN/8, x4, x1, x2)

inst_494:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3b1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x18a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37b1; op2val:0x58a;
   valaddr_reg:x3; val_offset:988*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 988*FLEN/8, x4, x1, x2)

inst_495:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d6 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x6d6;
   valaddr_reg:x3; val_offset:990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 990*FLEN/8, x4, x1, x2)

inst_496:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d6 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x6d6;
   valaddr_reg:x3; val_offset:992*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 992*FLEN/8, x4, x1, x2)

inst_497:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d6 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x6d6;
   valaddr_reg:x3; val_offset:994*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 994*FLEN/8, x4, x1, x2)

inst_498:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d6 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x6d6;
   valaddr_reg:x3; val_offset:996*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 996*FLEN/8, x4, x1, x2)

inst_499:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d6 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x6d6;
   valaddr_reg:x3; val_offset:998*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 998*FLEN/8, x4, x1, x2)

inst_500:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x03a and fs2 == 0 and fe2 == 0x06 and fm2 == 0x10a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x243a; op2val:0x190a;
   valaddr_reg:x3; val_offset:1000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1000*FLEN/8, x4, x1, x2)

inst_501:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x03a and fs2 == 0 and fe2 == 0x06 and fm2 == 0x10a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x243a; op2val:0x190a;
   valaddr_reg:x3; val_offset:1002*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1002*FLEN/8, x4, x1, x2)

inst_502:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x03a and fs2 == 0 and fe2 == 0x06 and fm2 == 0x10a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x243a; op2val:0x190a;
   valaddr_reg:x3; val_offset:1004*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1004*FLEN/8, x4, x1, x2)

inst_503:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x03a and fs2 == 0 and fe2 == 0x06 and fm2 == 0x10a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x243a; op2val:0x190a;
   valaddr_reg:x3; val_offset:1006*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1006*FLEN/8, x4, x1, x2)

inst_504:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x03a and fs2 == 0 and fe2 == 0x06 and fm2 == 0x10a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x243a; op2val:0x190a;
   valaddr_reg:x3; val_offset:1008*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1008*FLEN/8, x4, x1, x2)

inst_505:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b7 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd8; op2val:0x2b7;
   valaddr_reg:x3; val_offset:1010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1010*FLEN/8, x4, x1, x2)

inst_506:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b7 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd8; op2val:0x2b7;
   valaddr_reg:x3; val_offset:1012*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1012*FLEN/8, x4, x1, x2)

inst_507:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b7 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd8; op2val:0x2b7;
   valaddr_reg:x3; val_offset:1014*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1014*FLEN/8, x4, x1, x2)

inst_508:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b7 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd8; op2val:0x2b7;
   valaddr_reg:x3; val_offset:1016*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1016*FLEN/8, x4, x1, x2)

inst_509:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b7 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bd8; op2val:0x2b7;
   valaddr_reg:x3; val_offset:1018*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1018*FLEN/8, x4, x1, x2)

inst_510:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f6 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b30; op2val:0x2f6;
   valaddr_reg:x3; val_offset:1020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1020*FLEN/8, x4, x1, x2)

inst_511:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f6 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b30; op2val:0x2f6;
   valaddr_reg:x3; val_offset:1022*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1022*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_512:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f6 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b30; op2val:0x2f6;
   valaddr_reg:x3; val_offset:1024*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1024*FLEN/8, x4, x1, x2)

inst_513:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f6 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b30; op2val:0x2f6;
   valaddr_reg:x3; val_offset:1026*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1026*FLEN/8, x4, x1, x2)

inst_514:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x330 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f6 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b30; op2val:0x2f6;
   valaddr_reg:x3; val_offset:1028*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1028*FLEN/8, x4, x1, x2)

inst_515:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x02d and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xc2d;
   valaddr_reg:x3; val_offset:1030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1030*FLEN/8, x4, x1, x2)

inst_516:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x02d and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xc2d;
   valaddr_reg:x3; val_offset:1032*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1032*FLEN/8, x4, x1, x2)

inst_517:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x02d and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xc2d;
   valaddr_reg:x3; val_offset:1034*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1034*FLEN/8, x4, x1, x2)

inst_518:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x02d and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xc2d;
   valaddr_reg:x3; val_offset:1036*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1036*FLEN/8, x4, x1, x2)

inst_519:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x02d and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xc2d;
   valaddr_reg:x3; val_offset:1038*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1038*FLEN/8, x4, x1, x2)

inst_520:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdf; op2val:0x2b4;
   valaddr_reg:x3; val_offset:1040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1040*FLEN/8, x4, x1, x2)

inst_521:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdf; op2val:0x2b4;
   valaddr_reg:x3; val_offset:1042*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1042*FLEN/8, x4, x1, x2)

inst_522:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdf; op2val:0x2b4;
   valaddr_reg:x3; val_offset:1044*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1044*FLEN/8, x4, x1, x2)

inst_523:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdf; op2val:0x2b4;
   valaddr_reg:x3; val_offset:1046*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1046*FLEN/8, x4, x1, x2)

inst_524:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2b4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdf; op2val:0x2b4;
   valaddr_reg:x3; val_offset:1048*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1048*FLEN/8, x4, x1, x2)

inst_525:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x085 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38b6; op2val:0x485;
   valaddr_reg:x3; val_offset:1050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1050*FLEN/8, x4, x1, x2)

inst_526:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x085 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38b6; op2val:0x485;
   valaddr_reg:x3; val_offset:1052*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1052*FLEN/8, x4, x1, x2)

inst_527:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x085 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38b6; op2val:0x485;
   valaddr_reg:x3; val_offset:1054*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1054*FLEN/8, x4, x1, x2)

inst_528:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x085 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38b6; op2val:0x485;
   valaddr_reg:x3; val_offset:1056*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1056*FLEN/8, x4, x1, x2)

inst_529:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x085 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38b6; op2val:0x485;
   valaddr_reg:x3; val_offset:1058*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1058*FLEN/8, x4, x1, x2)

inst_530:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x255 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35d and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a55; op2val:0x35d;
   valaddr_reg:x3; val_offset:1060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1060*FLEN/8, x4, x1, x2)

inst_531:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x255 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35d and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a55; op2val:0x35d;
   valaddr_reg:x3; val_offset:1062*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1062*FLEN/8, x4, x1, x2)

inst_532:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x255 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35d and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a55; op2val:0x35d;
   valaddr_reg:x3; val_offset:1064*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1064*FLEN/8, x4, x1, x2)

inst_533:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x255 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35d and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a55; op2val:0x35d;
   valaddr_reg:x3; val_offset:1066*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1066*FLEN/8, x4, x1, x2)

inst_534:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x255 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x35d and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a55; op2val:0x35d;
   valaddr_reg:x3; val_offset:1068*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1068*FLEN/8, x4, x1, x2)

inst_535:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x368 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b68; op2val:0x2e0;
   valaddr_reg:x3; val_offset:1070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1070*FLEN/8, x4, x1, x2)

inst_536:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x368 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b68; op2val:0x2e0;
   valaddr_reg:x3; val_offset:1072*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1072*FLEN/8, x4, x1, x2)

inst_537:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x368 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b68; op2val:0x2e0;
   valaddr_reg:x3; val_offset:1074*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1074*FLEN/8, x4, x1, x2)

inst_538:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x368 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b68; op2val:0x2e0;
   valaddr_reg:x3; val_offset:1076*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1076*FLEN/8, x4, x1, x2)

inst_539:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x368 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b68; op2val:0x2e0;
   valaddr_reg:x3; val_offset:1078*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1078*FLEN/8, x4, x1, x2)

inst_540:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x03f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x43f;
   valaddr_reg:x3; val_offset:1080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1080*FLEN/8, x4, x1, x2)

inst_541:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x03f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x43f;
   valaddr_reg:x3; val_offset:1082*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1082*FLEN/8, x4, x1, x2)

inst_542:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x03f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x43f;
   valaddr_reg:x3; val_offset:1084*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1084*FLEN/8, x4, x1, x2)

inst_543:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x03f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x43f;
   valaddr_reg:x3; val_offset:1086*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1086*FLEN/8, x4, x1, x2)

inst_544:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x03f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x43f;
   valaddr_reg:x3; val_offset:1088*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1088*FLEN/8, x4, x1, x2)

inst_545:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x363 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b63; op2val:0x2e2;
   valaddr_reg:x3; val_offset:1090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1090*FLEN/8, x4, x1, x2)

inst_546:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x363 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b63; op2val:0x2e2;
   valaddr_reg:x3; val_offset:1092*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1092*FLEN/8, x4, x1, x2)

inst_547:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x363 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b63; op2val:0x2e2;
   valaddr_reg:x3; val_offset:1094*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1094*FLEN/8, x4, x1, x2)

inst_548:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x363 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b63; op2val:0x2e2;
   valaddr_reg:x3; val_offset:1096*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1096*FLEN/8, x4, x1, x2)

inst_549:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x363 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b63; op2val:0x2e2;
   valaddr_reg:x3; val_offset:1098*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1098*FLEN/8, x4, x1, x2)

inst_550:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x276 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x34c and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a76; op2val:0x34c;
   valaddr_reg:x3; val_offset:1100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1100*FLEN/8, x4, x1, x2)

inst_551:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x276 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x34c and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a76; op2val:0x34c;
   valaddr_reg:x3; val_offset:1102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1102*FLEN/8, x4, x1, x2)

inst_552:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x276 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x34c and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a76; op2val:0x34c;
   valaddr_reg:x3; val_offset:1104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1104*FLEN/8, x4, x1, x2)

inst_553:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x276 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x34c and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a76; op2val:0x34c;
   valaddr_reg:x3; val_offset:1106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1106*FLEN/8, x4, x1, x2)

inst_554:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x276 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x34c and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a76; op2val:0x34c;
   valaddr_reg:x3; val_offset:1108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1108*FLEN/8, x4, x1, x2)

inst_555:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0dd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x061 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38dd; op2val:0x461;
   valaddr_reg:x3; val_offset:1110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1110*FLEN/8, x4, x1, x2)

inst_556:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0dd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x061 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38dd; op2val:0x461;
   valaddr_reg:x3; val_offset:1112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1112*FLEN/8, x4, x1, x2)

inst_557:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0dd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x061 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38dd; op2val:0x461;
   valaddr_reg:x3; val_offset:1114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1114*FLEN/8, x4, x1, x2)

inst_558:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0dd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x061 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38dd; op2val:0x461;
   valaddr_reg:x3; val_offset:1116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1116*FLEN/8, x4, x1, x2)

inst_559:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0dd and fs2 == 0 and fe2 == 0x01 and fm2 == 0x061 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38dd; op2val:0x461;
   valaddr_reg:x3; val_offset:1118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1118*FLEN/8, x4, x1, x2)

inst_560:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x167 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e2; op2val:0x967;
   valaddr_reg:x3; val_offset:1120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1120*FLEN/8, x4, x1, x2)

inst_561:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x167 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e2; op2val:0x967;
   valaddr_reg:x3; val_offset:1122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1122*FLEN/8, x4, x1, x2)

inst_562:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x167 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e2; op2val:0x967;
   valaddr_reg:x3; val_offset:1124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1124*FLEN/8, x4, x1, x2)

inst_563:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x167 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e2; op2val:0x967;
   valaddr_reg:x3; val_offset:1126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1126*FLEN/8, x4, x1, x2)

inst_564:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x167 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e2; op2val:0x967;
   valaddr_reg:x3; val_offset:1128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1128*FLEN/8, x4, x1, x2)

inst_565:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x306 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x308 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b06; op2val:0x308;
   valaddr_reg:x3; val_offset:1130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1130*FLEN/8, x4, x1, x2)

inst_566:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x306 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x308 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b06; op2val:0x308;
   valaddr_reg:x3; val_offset:1132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1132*FLEN/8, x4, x1, x2)

inst_567:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x306 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x308 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b06; op2val:0x308;
   valaddr_reg:x3; val_offset:1134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1134*FLEN/8, x4, x1, x2)

inst_568:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x306 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x308 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b06; op2val:0x308;
   valaddr_reg:x3; val_offset:1136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1136*FLEN/8, x4, x1, x2)

inst_569:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x306 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x308 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b06; op2val:0x308;
   valaddr_reg:x3; val_offset:1138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1138*FLEN/8, x4, x1, x2)

inst_570:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e5 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5b; op2val:0x2e5;
   valaddr_reg:x3; val_offset:1140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1140*FLEN/8, x4, x1, x2)

inst_571:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e5 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5b; op2val:0x2e5;
   valaddr_reg:x3; val_offset:1142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1142*FLEN/8, x4, x1, x2)

inst_572:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e5 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5b; op2val:0x2e5;
   valaddr_reg:x3; val_offset:1144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1144*FLEN/8, x4, x1, x2)

inst_573:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e5 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5b; op2val:0x2e5;
   valaddr_reg:x3; val_offset:1146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1146*FLEN/8, x4, x1, x2)

inst_574:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2e5 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5b; op2val:0x2e5;
   valaddr_reg:x3; val_offset:1148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1148*FLEN/8, x4, x1, x2)

inst_575:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35be; op2val:0x76b;
   valaddr_reg:x3; val_offset:1150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1150*FLEN/8, x4, x1, x2)

inst_576:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35be; op2val:0x76b;
   valaddr_reg:x3; val_offset:1152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1152*FLEN/8, x4, x1, x2)

inst_577:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35be; op2val:0x76b;
   valaddr_reg:x3; val_offset:1154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1154*FLEN/8, x4, x1, x2)

inst_578:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35be; op2val:0x76b;
   valaddr_reg:x3; val_offset:1156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1156*FLEN/8, x4, x1, x2)

inst_579:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1be and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35be; op2val:0x76b;
   valaddr_reg:x3; val_offset:1158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1158*FLEN/8, x4, x1, x2)

inst_580:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x02 and fm2 == 0x055 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34eb; op2val:0x855;
   valaddr_reg:x3; val_offset:1160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1160*FLEN/8, x4, x1, x2)

inst_581:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x02 and fm2 == 0x055 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34eb; op2val:0x855;
   valaddr_reg:x3; val_offset:1162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1162*FLEN/8, x4, x1, x2)

inst_582:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x02 and fm2 == 0x055 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34eb; op2val:0x855;
   valaddr_reg:x3; val_offset:1164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1164*FLEN/8, x4, x1, x2)

inst_583:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x02 and fm2 == 0x055 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34eb; op2val:0x855;
   valaddr_reg:x3; val_offset:1166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1166*FLEN/8, x4, x1, x2)

inst_584:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0eb and fs2 == 0 and fe2 == 0x02 and fm2 == 0x055 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34eb; op2val:0x855;
   valaddr_reg:x3; val_offset:1168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1168*FLEN/8, x4, x1, x2)

inst_585:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x174 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3574; op2val:0x7d0;
   valaddr_reg:x3; val_offset:1170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1170*FLEN/8, x4, x1, x2)

inst_586:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x174 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3574; op2val:0x7d0;
   valaddr_reg:x3; val_offset:1172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1172*FLEN/8, x4, x1, x2)

inst_587:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x174 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3574; op2val:0x7d0;
   valaddr_reg:x3; val_offset:1174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1174*FLEN/8, x4, x1, x2)

inst_588:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x174 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3574; op2val:0x7d0;
   valaddr_reg:x3; val_offset:1176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1176*FLEN/8, x4, x1, x2)

inst_589:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x174 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3574; op2val:0x7d0;
   valaddr_reg:x3; val_offset:1178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1178*FLEN/8, x4, x1, x2)

inst_590:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346c; op2val:0x8d1;
   valaddr_reg:x3; val_offset:1180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1180*FLEN/8, x4, x1, x2)

inst_591:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346c; op2val:0x8d1;
   valaddr_reg:x3; val_offset:1182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1182*FLEN/8, x4, x1, x2)

inst_592:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346c; op2val:0x8d1;
   valaddr_reg:x3; val_offset:1184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1184*FLEN/8, x4, x1, x2)

inst_593:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346c; op2val:0x8d1;
   valaddr_reg:x3; val_offset:1186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1186*FLEN/8, x4, x1, x2)

inst_594:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x06c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0d1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x346c; op2val:0x8d1;
   valaddr_reg:x3; val_offset:1188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1188*FLEN/8, x4, x1, x2)

inst_595:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x123 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x025 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3923; op2val:0x425;
   valaddr_reg:x3; val_offset:1190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1190*FLEN/8, x4, x1, x2)

inst_596:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x123 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x025 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3923; op2val:0x425;
   valaddr_reg:x3; val_offset:1192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1192*FLEN/8, x4, x1, x2)

inst_597:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x123 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x025 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3923; op2val:0x425;
   valaddr_reg:x3; val_offset:1194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1194*FLEN/8, x4, x1, x2)

inst_598:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x123 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x025 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3923; op2val:0x425;
   valaddr_reg:x3; val_offset:1196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1196*FLEN/8, x4, x1, x2)

inst_599:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x123 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x025 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3923; op2val:0x425;
   valaddr_reg:x3; val_offset:1198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1198*FLEN/8, x4, x1, x2)

inst_600:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x271 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x29e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3271; op2val:0xa9e;
   valaddr_reg:x3; val_offset:1200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1200*FLEN/8, x4, x1, x2)

inst_601:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x271 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x29e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3271; op2val:0xa9e;
   valaddr_reg:x3; val_offset:1202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1202*FLEN/8, x4, x1, x2)

inst_602:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x271 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x29e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3271; op2val:0xa9e;
   valaddr_reg:x3; val_offset:1204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1204*FLEN/8, x4, x1, x2)

inst_603:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x271 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x29e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3271; op2val:0xa9e;
   valaddr_reg:x3; val_offset:1206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1206*FLEN/8, x4, x1, x2)

inst_604:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x271 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x29e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3271; op2val:0xa9e;
   valaddr_reg:x3; val_offset:1208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1208*FLEN/8, x4, x1, x2)

inst_605:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x394 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3794; op2val:0x59f;
   valaddr_reg:x3; val_offset:1210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1210*FLEN/8, x4, x1, x2)

inst_606:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x394 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3794; op2val:0x59f;
   valaddr_reg:x3; val_offset:1212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1212*FLEN/8, x4, x1, x2)

inst_607:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x394 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3794; op2val:0x59f;
   valaddr_reg:x3; val_offset:1214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1214*FLEN/8, x4, x1, x2)

inst_608:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x394 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3794; op2val:0x59f;
   valaddr_reg:x3; val_offset:1216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1216*FLEN/8, x4, x1, x2)

inst_609:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x394 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x19f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3794; op2val:0x59f;
   valaddr_reg:x3; val_offset:1218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1218*FLEN/8, x4, x1, x2)

inst_610:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x1cd and fs2 == 0 and fe2 == 0x04 and fm2 == 0x358 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x29cd; op2val:0x1358;
   valaddr_reg:x3; val_offset:1220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1220*FLEN/8, x4, x1, x2)

inst_611:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x1cd and fs2 == 0 and fe2 == 0x04 and fm2 == 0x358 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x29cd; op2val:0x1358;
   valaddr_reg:x3; val_offset:1222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1222*FLEN/8, x4, x1, x2)

inst_612:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x1cd and fs2 == 0 and fe2 == 0x04 and fm2 == 0x358 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x29cd; op2val:0x1358;
   valaddr_reg:x3; val_offset:1224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1224*FLEN/8, x4, x1, x2)

inst_613:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x1cd and fs2 == 0 and fe2 == 0x04 and fm2 == 0x358 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x29cd; op2val:0x1358;
   valaddr_reg:x3; val_offset:1226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1226*FLEN/8, x4, x1, x2)

inst_614:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x1cd and fs2 == 0 and fe2 == 0x04 and fm2 == 0x358 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x29cd; op2val:0x1358;
   valaddr_reg:x3; val_offset:1228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1228*FLEN/8, x4, x1, x2)

inst_615:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x059 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0e6 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c59; op2val:0x10e6;
   valaddr_reg:x3; val_offset:1230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1230*FLEN/8, x4, x1, x2)

inst_616:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x059 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0e6 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c59; op2val:0x10e6;
   valaddr_reg:x3; val_offset:1232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1232*FLEN/8, x4, x1, x2)

inst_617:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x059 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0e6 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c59; op2val:0x10e6;
   valaddr_reg:x3; val_offset:1234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1234*FLEN/8, x4, x1, x2)

inst_618:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x059 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0e6 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c59; op2val:0x10e6;
   valaddr_reg:x3; val_offset:1236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1236*FLEN/8, x4, x1, x2)

inst_619:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x059 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0e6 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c59; op2val:0x10e6;
   valaddr_reg:x3; val_offset:1238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1238*FLEN/8, x4, x1, x2)

inst_620:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3c9 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a0; op2val:0x3c9;
   valaddr_reg:x3; val_offset:1240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1240*FLEN/8, x4, x1, x2)

inst_621:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3c9 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a0; op2val:0x3c9;
   valaddr_reg:x3; val_offset:1242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1242*FLEN/8, x4, x1, x2)

inst_622:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3c9 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a0; op2val:0x3c9;
   valaddr_reg:x3; val_offset:1244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1244*FLEN/8, x4, x1, x2)

inst_623:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3c9 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a0; op2val:0x3c9;
   valaddr_reg:x3; val_offset:1246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1246*FLEN/8, x4, x1, x2)

inst_624:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3c9 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a0; op2val:0x3c9;
   valaddr_reg:x3; val_offset:1248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1248*FLEN/8, x4, x1, x2)

inst_625:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3817; op2val:0x7d4;
   valaddr_reg:x3; val_offset:1250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1250*FLEN/8, x4, x1, x2)

inst_626:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3817; op2val:0x7d4;
   valaddr_reg:x3; val_offset:1252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1252*FLEN/8, x4, x1, x2)

inst_627:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3817; op2val:0x7d4;
   valaddr_reg:x3; val_offset:1254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1254*FLEN/8, x4, x1, x2)

inst_628:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3817; op2val:0x7d4;
   valaddr_reg:x3; val_offset:1256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1256*FLEN/8, x4, x1, x2)

inst_629:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x017 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3d4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3817; op2val:0x7d4;
   valaddr_reg:x3; val_offset:1258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1258*FLEN/8, x4, x1, x2)

inst_630:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x094 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fe and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3894; op2val:0x6fe;
   valaddr_reg:x3; val_offset:1260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1260*FLEN/8, x4, x1, x2)

inst_631:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x094 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fe and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3894; op2val:0x6fe;
   valaddr_reg:x3; val_offset:1262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1262*FLEN/8, x4, x1, x2)

inst_632:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x094 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fe and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3894; op2val:0x6fe;
   valaddr_reg:x3; val_offset:1264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1264*FLEN/8, x4, x1, x2)

inst_633:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x094 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fe and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3894; op2val:0x6fe;
   valaddr_reg:x3; val_offset:1266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1266*FLEN/8, x4, x1, x2)

inst_634:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x094 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fe and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3894; op2val:0x6fe;
   valaddr_reg:x3; val_offset:1268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1268*FLEN/8, x4, x1, x2)

inst_635:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x136 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x224 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d36; op2val:0x1224;
   valaddr_reg:x3; val_offset:1270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1270*FLEN/8, x4, x1, x2)

inst_636:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x136 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x224 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d36; op2val:0x1224;
   valaddr_reg:x3; val_offset:1272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1272*FLEN/8, x4, x1, x2)

inst_637:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x136 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x224 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d36; op2val:0x1224;
   valaddr_reg:x3; val_offset:1274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1274*FLEN/8, x4, x1, x2)

inst_638:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x136 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x224 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d36; op2val:0x1224;
   valaddr_reg:x3; val_offset:1276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1276*FLEN/8, x4, x1, x2)

inst_639:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x136 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x224 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d36; op2val:0x1224;
   valaddr_reg:x3; val_offset:1278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1278*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_640:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1d4 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x17e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31d4; op2val:0xd7e;
   valaddr_reg:x3; val_offset:1280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1280*FLEN/8, x4, x1, x2)

inst_641:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1d4 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x17e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31d4; op2val:0xd7e;
   valaddr_reg:x3; val_offset:1282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1282*FLEN/8, x4, x1, x2)

inst_642:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1d4 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x17e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31d4; op2val:0xd7e;
   valaddr_reg:x3; val_offset:1284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1284*FLEN/8, x4, x1, x2)

inst_643:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1d4 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x17e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31d4; op2val:0xd7e;
   valaddr_reg:x3; val_offset:1286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1286*FLEN/8, x4, x1, x2)

inst_644:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x1d4 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x17e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x31d4; op2val:0xd7e;
   valaddr_reg:x3; val_offset:1288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1288*FLEN/8, x4, x1, x2)

inst_645:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x126 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x237 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3926; op2val:0x637;
   valaddr_reg:x3; val_offset:1290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1290*FLEN/8, x4, x1, x2)

inst_646:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x126 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x237 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3926; op2val:0x637;
   valaddr_reg:x3; val_offset:1292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1292*FLEN/8, x4, x1, x2)

inst_647:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x126 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x237 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3926; op2val:0x637;
   valaddr_reg:x3; val_offset:1294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1294*FLEN/8, x4, x1, x2)

inst_648:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x126 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x237 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3926; op2val:0x637;
   valaddr_reg:x3; val_offset:1296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1296*FLEN/8, x4, x1, x2)

inst_649:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x126 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x237 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3926; op2val:0x637;
   valaddr_reg:x3; val_offset:1298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1298*FLEN/8, x4, x1, x2)

inst_650:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad3; op2val:0x4b1;
   valaddr_reg:x3; val_offset:1300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1300*FLEN/8, x4, x1, x2)

inst_651:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad3; op2val:0x4b1;
   valaddr_reg:x3; val_offset:1302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1302*FLEN/8, x4, x1, x2)

inst_652:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad3; op2val:0x4b1;
   valaddr_reg:x3; val_offset:1304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1304*FLEN/8, x4, x1, x2)

inst_653:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad3; op2val:0x4b1;
   valaddr_reg:x3; val_offset:1306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1306*FLEN/8, x4, x1, x2)

inst_654:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad3; op2val:0x4b1;
   valaddr_reg:x3; val_offset:1308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1308*FLEN/8, x4, x1, x2)

inst_655:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x377 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b77; op2val:0x44a;
   valaddr_reg:x3; val_offset:1310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1310*FLEN/8, x4, x1, x2)

inst_656:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x377 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b77; op2val:0x44a;
   valaddr_reg:x3; val_offset:1312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1312*FLEN/8, x4, x1, x2)

inst_657:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x377 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b77; op2val:0x44a;
   valaddr_reg:x3; val_offset:1314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1314*FLEN/8, x4, x1, x2)

inst_658:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x377 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b77; op2val:0x44a;
   valaddr_reg:x3; val_offset:1316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1316*FLEN/8, x4, x1, x2)

inst_659:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x377 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x04a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b77; op2val:0x44a;
   valaddr_reg:x3; val_offset:1318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1318*FLEN/8, x4, x1, x2)

inst_660:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b1 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c9 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb1; op2val:0x10c9;
   valaddr_reg:x3; val_offset:1320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1320*FLEN/8, x4, x1, x2)

inst_661:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b1 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c9 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb1; op2val:0x10c9;
   valaddr_reg:x3; val_offset:1322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1322*FLEN/8, x4, x1, x2)

inst_662:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b1 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c9 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb1; op2val:0x10c9;
   valaddr_reg:x3; val_offset:1324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1324*FLEN/8, x4, x1, x2)

inst_663:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b1 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c9 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb1; op2val:0x10c9;
   valaddr_reg:x3; val_offset:1326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1326*FLEN/8, x4, x1, x2)

inst_664:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b1 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c9 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb1; op2val:0x10c9;
   valaddr_reg:x3; val_offset:1328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1328*FLEN/8, x4, x1, x2)

inst_665:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a1; op2val:0x9b0;
   valaddr_reg:x3; val_offset:1330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1330*FLEN/8, x4, x1, x2)

inst_666:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a1; op2val:0x9b0;
   valaddr_reg:x3; val_offset:1332*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1332*FLEN/8, x4, x1, x2)

inst_667:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a1; op2val:0x9b0;
   valaddr_reg:x3; val_offset:1334*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1334*FLEN/8, x4, x1, x2)

inst_668:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a1; op2val:0x9b0;
   valaddr_reg:x3; val_offset:1336*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1336*FLEN/8, x4, x1, x2)

inst_669:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a1; op2val:0x9b0;
   valaddr_reg:x3; val_offset:1338*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1338*FLEN/8, x4, x1, x2)

inst_670:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1b0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a1; op2val:0x5b0;
   valaddr_reg:x3; val_offset:1340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1340*FLEN/8, x4, x1, x2)

inst_671:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1b0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a1; op2val:0x5b0;
   valaddr_reg:x3; val_offset:1342*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1342*FLEN/8, x4, x1, x2)

inst_672:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1b0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a1; op2val:0x5b0;
   valaddr_reg:x3; val_offset:1344*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1344*FLEN/8, x4, x1, x2)

inst_673:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1b0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a1; op2val:0x5b0;
   valaddr_reg:x3; val_offset:1346*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1346*FLEN/8, x4, x1, x2)

inst_674:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1b0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39a1; op2val:0x5b0;
   valaddr_reg:x3; val_offset:1348*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1348*FLEN/8, x4, x1, x2)

inst_675:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x144 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x214 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3544; op2val:0xa14;
   valaddr_reg:x3; val_offset:1350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1350*FLEN/8, x4, x1, x2)

inst_676:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x144 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x214 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3544; op2val:0xa14;
   valaddr_reg:x3; val_offset:1352*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1352*FLEN/8, x4, x1, x2)

inst_677:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x144 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x214 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3544; op2val:0xa14;
   valaddr_reg:x3; val_offset:1354*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1354*FLEN/8, x4, x1, x2)

inst_678:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x144 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x214 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3544; op2val:0xa14;
   valaddr_reg:x3; val_offset:1356*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1356*FLEN/8, x4, x1, x2)

inst_679:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x144 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x214 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3544; op2val:0xa14;
   valaddr_reg:x3; val_offset:1358*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1358*FLEN/8, x4, x1, x2)

inst_680:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x322 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387d; op2val:0x722;
   valaddr_reg:x3; val_offset:1360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1360*FLEN/8, x4, x1, x2)

inst_681:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x322 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387d; op2val:0x722;
   valaddr_reg:x3; val_offset:1362*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1362*FLEN/8, x4, x1, x2)

inst_682:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x322 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387d; op2val:0x722;
   valaddr_reg:x3; val_offset:1364*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1364*FLEN/8, x4, x1, x2)

inst_683:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x322 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387d; op2val:0x722;
   valaddr_reg:x3; val_offset:1366*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1366*FLEN/8, x4, x1, x2)

inst_684:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07d and fs2 == 0 and fe2 == 0x01 and fm2 == 0x322 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387d; op2val:0x722;
   valaddr_reg:x3; val_offset:1368*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1368*FLEN/8, x4, x1, x2)

inst_685:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x082 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x482;
   valaddr_reg:x3; val_offset:1370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1370*FLEN/8, x4, x1, x2)

inst_686:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x082 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x482;
   valaddr_reg:x3; val_offset:1372*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1372*FLEN/8, x4, x1, x2)

inst_687:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x082 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x482;
   valaddr_reg:x3; val_offset:1374*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1374*FLEN/8, x4, x1, x2)

inst_688:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x082 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x482;
   valaddr_reg:x3; val_offset:1376*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1376*FLEN/8, x4, x1, x2)

inst_689:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x082 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x482;
   valaddr_reg:x3; val_offset:1378*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1378*FLEN/8, x4, x1, x2)

inst_690:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x26a and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0fe and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a6a; op2val:0x14fe;
   valaddr_reg:x3; val_offset:1380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1380*FLEN/8, x4, x1, x2)

inst_691:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x26a and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0fe and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a6a; op2val:0x14fe;
   valaddr_reg:x3; val_offset:1382*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1382*FLEN/8, x4, x1, x2)

inst_692:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x26a and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0fe and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a6a; op2val:0x14fe;
   valaddr_reg:x3; val_offset:1384*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1384*FLEN/8, x4, x1, x2)

inst_693:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x26a and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0fe and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a6a; op2val:0x14fe;
   valaddr_reg:x3; val_offset:1386*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1386*FLEN/8, x4, x1, x2)

inst_694:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x26a and fs2 == 0 and fe2 == 0x05 and fm2 == 0x0fe and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2a6a; op2val:0x14fe;
   valaddr_reg:x3; val_offset:1388*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1388*FLEN/8, x4, x1, x2)

inst_695:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46e;
   valaddr_reg:x3; val_offset:1390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1390*FLEN/8, x4, x1, x2)

inst_696:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46e;
   valaddr_reg:x3; val_offset:1392*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1392*FLEN/8, x4, x1, x2)

inst_697:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46e;
   valaddr_reg:x3; val_offset:1394*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1394*FLEN/8, x4, x1, x2)

inst_698:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46e;
   valaddr_reg:x3; val_offset:1396*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1396*FLEN/8, x4, x1, x2)

inst_699:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x33b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x06e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b3b; op2val:0x46e;
   valaddr_reg:x3; val_offset:1398*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1398*FLEN/8, x4, x1, x2)

inst_700:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x308 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x348e; op2val:0xb08;
   valaddr_reg:x3; val_offset:1400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1400*FLEN/8, x4, x1, x2)

inst_701:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x308 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x348e; op2val:0xb08;
   valaddr_reg:x3; val_offset:1402*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1402*FLEN/8, x4, x1, x2)

inst_702:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x308 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x348e; op2val:0xb08;
   valaddr_reg:x3; val_offset:1404*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1404*FLEN/8, x4, x1, x2)

inst_703:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x308 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x348e; op2val:0xb08;
   valaddr_reg:x3; val_offset:1406*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1406*FLEN/8, x4, x1, x2)

inst_704:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x08e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x308 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x348e; op2val:0xb08;
   valaddr_reg:x3; val_offset:1408*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1408*FLEN/8, x4, x1, x2)

inst_705:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eba; op2val:0x10c2;
   valaddr_reg:x3; val_offset:1410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1410*FLEN/8, x4, x1, x2)

inst_706:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eba; op2val:0x10c2;
   valaddr_reg:x3; val_offset:1412*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1412*FLEN/8, x4, x1, x2)

inst_707:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eba; op2val:0x10c2;
   valaddr_reg:x3; val_offset:1414*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1414*FLEN/8, x4, x1, x2)

inst_708:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eba; op2val:0x10c2;
   valaddr_reg:x3; val_offset:1416*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1416*FLEN/8, x4, x1, x2)

inst_709:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x0c2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eba; op2val:0x10c2;
   valaddr_reg:x3; val_offset:1418*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1418*FLEN/8, x4, x1, x2)

inst_710:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0bf and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2be and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34bf; op2val:0xabe;
   valaddr_reg:x3; val_offset:1420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1420*FLEN/8, x4, x1, x2)

inst_711:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0bf and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2be and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34bf; op2val:0xabe;
   valaddr_reg:x3; val_offset:1422*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1422*FLEN/8, x4, x1, x2)

inst_712:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0bf and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2be and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34bf; op2val:0xabe;
   valaddr_reg:x3; val_offset:1424*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1424*FLEN/8, x4, x1, x2)

inst_713:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0bf and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2be and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34bf; op2val:0xabe;
   valaddr_reg:x3; val_offset:1426*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1426*FLEN/8, x4, x1, x2)

inst_714:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0bf and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2be and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34bf; op2val:0xabe;
   valaddr_reg:x3; val_offset:1428*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1428*FLEN/8, x4, x1, x2)

inst_715:
// fs1 == 0 and fe1 == 0x07 and fm1 == 0x10b and fs2 == 0 and fe2 == 0x08 and fm2 == 0x259 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1d0b; op2val:0x2259;
   valaddr_reg:x3; val_offset:1430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1430*FLEN/8, x4, x1, x2)

inst_716:
// fs1 == 0 and fe1 == 0x07 and fm1 == 0x10b and fs2 == 0 and fe2 == 0x08 and fm2 == 0x259 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1d0b; op2val:0x2259;
   valaddr_reg:x3; val_offset:1432*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1432*FLEN/8, x4, x1, x2)

inst_717:
// fs1 == 0 and fe1 == 0x07 and fm1 == 0x10b and fs2 == 0 and fe2 == 0x08 and fm2 == 0x259 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1d0b; op2val:0x2259;
   valaddr_reg:x3; val_offset:1434*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1434*FLEN/8, x4, x1, x2)

inst_718:
// fs1 == 0 and fe1 == 0x07 and fm1 == 0x10b and fs2 == 0 and fe2 == 0x08 and fm2 == 0x259 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1d0b; op2val:0x2259;
   valaddr_reg:x3; val_offset:1436*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1436*FLEN/8, x4, x1, x2)

inst_719:
// fs1 == 0 and fe1 == 0x07 and fm1 == 0x10b and fs2 == 0 and fe2 == 0x08 and fm2 == 0x259 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1d0b; op2val:0x2259;
   valaddr_reg:x3; val_offset:1438*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1438*FLEN/8, x4, x1, x2)

inst_720:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36d3; op2val:0x8b1;
   valaddr_reg:x3; val_offset:1440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1440*FLEN/8, x4, x1, x2)

inst_721:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36d3; op2val:0x8b1;
   valaddr_reg:x3; val_offset:1442*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1442*FLEN/8, x4, x1, x2)

inst_722:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36d3; op2val:0x8b1;
   valaddr_reg:x3; val_offset:1444*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1444*FLEN/8, x4, x1, x2)

inst_723:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36d3; op2val:0x8b1;
   valaddr_reg:x3; val_offset:1446*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1446*FLEN/8, x4, x1, x2)

inst_724:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2d3 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36d3; op2val:0x8b1;
   valaddr_reg:x3; val_offset:1448*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1448*FLEN/8, x4, x1, x2)

inst_725:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x078 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3878; op2val:0x72a;
   valaddr_reg:x3; val_offset:1450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1450*FLEN/8, x4, x1, x2)

inst_726:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x078 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3878; op2val:0x72a;
   valaddr_reg:x3; val_offset:1452*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1452*FLEN/8, x4, x1, x2)

inst_727:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x078 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3878; op2val:0x72a;
   valaddr_reg:x3; val_offset:1454*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1454*FLEN/8, x4, x1, x2)

inst_728:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x078 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3878; op2val:0x72a;
   valaddr_reg:x3; val_offset:1456*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1456*FLEN/8, x4, x1, x2)

inst_729:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x078 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3878; op2val:0x72a;
   valaddr_reg:x3; val_offset:1458*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1458*FLEN/8, x4, x1, x2)

inst_730:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x27a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0f2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x367a; op2val:0x8f2;
   valaddr_reg:x3; val_offset:1460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1460*FLEN/8, x4, x1, x2)

inst_731:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x27a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0f2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x367a; op2val:0x8f2;
   valaddr_reg:x3; val_offset:1462*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1462*FLEN/8, x4, x1, x2)

inst_732:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x27a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0f2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x367a; op2val:0x8f2;
   valaddr_reg:x3; val_offset:1464*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1464*FLEN/8, x4, x1, x2)

inst_733:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x27a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0f2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x367a; op2val:0x8f2;
   valaddr_reg:x3; val_offset:1466*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1466*FLEN/8, x4, x1, x2)

inst_734:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x27a and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0f2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x367a; op2val:0x8f2;
   valaddr_reg:x3; val_offset:1468*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1468*FLEN/8, x4, x1, x2)

inst_735:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x4e2;
   valaddr_reg:x3; val_offset:1470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1470*FLEN/8, x4, x1, x2)

inst_736:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x4e2;
   valaddr_reg:x3; val_offset:1472*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1472*FLEN/8, x4, x1, x2)

inst_737:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x4e2;
   valaddr_reg:x3; val_offset:1474*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1474*FLEN/8, x4, x1, x2)

inst_738:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x4e2;
   valaddr_reg:x3; val_offset:1476*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1476*FLEN/8, x4, x1, x2)

inst_739:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x4e2;
   valaddr_reg:x3; val_offset:1478*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1478*FLEN/8, x4, x1, x2)

inst_740:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x023 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3bc and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3823; op2val:0x7bc;
   valaddr_reg:x3; val_offset:1480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1480*FLEN/8, x4, x1, x2)

inst_741:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x023 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3bc and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3823; op2val:0x7bc;
   valaddr_reg:x3; val_offset:1482*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1482*FLEN/8, x4, x1, x2)

inst_742:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x023 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3bc and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3823; op2val:0x7bc;
   valaddr_reg:x3; val_offset:1484*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1484*FLEN/8, x4, x1, x2)

inst_743:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x023 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3bc and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3823; op2val:0x7bc;
   valaddr_reg:x3; val_offset:1486*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1486*FLEN/8, x4, x1, x2)

inst_744:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x023 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3bc and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3823; op2val:0x7bc;
   valaddr_reg:x3; val_offset:1488*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1488*FLEN/8, x4, x1, x2)

inst_745:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2ea and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a2; op2val:0xaea;
   valaddr_reg:x3; val_offset:1490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1490*FLEN/8, x4, x1, x2)

inst_746:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2ea and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a2; op2val:0xaea;
   valaddr_reg:x3; val_offset:1492*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1492*FLEN/8, x4, x1, x2)

inst_747:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2ea and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a2; op2val:0xaea;
   valaddr_reg:x3; val_offset:1494*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1494*FLEN/8, x4, x1, x2)

inst_748:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2ea and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a2; op2val:0xaea;
   valaddr_reg:x3; val_offset:1496*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1496*FLEN/8, x4, x1, x2)

inst_749:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0a2 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2ea and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34a2; op2val:0xaea;
   valaddr_reg:x3; val_offset:1498*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1498*FLEN/8, x4, x1, x2)

inst_750:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2cb and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34b6; op2val:0xacb;
   valaddr_reg:x3; val_offset:1500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1500*FLEN/8, x4, x1, x2)

inst_751:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2cb and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34b6; op2val:0xacb;
   valaddr_reg:x3; val_offset:1502*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1502*FLEN/8, x4, x1, x2)

inst_752:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2cb and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34b6; op2val:0xacb;
   valaddr_reg:x3; val_offset:1504*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1504*FLEN/8, x4, x1, x2)

inst_753:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2cb and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34b6; op2val:0xacb;
   valaddr_reg:x3; val_offset:1506*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1506*FLEN/8, x4, x1, x2)

inst_754:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0b6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2cb and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34b6; op2val:0xacb;
   valaddr_reg:x3; val_offset:1508*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1508*FLEN/8, x4, x1, x2)

inst_755:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0df and fs2 == 0 and fe2 == 0x05 and fm2 == 0x292 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28df; op2val:0x1692;
   valaddr_reg:x3; val_offset:1510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1510*FLEN/8, x4, x1, x2)

inst_756:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0df and fs2 == 0 and fe2 == 0x05 and fm2 == 0x292 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28df; op2val:0x1692;
   valaddr_reg:x3; val_offset:1512*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1512*FLEN/8, x4, x1, x2)

inst_757:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0df and fs2 == 0 and fe2 == 0x05 and fm2 == 0x292 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28df; op2val:0x1692;
   valaddr_reg:x3; val_offset:1514*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1514*FLEN/8, x4, x1, x2)

inst_758:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0df and fs2 == 0 and fe2 == 0x05 and fm2 == 0x292 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28df; op2val:0x1692;
   valaddr_reg:x3; val_offset:1516*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1516*FLEN/8, x4, x1, x2)

inst_759:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x0df and fs2 == 0 and fe2 == 0x05 and fm2 == 0x292 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x28df; op2val:0x1692;
   valaddr_reg:x3; val_offset:1518*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1518*FLEN/8, x4, x1, x2)

inst_760:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x012 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3de and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3412; op2val:0xbde;
   valaddr_reg:x3; val_offset:1520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1520*FLEN/8, x4, x1, x2)

inst_761:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x012 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3de and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3412; op2val:0xbde;
   valaddr_reg:x3; val_offset:1522*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1522*FLEN/8, x4, x1, x2)

inst_762:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x012 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3de and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3412; op2val:0xbde;
   valaddr_reg:x3; val_offset:1524*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1524*FLEN/8, x4, x1, x2)

inst_763:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x012 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3de and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3412; op2val:0xbde;
   valaddr_reg:x3; val_offset:1526*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1526*FLEN/8, x4, x1, x2)

inst_764:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x012 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3de and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3412; op2val:0xbde;
   valaddr_reg:x3; val_offset:1528*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1528*FLEN/8, x4, x1, x2)

inst_765:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x032 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xc32;
   valaddr_reg:x3; val_offset:1530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1530*FLEN/8, x4, x1, x2)

inst_766:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x032 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xc32;
   valaddr_reg:x3; val_offset:1532*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1532*FLEN/8, x4, x1, x2)

inst_767:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x032 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xc32;
   valaddr_reg:x3; val_offset:1534*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1534*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_7)

inst_768:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x032 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xc32;
   valaddr_reg:x3; val_offset:1536*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1536*FLEN/8, x4, x1, x2)

inst_769:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x032 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xc32;
   valaddr_reg:x3; val_offset:1538*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1538*FLEN/8, x4, x1, x2)

inst_770:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a33; op2val:0x52a;
   valaddr_reg:x3; val_offset:1540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1540*FLEN/8, x4, x1, x2)

inst_771:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a33; op2val:0x52a;
   valaddr_reg:x3; val_offset:1542*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1542*FLEN/8, x4, x1, x2)

inst_772:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a33; op2val:0x52a;
   valaddr_reg:x3; val_offset:1544*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1544*FLEN/8, x4, x1, x2)

inst_773:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a33; op2val:0x52a;
   valaddr_reg:x3; val_offset:1546*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1546*FLEN/8, x4, x1, x2)

inst_774:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x233 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a33; op2val:0x52a;
   valaddr_reg:x3; val_offset:1548*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1548*FLEN/8, x4, x1, x2)

inst_775:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38c7; op2val:0x6b4;
   valaddr_reg:x3; val_offset:1550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1550*FLEN/8, x4, x1, x2)

inst_776:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38c7; op2val:0x6b4;
   valaddr_reg:x3; val_offset:1552*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1552*FLEN/8, x4, x1, x2)

inst_777:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38c7; op2val:0x6b4;
   valaddr_reg:x3; val_offset:1554*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1554*FLEN/8, x4, x1, x2)

inst_778:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38c7; op2val:0x6b4;
   valaddr_reg:x3; val_offset:1556*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1556*FLEN/8, x4, x1, x2)

inst_779:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2b4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38c7; op2val:0x6b4;
   valaddr_reg:x3; val_offset:1558*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1558*FLEN/8, x4, x1, x2)

inst_780:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x1d7 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x17b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x25d7; op2val:0x197b;
   valaddr_reg:x3; val_offset:1560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1560*FLEN/8, x4, x1, x2)

inst_781:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x1d7 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x17b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x25d7; op2val:0x197b;
   valaddr_reg:x3; val_offset:1562*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1562*FLEN/8, x4, x1, x2)

inst_782:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x1d7 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x17b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x25d7; op2val:0x197b;
   valaddr_reg:x3; val_offset:1564*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1564*FLEN/8, x4, x1, x2)

inst_783:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x1d7 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x17b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x25d7; op2val:0x197b;
   valaddr_reg:x3; val_offset:1566*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1566*FLEN/8, x4, x1, x2)

inst_784:
// fs1 == 0 and fe1 == 0x09 and fm1 == 0x1d7 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x17b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x25d7; op2val:0x197b;
   valaddr_reg:x3; val_offset:1568*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1568*FLEN/8, x4, x1, x2)

inst_785:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00d and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be8; op2val:0x40d;
   valaddr_reg:x3; val_offset:1570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1570*FLEN/8, x4, x1, x2)

inst_786:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00d and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be8; op2val:0x40d;
   valaddr_reg:x3; val_offset:1572*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1572*FLEN/8, x4, x1, x2)

inst_787:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00d and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be8; op2val:0x40d;
   valaddr_reg:x3; val_offset:1574*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1574*FLEN/8, x4, x1, x2)

inst_788:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00d and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be8; op2val:0x40d;
   valaddr_reg:x3; val_offset:1576*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1576*FLEN/8, x4, x1, x2)

inst_789:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e8 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x00d and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be8; op2val:0x40d;
   valaddr_reg:x3; val_offset:1578*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1578*FLEN/8, x4, x1, x2)

inst_790:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x09d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2f0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x349d; op2val:0xaf0;
   valaddr_reg:x3; val_offset:1580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1580*FLEN/8, x4, x1, x2)

inst_791:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x09d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2f0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x349d; op2val:0xaf0;
   valaddr_reg:x3; val_offset:1582*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1582*FLEN/8, x4, x1, x2)

inst_792:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x09d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2f0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x349d; op2val:0xaf0;
   valaddr_reg:x3; val_offset:1584*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1584*FLEN/8, x4, x1, x2)

inst_793:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x09d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2f0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x349d; op2val:0xaf0;
   valaddr_reg:x3; val_offset:1586*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1586*FLEN/8, x4, x1, x2)

inst_794:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x09d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2f0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x349d; op2val:0xaf0;
   valaddr_reg:x3; val_offset:1588*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1588*FLEN/8, x4, x1, x2)

inst_795:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x199 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b8 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3599; op2val:0x9b8;
   valaddr_reg:x3; val_offset:1590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1590*FLEN/8, x4, x1, x2)

inst_796:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x199 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b8 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3599; op2val:0x9b8;
   valaddr_reg:x3; val_offset:1592*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1592*FLEN/8, x4, x1, x2)

inst_797:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x199 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b8 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3599; op2val:0x9b8;
   valaddr_reg:x3; val_offset:1594*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1594*FLEN/8, x4, x1, x2)

inst_798:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x199 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b8 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3599; op2val:0x9b8;
   valaddr_reg:x3; val_offset:1596*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1596*FLEN/8, x4, x1, x2)

inst_799:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x199 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1b8 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3599; op2val:0x9b8;
   valaddr_reg:x3; val_offset:1598*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1598*FLEN/8, x4, x1, x2)

inst_800:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x013 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdc; op2val:0x413;
   valaddr_reg:x3; val_offset:1600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1600*FLEN/8, x4, x1, x2)

inst_801:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x013 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdc; op2val:0x413;
   valaddr_reg:x3; val_offset:1602*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1602*FLEN/8, x4, x1, x2)

inst_802:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x013 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdc; op2val:0x413;
   valaddr_reg:x3; val_offset:1604*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1604*FLEN/8, x4, x1, x2)

inst_803:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x013 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdc; op2val:0x413;
   valaddr_reg:x3; val_offset:1606*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1606*FLEN/8, x4, x1, x2)

inst_804:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x013 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bdc; op2val:0x413;
   valaddr_reg:x3; val_offset:1608*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1608*FLEN/8, x4, x1, x2)

inst_805:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x054 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x366 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3454; op2val:0xb66;
   valaddr_reg:x3; val_offset:1610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1610*FLEN/8, x4, x1, x2)

inst_806:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x054 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x366 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3454; op2val:0xb66;
   valaddr_reg:x3; val_offset:1612*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1612*FLEN/8, x4, x1, x2)

inst_807:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x054 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x366 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3454; op2val:0xb66;
   valaddr_reg:x3; val_offset:1614*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1614*FLEN/8, x4, x1, x2)

inst_808:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x054 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x366 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3454; op2val:0xb66;
   valaddr_reg:x3; val_offset:1616*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1616*FLEN/8, x4, x1, x2)

inst_809:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x054 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x366 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3454; op2val:0xb66;
   valaddr_reg:x3; val_offset:1618*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1618*FLEN/8, x4, x1, x2)

inst_810:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x210 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x148 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e10; op2val:0x1148;
   valaddr_reg:x3; val_offset:1620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1620*FLEN/8, x4, x1, x2)

inst_811:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x210 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x148 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e10; op2val:0x1148;
   valaddr_reg:x3; val_offset:1622*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1622*FLEN/8, x4, x1, x2)

inst_812:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x210 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x148 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e10; op2val:0x1148;
   valaddr_reg:x3; val_offset:1624*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1624*FLEN/8, x4, x1, x2)

inst_813:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x210 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x148 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e10; op2val:0x1148;
   valaddr_reg:x3; val_offset:1626*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1626*FLEN/8, x4, x1, x2)

inst_814:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x210 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x148 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2e10; op2val:0x1148;
   valaddr_reg:x3; val_offset:1628*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1628*FLEN/8, x4, x1, x2)

inst_815:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x073 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b32; op2val:0x473;
   valaddr_reg:x3; val_offset:1630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1630*FLEN/8, x4, x1, x2)

inst_816:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x073 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b32; op2val:0x473;
   valaddr_reg:x3; val_offset:1632*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1632*FLEN/8, x4, x1, x2)

inst_817:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x073 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b32; op2val:0x473;
   valaddr_reg:x3; val_offset:1634*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1634*FLEN/8, x4, x1, x2)

inst_818:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x073 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b32; op2val:0x473;
   valaddr_reg:x3; val_offset:1636*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1636*FLEN/8, x4, x1, x2)

inst_819:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x332 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x073 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b32; op2val:0x473;
   valaddr_reg:x3; val_offset:1638*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1638*FLEN/8, x4, x1, x2)

inst_820:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x375 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x04b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3375; op2val:0xc4b;
   valaddr_reg:x3; val_offset:1640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1640*FLEN/8, x4, x1, x2)

inst_821:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x375 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x04b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3375; op2val:0xc4b;
   valaddr_reg:x3; val_offset:1642*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1642*FLEN/8, x4, x1, x2)

inst_822:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x375 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x04b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3375; op2val:0xc4b;
   valaddr_reg:x3; val_offset:1644*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1644*FLEN/8, x4, x1, x2)

inst_823:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x375 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x04b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3375; op2val:0xc4b;
   valaddr_reg:x3; val_offset:1646*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1646*FLEN/8, x4, x1, x2)

inst_824:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x375 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x04b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3375; op2val:0xc4b;
   valaddr_reg:x3; val_offset:1648*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1648*FLEN/8, x4, x1, x2)

inst_825:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x017 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d3 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3417; op2val:0xbd3;
   valaddr_reg:x3; val_offset:1650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1650*FLEN/8, x4, x1, x2)

inst_826:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x017 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d3 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3417; op2val:0xbd3;
   valaddr_reg:x3; val_offset:1652*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1652*FLEN/8, x4, x1, x2)

inst_827:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x017 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d3 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3417; op2val:0xbd3;
   valaddr_reg:x3; val_offset:1654*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1654*FLEN/8, x4, x1, x2)

inst_828:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x017 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d3 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3417; op2val:0xbd3;
   valaddr_reg:x3; val_offset:1656*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1656*FLEN/8, x4, x1, x2)

inst_829:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x017 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x3d3 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3417; op2val:0xbd3;
   valaddr_reg:x3; val_offset:1658*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1658*FLEN/8, x4, x1, x2)

inst_830:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x4f4;
   valaddr_reg:x3; val_offset:1660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1660*FLEN/8, x4, x1, x2)

inst_831:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x4f4;
   valaddr_reg:x3; val_offset:1662*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1662*FLEN/8, x4, x1, x2)

inst_832:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x4f4;
   valaddr_reg:x3; val_offset:1664*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1664*FLEN/8, x4, x1, x2)

inst_833:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x4f4;
   valaddr_reg:x3; val_offset:1666*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1666*FLEN/8, x4, x1, x2)

inst_834:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x4f4;
   valaddr_reg:x3; val_offset:1668*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1668*FLEN/8, x4, x1, x2)

inst_835:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x106 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae5; op2val:0x506;
   valaddr_reg:x3; val_offset:1670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1670*FLEN/8, x4, x1, x2)

inst_836:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x106 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae5; op2val:0x506;
   valaddr_reg:x3; val_offset:1672*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1672*FLEN/8, x4, x1, x2)

inst_837:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x106 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae5; op2val:0x506;
   valaddr_reg:x3; val_offset:1674*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1674*FLEN/8, x4, x1, x2)

inst_838:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x106 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae5; op2val:0x506;
   valaddr_reg:x3; val_offset:1676*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1676*FLEN/8, x4, x1, x2)

inst_839:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2e5 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x106 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ae5; op2val:0x506;
   valaddr_reg:x3; val_offset:1678*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1678*FLEN/8, x4, x1, x2)

inst_840:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3a8 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3886; op2val:0x7a8;
   valaddr_reg:x3; val_offset:1680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1680*FLEN/8, x4, x1, x2)

inst_841:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3a8 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3886; op2val:0x7a8;
   valaddr_reg:x3; val_offset:1682*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1682*FLEN/8, x4, x1, x2)

inst_842:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3a8 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3886; op2val:0x7a8;
   valaddr_reg:x3; val_offset:1684*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1684*FLEN/8, x4, x1, x2)

inst_843:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3a8 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3886; op2val:0x7a8;
   valaddr_reg:x3; val_offset:1686*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1686*FLEN/8, x4, x1, x2)

inst_844:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x086 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3a8 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3886; op2val:0x7a8;
   valaddr_reg:x3; val_offset:1688*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1688*FLEN/8, x4, x1, x2)

inst_845:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0fd and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36f1; op2val:0x8fd;
   valaddr_reg:x3; val_offset:1690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1690*FLEN/8, x4, x1, x2)

inst_846:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0fd and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36f1; op2val:0x8fd;
   valaddr_reg:x3; val_offset:1692*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1692*FLEN/8, x4, x1, x2)

inst_847:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0fd and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36f1; op2val:0x8fd;
   valaddr_reg:x3; val_offset:1694*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1694*FLEN/8, x4, x1, x2)

inst_848:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0fd and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36f1; op2val:0x8fd;
   valaddr_reg:x3; val_offset:1696*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1696*FLEN/8, x4, x1, x2)

inst_849:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2f1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0fd and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36f1; op2val:0x8fd;
   valaddr_reg:x3; val_offset:1698*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1698*FLEN/8, x4, x1, x2)

inst_850:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x25c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x173 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a5c; op2val:0x573;
   valaddr_reg:x3; val_offset:1700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1700*FLEN/8, x4, x1, x2)

inst_851:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x25c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x173 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a5c; op2val:0x573;
   valaddr_reg:x3; val_offset:1702*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1702*FLEN/8, x4, x1, x2)

inst_852:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x25c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x173 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a5c; op2val:0x573;
   valaddr_reg:x3; val_offset:1704*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1704*FLEN/8, x4, x1, x2)

inst_853:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x25c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x173 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a5c; op2val:0x573;
   valaddr_reg:x3; val_offset:1706*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1706*FLEN/8, x4, x1, x2)

inst_854:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x25c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x173 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a5c; op2val:0x573;
   valaddr_reg:x3; val_offset:1708*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1708*FLEN/8, x4, x1, x2)

inst_855:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0ac and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b6a; op2val:0x4ac;
   valaddr_reg:x3; val_offset:1710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1710*FLEN/8, x4, x1, x2)

inst_856:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0ac and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b6a; op2val:0x4ac;
   valaddr_reg:x3; val_offset:1712*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1712*FLEN/8, x4, x1, x2)

inst_857:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0ac and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b6a; op2val:0x4ac;
   valaddr_reg:x3; val_offset:1714*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1714*FLEN/8, x4, x1, x2)

inst_858:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0ac and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b6a; op2val:0x4ac;
   valaddr_reg:x3; val_offset:1716*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1716*FLEN/8, x4, x1, x2)

inst_859:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x36a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0ac and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b6a; op2val:0x4ac;
   valaddr_reg:x3; val_offset:1718*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1718*FLEN/8, x4, x1, x2)

inst_860:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x035 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381d; op2val:0x835;
   valaddr_reg:x3; val_offset:1720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1720*FLEN/8, x4, x1, x2)

inst_861:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x035 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381d; op2val:0x835;
   valaddr_reg:x3; val_offset:1722*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1722*FLEN/8, x4, x1, x2)

inst_862:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x035 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381d; op2val:0x835;
   valaddr_reg:x3; val_offset:1724*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1724*FLEN/8, x4, x1, x2)

inst_863:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x035 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381d; op2val:0x835;
   valaddr_reg:x3; val_offset:1726*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1726*FLEN/8, x4, x1, x2)

inst_864:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01d and fs2 == 0 and fe2 == 0x02 and fm2 == 0x035 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381d; op2val:0x835;
   valaddr_reg:x3; val_offset:1728*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1728*FLEN/8, x4, x1, x2)

inst_865:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x177 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x257 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3577; op2val:0xa57;
   valaddr_reg:x3; val_offset:1730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1730*FLEN/8, x4, x1, x2)

inst_866:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x177 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x257 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3577; op2val:0xa57;
   valaddr_reg:x3; val_offset:1732*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1732*FLEN/8, x4, x1, x2)

inst_867:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x177 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x257 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3577; op2val:0xa57;
   valaddr_reg:x3; val_offset:1734*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1734*FLEN/8, x4, x1, x2)

inst_868:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x177 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x257 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3577; op2val:0xa57;
   valaddr_reg:x3; val_offset:1736*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1736*FLEN/8, x4, x1, x2)

inst_869:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x177 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x257 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3577; op2val:0xa57;
   valaddr_reg:x3; val_offset:1738*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1738*FLEN/8, x4, x1, x2)

inst_870:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x034 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381e; op2val:0x834;
   valaddr_reg:x3; val_offset:1740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1740*FLEN/8, x4, x1, x2)

inst_871:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x034 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381e; op2val:0x834;
   valaddr_reg:x3; val_offset:1742*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1742*FLEN/8, x4, x1, x2)

inst_872:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x034 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381e; op2val:0x834;
   valaddr_reg:x3; val_offset:1744*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1744*FLEN/8, x4, x1, x2)

inst_873:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x034 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381e; op2val:0x834;
   valaddr_reg:x3; val_offset:1746*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1746*FLEN/8, x4, x1, x2)

inst_874:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x01e and fs2 == 0 and fe2 == 0x02 and fm2 == 0x034 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x381e; op2val:0x834;
   valaddr_reg:x3; val_offset:1748*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1748*FLEN/8, x4, x1, x2)

inst_875:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x152 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x283 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3952; op2val:0x683;
   valaddr_reg:x3; val_offset:1750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1750*FLEN/8, x4, x1, x2)

inst_876:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x152 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x283 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3952; op2val:0x683;
   valaddr_reg:x3; val_offset:1752*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1752*FLEN/8, x4, x1, x2)

inst_877:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x152 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x283 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3952; op2val:0x683;
   valaddr_reg:x3; val_offset:1754*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1754*FLEN/8, x4, x1, x2)

inst_878:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x152 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x283 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3952; op2val:0x683;
   valaddr_reg:x3; val_offset:1756*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1756*FLEN/8, x4, x1, x2)

inst_879:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x152 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x283 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3952; op2val:0x683;
   valaddr_reg:x3; val_offset:1758*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1758*FLEN/8, x4, x1, x2)

inst_880:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x05b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37f4; op2val:0x85b;
   valaddr_reg:x3; val_offset:1760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1760*FLEN/8, x4, x1, x2)

inst_881:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x05b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37f4; op2val:0x85b;
   valaddr_reg:x3; val_offset:1762*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1762*FLEN/8, x4, x1, x2)

inst_882:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x05b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37f4; op2val:0x85b;
   valaddr_reg:x3; val_offset:1764*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1764*FLEN/8, x4, x1, x2)

inst_883:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x05b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37f4; op2val:0x85b;
   valaddr_reg:x3; val_offset:1766*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1766*FLEN/8, x4, x1, x2)

inst_884:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3f4 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x05b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37f4; op2val:0x85b;
   valaddr_reg:x3; val_offset:1768*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1768*FLEN/8, x4, x1, x2)

inst_885:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b5 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5c; op2val:0x4b5;
   valaddr_reg:x3; val_offset:1770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1770*FLEN/8, x4, x1, x2)

inst_886:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b5 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5c; op2val:0x4b5;
   valaddr_reg:x3; val_offset:1772*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1772*FLEN/8, x4, x1, x2)

inst_887:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b5 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5c; op2val:0x4b5;
   valaddr_reg:x3; val_offset:1774*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1774*FLEN/8, x4, x1, x2)

inst_888:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b5 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5c; op2val:0x4b5;
   valaddr_reg:x3; val_offset:1776*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1776*FLEN/8, x4, x1, x2)

inst_889:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x35c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0b5 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b5c; op2val:0x4b5;
   valaddr_reg:x3; val_offset:1778*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1778*FLEN/8, x4, x1, x2)

inst_890:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x29c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a9c; op2val:0x53e;
   valaddr_reg:x3; val_offset:1780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1780*FLEN/8, x4, x1, x2)

inst_891:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x29c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a9c; op2val:0x53e;
   valaddr_reg:x3; val_offset:1782*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1782*FLEN/8, x4, x1, x2)

inst_892:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x29c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a9c; op2val:0x53e;
   valaddr_reg:x3; val_offset:1784*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1784*FLEN/8, x4, x1, x2)

inst_893:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x29c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a9c; op2val:0x53e;
   valaddr_reg:x3; val_offset:1786*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1786*FLEN/8, x4, x1, x2)

inst_894:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x29c and fs2 == 0 and fe2 == 0x01 and fm2 == 0x13e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a9c; op2val:0x53e;
   valaddr_reg:x3; val_offset:1788*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1788*FLEN/8, x4, x1, x2)

inst_895:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2e6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x105 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x32e6; op2val:0xd05;
   valaddr_reg:x3; val_offset:1790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1790*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_8)

inst_896:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2e6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x105 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x32e6; op2val:0xd05;
   valaddr_reg:x3; val_offset:1792*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1792*FLEN/8, x4, x1, x2)

inst_897:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2e6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x105 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x32e6; op2val:0xd05;
   valaddr_reg:x3; val_offset:1794*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1794*FLEN/8, x4, x1, x2)

inst_898:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2e6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x105 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x32e6; op2val:0xd05;
   valaddr_reg:x3; val_offset:1796*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1796*FLEN/8, x4, x1, x2)

inst_899:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x2e6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x105 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x32e6; op2val:0xd05;
   valaddr_reg:x3; val_offset:1798*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1798*FLEN/8, x4, x1, x2)

inst_900:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x133 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2aa and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3533; op2val:0xaaa;
   valaddr_reg:x3; val_offset:1800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1800*FLEN/8, x4, x1, x2)

inst_901:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x133 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2aa and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3533; op2val:0xaaa;
   valaddr_reg:x3; val_offset:1802*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1802*FLEN/8, x4, x1, x2)

inst_902:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x133 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2aa and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3533; op2val:0xaaa;
   valaddr_reg:x3; val_offset:1804*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1804*FLEN/8, x4, x1, x2)

inst_903:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x133 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2aa and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3533; op2val:0xaaa;
   valaddr_reg:x3; val_offset:1806*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1806*FLEN/8, x4, x1, x2)

inst_904:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x133 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x2aa and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3533; op2val:0xaaa;
   valaddr_reg:x3; val_offset:1808*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1808*FLEN/8, x4, x1, x2)

inst_905:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x05a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f6 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x305a; op2val:0xff6;
   valaddr_reg:x3; val_offset:1810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1810*FLEN/8, x4, x1, x2)

inst_906:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x05a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f6 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x305a; op2val:0xff6;
   valaddr_reg:x3; val_offset:1812*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1812*FLEN/8, x4, x1, x2)

inst_907:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x05a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f6 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x305a; op2val:0xff6;
   valaddr_reg:x3; val_offset:1814*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1814*FLEN/8, x4, x1, x2)

inst_908:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x05a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f6 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x305a; op2val:0xff6;
   valaddr_reg:x3; val_offset:1816*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1816*FLEN/8, x4, x1, x2)

inst_909:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x05a and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3f6 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x305a; op2val:0xff6;
   valaddr_reg:x3; val_offset:1818*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1818*FLEN/8, x4, x1, x2)

inst_910:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12c and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ab3; op2val:0x52c;
   valaddr_reg:x3; val_offset:1820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1820*FLEN/8, x4, x1, x2)

inst_911:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12c and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ab3; op2val:0x52c;
   valaddr_reg:x3; val_offset:1822*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1822*FLEN/8, x4, x1, x2)

inst_912:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12c and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ab3; op2val:0x52c;
   valaddr_reg:x3; val_offset:1824*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1824*FLEN/8, x4, x1, x2)

inst_913:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12c and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ab3; op2val:0x52c;
   valaddr_reg:x3; val_offset:1826*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1826*FLEN/8, x4, x1, x2)

inst_914:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2b3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12c and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ab3; op2val:0x52c;
   valaddr_reg:x3; val_offset:1828*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1828*FLEN/8, x4, x1, x2)

inst_915:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x048 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3848; op2val:0x80b;
   valaddr_reg:x3; val_offset:1830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1830*FLEN/8, x4, x1, x2)

inst_916:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x048 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3848; op2val:0x80b;
   valaddr_reg:x3; val_offset:1832*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1832*FLEN/8, x4, x1, x2)

inst_917:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x048 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3848; op2val:0x80b;
   valaddr_reg:x3; val_offset:1834*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1834*FLEN/8, x4, x1, x2)

inst_918:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x048 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3848; op2val:0x80b;
   valaddr_reg:x3; val_offset:1836*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1836*FLEN/8, x4, x1, x2)

inst_919:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x048 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x00b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3848; op2val:0x80b;
   valaddr_reg:x3; val_offset:1838*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1838*FLEN/8, x4, x1, x2)

inst_920:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x060 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bea; op2val:0x460;
   valaddr_reg:x3; val_offset:1840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1840*FLEN/8, x4, x1, x2)

inst_921:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x060 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bea; op2val:0x460;
   valaddr_reg:x3; val_offset:1842*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1842*FLEN/8, x4, x1, x2)

inst_922:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x060 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bea; op2val:0x460;
   valaddr_reg:x3; val_offset:1844*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1844*FLEN/8, x4, x1, x2)

inst_923:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x060 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bea; op2val:0x460;
   valaddr_reg:x3; val_offset:1846*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1846*FLEN/8, x4, x1, x2)

inst_924:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3ea and fs2 == 0 and fe2 == 0x01 and fm2 == 0x060 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3bea; op2val:0x460;
   valaddr_reg:x3; val_offset:1848*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1848*FLEN/8, x4, x1, x2)

inst_925:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x03e and fs2 == 0 and fe2 == 0x06 and fm2 == 0x015 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x283e; op2val:0x1815;
   valaddr_reg:x3; val_offset:1850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1850*FLEN/8, x4, x1, x2)

inst_926:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x03e and fs2 == 0 and fe2 == 0x06 and fm2 == 0x015 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x283e; op2val:0x1815;
   valaddr_reg:x3; val_offset:1852*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1852*FLEN/8, x4, x1, x2)

inst_927:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x03e and fs2 == 0 and fe2 == 0x06 and fm2 == 0x015 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x283e; op2val:0x1815;
   valaddr_reg:x3; val_offset:1854*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1854*FLEN/8, x4, x1, x2)

inst_928:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x03e and fs2 == 0 and fe2 == 0x06 and fm2 == 0x015 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x283e; op2val:0x1815;
   valaddr_reg:x3; val_offset:1856*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1856*FLEN/8, x4, x1, x2)

inst_929:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x03e and fs2 == 0 and fe2 == 0x06 and fm2 == 0x015 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x283e; op2val:0x1815;
   valaddr_reg:x3; val_offset:1858*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1858*FLEN/8, x4, x1, x2)

inst_930:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x364 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3764; op2val:0x8b0;
   valaddr_reg:x3; val_offset:1860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1860*FLEN/8, x4, x1, x2)

inst_931:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x364 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3764; op2val:0x8b0;
   valaddr_reg:x3; val_offset:1862*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1862*FLEN/8, x4, x1, x2)

inst_932:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x364 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3764; op2val:0x8b0;
   valaddr_reg:x3; val_offset:1864*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1864*FLEN/8, x4, x1, x2)

inst_933:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x364 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3764; op2val:0x8b0;
   valaddr_reg:x3; val_offset:1866*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1866*FLEN/8, x4, x1, x2)

inst_934:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x364 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0b0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3764; op2val:0x8b0;
   valaddr_reg:x3; val_offset:1868*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1868*FLEN/8, x4, x1, x2)

inst_935:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x075 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3875; op2val:0x7c6;
   valaddr_reg:x3; val_offset:1870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1870*FLEN/8, x4, x1, x2)

inst_936:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x075 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3875; op2val:0x7c6;
   valaddr_reg:x3; val_offset:1872*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1872*FLEN/8, x4, x1, x2)

inst_937:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x075 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3875; op2val:0x7c6;
   valaddr_reg:x3; val_offset:1874*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1874*FLEN/8, x4, x1, x2)

inst_938:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x075 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3875; op2val:0x7c6;
   valaddr_reg:x3; val_offset:1876*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1876*FLEN/8, x4, x1, x2)

inst_939:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x075 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3875; op2val:0x7c6;
   valaddr_reg:x3; val_offset:1878*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1878*FLEN/8, x4, x1, x2)

inst_940:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x243 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3988; op2val:0x643;
   valaddr_reg:x3; val_offset:1880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1880*FLEN/8, x4, x1, x2)

inst_941:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x243 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3988; op2val:0x643;
   valaddr_reg:x3; val_offset:1882*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1882*FLEN/8, x4, x1, x2)

inst_942:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x243 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3988; op2val:0x643;
   valaddr_reg:x3; val_offset:1884*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1884*FLEN/8, x4, x1, x2)

inst_943:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x243 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3988; op2val:0x643;
   valaddr_reg:x3; val_offset:1886*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1886*FLEN/8, x4, x1, x2)

inst_944:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x188 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x243 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3988; op2val:0x643;
   valaddr_reg:x3; val_offset:1888*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1888*FLEN/8, x4, x1, x2)

inst_945:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x021 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x032 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3821; op2val:0x832;
   valaddr_reg:x3; val_offset:1890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1890*FLEN/8, x4, x1, x2)

inst_946:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x021 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x032 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3821; op2val:0x832;
   valaddr_reg:x3; val_offset:1892*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1892*FLEN/8, x4, x1, x2)

inst_947:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x021 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x032 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3821; op2val:0x832;
   valaddr_reg:x3; val_offset:1894*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1894*FLEN/8, x4, x1, x2)

inst_948:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x021 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x032 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3821; op2val:0x832;
   valaddr_reg:x3; val_offset:1896*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1896*FLEN/8, x4, x1, x2)

inst_949:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x021 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x032 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3821; op2val:0x832;
   valaddr_reg:x3; val_offset:1898*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1898*FLEN/8, x4, x1, x2)

inst_950:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x176 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x258 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d76; op2val:0x1258;
   valaddr_reg:x3; val_offset:1900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1900*FLEN/8, x4, x1, x2)

inst_951:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x176 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x258 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d76; op2val:0x1258;
   valaddr_reg:x3; val_offset:1902*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1902*FLEN/8, x4, x1, x2)

inst_952:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x176 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x258 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d76; op2val:0x1258;
   valaddr_reg:x3; val_offset:1904*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1904*FLEN/8, x4, x1, x2)

inst_953:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x176 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x258 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d76; op2val:0x1258;
   valaddr_reg:x3; val_offset:1906*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1906*FLEN/8, x4, x1, x2)

inst_954:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x176 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x258 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d76; op2val:0x1258;
   valaddr_reg:x3; val_offset:1908*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1908*FLEN/8, x4, x1, x2)

inst_955:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x22a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x319f; op2val:0xe2a;
   valaddr_reg:x3; val_offset:1910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1910*FLEN/8, x4, x1, x2)

inst_956:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x22a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x319f; op2val:0xe2a;
   valaddr_reg:x3; val_offset:1912*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1912*FLEN/8, x4, x1, x2)

inst_957:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x22a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x319f; op2val:0xe2a;
   valaddr_reg:x3; val_offset:1914*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1914*FLEN/8, x4, x1, x2)

inst_958:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x22a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x319f; op2val:0xe2a;
   valaddr_reg:x3; val_offset:1916*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1916*FLEN/8, x4, x1, x2)

inst_959:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x19f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x22a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x319f; op2val:0xe2a;
   valaddr_reg:x3; val_offset:1918*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1918*FLEN/8, x4, x1, x2)

inst_960:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a8; op2val:0xa1f;
   valaddr_reg:x3; val_offset:1920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1920*FLEN/8, x4, x1, x2)

inst_961:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a8; op2val:0xa1f;
   valaddr_reg:x3; val_offset:1922*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1922*FLEN/8, x4, x1, x2)

inst_962:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a8; op2val:0xa1f;
   valaddr_reg:x3; val_offset:1924*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1924*FLEN/8, x4, x1, x2)

inst_963:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a8; op2val:0xa1f;
   valaddr_reg:x3; val_offset:1926*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1926*FLEN/8, x4, x1, x2)

inst_964:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1a8 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x21f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35a8; op2val:0xa1f;
   valaddr_reg:x3; val_offset:1928*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1928*FLEN/8, x4, x1, x2)

inst_965:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358b; op2val:0xa3f;
   valaddr_reg:x3; val_offset:1930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1930*FLEN/8, x4, x1, x2)

inst_966:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358b; op2val:0xa3f;
   valaddr_reg:x3; val_offset:1932*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1932*FLEN/8, x4, x1, x2)

inst_967:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358b; op2val:0xa3f;
   valaddr_reg:x3; val_offset:1934*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1934*FLEN/8, x4, x1, x2)

inst_968:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358b; op2val:0xa3f;
   valaddr_reg:x3; val_offset:1936*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1936*FLEN/8, x4, x1, x2)

inst_969:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x18b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x23f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x358b; op2val:0xa3f;
   valaddr_reg:x3; val_offset:1938*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1938*FLEN/8, x4, x1, x2)

inst_970:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2cc and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xecc;
   valaddr_reg:x3; val_offset:1940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1940*FLEN/8, x4, x1, x2)

inst_971:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2cc and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xecc;
   valaddr_reg:x3; val_offset:1942*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1942*FLEN/8, x4, x1, x2)

inst_972:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2cc and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xecc;
   valaddr_reg:x3; val_offset:1944*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1944*FLEN/8, x4, x1, x2)

inst_973:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2cc and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xecc;
   valaddr_reg:x3; val_offset:1946*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1946*FLEN/8, x4, x1, x2)

inst_974:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x119 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2cc and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3119; op2val:0xecc;
   valaddr_reg:x3; val_offset:1948*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1948*FLEN/8, x4, x1, x2)

inst_975:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e8 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35de; op2val:0x9e8;
   valaddr_reg:x3; val_offset:1950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1950*FLEN/8, x4, x1, x2)

inst_976:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e8 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35de; op2val:0x9e8;
   valaddr_reg:x3; val_offset:1952*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1952*FLEN/8, x4, x1, x2)

inst_977:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e8 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35de; op2val:0x9e8;
   valaddr_reg:x3; val_offset:1954*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1954*FLEN/8, x4, x1, x2)

inst_978:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e8 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35de; op2val:0x9e8;
   valaddr_reg:x3; val_offset:1956*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1956*FLEN/8, x4, x1, x2)

inst_979:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1de and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1e8 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35de; op2val:0x9e8;
   valaddr_reg:x3; val_offset:1958*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1958*FLEN/8, x4, x1, x2)

inst_980:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x383 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x09c and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3783; op2val:0x89c;
   valaddr_reg:x3; val_offset:1960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1960*FLEN/8, x4, x1, x2)

inst_981:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x383 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x09c and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3783; op2val:0x89c;
   valaddr_reg:x3; val_offset:1962*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1962*FLEN/8, x4, x1, x2)

inst_982:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x383 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x09c and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3783; op2val:0x89c;
   valaddr_reg:x3; val_offset:1964*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1964*FLEN/8, x4, x1, x2)

inst_983:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x383 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x09c and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3783; op2val:0x89c;
   valaddr_reg:x3; val_offset:1966*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1966*FLEN/8, x4, x1, x2)

inst_984:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x383 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x09c and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3783; op2val:0x89c;
   valaddr_reg:x3; val_offset:1968*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1968*FLEN/8, x4, x1, x2)

inst_985:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x278 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x15b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3278; op2val:0xd5b;
   valaddr_reg:x3; val_offset:1970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1970*FLEN/8, x4, x1, x2)

inst_986:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x278 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x15b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3278; op2val:0xd5b;
   valaddr_reg:x3; val_offset:1972*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1972*FLEN/8, x4, x1, x2)

inst_987:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x278 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x15b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3278; op2val:0xd5b;
   valaddr_reg:x3; val_offset:1974*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1974*FLEN/8, x4, x1, x2)

inst_988:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x278 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x15b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3278; op2val:0xd5b;
   valaddr_reg:x3; val_offset:1976*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1976*FLEN/8, x4, x1, x2)

inst_989:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x278 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x15b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3278; op2val:0xd5b;
   valaddr_reg:x3; val_offset:1978*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1978*FLEN/8, x4, x1, x2)

inst_990:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x242 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3989; op2val:0x642;
   valaddr_reg:x3; val_offset:1980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1980*FLEN/8, x4, x1, x2)

inst_991:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x242 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3989; op2val:0x642;
   valaddr_reg:x3; val_offset:1982*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1982*FLEN/8, x4, x1, x2)

inst_992:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x242 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3989; op2val:0x642;
   valaddr_reg:x3; val_offset:1984*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1984*FLEN/8, x4, x1, x2)

inst_993:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x242 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3989; op2val:0x642;
   valaddr_reg:x3; val_offset:1986*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1986*FLEN/8, x4, x1, x2)

inst_994:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x189 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x242 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3989; op2val:0x642;
   valaddr_reg:x3; val_offset:1988*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1988*FLEN/8, x4, x1, x2)

inst_995:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x057 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fc and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3857; op2val:0x7fc;
   valaddr_reg:x3; val_offset:1990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 1990*FLEN/8, x4, x1, x2)

inst_996:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x057 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fc and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3857; op2val:0x7fc;
   valaddr_reg:x3; val_offset:1992*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 1992*FLEN/8, x4, x1, x2)

inst_997:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x057 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fc and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3857; op2val:0x7fc;
   valaddr_reg:x3; val_offset:1994*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 1994*FLEN/8, x4, x1, x2)

inst_998:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x057 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fc and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3857; op2val:0x7fc;
   valaddr_reg:x3; val_offset:1996*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 1996*FLEN/8, x4, x1, x2)

inst_999:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x057 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3fc and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3857; op2val:0x7fc;
   valaddr_reg:x3; val_offset:1998*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 1998*FLEN/8, x4, x1, x2)

inst_1000:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ff and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39c7; op2val:0x5ff;
   valaddr_reg:x3; val_offset:2000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2000*FLEN/8, x4, x1, x2)

inst_1001:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ff and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39c7; op2val:0x5ff;
   valaddr_reg:x3; val_offset:2002*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2002*FLEN/8, x4, x1, x2)

inst_1002:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ff and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39c7; op2val:0x5ff;
   valaddr_reg:x3; val_offset:2004*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2004*FLEN/8, x4, x1, x2)

inst_1003:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ff and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39c7; op2val:0x5ff;
   valaddr_reg:x3; val_offset:2006*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2006*FLEN/8, x4, x1, x2)

inst_1004:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1ff and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39c7; op2val:0x5ff;
   valaddr_reg:x3; val_offset:2008*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2008*FLEN/8, x4, x1, x2)

inst_1005:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x4e0;
   valaddr_reg:x3; val_offset:2010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2010*FLEN/8, x4, x1, x2)

inst_1006:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x4e0;
   valaddr_reg:x3; val_offset:2012*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2012*FLEN/8, x4, x1, x2)

inst_1007:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x4e0;
   valaddr_reg:x3; val_offset:2014*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2014*FLEN/8, x4, x1, x2)

inst_1008:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x4e0;
   valaddr_reg:x3; val_offset:2016*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2016*FLEN/8, x4, x1, x2)

inst_1009:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x31a and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0e0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b1a; op2val:0x4e0;
   valaddr_reg:x3; val_offset:2018*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2018*FLEN/8, x4, x1, x2)

inst_1010:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fa and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f7; op2val:0x6fa;
   valaddr_reg:x3; val_offset:2020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2020*FLEN/8, x4, x1, x2)

inst_1011:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fa and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f7; op2val:0x6fa;
   valaddr_reg:x3; val_offset:2022*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2022*FLEN/8, x4, x1, x2)

inst_1012:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fa and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f7; op2val:0x6fa;
   valaddr_reg:x3; val_offset:2024*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2024*FLEN/8, x4, x1, x2)

inst_1013:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fa and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f7; op2val:0x6fa;
   valaddr_reg:x3; val_offset:2026*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2026*FLEN/8, x4, x1, x2)

inst_1014:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f7 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2fa and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f7; op2val:0x6fa;
   valaddr_reg:x3; val_offset:2028*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2028*FLEN/8, x4, x1, x2)

inst_1015:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x173 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3973; op2val:0x65b;
   valaddr_reg:x3; val_offset:2030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2030*FLEN/8, x4, x1, x2)

inst_1016:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x173 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3973; op2val:0x65b;
   valaddr_reg:x3; val_offset:2032*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2032*FLEN/8, x4, x1, x2)

inst_1017:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x173 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3973; op2val:0x65b;
   valaddr_reg:x3; val_offset:2034*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2034*FLEN/8, x4, x1, x2)

inst_1018:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x173 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3973; op2val:0x65b;
   valaddr_reg:x3; val_offset:2036*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2036*FLEN/8, x4, x1, x2)

inst_1019:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x173 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x25b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3973; op2val:0x65b;
   valaddr_reg:x3; val_offset:2038*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2038*FLEN/8, x4, x1, x2)

inst_1020:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c3 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3876; op2val:0x7c3;
   valaddr_reg:x3; val_offset:2040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2040*FLEN/8, x4, x1, x2)

inst_1021:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c3 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3876; op2val:0x7c3;
   valaddr_reg:x3; val_offset:2042*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2042*FLEN/8, x4, x1, x2)

inst_1022:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c3 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3876; op2val:0x7c3;
   valaddr_reg:x3; val_offset:2044*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2044*FLEN/8, x4, x1, x2)

inst_1023:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c3 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3876; op2val:0x7c3;
   valaddr_reg:x3; val_offset:2046*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2046*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_9)

inst_1024:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x076 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c3 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3876; op2val:0x7c3;
   valaddr_reg:x3; val_offset:2048*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2048*FLEN/8, x4, x1, x2)

inst_1025:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c0 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x122 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ec0; op2val:0x1122;
   valaddr_reg:x3; val_offset:2050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2050*FLEN/8, x4, x1, x2)

inst_1026:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c0 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x122 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ec0; op2val:0x1122;
   valaddr_reg:x3; val_offset:2052*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2052*FLEN/8, x4, x1, x2)

inst_1027:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c0 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x122 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ec0; op2val:0x1122;
   valaddr_reg:x3; val_offset:2054*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2054*FLEN/8, x4, x1, x2)

inst_1028:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c0 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x122 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ec0; op2val:0x1122;
   valaddr_reg:x3; val_offset:2056*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2056*FLEN/8, x4, x1, x2)

inst_1029:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2c0 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x122 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2ec0; op2val:0x1122;
   valaddr_reg:x3; val_offset:2058*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2058*FLEN/8, x4, x1, x2)

inst_1030:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x081 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3b1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c81; op2val:0x13b1;
   valaddr_reg:x3; val_offset:2060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2060*FLEN/8, x4, x1, x2)

inst_1031:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x081 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3b1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c81; op2val:0x13b1;
   valaddr_reg:x3; val_offset:2062*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2062*FLEN/8, x4, x1, x2)

inst_1032:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x081 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3b1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c81; op2val:0x13b1;
   valaddr_reg:x3; val_offset:2064*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2064*FLEN/8, x4, x1, x2)

inst_1033:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x081 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3b1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c81; op2val:0x13b1;
   valaddr_reg:x3; val_offset:2066*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2066*FLEN/8, x4, x1, x2)

inst_1034:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x081 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3b1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2c81; op2val:0x13b1;
   valaddr_reg:x3; val_offset:2068*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2068*FLEN/8, x4, x1, x2)

inst_1035:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x334 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b34; op2val:0x52e;
   valaddr_reg:x3; val_offset:2070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2070*FLEN/8, x4, x1, x2)

inst_1036:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x334 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b34; op2val:0x52e;
   valaddr_reg:x3; val_offset:2072*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2072*FLEN/8, x4, x1, x2)

inst_1037:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x334 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b34; op2val:0x52e;
   valaddr_reg:x3; val_offset:2074*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2074*FLEN/8, x4, x1, x2)

inst_1038:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x334 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b34; op2val:0x52e;
   valaddr_reg:x3; val_offset:2076*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2076*FLEN/8, x4, x1, x2)

inst_1039:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x334 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x12e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b34; op2val:0x52e;
   valaddr_reg:x3; val_offset:2078*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2078*FLEN/8, x4, x1, x2)

inst_1040:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x5c1;
   valaddr_reg:x3; val_offset:2080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2080*FLEN/8, x4, x1, x2)

inst_1041:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x5c1;
   valaddr_reg:x3; val_offset:2082*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2082*FLEN/8, x4, x1, x2)

inst_1042:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x5c1;
   valaddr_reg:x3; val_offset:2084*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2084*FLEN/8, x4, x1, x2)

inst_1043:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x5c1;
   valaddr_reg:x3; val_offset:2086*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2086*FLEN/8, x4, x1, x2)

inst_1044:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1c1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x5c1;
   valaddr_reg:x3; val_offset:2088*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2088*FLEN/8, x4, x1, x2)

inst_1045:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x372 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3902; op2val:0x772;
   valaddr_reg:x3; val_offset:2090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2090*FLEN/8, x4, x1, x2)

inst_1046:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x372 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3902; op2val:0x772;
   valaddr_reg:x3; val_offset:2092*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2092*FLEN/8, x4, x1, x2)

inst_1047:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x372 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3902; op2val:0x772;
   valaddr_reg:x3; val_offset:2094*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2094*FLEN/8, x4, x1, x2)

inst_1048:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x372 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3902; op2val:0x772;
   valaddr_reg:x3; val_offset:2096*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2096*FLEN/8, x4, x1, x2)

inst_1049:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x102 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x372 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3902; op2val:0x772;
   valaddr_reg:x3; val_offset:2098*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2098*FLEN/8, x4, x1, x2)

inst_1050:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x28f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1b0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x328f; op2val:0xdb0;
   valaddr_reg:x3; val_offset:2100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2100*FLEN/8, x4, x1, x2)

inst_1051:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x28f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1b0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x328f; op2val:0xdb0;
   valaddr_reg:x3; val_offset:2102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2102*FLEN/8, x4, x1, x2)

inst_1052:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x28f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1b0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x328f; op2val:0xdb0;
   valaddr_reg:x3; val_offset:2104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2104*FLEN/8, x4, x1, x2)

inst_1053:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x28f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1b0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x328f; op2val:0xdb0;
   valaddr_reg:x3; val_offset:2106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2106*FLEN/8, x4, x1, x2)

inst_1054:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x28f and fs2 == 0 and fe2 == 0x03 and fm2 == 0x1b0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x328f; op2val:0xdb0;
   valaddr_reg:x3; val_offset:2108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2108*FLEN/8, x4, x1, x2)

inst_1055:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x216 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3220; op2val:0xe16;
   valaddr_reg:x3; val_offset:2110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2110*FLEN/8, x4, x1, x2)

inst_1056:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x216 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3220; op2val:0xe16;
   valaddr_reg:x3; val_offset:2112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2112*FLEN/8, x4, x1, x2)

inst_1057:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x216 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3220; op2val:0xe16;
   valaddr_reg:x3; val_offset:2114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2114*FLEN/8, x4, x1, x2)

inst_1058:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x216 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3220; op2val:0xe16;
   valaddr_reg:x3; val_offset:2116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2116*FLEN/8, x4, x1, x2)

inst_1059:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x220 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x216 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3220; op2val:0xe16;
   valaddr_reg:x3; val_offset:2118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2118*FLEN/8, x4, x1, x2)

inst_1060:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cc; op2val:0x7c6;
   valaddr_reg:x3; val_offset:2120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2120*FLEN/8, x4, x1, x2)

inst_1061:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cc; op2val:0x7c6;
   valaddr_reg:x3; val_offset:2122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2122*FLEN/8, x4, x1, x2)

inst_1062:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cc; op2val:0x7c6;
   valaddr_reg:x3; val_offset:2124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2124*FLEN/8, x4, x1, x2)

inst_1063:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cc; op2val:0x7c6;
   valaddr_reg:x3; val_offset:2126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2126*FLEN/8, x4, x1, x2)

inst_1064:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3c6 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cc; op2val:0x7c6;
   valaddr_reg:x3; val_offset:2128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2128*FLEN/8, x4, x1, x2)

inst_1065:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3943; op2val:0x717;
   valaddr_reg:x3; val_offset:2130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2130*FLEN/8, x4, x1, x2)

inst_1066:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3943; op2val:0x717;
   valaddr_reg:x3; val_offset:2132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2132*FLEN/8, x4, x1, x2)

inst_1067:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3943; op2val:0x717;
   valaddr_reg:x3; val_offset:2134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2134*FLEN/8, x4, x1, x2)

inst_1068:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3943; op2val:0x717;
   valaddr_reg:x3; val_offset:2136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2136*FLEN/8, x4, x1, x2)

inst_1069:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x143 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x317 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3943; op2val:0x717;
   valaddr_reg:x3; val_offset:2138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2138*FLEN/8, x4, x1, x2)

inst_1070:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3dd and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cbe; op2val:0x13dd;
   valaddr_reg:x3; val_offset:2140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2140*FLEN/8, x4, x1, x2)

inst_1071:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3dd and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cbe; op2val:0x13dd;
   valaddr_reg:x3; val_offset:2142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2142*FLEN/8, x4, x1, x2)

inst_1072:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3dd and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cbe; op2val:0x13dd;
   valaddr_reg:x3; val_offset:2144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2144*FLEN/8, x4, x1, x2)

inst_1073:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3dd and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cbe; op2val:0x13dd;
   valaddr_reg:x3; val_offset:2146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2146*FLEN/8, x4, x1, x2)

inst_1074:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0be and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3dd and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cbe; op2val:0x13dd;
   valaddr_reg:x3; val_offset:2148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2148*FLEN/8, x4, x1, x2)

inst_1075:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0f6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x385 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34f6; op2val:0xb85;
   valaddr_reg:x3; val_offset:2150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2150*FLEN/8, x4, x1, x2)

inst_1076:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0f6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x385 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34f6; op2val:0xb85;
   valaddr_reg:x3; val_offset:2152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2152*FLEN/8, x4, x1, x2)

inst_1077:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0f6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x385 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34f6; op2val:0xb85;
   valaddr_reg:x3; val_offset:2154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2154*FLEN/8, x4, x1, x2)

inst_1078:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0f6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x385 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34f6; op2val:0xb85;
   valaddr_reg:x3; val_offset:2156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2156*FLEN/8, x4, x1, x2)

inst_1079:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0f6 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x385 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34f6; op2val:0xb85;
   valaddr_reg:x3; val_offset:2158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2158*FLEN/8, x4, x1, x2)

inst_1080:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x01e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x087 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x341e; op2val:0xc87;
   valaddr_reg:x3; val_offset:2160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2160*FLEN/8, x4, x1, x2)

inst_1081:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x01e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x087 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x341e; op2val:0xc87;
   valaddr_reg:x3; val_offset:2162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2162*FLEN/8, x4, x1, x2)

inst_1082:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x01e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x087 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x341e; op2val:0xc87;
   valaddr_reg:x3; val_offset:2164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2164*FLEN/8, x4, x1, x2)

inst_1083:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x01e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x087 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x341e; op2val:0xc87;
   valaddr_reg:x3; val_offset:2166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2166*FLEN/8, x4, x1, x2)

inst_1084:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x01e and fs2 == 0 and fe2 == 0x03 and fm2 == 0x087 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x341e; op2val:0xc87;
   valaddr_reg:x3; val_offset:2168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2168*FLEN/8, x4, x1, x2)

inst_1085:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x02f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x075 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x302f; op2val:0x1075;
   valaddr_reg:x3; val_offset:2170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2170*FLEN/8, x4, x1, x2)

inst_1086:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x02f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x075 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x302f; op2val:0x1075;
   valaddr_reg:x3; val_offset:2172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2172*FLEN/8, x4, x1, x2)

inst_1087:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x02f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x075 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x302f; op2val:0x1075;
   valaddr_reg:x3; val_offset:2174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2174*FLEN/8, x4, x1, x2)

inst_1088:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x02f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x075 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x302f; op2val:0x1075;
   valaddr_reg:x3; val_offset:2176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2176*FLEN/8, x4, x1, x2)

inst_1089:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x02f and fs2 == 0 and fe2 == 0x04 and fm2 == 0x075 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x302f; op2val:0x1075;
   valaddr_reg:x3; val_offset:2178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2178*FLEN/8, x4, x1, x2)

inst_1090:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0bb and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e3; op2val:0xcbb;
   valaddr_reg:x3; val_offset:2180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2180*FLEN/8, x4, x1, x2)

inst_1091:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0bb and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e3; op2val:0xcbb;
   valaddr_reg:x3; val_offset:2182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2182*FLEN/8, x4, x1, x2)

inst_1092:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0bb and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e3; op2val:0xcbb;
   valaddr_reg:x3; val_offset:2184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2184*FLEN/8, x4, x1, x2)

inst_1093:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0bb and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e3; op2val:0xcbb;
   valaddr_reg:x3; val_offset:2186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2186*FLEN/8, x4, x1, x2)

inst_1094:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3e3 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0bb and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33e3; op2val:0xcbb;
   valaddr_reg:x3; val_offset:2188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2188*FLEN/8, x4, x1, x2)

inst_1095:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x295 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39aa; op2val:0x695;
   valaddr_reg:x3; val_offset:2190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2190*FLEN/8, x4, x1, x2)

inst_1096:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x295 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39aa; op2val:0x695;
   valaddr_reg:x3; val_offset:2192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2192*FLEN/8, x4, x1, x2)

inst_1097:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x295 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39aa; op2val:0x695;
   valaddr_reg:x3; val_offset:2194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2194*FLEN/8, x4, x1, x2)

inst_1098:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x295 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39aa; op2val:0x695;
   valaddr_reg:x3; val_offset:2196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2196*FLEN/8, x4, x1, x2)

inst_1099:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1aa and fs2 == 0 and fe2 == 0x01 and fm2 == 0x295 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39aa; op2val:0x695;
   valaddr_reg:x3; val_offset:2198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2198*FLEN/8, x4, x1, x2)

inst_1100:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x145 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x314 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3545; op2val:0xb14;
   valaddr_reg:x3; val_offset:2200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2200*FLEN/8, x4, x1, x2)

inst_1101:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x145 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x314 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3545; op2val:0xb14;
   valaddr_reg:x3; val_offset:2202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2202*FLEN/8, x4, x1, x2)

inst_1102:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x145 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x314 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3545; op2val:0xb14;
   valaddr_reg:x3; val_offset:2204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2204*FLEN/8, x4, x1, x2)

inst_1103:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x145 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x314 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3545; op2val:0xb14;
   valaddr_reg:x3; val_offset:2206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2206*FLEN/8, x4, x1, x2)

inst_1104:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x145 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x314 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3545; op2val:0xb14;
   valaddr_reg:x3; val_offset:2208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2208*FLEN/8, x4, x1, x2)

inst_1105:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3b6 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38d6; op2val:0x7b6;
   valaddr_reg:x3; val_offset:2210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2210*FLEN/8, x4, x1, x2)

inst_1106:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3b6 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38d6; op2val:0x7b6;
   valaddr_reg:x3; val_offset:2212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2212*FLEN/8, x4, x1, x2)

inst_1107:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3b6 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38d6; op2val:0x7b6;
   valaddr_reg:x3; val_offset:2214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2214*FLEN/8, x4, x1, x2)

inst_1108:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3b6 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38d6; op2val:0x7b6;
   valaddr_reg:x3; val_offset:2216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2216*FLEN/8, x4, x1, x2)

inst_1109:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0d6 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x3b6 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38d6; op2val:0x7b6;
   valaddr_reg:x3; val_offset:2218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2218*FLEN/8, x4, x1, x2)

inst_1110:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x16b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x2e1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x296b; op2val:0x16e1;
   valaddr_reg:x3; val_offset:2220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2220*FLEN/8, x4, x1, x2)

inst_1111:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x16b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x2e1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x296b; op2val:0x16e1;
   valaddr_reg:x3; val_offset:2222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2222*FLEN/8, x4, x1, x2)

inst_1112:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x16b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x2e1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x296b; op2val:0x16e1;
   valaddr_reg:x3; val_offset:2224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2224*FLEN/8, x4, x1, x2)

inst_1113:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x16b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x2e1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x296b; op2val:0x16e1;
   valaddr_reg:x3; val_offset:2226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2226*FLEN/8, x4, x1, x2)

inst_1114:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x16b and fs2 == 0 and fe2 == 0x05 and fm2 == 0x2e1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x296b; op2val:0x16e1;
   valaddr_reg:x3; val_offset:2228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2228*FLEN/8, x4, x1, x2)

inst_1115:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x074 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x382f; op2val:0x874;
   valaddr_reg:x3; val_offset:2230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2230*FLEN/8, x4, x1, x2)

inst_1116:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x074 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x382f; op2val:0x874;
   valaddr_reg:x3; val_offset:2232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2232*FLEN/8, x4, x1, x2)

inst_1117:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x074 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x382f; op2val:0x874;
   valaddr_reg:x3; val_offset:2234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2234*FLEN/8, x4, x1, x2)

inst_1118:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x074 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x382f; op2val:0x874;
   valaddr_reg:x3; val_offset:2236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2236*FLEN/8, x4, x1, x2)

inst_1119:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x02 and fm2 == 0x074 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x382f; op2val:0x874;
   valaddr_reg:x3; val_offset:2238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2238*FLEN/8, x4, x1, x2)

inst_1120:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1bb and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x5bb;
   valaddr_reg:x3; val_offset:2240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2240*FLEN/8, x4, x1, x2)

inst_1121:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1bb and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x5bb;
   valaddr_reg:x3; val_offset:2242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2242*FLEN/8, x4, x1, x2)

inst_1122:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1bb and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x5bb;
   valaddr_reg:x3; val_offset:2244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2244*FLEN/8, x4, x1, x2)

inst_1123:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1bb and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x5bb;
   valaddr_reg:x3; val_offset:2246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2246*FLEN/8, x4, x1, x2)

inst_1124:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x1bb and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x5bb;
   valaddr_reg:x3; val_offset:2248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2248*FLEN/8, x4, x1, x2)

inst_1125:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x157 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3afb; op2val:0x557;
   valaddr_reg:x3; val_offset:2250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2250*FLEN/8, x4, x1, x2)

inst_1126:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x157 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3afb; op2val:0x557;
   valaddr_reg:x3; val_offset:2252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2252*FLEN/8, x4, x1, x2)

inst_1127:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x157 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3afb; op2val:0x557;
   valaddr_reg:x3; val_offset:2254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2254*FLEN/8, x4, x1, x2)

inst_1128:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x157 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3afb; op2val:0x557;
   valaddr_reg:x3; val_offset:2256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2256*FLEN/8, x4, x1, x2)

inst_1129:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2fb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x157 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3afb; op2val:0x557;
   valaddr_reg:x3; val_offset:2258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2258*FLEN/8, x4, x1, x2)

inst_1130:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x131 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3931; op2val:0x72f;
   valaddr_reg:x3; val_offset:2260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2260*FLEN/8, x4, x1, x2)

inst_1131:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x131 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3931; op2val:0x72f;
   valaddr_reg:x3; val_offset:2262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2262*FLEN/8, x4, x1, x2)

inst_1132:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x131 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3931; op2val:0x72f;
   valaddr_reg:x3; val_offset:2264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2264*FLEN/8, x4, x1, x2)

inst_1133:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x131 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3931; op2val:0x72f;
   valaddr_reg:x3; val_offset:2266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2266*FLEN/8, x4, x1, x2)

inst_1134:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x131 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x32f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3931; op2val:0x72f;
   valaddr_reg:x3; val_offset:2268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2268*FLEN/8, x4, x1, x2)

inst_1135:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x146 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x313 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d46; op2val:0x1313;
   valaddr_reg:x3; val_offset:2270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2270*FLEN/8, x4, x1, x2)

inst_1136:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x146 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x313 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d46; op2val:0x1313;
   valaddr_reg:x3; val_offset:2272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2272*FLEN/8, x4, x1, x2)

inst_1137:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x146 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x313 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d46; op2val:0x1313;
   valaddr_reg:x3; val_offset:2274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2274*FLEN/8, x4, x1, x2)

inst_1138:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x146 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x313 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d46; op2val:0x1313;
   valaddr_reg:x3; val_offset:2276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2276*FLEN/8, x4, x1, x2)

inst_1139:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x146 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x313 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2d46; op2val:0x1313;
   valaddr_reg:x3; val_offset:2278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2278*FLEN/8, x4, x1, x2)

inst_1140:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0e3 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xce3;
   valaddr_reg:x3; val_offset:2280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2280*FLEN/8, x4, x1, x2)

inst_1141:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0e3 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xce3;
   valaddr_reg:x3; val_offset:2282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2282*FLEN/8, x4, x1, x2)

inst_1142:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0e3 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xce3;
   valaddr_reg:x3; val_offset:2284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2284*FLEN/8, x4, x1, x2)

inst_1143:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0e3 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xce3;
   valaddr_reg:x3; val_offset:2286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2286*FLEN/8, x4, x1, x2)

inst_1144:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x0e3 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a1; op2val:0xce3;
   valaddr_reg:x3; val_offset:2288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2288*FLEN/8, x4, x1, x2)

inst_1145:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x119 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3751; op2val:0x919;
   valaddr_reg:x3; val_offset:2290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2290*FLEN/8, x4, x1, x2)

inst_1146:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x119 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3751; op2val:0x919;
   valaddr_reg:x3; val_offset:2292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2292*FLEN/8, x4, x1, x2)

inst_1147:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x119 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3751; op2val:0x919;
   valaddr_reg:x3; val_offset:2294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2294*FLEN/8, x4, x1, x2)

inst_1148:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x119 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3751; op2val:0x919;
   valaddr_reg:x3; val_offset:2296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2296*FLEN/8, x4, x1, x2)

inst_1149:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x351 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x119 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3751; op2val:0x919;
   valaddr_reg:x3; val_offset:2298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2298*FLEN/8, x4, x1, x2)

inst_1150:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x154 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x300 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3154; op2val:0xf00;
   valaddr_reg:x3; val_offset:2300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2300*FLEN/8, x4, x1, x2)

inst_1151:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x154 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x300 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3154; op2val:0xf00;
   valaddr_reg:x3; val_offset:2302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2302*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_10)

inst_1152:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x154 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x300 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3154; op2val:0xf00;
   valaddr_reg:x3; val_offset:2304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2304*FLEN/8, x4, x1, x2)

inst_1153:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x154 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x300 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3154; op2val:0xf00;
   valaddr_reg:x3; val_offset:2306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2306*FLEN/8, x4, x1, x2)

inst_1154:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x154 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x300 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3154; op2val:0xf00;
   valaddr_reg:x3; val_offset:2308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2308*FLEN/8, x4, x1, x2)

inst_1155:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1b9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x285 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39b9; op2val:0x685;
   valaddr_reg:x3; val_offset:2310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2310*FLEN/8, x4, x1, x2)

inst_1156:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1b9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x285 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39b9; op2val:0x685;
   valaddr_reg:x3; val_offset:2312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2312*FLEN/8, x4, x1, x2)

inst_1157:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1b9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x285 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39b9; op2val:0x685;
   valaddr_reg:x3; val_offset:2314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2314*FLEN/8, x4, x1, x2)

inst_1158:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1b9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x285 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39b9; op2val:0x685;
   valaddr_reg:x3; val_offset:2316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2316*FLEN/8, x4, x1, x2)

inst_1159:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1b9 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x285 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39b9; op2val:0x685;
   valaddr_reg:x3; val_offset:2318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2318*FLEN/8, x4, x1, x2)

inst_1160:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x17d and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3acb; op2val:0x57d;
   valaddr_reg:x3; val_offset:2320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2320*FLEN/8, x4, x1, x2)

inst_1161:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x17d and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3acb; op2val:0x57d;
   valaddr_reg:x3; val_offset:2322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2322*FLEN/8, x4, x1, x2)

inst_1162:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x17d and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3acb; op2val:0x57d;
   valaddr_reg:x3; val_offset:2324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2324*FLEN/8, x4, x1, x2)

inst_1163:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x17d and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3acb; op2val:0x57d;
   valaddr_reg:x3; val_offset:2326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2326*FLEN/8, x4, x1, x2)

inst_1164:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2cb and fs2 == 0 and fe2 == 0x01 and fm2 == 0x17d and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3acb; op2val:0x57d;
   valaddr_reg:x3; val_offset:2328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2328*FLEN/8, x4, x1, x2)

inst_1165:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3e4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cba; op2val:0x13e4;
   valaddr_reg:x3; val_offset:2330*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2330*FLEN/8, x4, x1, x2)

inst_1166:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3e4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cba; op2val:0x13e4;
   valaddr_reg:x3; val_offset:2332*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2332*FLEN/8, x4, x1, x2)

inst_1167:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3e4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cba; op2val:0x13e4;
   valaddr_reg:x3; val_offset:2334*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2334*FLEN/8, x4, x1, x2)

inst_1168:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3e4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cba; op2val:0x13e4;
   valaddr_reg:x3; val_offset:2336*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2336*FLEN/8, x4, x1, x2)

inst_1169:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x0ba and fs2 == 0 and fe2 == 0x04 and fm2 == 0x3e4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2cba; op2val:0x13e4;
   valaddr_reg:x3; val_offset:2338*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2338*FLEN/8, x4, x1, x2)

inst_1170:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x170 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3adc; op2val:0x570;
   valaddr_reg:x3; val_offset:2340*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2340*FLEN/8, x4, x1, x2)

inst_1171:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x170 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3adc; op2val:0x570;
   valaddr_reg:x3; val_offset:2342*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2342*FLEN/8, x4, x1, x2)

inst_1172:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x170 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3adc; op2val:0x570;
   valaddr_reg:x3; val_offset:2344*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2344*FLEN/8, x4, x1, x2)

inst_1173:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x170 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3adc; op2val:0x570;
   valaddr_reg:x3; val_offset:2346*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2346*FLEN/8, x4, x1, x2)

inst_1174:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2dc and fs2 == 0 and fe2 == 0x01 and fm2 == 0x170 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3adc; op2val:0x570;
   valaddr_reg:x3; val_offset:2348*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2348*FLEN/8, x4, x1, x2)

inst_1175:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x23a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x63a;
   valaddr_reg:x3; val_offset:2350*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2350*FLEN/8, x4, x1, x2)

inst_1176:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x23a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x63a;
   valaddr_reg:x3; val_offset:2352*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2352*FLEN/8, x4, x1, x2)

inst_1177:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x23a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x63a;
   valaddr_reg:x3; val_offset:2354*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2354*FLEN/8, x4, x1, x2)

inst_1178:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x23a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x63a;
   valaddr_reg:x3; val_offset:2356*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2356*FLEN/8, x4, x1, x2)

inst_1179:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1fe and fs2 == 0 and fe2 == 0x01 and fm2 == 0x23a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39fe; op2val:0x63a;
   valaddr_reg:x3; val_offset:2358*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2358*FLEN/8, x4, x1, x2)

inst_1180:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x238 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39ff; op2val:0x638;
   valaddr_reg:x3; val_offset:2360*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2360*FLEN/8, x4, x1, x2)

inst_1181:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x238 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39ff; op2val:0x638;
   valaddr_reg:x3; val_offset:2362*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2362*FLEN/8, x4, x1, x2)

inst_1182:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x238 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39ff; op2val:0x638;
   valaddr_reg:x3; val_offset:2364*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2364*FLEN/8, x4, x1, x2)

inst_1183:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x238 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39ff; op2val:0x638;
   valaddr_reg:x3; val_offset:2366*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2366*FLEN/8, x4, x1, x2)

inst_1184:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x1ff and fs2 == 0 and fe2 == 0x01 and fm2 == 0x238 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x39ff; op2val:0x638;
   valaddr_reg:x3; val_offset:2368*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2368*FLEN/8, x4, x1, x2)

inst_1185:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x230 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a07; op2val:0x630;
   valaddr_reg:x3; val_offset:2370*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2370*FLEN/8, x4, x1, x2)

inst_1186:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x230 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a07; op2val:0x630;
   valaddr_reg:x3; val_offset:2372*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2372*FLEN/8, x4, x1, x2)

inst_1187:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x230 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a07; op2val:0x630;
   valaddr_reg:x3; val_offset:2374*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2374*FLEN/8, x4, x1, x2)

inst_1188:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x230 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a07; op2val:0x630;
   valaddr_reg:x3; val_offset:2376*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2376*FLEN/8, x4, x1, x2)

inst_1189:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x207 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x230 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a07; op2val:0x630;
   valaddr_reg:x3; val_offset:2378*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2378*FLEN/8, x4, x1, x2)

inst_1190:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fd and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x9fd;
   valaddr_reg:x3; val_offset:2380*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2380*FLEN/8, x4, x1, x2)

inst_1191:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fd and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x9fd;
   valaddr_reg:x3; val_offset:2382*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2382*FLEN/8, x4, x1, x2)

inst_1192:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fd and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x9fd;
   valaddr_reg:x3; val_offset:2384*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2384*FLEN/8, x4, x1, x2)

inst_1193:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fd and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x9fd;
   valaddr_reg:x3; val_offset:2386*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2386*FLEN/8, x4, x1, x2)

inst_1194:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23b and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fd and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363b; op2val:0x9fd;
   valaddr_reg:x3; val_offset:2388*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2388*FLEN/8, x4, x1, x2)

inst_1195:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x76f;
   valaddr_reg:x3; val_offset:2390*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2390*FLEN/8, x4, x1, x2)

inst_1196:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x76f;
   valaddr_reg:x3; val_offset:2392*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2392*FLEN/8, x4, x1, x2)

inst_1197:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x76f;
   valaddr_reg:x3; val_offset:2394*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2394*FLEN/8, x4, x1, x2)

inst_1198:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x76f;
   valaddr_reg:x3; val_offset:2396*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2396*FLEN/8, x4, x1, x2)

inst_1199:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x104 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x36f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3904; op2val:0x76f;
   valaddr_reg:x3; val_offset:2398*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2398*FLEN/8, x4, x1, x2)

inst_1200:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x381 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f8 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b81; op2val:0x4f8;
   valaddr_reg:x3; val_offset:2400*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2400*FLEN/8, x4, x1, x2)

inst_1201:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x381 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f8 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b81; op2val:0x4f8;
   valaddr_reg:x3; val_offset:2402*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2402*FLEN/8, x4, x1, x2)

inst_1202:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x381 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f8 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b81; op2val:0x4f8;
   valaddr_reg:x3; val_offset:2404*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2404*FLEN/8, x4, x1, x2)

inst_1203:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x381 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f8 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b81; op2val:0x4f8;
   valaddr_reg:x3; val_offset:2406*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2406*FLEN/8, x4, x1, x2)

inst_1204:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x381 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x0f8 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3b81; op2val:0x4f8;
   valaddr_reg:x3; val_offset:2408*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2408*FLEN/8, x4, x1, x2)

inst_1205:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3d0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30c6; op2val:0xfd0;
   valaddr_reg:x3; val_offset:2410*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2410*FLEN/8, x4, x1, x2)

inst_1206:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3d0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30c6; op2val:0xfd0;
   valaddr_reg:x3; val_offset:2412*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2412*FLEN/8, x4, x1, x2)

inst_1207:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3d0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30c6; op2val:0xfd0;
   valaddr_reg:x3; val_offset:2414*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2414*FLEN/8, x4, x1, x2)

inst_1208:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3d0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30c6; op2val:0xfd0;
   valaddr_reg:x3; val_offset:2416*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2416*FLEN/8, x4, x1, x2)

inst_1209:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x3d0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x30c6; op2val:0xfd0;
   valaddr_reg:x3; val_offset:2418*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2418*FLEN/8, x4, x1, x2)

inst_1210:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x314 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x145 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3314; op2val:0xd45;
   valaddr_reg:x3; val_offset:2420*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2420*FLEN/8, x4, x1, x2)

inst_1211:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x314 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x145 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3314; op2val:0xd45;
   valaddr_reg:x3; val_offset:2422*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2422*FLEN/8, x4, x1, x2)

inst_1212:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x314 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x145 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3314; op2val:0xd45;
   valaddr_reg:x3; val_offset:2424*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2424*FLEN/8, x4, x1, x2)

inst_1213:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x314 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x145 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3314; op2val:0xd45;
   valaddr_reg:x3; val_offset:2426*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2426*FLEN/8, x4, x1, x2)

inst_1214:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x314 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x145 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3314; op2val:0xd45;
   valaddr_reg:x3; val_offset:2428*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2428*FLEN/8, x4, x1, x2)

inst_1215:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0e3 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37a1; op2val:0x8e3;
   valaddr_reg:x3; val_offset:2430*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2430*FLEN/8, x4, x1, x2)

inst_1216:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0e3 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37a1; op2val:0x8e3;
   valaddr_reg:x3; val_offset:2432*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2432*FLEN/8, x4, x1, x2)

inst_1217:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0e3 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37a1; op2val:0x8e3;
   valaddr_reg:x3; val_offset:2434*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2434*FLEN/8, x4, x1, x2)

inst_1218:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0e3 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37a1; op2val:0x8e3;
   valaddr_reg:x3; val_offset:2436*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2436*FLEN/8, x4, x1, x2)

inst_1219:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x0e3 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x37a1; op2val:0x8e3;
   valaddr_reg:x3; val_offset:2438*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2438*FLEN/8, x4, x1, x2)

inst_1220:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x14b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x30b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x394b; op2val:0x70b;
   valaddr_reg:x3; val_offset:2440*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2440*FLEN/8, x4, x1, x2)

inst_1221:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x14b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x30b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x394b; op2val:0x70b;
   valaddr_reg:x3; val_offset:2442*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2442*FLEN/8, x4, x1, x2)

inst_1222:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x14b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x30b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x394b; op2val:0x70b;
   valaddr_reg:x3; val_offset:2444*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2444*FLEN/8, x4, x1, x2)

inst_1223:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x14b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x30b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x394b; op2val:0x70b;
   valaddr_reg:x3; val_offset:2446*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2446*FLEN/8, x4, x1, x2)

inst_1224:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x14b and fs2 == 0 and fe2 == 0x01 and fm2 == 0x30b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x394b; op2val:0x70b;
   valaddr_reg:x3; val_offset:2448*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2448*FLEN/8, x4, x1, x2)

inst_1225:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fc and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363c; op2val:0x9fc;
   valaddr_reg:x3; val_offset:2450*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2450*FLEN/8, x4, x1, x2)

inst_1226:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fc and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363c; op2val:0x9fc;
   valaddr_reg:x3; val_offset:2452*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2452*FLEN/8, x4, x1, x2)

inst_1227:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fc and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363c; op2val:0x9fc;
   valaddr_reg:x3; val_offset:2454*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2454*FLEN/8, x4, x1, x2)

inst_1228:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fc and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363c; op2val:0x9fc;
   valaddr_reg:x3; val_offset:2456*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2456*FLEN/8, x4, x1, x2)

inst_1229:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x23c and fs2 == 0 and fe2 == 0x02 and fm2 == 0x1fc and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x363c; op2val:0x9fc;
   valaddr_reg:x3; val_offset:2458*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2458*FLEN/8, x4, x1, x2)

inst_1230:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x191 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x2b3 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1991; op2val:0x26b3;
   valaddr_reg:x3; val_offset:2460*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2460*FLEN/8, x4, x1, x2)

inst_1231:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x191 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x2b3 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1991; op2val:0x26b3;
   valaddr_reg:x3; val_offset:2462*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2462*FLEN/8, x4, x1, x2)

inst_1232:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x191 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x2b3 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1991; op2val:0x26b3;
   valaddr_reg:x3; val_offset:2464*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2464*FLEN/8, x4, x1, x2)

inst_1233:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x191 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x2b3 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1991; op2val:0x26b3;
   valaddr_reg:x3; val_offset:2466*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2466*FLEN/8, x4, x1, x2)

inst_1234:
// fs1 == 0 and fe1 == 0x06 and fm1 == 0x191 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x2b3 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x1991; op2val:0x26b3;
   valaddr_reg:x3; val_offset:2468*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2468*FLEN/8, x4, x1, x2)

inst_1235:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x035 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x06e and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3835; op2val:0x86e;
   valaddr_reg:x3; val_offset:2470*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2470*FLEN/8, x4, x1, x2)

inst_1236:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x035 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x06e and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3835; op2val:0x86e;
   valaddr_reg:x3; val_offset:2472*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2472*FLEN/8, x4, x1, x2)

inst_1237:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x035 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x06e and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3835; op2val:0x86e;
   valaddr_reg:x3; val_offset:2474*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2474*FLEN/8, x4, x1, x2)

inst_1238:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x035 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x06e and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3835; op2val:0x86e;
   valaddr_reg:x3; val_offset:2476*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2476*FLEN/8, x4, x1, x2)

inst_1239:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x035 and fs2 == 0 and fe2 == 0x02 and fm2 == 0x06e and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3835; op2val:0x86e;
   valaddr_reg:x3; val_offset:2478*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2478*FLEN/8, x4, x1, x2)

inst_1240:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x177 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3977; op2val:0x6d4;
   valaddr_reg:x3; val_offset:2480*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2480*FLEN/8, x4, x1, x2)

inst_1241:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x177 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3977; op2val:0x6d4;
   valaddr_reg:x3; val_offset:2482*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2482*FLEN/8, x4, x1, x2)

inst_1242:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x177 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3977; op2val:0x6d4;
   valaddr_reg:x3; val_offset:2484*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2484*FLEN/8, x4, x1, x2)

inst_1243:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x177 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3977; op2val:0x6d4;
   valaddr_reg:x3; val_offset:2486*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2486*FLEN/8, x4, x1, x2)

inst_1244:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x177 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2d4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3977; op2val:0x6d4;
   valaddr_reg:x3; val_offset:2488*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2488*FLEN/8, x4, x1, x2)

inst_1245:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0d4 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x29f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50d4; op2val:0x3e9f;
   valaddr_reg:x3; val_offset:2490*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2490*FLEN/8, x4, x1, x2)

inst_1246:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0d4 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x29f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50d4; op2val:0x3e9f;
   valaddr_reg:x3; val_offset:2492*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2492*FLEN/8, x4, x1, x2)

inst_1247:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0d4 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x29f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50d4; op2val:0x3e9f;
   valaddr_reg:x3; val_offset:2494*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2494*FLEN/8, x4, x1, x2)

inst_1248:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0d4 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x29f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50d4; op2val:0x3e9f;
   valaddr_reg:x3; val_offset:2496*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2496*FLEN/8, x4, x1, x2)

inst_1249:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0d4 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x29f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50d4; op2val:0x3e9f;
   valaddr_reg:x3; val_offset:2498*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2498*FLEN/8, x4, x1, x2)

inst_1250:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x354 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x505d; op2val:0x3f54;
   valaddr_reg:x3; val_offset:2500*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2500*FLEN/8, x4, x1, x2)

inst_1251:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x354 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x505d; op2val:0x3f54;
   valaddr_reg:x3; val_offset:2502*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2502*FLEN/8, x4, x1, x2)

inst_1252:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x354 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x505d; op2val:0x3f54;
   valaddr_reg:x3; val_offset:2504*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2504*FLEN/8, x4, x1, x2)

inst_1253:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x354 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x505d; op2val:0x3f54;
   valaddr_reg:x3; val_offset:2506*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2506*FLEN/8, x4, x1, x2)

inst_1254:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x354 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x505d; op2val:0x3f54;
   valaddr_reg:x3; val_offset:2508*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2508*FLEN/8, x4, x1, x2)

inst_1255:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3e9 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x00b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53e9; op2val:0x3c0b;
   valaddr_reg:x3; val_offset:2510*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2510*FLEN/8, x4, x1, x2)

inst_1256:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3e9 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x00b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53e9; op2val:0x3c0b;
   valaddr_reg:x3; val_offset:2512*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2512*FLEN/8, x4, x1, x2)

inst_1257:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3e9 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x00b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53e9; op2val:0x3c0b;
   valaddr_reg:x3; val_offset:2514*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2514*FLEN/8, x4, x1, x2)

inst_1258:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3e9 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x00b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53e9; op2val:0x3c0b;
   valaddr_reg:x3; val_offset:2516*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2516*FLEN/8, x4, x1, x2)

inst_1259:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3e9 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x00b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53e9; op2val:0x3c0b;
   valaddr_reg:x3; val_offset:2518*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2518*FLEN/8, x4, x1, x2)

inst_1260:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x369 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x051 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f69; op2val:0x4051;
   valaddr_reg:x3; val_offset:2520*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2520*FLEN/8, x4, x1, x2)

inst_1261:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x369 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x051 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f69; op2val:0x4051;
   valaddr_reg:x3; val_offset:2522*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2522*FLEN/8, x4, x1, x2)

inst_1262:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x369 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x051 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f69; op2val:0x4051;
   valaddr_reg:x3; val_offset:2524*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2524*FLEN/8, x4, x1, x2)

inst_1263:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x369 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x051 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f69; op2val:0x4051;
   valaddr_reg:x3; val_offset:2526*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2526*FLEN/8, x4, x1, x2)

inst_1264:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x369 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x051 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f69; op2val:0x4051;
   valaddr_reg:x3; val_offset:2528*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2528*FLEN/8, x4, x1, x2)

inst_1265:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x042 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x384 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5042; op2val:0x3f84;
   valaddr_reg:x3; val_offset:2530*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2530*FLEN/8, x4, x1, x2)

inst_1266:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x042 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x384 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5042; op2val:0x3f84;
   valaddr_reg:x3; val_offset:2532*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2532*FLEN/8, x4, x1, x2)

inst_1267:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x042 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x384 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5042; op2val:0x3f84;
   valaddr_reg:x3; val_offset:2534*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2534*FLEN/8, x4, x1, x2)

inst_1268:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x042 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x384 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5042; op2val:0x3f84;
   valaddr_reg:x3; val_offset:2536*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2536*FLEN/8, x4, x1, x2)

inst_1269:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x042 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x384 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5042; op2val:0x3f84;
   valaddr_reg:x3; val_offset:2538*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2538*FLEN/8, x4, x1, x2)

inst_1270:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d2 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d2; op2val:0x4817;
   valaddr_reg:x3; val_offset:2540*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2540*FLEN/8, x4, x1, x2)

inst_1271:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d2 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d2; op2val:0x4817;
   valaddr_reg:x3; val_offset:2542*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2542*FLEN/8, x4, x1, x2)

inst_1272:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d2 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d2; op2val:0x4817;
   valaddr_reg:x3; val_offset:2544*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2544*FLEN/8, x4, x1, x2)

inst_1273:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d2 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d2; op2val:0x4817;
   valaddr_reg:x3; val_offset:2546*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2546*FLEN/8, x4, x1, x2)

inst_1274:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d2 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d2; op2val:0x4817;
   valaddr_reg:x3; val_offset:2548*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2548*FLEN/8, x4, x1, x2)

inst_1275:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x08a and fs2 == 0 and fe2 == 0x11 and fm2 == 0x30c and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x488a; op2val:0x470c;
   valaddr_reg:x3; val_offset:2550*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2550*FLEN/8, x4, x1, x2)

inst_1276:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x08a and fs2 == 0 and fe2 == 0x11 and fm2 == 0x30c and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x488a; op2val:0x470c;
   valaddr_reg:x3; val_offset:2552*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2552*FLEN/8, x4, x1, x2)

inst_1277:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x08a and fs2 == 0 and fe2 == 0x11 and fm2 == 0x30c and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x488a; op2val:0x470c;
   valaddr_reg:x3; val_offset:2554*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2554*FLEN/8, x4, x1, x2)

inst_1278:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x08a and fs2 == 0 and fe2 == 0x11 and fm2 == 0x30c and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x488a; op2val:0x470c;
   valaddr_reg:x3; val_offset:2556*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2556*FLEN/8, x4, x1, x2)

inst_1279:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x08a and fs2 == 0 and fe2 == 0x11 and fm2 == 0x30c and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x488a; op2val:0x470c;
   valaddr_reg:x3; val_offset:2558*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2558*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_11)

inst_1280:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17a and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d7 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517a; op2val:0x3dd7;
   valaddr_reg:x3; val_offset:2560*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2560*FLEN/8, x4, x1, x2)

inst_1281:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17a and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d7 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517a; op2val:0x3dd7;
   valaddr_reg:x3; val_offset:2562*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2562*FLEN/8, x4, x1, x2)

inst_1282:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17a and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d7 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517a; op2val:0x3dd7;
   valaddr_reg:x3; val_offset:2564*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2564*FLEN/8, x4, x1, x2)

inst_1283:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17a and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d7 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517a; op2val:0x3dd7;
   valaddr_reg:x3; val_offset:2566*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2566*FLEN/8, x4, x1, x2)

inst_1284:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17a and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d7 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517a; op2val:0x3dd7;
   valaddr_reg:x3; val_offset:2568*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2568*FLEN/8, x4, x1, x2)

inst_1285:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x1df and fs2 == 0 and fe2 == 0x12 and fm2 == 0x173 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x45df; op2val:0x4973;
   valaddr_reg:x3; val_offset:2570*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2570*FLEN/8, x4, x1, x2)

inst_1286:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x1df and fs2 == 0 and fe2 == 0x12 and fm2 == 0x173 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x45df; op2val:0x4973;
   valaddr_reg:x3; val_offset:2572*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2572*FLEN/8, x4, x1, x2)

inst_1287:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x1df and fs2 == 0 and fe2 == 0x12 and fm2 == 0x173 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x45df; op2val:0x4973;
   valaddr_reg:x3; val_offset:2574*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2574*FLEN/8, x4, x1, x2)

inst_1288:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x1df and fs2 == 0 and fe2 == 0x12 and fm2 == 0x173 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x45df; op2val:0x4973;
   valaddr_reg:x3; val_offset:2576*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2576*FLEN/8, x4, x1, x2)

inst_1289:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x1df and fs2 == 0 and fe2 == 0x12 and fm2 == 0x173 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x45df; op2val:0x4973;
   valaddr_reg:x3; val_offset:2578*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2578*FLEN/8, x4, x1, x2)

inst_1290:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x268 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0fe and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5268; op2val:0x3cfe;
   valaddr_reg:x3; val_offset:2580*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2580*FLEN/8, x4, x1, x2)

inst_1291:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x268 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0fe and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5268; op2val:0x3cfe;
   valaddr_reg:x3; val_offset:2582*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2582*FLEN/8, x4, x1, x2)

inst_1292:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x268 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0fe and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5268; op2val:0x3cfe;
   valaddr_reg:x3; val_offset:2584*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2584*FLEN/8, x4, x1, x2)

inst_1293:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x268 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0fe and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5268; op2val:0x3cfe;
   valaddr_reg:x3; val_offset:2586*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2586*FLEN/8, x4, x1, x2)

inst_1294:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x268 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0fe and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5268; op2val:0x3cfe;
   valaddr_reg:x3; val_offset:2588*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2588*FLEN/8, x4, x1, x2)

inst_1295:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47ad; op2val:0x482b;
   valaddr_reg:x3; val_offset:2590*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2590*FLEN/8, x4, x1, x2)

inst_1296:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47ad; op2val:0x482b;
   valaddr_reg:x3; val_offset:2592*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2592*FLEN/8, x4, x1, x2)

inst_1297:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47ad; op2val:0x482b;
   valaddr_reg:x3; val_offset:2594*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2594*FLEN/8, x4, x1, x2)

inst_1298:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47ad; op2val:0x482b;
   valaddr_reg:x3; val_offset:2596*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2596*FLEN/8, x4, x1, x2)

inst_1299:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3ad and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47ad; op2val:0x482b;
   valaddr_reg:x3; val_offset:2598*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2598*FLEN/8, x4, x1, x2)

inst_1300:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x1f4 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x15f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x49f4; op2val:0x455f;
   valaddr_reg:x3; val_offset:2600*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2600*FLEN/8, x4, x1, x2)

inst_1301:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x1f4 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x15f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x49f4; op2val:0x455f;
   valaddr_reg:x3; val_offset:2602*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2602*FLEN/8, x4, x1, x2)

inst_1302:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x1f4 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x15f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x49f4; op2val:0x455f;
   valaddr_reg:x3; val_offset:2604*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2604*FLEN/8, x4, x1, x2)

inst_1303:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x1f4 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x15f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x49f4; op2val:0x455f;
   valaddr_reg:x3; val_offset:2606*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2606*FLEN/8, x4, x1, x2)

inst_1304:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x1f4 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x15f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x49f4; op2val:0x455f;
   valaddr_reg:x3; val_offset:2608*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2608*FLEN/8, x4, x1, x2)

inst_1305:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x166 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1ed and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5166; op2val:0x3ded;
   valaddr_reg:x3; val_offset:2610*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2610*FLEN/8, x4, x1, x2)

inst_1306:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x166 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1ed and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5166; op2val:0x3ded;
   valaddr_reg:x3; val_offset:2612*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2612*FLEN/8, x4, x1, x2)

inst_1307:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x166 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1ed and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5166; op2val:0x3ded;
   valaddr_reg:x3; val_offset:2614*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2614*FLEN/8, x4, x1, x2)

inst_1308:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x166 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1ed and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5166; op2val:0x3ded;
   valaddr_reg:x3; val_offset:2616*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2616*FLEN/8, x4, x1, x2)

inst_1309:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x166 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1ed and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5166; op2val:0x3ded;
   valaddr_reg:x3; val_offset:2618*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2618*FLEN/8, x4, x1, x2)

inst_1310:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x01d and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53c7; op2val:0x3c1d;
   valaddr_reg:x3; val_offset:2620*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2620*FLEN/8, x4, x1, x2)

inst_1311:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x01d and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53c7; op2val:0x3c1d;
   valaddr_reg:x3; val_offset:2622*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2622*FLEN/8, x4, x1, x2)

inst_1312:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x01d and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53c7; op2val:0x3c1d;
   valaddr_reg:x3; val_offset:2624*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2624*FLEN/8, x4, x1, x2)

inst_1313:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x01d and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53c7; op2val:0x3c1d;
   valaddr_reg:x3; val_offset:2626*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2626*FLEN/8, x4, x1, x2)

inst_1314:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x3c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x01d and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x53c7; op2val:0x3c1d;
   valaddr_reg:x3; val_offset:2628*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2628*FLEN/8, x4, x1, x2)

inst_1315:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x022 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x3bd and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4422; op2val:0x4bbd;
   valaddr_reg:x3; val_offset:2630*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2630*FLEN/8, x4, x1, x2)

inst_1316:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x022 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x3bd and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4422; op2val:0x4bbd;
   valaddr_reg:x3; val_offset:2632*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2632*FLEN/8, x4, x1, x2)

inst_1317:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x022 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x3bd and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4422; op2val:0x4bbd;
   valaddr_reg:x3; val_offset:2634*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2634*FLEN/8, x4, x1, x2)

inst_1318:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x022 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x3bd and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4422; op2val:0x4bbd;
   valaddr_reg:x3; val_offset:2636*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2636*FLEN/8, x4, x1, x2)

inst_1319:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x022 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x3bd and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4422; op2val:0x4bbd;
   valaddr_reg:x3; val_offset:2638*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2638*FLEN/8, x4, x1, x2)

inst_1320:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x00d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3e4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4c0d; op2val:0x43e4;
   valaddr_reg:x3; val_offset:2640*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2640*FLEN/8, x4, x1, x2)

inst_1321:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x00d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3e4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4c0d; op2val:0x43e4;
   valaddr_reg:x3; val_offset:2642*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2642*FLEN/8, x4, x1, x2)

inst_1322:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x00d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3e4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4c0d; op2val:0x43e4;
   valaddr_reg:x3; val_offset:2644*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2644*FLEN/8, x4, x1, x2)

inst_1323:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x00d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3e4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4c0d; op2val:0x43e4;
   valaddr_reg:x3; val_offset:2646*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2646*FLEN/8, x4, x1, x2)

inst_1324:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x00d and fs2 == 0 and fe2 == 0x10 and fm2 == 0x3e4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4c0d; op2val:0x43e4;
   valaddr_reg:x3; val_offset:2648*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2648*FLEN/8, x4, x1, x2)

inst_1325:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x086 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x312 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5086; op2val:0x3f12;
   valaddr_reg:x3; val_offset:2650*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2650*FLEN/8, x4, x1, x2)

inst_1326:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x086 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x312 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5086; op2val:0x3f12;
   valaddr_reg:x3; val_offset:2652*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2652*FLEN/8, x4, x1, x2)

inst_1327:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x086 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x312 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5086; op2val:0x3f12;
   valaddr_reg:x3; val_offset:2654*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2654*FLEN/8, x4, x1, x2)

inst_1328:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x086 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x312 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5086; op2val:0x3f12;
   valaddr_reg:x3; val_offset:2656*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2656*FLEN/8, x4, x1, x2)

inst_1329:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x086 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x312 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5086; op2val:0x3f12;
   valaddr_reg:x3; val_offset:2658*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2658*FLEN/8, x4, x1, x2)

inst_1330:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3d8 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5014; op2val:0x3fd8;
   valaddr_reg:x3; val_offset:2660*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2660*FLEN/8, x4, x1, x2)

inst_1331:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3d8 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5014; op2val:0x3fd8;
   valaddr_reg:x3; val_offset:2662*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2662*FLEN/8, x4, x1, x2)

inst_1332:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3d8 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5014; op2val:0x3fd8;
   valaddr_reg:x3; val_offset:2664*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2664*FLEN/8, x4, x1, x2)

inst_1333:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3d8 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5014; op2val:0x3fd8;
   valaddr_reg:x3; val_offset:2666*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2666*FLEN/8, x4, x1, x2)

inst_1334:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3d8 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5014; op2val:0x3fd8;
   valaddr_reg:x3; val_offset:2668*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2668*FLEN/8, x4, x1, x2)

inst_1335:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2c9 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0b6 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4ac9; op2val:0x44b6;
   valaddr_reg:x3; val_offset:2670*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2670*FLEN/8, x4, x1, x2)

inst_1336:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2c9 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0b6 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4ac9; op2val:0x44b6;
   valaddr_reg:x3; val_offset:2672*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2672*FLEN/8, x4, x1, x2)

inst_1337:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2c9 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0b6 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4ac9; op2val:0x44b6;
   valaddr_reg:x3; val_offset:2674*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2674*FLEN/8, x4, x1, x2)

inst_1338:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2c9 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0b6 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4ac9; op2val:0x44b6;
   valaddr_reg:x3; val_offset:2676*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2676*FLEN/8, x4, x1, x2)

inst_1339:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2c9 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0b6 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4ac9; op2val:0x44b6;
   valaddr_reg:x3; val_offset:2678*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2678*FLEN/8, x4, x1, x2)

inst_1340:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x299 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0d9 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5299; op2val:0x3cd9;
   valaddr_reg:x3; val_offset:2680*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2680*FLEN/8, x4, x1, x2)

inst_1341:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x299 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0d9 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5299; op2val:0x3cd9;
   valaddr_reg:x3; val_offset:2682*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2682*FLEN/8, x4, x1, x2)

inst_1342:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x299 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0d9 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5299; op2val:0x3cd9;
   valaddr_reg:x3; val_offset:2684*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2684*FLEN/8, x4, x1, x2)

inst_1343:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x299 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0d9 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5299; op2val:0x3cd9;
   valaddr_reg:x3; val_offset:2686*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2686*FLEN/8, x4, x1, x2)

inst_1344:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x299 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0d9 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5299; op2val:0x3cd9;
   valaddr_reg:x3; val_offset:2688*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2688*FLEN/8, x4, x1, x2)

inst_1345:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17e and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517e; op2val:0x3dd2;
   valaddr_reg:x3; val_offset:2690*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2690*FLEN/8, x4, x1, x2)

inst_1346:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17e and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517e; op2val:0x3dd2;
   valaddr_reg:x3; val_offset:2692*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2692*FLEN/8, x4, x1, x2)

inst_1347:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17e and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517e; op2val:0x3dd2;
   valaddr_reg:x3; val_offset:2694*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2694*FLEN/8, x4, x1, x2)

inst_1348:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17e and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517e; op2val:0x3dd2;
   valaddr_reg:x3; val_offset:2696*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2696*FLEN/8, x4, x1, x2)

inst_1349:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x17e and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1d2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x517e; op2val:0x3dd2;
   valaddr_reg:x3; val_offset:2698*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2698*FLEN/8, x4, x1, x2)

inst_1350:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0e8 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x284 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48e8; op2val:0x4684;
   valaddr_reg:x3; val_offset:2700*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2700*FLEN/8, x4, x1, x2)

inst_1351:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0e8 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x284 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48e8; op2val:0x4684;
   valaddr_reg:x3; val_offset:2702*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2702*FLEN/8, x4, x1, x2)

inst_1352:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0e8 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x284 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48e8; op2val:0x4684;
   valaddr_reg:x3; val_offset:2704*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2704*FLEN/8, x4, x1, x2)

inst_1353:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0e8 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x284 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48e8; op2val:0x4684;
   valaddr_reg:x3; val_offset:2706*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2706*FLEN/8, x4, x1, x2)

inst_1354:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0e8 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x284 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48e8; op2val:0x4684;
   valaddr_reg:x3; val_offset:2708*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2708*FLEN/8, x4, x1, x2)

inst_1355:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2e1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48a6; op2val:0x46e1;
   valaddr_reg:x3; val_offset:2710*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2710*FLEN/8, x4, x1, x2)

inst_1356:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2e1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48a6; op2val:0x46e1;
   valaddr_reg:x3; val_offset:2712*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2712*FLEN/8, x4, x1, x2)

inst_1357:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2e1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48a6; op2val:0x46e1;
   valaddr_reg:x3; val_offset:2714*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2714*FLEN/8, x4, x1, x2)

inst_1358:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2e1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48a6; op2val:0x46e1;
   valaddr_reg:x3; val_offset:2716*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2716*FLEN/8, x4, x1, x2)

inst_1359:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x0a6 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x2e1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x48a6; op2val:0x46e1;
   valaddr_reg:x3; val_offset:2718*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2718*FLEN/8, x4, x1, x2)

inst_1360:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d1 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d1; op2val:0x4817;
   valaddr_reg:x3; val_offset:2720*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2720*FLEN/8, x4, x1, x2)

inst_1361:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d1 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d1; op2val:0x4817;
   valaddr_reg:x3; val_offset:2722*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2722*FLEN/8, x4, x1, x2)

inst_1362:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d1 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d1; op2val:0x4817;
   valaddr_reg:x3; val_offset:2724*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2724*FLEN/8, x4, x1, x2)

inst_1363:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d1 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d1; op2val:0x4817;
   valaddr_reg:x3; val_offset:2726*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2726*FLEN/8, x4, x1, x2)

inst_1364:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3d1 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x017 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47d1; op2val:0x4817;
   valaddr_reg:x3; val_offset:2728*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2728*FLEN/8, x4, x1, x2)

inst_1365:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x059 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x35b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4459; op2val:0x4b5b;
   valaddr_reg:x3; val_offset:2730*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2730*FLEN/8, x4, x1, x2)

inst_1366:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x059 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x35b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4459; op2val:0x4b5b;
   valaddr_reg:x3; val_offset:2732*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2732*FLEN/8, x4, x1, x2)

inst_1367:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x059 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x35b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4459; op2val:0x4b5b;
   valaddr_reg:x3; val_offset:2734*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2734*FLEN/8, x4, x1, x2)

inst_1368:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x059 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x35b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4459; op2val:0x4b5b;
   valaddr_reg:x3; val_offset:2736*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2736*FLEN/8, x4, x1, x2)

inst_1369:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x059 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x35b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4459; op2val:0x4b5b;
   valaddr_reg:x3; val_offset:2738*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2738*FLEN/8, x4, x1, x2)

inst_1370:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x238 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x124 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e38; op2val:0x4124;
   valaddr_reg:x3; val_offset:2740*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2740*FLEN/8, x4, x1, x2)

inst_1371:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x238 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x124 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e38; op2val:0x4124;
   valaddr_reg:x3; val_offset:2742*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2742*FLEN/8, x4, x1, x2)

inst_1372:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x238 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x124 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e38; op2val:0x4124;
   valaddr_reg:x3; val_offset:2744*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2744*FLEN/8, x4, x1, x2)

inst_1373:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x238 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x124 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e38; op2val:0x4124;
   valaddr_reg:x3; val_offset:2746*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2746*FLEN/8, x4, x1, x2)

inst_1374:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x238 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x124 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e38; op2val:0x4124;
   valaddr_reg:x3; val_offset:2748*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2748*FLEN/8, x4, x1, x2)

inst_1375:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0a5 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x52e3; op2val:0x3ca5;
   valaddr_reg:x3; val_offset:2750*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2750*FLEN/8, x4, x1, x2)

inst_1376:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0a5 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x52e3; op2val:0x3ca5;
   valaddr_reg:x3; val_offset:2752*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2752*FLEN/8, x4, x1, x2)

inst_1377:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0a5 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x52e3; op2val:0x3ca5;
   valaddr_reg:x3; val_offset:2754*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2754*FLEN/8, x4, x1, x2)

inst_1378:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0a5 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x52e3; op2val:0x3ca5;
   valaddr_reg:x3; val_offset:2756*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2756*FLEN/8, x4, x1, x2)

inst_1379:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x2e3 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0a5 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x52e3; op2val:0x3ca5;
   valaddr_reg:x3; val_offset:2758*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2758*FLEN/8, x4, x1, x2)

inst_1380:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x18a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51c7; op2val:0x3d8a;
   valaddr_reg:x3; val_offset:2760*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2760*FLEN/8, x4, x1, x2)

inst_1381:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x18a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51c7; op2val:0x3d8a;
   valaddr_reg:x3; val_offset:2762*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2762*FLEN/8, x4, x1, x2)

inst_1382:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x18a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51c7; op2val:0x3d8a;
   valaddr_reg:x3; val_offset:2764*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2764*FLEN/8, x4, x1, x2)

inst_1383:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x18a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51c7; op2val:0x3d8a;
   valaddr_reg:x3; val_offset:2766*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2766*FLEN/8, x4, x1, x2)

inst_1384:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1c7 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x18a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51c7; op2val:0x3d8a;
   valaddr_reg:x3; val_offset:2768*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2768*FLEN/8, x4, x1, x2)

inst_1385:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x358 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x05b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5358; op2val:0x3c5b;
   valaddr_reg:x3; val_offset:2770*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2770*FLEN/8, x4, x1, x2)

inst_1386:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x358 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x05b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5358; op2val:0x3c5b;
   valaddr_reg:x3; val_offset:2772*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2772*FLEN/8, x4, x1, x2)

inst_1387:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x358 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x05b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5358; op2val:0x3c5b;
   valaddr_reg:x3; val_offset:2774*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2774*FLEN/8, x4, x1, x2)

inst_1388:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x358 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x05b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5358; op2val:0x3c5b;
   valaddr_reg:x3; val_offset:2776*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2776*FLEN/8, x4, x1, x2)

inst_1389:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x358 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x05b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5358; op2val:0x3c5b;
   valaddr_reg:x3; val_offset:2778*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2778*FLEN/8, x4, x1, x2)

inst_1390:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3a4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47a4; op2val:0x482f;
   valaddr_reg:x3; val_offset:2780*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2780*FLEN/8, x4, x1, x2)

inst_1391:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3a4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47a4; op2val:0x482f;
   valaddr_reg:x3; val_offset:2782*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2782*FLEN/8, x4, x1, x2)

inst_1392:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3a4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47a4; op2val:0x482f;
   valaddr_reg:x3; val_offset:2784*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2784*FLEN/8, x4, x1, x2)

inst_1393:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3a4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47a4; op2val:0x482f;
   valaddr_reg:x3; val_offset:2786*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2786*FLEN/8, x4, x1, x2)

inst_1394:
// fs1 == 0 and fe1 == 0x11 and fm1 == 0x3a4 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x02f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x47a4; op2val:0x482f;
   valaddr_reg:x3; val_offset:2788*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2788*FLEN/8, x4, x1, x2)

inst_1395:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x110 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x251 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5110; op2val:0x3e51;
   valaddr_reg:x3; val_offset:2790*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2790*FLEN/8, x4, x1, x2)

inst_1396:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x110 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x251 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5110; op2val:0x3e51;
   valaddr_reg:x3; val_offset:2792*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2792*FLEN/8, x4, x1, x2)

inst_1397:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x110 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x251 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5110; op2val:0x3e51;
   valaddr_reg:x3; val_offset:2794*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2794*FLEN/8, x4, x1, x2)

inst_1398:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x110 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x251 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5110; op2val:0x3e51;
   valaddr_reg:x3; val_offset:2796*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2796*FLEN/8, x4, x1, x2)

inst_1399:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x110 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x251 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5110; op2val:0x3e51;
   valaddr_reg:x3; val_offset:2798*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2798*FLEN/8, x4, x1, x2)

inst_1400:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x231 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x12a and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e31; op2val:0x412a;
   valaddr_reg:x3; val_offset:2800*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2800*FLEN/8, x4, x1, x2)

inst_1401:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x231 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x12a and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e31; op2val:0x412a;
   valaddr_reg:x3; val_offset:2802*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2802*FLEN/8, x4, x1, x2)

inst_1402:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x231 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x12a and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e31; op2val:0x412a;
   valaddr_reg:x3; val_offset:2804*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2804*FLEN/8, x4, x1, x2)

inst_1403:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x231 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x12a and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e31; op2val:0x412a;
   valaddr_reg:x3; val_offset:2806*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2806*FLEN/8, x4, x1, x2)

inst_1404:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x231 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x12a and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e31; op2val:0x412a;
   valaddr_reg:x3; val_offset:2808*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2808*FLEN/8, x4, x1, x2)

inst_1405:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x309 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x08c and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f09; op2val:0x408c;
   valaddr_reg:x3; val_offset:2810*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2810*FLEN/8, x4, x1, x2)

inst_1406:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x309 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x08c and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f09; op2val:0x408c;
   valaddr_reg:x3; val_offset:2812*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2812*FLEN/8, x4, x1, x2)

inst_1407:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x309 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x08c and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f09; op2val:0x408c;
   valaddr_reg:x3; val_offset:2814*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2814*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_12)

inst_1408:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x309 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x08c and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f09; op2val:0x408c;
   valaddr_reg:x3; val_offset:2816*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2816*FLEN/8, x4, x1, x2)

inst_1409:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x309 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x08c and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4f09; op2val:0x408c;
   valaddr_reg:x3; val_offset:2818*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2818*FLEN/8, x4, x1, x2)

inst_1410:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x285 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0e8 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e85; op2val:0x40e8;
   valaddr_reg:x3; val_offset:2820*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2820*FLEN/8, x4, x1, x2)

inst_1411:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x285 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0e8 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e85; op2val:0x40e8;
   valaddr_reg:x3; val_offset:2822*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2822*FLEN/8, x4, x1, x2)

inst_1412:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x285 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0e8 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e85; op2val:0x40e8;
   valaddr_reg:x3; val_offset:2824*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2824*FLEN/8, x4, x1, x2)

inst_1413:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x285 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0e8 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e85; op2val:0x40e8;
   valaddr_reg:x3; val_offset:2826*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2826*FLEN/8, x4, x1, x2)

inst_1414:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x285 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0e8 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4e85; op2val:0x40e8;
   valaddr_reg:x3; val_offset:2828*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2828*FLEN/8, x4, x1, x2)

inst_1415:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x284 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0e9 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5284; op2val:0x3ce9;
   valaddr_reg:x3; val_offset:2830*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2830*FLEN/8, x4, x1, x2)

inst_1416:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x284 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0e9 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5284; op2val:0x3ce9;
   valaddr_reg:x3; val_offset:2832*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2832*FLEN/8, x4, x1, x2)

inst_1417:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x284 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0e9 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5284; op2val:0x3ce9;
   valaddr_reg:x3; val_offset:2834*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2834*FLEN/8, x4, x1, x2)

inst_1418:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x284 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0e9 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5284; op2val:0x3ce9;
   valaddr_reg:x3; val_offset:2836*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2836*FLEN/8, x4, x1, x2)

inst_1419:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x284 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0e9 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5284; op2val:0x3ce9;
   valaddr_reg:x3; val_offset:2838*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2838*FLEN/8, x4, x1, x2)

inst_1420:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b2 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x028 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4fb2; op2val:0x4028;
   valaddr_reg:x3; val_offset:2840*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2840*FLEN/8, x4, x1, x2)

inst_1421:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b2 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x028 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4fb2; op2val:0x4028;
   valaddr_reg:x3; val_offset:2842*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2842*FLEN/8, x4, x1, x2)

inst_1422:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b2 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x028 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4fb2; op2val:0x4028;
   valaddr_reg:x3; val_offset:2844*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2844*FLEN/8, x4, x1, x2)

inst_1423:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b2 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x028 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4fb2; op2val:0x4028;
   valaddr_reg:x3; val_offset:2846*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2846*FLEN/8, x4, x1, x2)

inst_1424:
// fs1 == 0 and fe1 == 0x13 and fm1 == 0x3b2 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x028 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4fb2; op2val:0x4028;
   valaddr_reg:x3; val_offset:2848*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2848*FLEN/8, x4, x1, x2)

inst_1425:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x227 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x133 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5227; op2val:0x3d33;
   valaddr_reg:x3; val_offset:2850*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2850*FLEN/8, x4, x1, x2)

inst_1426:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x227 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x133 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5227; op2val:0x3d33;
   valaddr_reg:x3; val_offset:2852*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2852*FLEN/8, x4, x1, x2)

inst_1427:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x227 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x133 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5227; op2val:0x3d33;
   valaddr_reg:x3; val_offset:2854*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2854*FLEN/8, x4, x1, x2)

inst_1428:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x227 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x133 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5227; op2val:0x3d33;
   valaddr_reg:x3; val_offset:2856*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2856*FLEN/8, x4, x1, x2)

inst_1429:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x227 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x133 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x5227; op2val:0x3d33;
   valaddr_reg:x3; val_offset:2858*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2858*FLEN/8, x4, x1, x2)

inst_1430:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x3b7 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x025 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4bb7; op2val:0x4425;
   valaddr_reg:x3; val_offset:2860*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2860*FLEN/8, x4, x1, x2)

inst_1431:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x3b7 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x025 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4bb7; op2val:0x4425;
   valaddr_reg:x3; val_offset:2862*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2862*FLEN/8, x4, x1, x2)

inst_1432:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x3b7 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x025 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4bb7; op2val:0x4425;
   valaddr_reg:x3; val_offset:2864*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2864*FLEN/8, x4, x1, x2)

inst_1433:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x3b7 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x025 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4bb7; op2val:0x4425;
   valaddr_reg:x3; val_offset:2866*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2866*FLEN/8, x4, x1, x2)

inst_1434:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x3b7 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x025 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4bb7; op2val:0x4425;
   valaddr_reg:x3; val_offset:2868*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2868*FLEN/8, x4, x1, x2)

inst_1435:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1af and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51a1; op2val:0x3daf;
   valaddr_reg:x3; val_offset:2870*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2870*FLEN/8, x4, x1, x2)

inst_1436:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1af and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51a1; op2val:0x3daf;
   valaddr_reg:x3; val_offset:2872*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2872*FLEN/8, x4, x1, x2)

inst_1437:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1af and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51a1; op2val:0x3daf;
   valaddr_reg:x3; val_offset:2874*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2874*FLEN/8, x4, x1, x2)

inst_1438:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1af and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51a1; op2val:0x3daf;
   valaddr_reg:x3; val_offset:2876*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2876*FLEN/8, x4, x1, x2)

inst_1439:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x1a1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x1af and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x51a1; op2val:0x3daf;
   valaddr_reg:x3; val_offset:2878*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2878*FLEN/8, x4, x1, x2)

inst_1440:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x1db and fs2 == 0 and fe2 == 0x13 and fm2 == 0x176 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x41db; op2val:0x4d76;
   valaddr_reg:x3; val_offset:2880*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2880*FLEN/8, x4, x1, x2)

inst_1441:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x1db and fs2 == 0 and fe2 == 0x13 and fm2 == 0x176 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x41db; op2val:0x4d76;
   valaddr_reg:x3; val_offset:2882*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2882*FLEN/8, x4, x1, x2)

inst_1442:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x1db and fs2 == 0 and fe2 == 0x13 and fm2 == 0x176 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x41db; op2val:0x4d76;
   valaddr_reg:x3; val_offset:2884*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2884*FLEN/8, x4, x1, x2)

inst_1443:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x1db and fs2 == 0 and fe2 == 0x13 and fm2 == 0x176 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x41db; op2val:0x4d76;
   valaddr_reg:x3; val_offset:2886*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2886*FLEN/8, x4, x1, x2)

inst_1444:
// fs1 == 0 and fe1 == 0x10 and fm1 == 0x1db and fs2 == 0 and fe2 == 0x13 and fm2 == 0x176 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x41db; op2val:0x4d76;
   valaddr_reg:x3; val_offset:2888*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2888*FLEN/8, x4, x1, x2)

inst_1445:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2dd and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0a9 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4add; op2val:0x44a9;
   valaddr_reg:x3; val_offset:2890*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2890*FLEN/8, x4, x1, x2)

inst_1446:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2dd and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0a9 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4add; op2val:0x44a9;
   valaddr_reg:x3; val_offset:2892*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2892*FLEN/8, x4, x1, x2)

inst_1447:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2dd and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0a9 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4add; op2val:0x44a9;
   valaddr_reg:x3; val_offset:2894*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2894*FLEN/8, x4, x1, x2)

inst_1448:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2dd and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0a9 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4add; op2val:0x44a9;
   valaddr_reg:x3; val_offset:2896*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2896*FLEN/8, x4, x1, x2)

inst_1449:
// fs1 == 0 and fe1 == 0x12 and fm1 == 0x2dd and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0a9 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x4add; op2val:0x44a9;
   valaddr_reg:x3; val_offset:2898*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2898*FLEN/8, x4, x1, x2)

inst_1450:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x2d2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50b1; op2val:0x3ed2;
   valaddr_reg:x3; val_offset:2900*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2900*FLEN/8, x4, x1, x2)

inst_1451:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x2d2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50b1; op2val:0x3ed2;
   valaddr_reg:x3; val_offset:2902*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2902*FLEN/8, x4, x1, x2)

inst_1452:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x2d2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50b1; op2val:0x3ed2;
   valaddr_reg:x3; val_offset:2904*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2904*FLEN/8, x4, x1, x2)

inst_1453:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x2d2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50b1; op2val:0x3ed2;
   valaddr_reg:x3; val_offset:2906*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2906*FLEN/8, x4, x1, x2)

inst_1454:
// fs1 == 0 and fe1 == 0x14 and fm1 == 0x0b1 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x2d2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x50b1; op2val:0x3ed2;
   valaddr_reg:x3; val_offset:2908*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2908*FLEN/8, x4, x1, x2)

inst_1455:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x0b and fm2 == 0x113 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364e; op2val:0x2d13;
   valaddr_reg:x3; val_offset:2910*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2910*FLEN/8, x4, x1, x2)

inst_1456:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x0b and fm2 == 0x113 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364e; op2val:0x2d13;
   valaddr_reg:x3; val_offset:2912*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2912*FLEN/8, x4, x1, x2)

inst_1457:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x0b and fm2 == 0x113 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364e; op2val:0x2d13;
   valaddr_reg:x3; val_offset:2914*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2914*FLEN/8, x4, x1, x2)

inst_1458:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x0b and fm2 == 0x113 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364e; op2val:0x2d13;
   valaddr_reg:x3; val_offset:2916*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2916*FLEN/8, x4, x1, x2)

inst_1459:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x24e and fs2 == 0 and fe2 == 0x0b and fm2 == 0x113 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x364e; op2val:0x2d13;
   valaddr_reg:x3; val_offset:2918*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2918*FLEN/8, x4, x1, x2)

inst_1460:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11b and fs2 == 0 and fe2 == 0x0b and fm2 == 0x243 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351b; op2val:0x2e43;
   valaddr_reg:x3; val_offset:2920*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2920*FLEN/8, x4, x1, x2)

inst_1461:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11b and fs2 == 0 and fe2 == 0x0b and fm2 == 0x243 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351b; op2val:0x2e43;
   valaddr_reg:x3; val_offset:2922*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2922*FLEN/8, x4, x1, x2)

inst_1462:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11b and fs2 == 0 and fe2 == 0x0b and fm2 == 0x243 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351b; op2val:0x2e43;
   valaddr_reg:x3; val_offset:2924*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2924*FLEN/8, x4, x1, x2)

inst_1463:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11b and fs2 == 0 and fe2 == 0x0b and fm2 == 0x243 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351b; op2val:0x2e43;
   valaddr_reg:x3; val_offset:2926*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2926*FLEN/8, x4, x1, x2)

inst_1464:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11b and fs2 == 0 and fe2 == 0x0b and fm2 == 0x243 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351b; op2val:0x2e43;
   valaddr_reg:x3; val_offset:2928*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2928*FLEN/8, x4, x1, x2)

inst_1465:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x031 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ba1; op2val:0x2831;
   valaddr_reg:x3; val_offset:2930*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2930*FLEN/8, x4, x1, x2)

inst_1466:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x031 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ba1; op2val:0x2831;
   valaddr_reg:x3; val_offset:2932*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2932*FLEN/8, x4, x1, x2)

inst_1467:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x031 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ba1; op2val:0x2831;
   valaddr_reg:x3; val_offset:2934*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2934*FLEN/8, x4, x1, x2)

inst_1468:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x031 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ba1; op2val:0x2831;
   valaddr_reg:x3; val_offset:2936*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2936*FLEN/8, x4, x1, x2)

inst_1469:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3a1 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x031 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ba1; op2val:0x2831;
   valaddr_reg:x3; val_offset:2938*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2938*FLEN/8, x4, x1, x2)

inst_1470:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x27c and fs2 == 0 and fe2 == 0x0c and fm2 == 0x0ef and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x327c; op2val:0x30ef;
   valaddr_reg:x3; val_offset:2940*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2940*FLEN/8, x4, x1, x2)

inst_1471:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x27c and fs2 == 0 and fe2 == 0x0c and fm2 == 0x0ef and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x327c; op2val:0x30ef;
   valaddr_reg:x3; val_offset:2942*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2942*FLEN/8, x4, x1, x2)

inst_1472:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x27c and fs2 == 0 and fe2 == 0x0c and fm2 == 0x0ef and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x327c; op2val:0x30ef;
   valaddr_reg:x3; val_offset:2944*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2944*FLEN/8, x4, x1, x2)

inst_1473:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x27c and fs2 == 0 and fe2 == 0x0c and fm2 == 0x0ef and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x327c; op2val:0x30ef;
   valaddr_reg:x3; val_offset:2946*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2946*FLEN/8, x4, x1, x2)

inst_1474:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x27c and fs2 == 0 and fe2 == 0x0c and fm2 == 0x0ef and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x327c; op2val:0x30ef;
   valaddr_reg:x3; val_offset:2948*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2948*FLEN/8, x4, x1, x2)

inst_1475:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0c1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ba; op2val:0x2cc1;
   valaddr_reg:x3; val_offset:2950*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2950*FLEN/8, x4, x1, x2)

inst_1476:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0c1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ba; op2val:0x2cc1;
   valaddr_reg:x3; val_offset:2952*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2952*FLEN/8, x4, x1, x2)

inst_1477:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0c1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ba; op2val:0x2cc1;
   valaddr_reg:x3; val_offset:2954*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2954*FLEN/8, x4, x1, x2)

inst_1478:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0c1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ba; op2val:0x2cc1;
   valaddr_reg:x3; val_offset:2956*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2956*FLEN/8, x4, x1, x2)

inst_1479:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x2ba and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0c1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x36ba; op2val:0x2cc1;
   valaddr_reg:x3; val_offset:2958*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2958*FLEN/8, x4, x1, x2)

inst_1480:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ef and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x28ef;
   valaddr_reg:x3; val_offset:2960*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2960*FLEN/8, x4, x1, x2)

inst_1481:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ef and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x28ef;
   valaddr_reg:x3; val_offset:2962*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2962*FLEN/8, x4, x1, x2)

inst_1482:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ef and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x28ef;
   valaddr_reg:x3; val_offset:2964*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2964*FLEN/8, x4, x1, x2)

inst_1483:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ef and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x28ef;
   valaddr_reg:x3; val_offset:2966*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2966*FLEN/8, x4, x1, x2)

inst_1484:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x27b and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ef and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a7b; op2val:0x28ef;
   valaddr_reg:x3; val_offset:2968*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2968*FLEN/8, x4, x1, x2)

inst_1485:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x225 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x135 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3625; op2val:0x2d35;
   valaddr_reg:x3; val_offset:2970*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2970*FLEN/8, x4, x1, x2)

inst_1486:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x225 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x135 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3625; op2val:0x2d35;
   valaddr_reg:x3; val_offset:2972*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2972*FLEN/8, x4, x1, x2)

inst_1487:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x225 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x135 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3625; op2val:0x2d35;
   valaddr_reg:x3; val_offset:2974*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2974*FLEN/8, x4, x1, x2)

inst_1488:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x225 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x135 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3625; op2val:0x2d35;
   valaddr_reg:x3; val_offset:2976*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2976*FLEN/8, x4, x1, x2)

inst_1489:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x225 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x135 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3625; op2val:0x2d35;
   valaddr_reg:x3; val_offset:2978*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2978*FLEN/8, x4, x1, x2)

inst_1490:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x28e1;
   valaddr_reg:x3; val_offset:2980*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2980*FLEN/8, x4, x1, x2)

inst_1491:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x28e1;
   valaddr_reg:x3; val_offset:2982*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2982*FLEN/8, x4, x1, x2)

inst_1492:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x28e1;
   valaddr_reg:x3; val_offset:2984*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2984*FLEN/8, x4, x1, x2)

inst_1493:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x28e1;
   valaddr_reg:x3; val_offset:2986*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2986*FLEN/8, x4, x1, x2)

inst_1494:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x28e and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a8e; op2val:0x28e1;
   valaddr_reg:x3; val_offset:2988*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2988*FLEN/8, x4, x1, x2)

inst_1495:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2bb and fs2 == 0 and fe2 == 0x0e and fm2 == 0x0c1 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2abb; op2val:0x38c1;
   valaddr_reg:x3; val_offset:2990*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 2990*FLEN/8, x4, x1, x2)

inst_1496:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2bb and fs2 == 0 and fe2 == 0x0e and fm2 == 0x0c1 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2abb; op2val:0x38c1;
   valaddr_reg:x3; val_offset:2992*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 2992*FLEN/8, x4, x1, x2)

inst_1497:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2bb and fs2 == 0 and fe2 == 0x0e and fm2 == 0x0c1 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2abb; op2val:0x38c1;
   valaddr_reg:x3; val_offset:2994*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 2994*FLEN/8, x4, x1, x2)

inst_1498:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2bb and fs2 == 0 and fe2 == 0x0e and fm2 == 0x0c1 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2abb; op2val:0x38c1;
   valaddr_reg:x3; val_offset:2996*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 2996*FLEN/8, x4, x1, x2)

inst_1499:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x2bb and fs2 == 0 and fe2 == 0x0e and fm2 == 0x0c1 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2abb; op2val:0x38c1;
   valaddr_reg:x3; val_offset:2998*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 2998*FLEN/8, x4, x1, x2)

inst_1500:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x067 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x344 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3867; op2val:0x2b44;
   valaddr_reg:x3; val_offset:3000*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3000*FLEN/8, x4, x1, x2)

inst_1501:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x067 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x344 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3867; op2val:0x2b44;
   valaddr_reg:x3; val_offset:3002*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3002*FLEN/8, x4, x1, x2)

inst_1502:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x067 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x344 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3867; op2val:0x2b44;
   valaddr_reg:x3; val_offset:3004*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3004*FLEN/8, x4, x1, x2)

inst_1503:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x067 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x344 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3867; op2val:0x2b44;
   valaddr_reg:x3; val_offset:3006*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3006*FLEN/8, x4, x1, x2)

inst_1504:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x067 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x344 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3867; op2val:0x2b44;
   valaddr_reg:x3; val_offset:3008*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3008*FLEN/8, x4, x1, x2)

inst_1505:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x103 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a61; op2val:0x2903;
   valaddr_reg:x3; val_offset:3010*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3010*FLEN/8, x4, x1, x2)

inst_1506:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x103 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a61; op2val:0x2903;
   valaddr_reg:x3; val_offset:3012*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3012*FLEN/8, x4, x1, x2)

inst_1507:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x103 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a61; op2val:0x2903;
   valaddr_reg:x3; val_offset:3014*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3014*FLEN/8, x4, x1, x2)

inst_1508:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x103 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a61; op2val:0x2903;
   valaddr_reg:x3; val_offset:3016*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3016*FLEN/8, x4, x1, x2)

inst_1509:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x261 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x103 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a61; op2val:0x2903;
   valaddr_reg:x3; val_offset:3018*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3018*FLEN/8, x4, x1, x2)

inst_1510:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x122 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x23b and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3522; op2val:0x2e3b;
   valaddr_reg:x3; val_offset:3020*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3020*FLEN/8, x4, x1, x2)

inst_1511:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x122 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x23b and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3522; op2val:0x2e3b;
   valaddr_reg:x3; val_offset:3022*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3022*FLEN/8, x4, x1, x2)

inst_1512:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x122 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x23b and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3522; op2val:0x2e3b;
   valaddr_reg:x3; val_offset:3024*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3024*FLEN/8, x4, x1, x2)

inst_1513:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x122 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x23b and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3522; op2val:0x2e3b;
   valaddr_reg:x3; val_offset:3026*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3026*FLEN/8, x4, x1, x2)

inst_1514:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x122 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x23b and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3522; op2val:0x2e3b;
   valaddr_reg:x3; val_offset:3028*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3028*FLEN/8, x4, x1, x2)

inst_1515:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x006 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3f4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3006; op2val:0x33f4;
   valaddr_reg:x3; val_offset:3030*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3030*FLEN/8, x4, x1, x2)

inst_1516:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x006 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3f4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3006; op2val:0x33f4;
   valaddr_reg:x3; val_offset:3032*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3032*FLEN/8, x4, x1, x2)

inst_1517:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x006 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3f4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3006; op2val:0x33f4;
   valaddr_reg:x3; val_offset:3034*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3034*FLEN/8, x4, x1, x2)

inst_1518:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x006 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3f4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3006; op2val:0x33f4;
   valaddr_reg:x3; val_offset:3036*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3036*FLEN/8, x4, x1, x2)

inst_1519:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x006 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3f4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3006; op2val:0x33f4;
   valaddr_reg:x3; val_offset:3038*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3038*FLEN/8, x4, x1, x2)

inst_1520:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cd and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2aa and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cd; op2val:0x2aaa;
   valaddr_reg:x3; val_offset:3040*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3040*FLEN/8, x4, x1, x2)

inst_1521:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cd and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2aa and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cd; op2val:0x2aaa;
   valaddr_reg:x3; val_offset:3042*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3042*FLEN/8, x4, x1, x2)

inst_1522:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cd and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2aa and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cd; op2val:0x2aaa;
   valaddr_reg:x3; val_offset:3044*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3044*FLEN/8, x4, x1, x2)

inst_1523:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cd and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2aa and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cd; op2val:0x2aaa;
   valaddr_reg:x3; val_offset:3046*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3046*FLEN/8, x4, x1, x2)

inst_1524:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0cd and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2aa and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38cd; op2val:0x2aaa;
   valaddr_reg:x3; val_offset:3048*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3048*FLEN/8, x4, x1, x2)

inst_1525:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x29f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34d5; op2val:0x2e9f;
   valaddr_reg:x3; val_offset:3050*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3050*FLEN/8, x4, x1, x2)

inst_1526:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x29f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34d5; op2val:0x2e9f;
   valaddr_reg:x3; val_offset:3052*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3052*FLEN/8, x4, x1, x2)

inst_1527:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x29f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34d5; op2val:0x2e9f;
   valaddr_reg:x3; val_offset:3054*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3054*FLEN/8, x4, x1, x2)

inst_1528:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x29f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34d5; op2val:0x2e9f;
   valaddr_reg:x3; val_offset:3056*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3056*FLEN/8, x4, x1, x2)

inst_1529:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0d5 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x29f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34d5; op2val:0x2e9f;
   valaddr_reg:x3; val_offset:3058*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3058*FLEN/8, x4, x1, x2)

inst_1530:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1c8 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x189 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35c8; op2val:0x2d89;
   valaddr_reg:x3; val_offset:3060*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3060*FLEN/8, x4, x1, x2)

inst_1531:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1c8 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x189 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35c8; op2val:0x2d89;
   valaddr_reg:x3; val_offset:3062*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3062*FLEN/8, x4, x1, x2)

inst_1532:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1c8 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x189 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35c8; op2val:0x2d89;
   valaddr_reg:x3; val_offset:3064*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3064*FLEN/8, x4, x1, x2)

inst_1533:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1c8 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x189 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35c8; op2val:0x2d89;
   valaddr_reg:x3; val_offset:3066*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3066*FLEN/8, x4, x1, x2)

inst_1534:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x1c8 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x189 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x35c8; op2val:0x2d89;
   valaddr_reg:x3; val_offset:3068*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3068*FLEN/8, x4, x1, x2)

inst_1535:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x241 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351d; op2val:0x2e41;
   valaddr_reg:x3; val_offset:3070*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3070*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_13)

inst_1536:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x241 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351d; op2val:0x2e41;
   valaddr_reg:x3; val_offset:3072*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3072*FLEN/8, x4, x1, x2)

inst_1537:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x241 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351d; op2val:0x2e41;
   valaddr_reg:x3; val_offset:3074*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3074*FLEN/8, x4, x1, x2)

inst_1538:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x241 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351d; op2val:0x2e41;
   valaddr_reg:x3; val_offset:3076*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3076*FLEN/8, x4, x1, x2)

inst_1539:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x11d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x241 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x351d; op2val:0x2e41;
   valaddr_reg:x3; val_offset:3078*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3078*FLEN/8, x4, x1, x2)

inst_1540:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x38c and fs2 == 0 and fe2 == 0x0d and fm2 == 0x03d and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2f8c; op2val:0x343d;
   valaddr_reg:x3; val_offset:3080*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3080*FLEN/8, x4, x1, x2)

inst_1541:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x38c and fs2 == 0 and fe2 == 0x0d and fm2 == 0x03d and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2f8c; op2val:0x343d;
   valaddr_reg:x3; val_offset:3082*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3082*FLEN/8, x4, x1, x2)

inst_1542:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x38c and fs2 == 0 and fe2 == 0x0d and fm2 == 0x03d and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2f8c; op2val:0x343d;
   valaddr_reg:x3; val_offset:3084*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3084*FLEN/8, x4, x1, x2)

inst_1543:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x38c and fs2 == 0 and fe2 == 0x0d and fm2 == 0x03d and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2f8c; op2val:0x343d;
   valaddr_reg:x3; val_offset:3086*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3086*FLEN/8, x4, x1, x2)

inst_1544:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x38c and fs2 == 0 and fe2 == 0x0d and fm2 == 0x03d and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2f8c; op2val:0x343d;
   valaddr_reg:x3; val_offset:3088*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3088*FLEN/8, x4, x1, x2)

inst_1545:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x16a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1e8 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x396a; op2val:0x29e8;
   valaddr_reg:x3; val_offset:3090*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3090*FLEN/8, x4, x1, x2)

inst_1546:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x16a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1e8 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x396a; op2val:0x29e8;
   valaddr_reg:x3; val_offset:3092*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3092*FLEN/8, x4, x1, x2)

inst_1547:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x16a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1e8 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x396a; op2val:0x29e8;
   valaddr_reg:x3; val_offset:3094*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3094*FLEN/8, x4, x1, x2)

inst_1548:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x16a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1e8 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x396a; op2val:0x29e8;
   valaddr_reg:x3; val_offset:3096*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3096*FLEN/8, x4, x1, x2)

inst_1549:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x16a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1e8 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x396a; op2val:0x29e8;
   valaddr_reg:x3; val_offset:3098*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3098*FLEN/8, x4, x1, x2)

inst_1550:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x274 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x2a74;
   valaddr_reg:x3; val_offset:3100*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3100*FLEN/8, x4, x1, x2)

inst_1551:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x274 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x2a74;
   valaddr_reg:x3; val_offset:3102*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3102*FLEN/8, x4, x1, x2)

inst_1552:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x274 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x2a74;
   valaddr_reg:x3; val_offset:3104*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3104*FLEN/8, x4, x1, x2)

inst_1553:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x274 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x2a74;
   valaddr_reg:x3; val_offset:3106*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3106*FLEN/8, x4, x1, x2)

inst_1554:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x0f5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x274 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x38f5; op2val:0x2a74;
   valaddr_reg:x3; val_offset:3108*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3108*FLEN/8, x4, x1, x2)

inst_1555:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b9 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x0c2 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb9; op2val:0x34c2;
   valaddr_reg:x3; val_offset:3110*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3110*FLEN/8, x4, x1, x2)

inst_1556:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b9 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x0c2 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb9; op2val:0x34c2;
   valaddr_reg:x3; val_offset:3112*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3112*FLEN/8, x4, x1, x2)

inst_1557:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b9 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x0c2 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb9; op2val:0x34c2;
   valaddr_reg:x3; val_offset:3114*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3114*FLEN/8, x4, x1, x2)

inst_1558:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b9 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x0c2 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb9; op2val:0x34c2;
   valaddr_reg:x3; val_offset:3116*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3116*FLEN/8, x4, x1, x2)

inst_1559:
// fs1 == 0 and fe1 == 0x0b and fm1 == 0x2b9 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x0c2 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x2eb9; op2val:0x34c2;
   valaddr_reg:x3; val_offset:3118*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3118*FLEN/8, x4, x1, x2)

inst_1560:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x007 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x3f0 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3407; op2val:0x2ff0;
   valaddr_reg:x3; val_offset:3120*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3120*FLEN/8, x4, x1, x2)

inst_1561:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x007 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x3f0 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3407; op2val:0x2ff0;
   valaddr_reg:x3; val_offset:3122*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3122*FLEN/8, x4, x1, x2)

inst_1562:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x007 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x3f0 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3407; op2val:0x2ff0;
   valaddr_reg:x3; val_offset:3124*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3124*FLEN/8, x4, x1, x2)

inst_1563:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x007 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x3f0 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3407; op2val:0x2ff0;
   valaddr_reg:x3; val_offset:3126*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3126*FLEN/8, x4, x1, x2)

inst_1564:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x007 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x3f0 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3407; op2val:0x2ff0;
   valaddr_reg:x3; val_offset:3128*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3128*FLEN/8, x4, x1, x2)

inst_1565:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a0 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x032 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a0; op2val:0x3032;
   valaddr_reg:x3; val_offset:3130*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3130*FLEN/8, x4, x1, x2)

inst_1566:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a0 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x032 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a0; op2val:0x3032;
   valaddr_reg:x3; val_offset:3132*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3132*FLEN/8, x4, x1, x2)

inst_1567:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a0 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x032 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a0; op2val:0x3032;
   valaddr_reg:x3; val_offset:3134*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3134*FLEN/8, x4, x1, x2)

inst_1568:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a0 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x032 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a0; op2val:0x3032;
   valaddr_reg:x3; val_offset:3136*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3136*FLEN/8, x4, x1, x2)

inst_1569:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x3a0 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x032 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x33a0; op2val:0x3032;
   valaddr_reg:x3; val_offset:3138*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3138*FLEN/8, x4, x1, x2)

inst_1570:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x325 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387a; op2val:0x2b25;
   valaddr_reg:x3; val_offset:3140*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3140*FLEN/8, x4, x1, x2)

inst_1571:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x325 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387a; op2val:0x2b25;
   valaddr_reg:x3; val_offset:3142*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3142*FLEN/8, x4, x1, x2)

inst_1572:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x325 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387a; op2val:0x2b25;
   valaddr_reg:x3; val_offset:3144*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3144*FLEN/8, x4, x1, x2)

inst_1573:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x325 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387a; op2val:0x2b25;
   valaddr_reg:x3; val_offset:3146*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3146*FLEN/8, x4, x1, x2)

inst_1574:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x07a and fs2 == 0 and fe2 == 0x0a and fm2 == 0x325 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x387a; op2val:0x2b25;
   valaddr_reg:x3; val_offset:3148*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3148*FLEN/8, x4, x1, x2)

inst_1575:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x363 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3855; op2val:0x2b63;
   valaddr_reg:x3; val_offset:3150*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3150*FLEN/8, x4, x1, x2)

inst_1576:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x363 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3855; op2val:0x2b63;
   valaddr_reg:x3; val_offset:3152*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3152*FLEN/8, x4, x1, x2)

inst_1577:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x363 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3855; op2val:0x2b63;
   valaddr_reg:x3; val_offset:3154*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3154*FLEN/8, x4, x1, x2)

inst_1578:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x363 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3855; op2val:0x2b63;
   valaddr_reg:x3; val_offset:3156*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3156*FLEN/8, x4, x1, x2)

inst_1579:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x055 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x363 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3855; op2val:0x2b63;
   valaddr_reg:x3; val_offset:3158*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3158*FLEN/8, x4, x1, x2)

inst_1580:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e8 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a85; op2val:0x28e8;
   valaddr_reg:x3; val_offset:3160*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3160*FLEN/8, x4, x1, x2)

inst_1581:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e8 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a85; op2val:0x28e8;
   valaddr_reg:x3; val_offset:3162*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3162*FLEN/8, x4, x1, x2)

inst_1582:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e8 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a85; op2val:0x28e8;
   valaddr_reg:x3; val_offset:3164*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3164*FLEN/8, x4, x1, x2)

inst_1583:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e8 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a85; op2val:0x28e8;
   valaddr_reg:x3; val_offset:3166*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3166*FLEN/8, x4, x1, x2)

inst_1584:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0e8 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a85; op2val:0x28e8;
   valaddr_reg:x3; val_offset:3168*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3168*FLEN/8, x4, x1, x2)

inst_1585:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ea and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x28ea;
   valaddr_reg:x3; val_offset:3170*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3170*FLEN/8, x4, x1, x2)

inst_1586:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ea and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x28ea;
   valaddr_reg:x3; val_offset:3172*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3172*FLEN/8, x4, x1, x2)

inst_1587:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ea and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x28ea;
   valaddr_reg:x3; val_offset:3174*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3174*FLEN/8, x4, x1, x2)

inst_1588:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ea and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x28ea;
   valaddr_reg:x3; val_offset:3176*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3176*FLEN/8, x4, x1, x2)

inst_1589:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x282 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ea and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a82; op2val:0x28ea;
   valaddr_reg:x3; val_offset:3178*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3178*FLEN/8, x4, x1, x2)

inst_1590:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x07f and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x371d; op2val:0x2c7f;
   valaddr_reg:x3; val_offset:3180*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3180*FLEN/8, x4, x1, x2)

inst_1591:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x07f and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x371d; op2val:0x2c7f;
   valaddr_reg:x3; val_offset:3182*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3182*FLEN/8, x4, x1, x2)

inst_1592:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x07f and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x371d; op2val:0x2c7f;
   valaddr_reg:x3; val_offset:3184*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3184*FLEN/8, x4, x1, x2)

inst_1593:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x07f and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x371d; op2val:0x2c7f;
   valaddr_reg:x3; val_offset:3186*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3186*FLEN/8, x4, x1, x2)

inst_1594:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x31d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x07f and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x371d; op2val:0x2c7f;
   valaddr_reg:x3; val_offset:3188*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3188*FLEN/8, x4, x1, x2)

inst_1595:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ad and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ca and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aad; op2val:0x28ca;
   valaddr_reg:x3; val_offset:3190*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3190*FLEN/8, x4, x1, x2)

inst_1596:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ad and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ca and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aad; op2val:0x28ca;
   valaddr_reg:x3; val_offset:3192*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3192*FLEN/8, x4, x1, x2)

inst_1597:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ad and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ca and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aad; op2val:0x28ca;
   valaddr_reg:x3; val_offset:3194*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3194*FLEN/8, x4, x1, x2)

inst_1598:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ad and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ca and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aad; op2val:0x28ca;
   valaddr_reg:x3; val_offset:3196*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3196*FLEN/8, x4, x1, x2)

inst_1599:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2ad and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0ca and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3aad; op2val:0x28ca;
   valaddr_reg:x3; val_offset:3198*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3198*FLEN/8, x4, x1, x2)

inst_1600:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x155 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x1ff and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3155; op2val:0x31ff;
   valaddr_reg:x3; val_offset:3200*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3200*FLEN/8, x4, x1, x2)

inst_1601:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x155 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x1ff and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3155; op2val:0x31ff;
   valaddr_reg:x3; val_offset:3202*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3202*FLEN/8, x4, x1, x2)

inst_1602:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x155 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x1ff and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3155; op2val:0x31ff;
   valaddr_reg:x3; val_offset:3204*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3204*FLEN/8, x4, x1, x2)

inst_1603:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x155 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x1ff and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3155; op2val:0x31ff;
   valaddr_reg:x3; val_offset:3206*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3206*FLEN/8, x4, x1, x2)

inst_1604:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x155 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x1ff and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3155; op2val:0x31ff;
   valaddr_reg:x3; val_offset:3208*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3208*FLEN/8, x4, x1, x2)

inst_1605:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x274 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0f4 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3674; op2val:0x2cf4;
   valaddr_reg:x3; val_offset:3210*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3210*FLEN/8, x4, x1, x2)

inst_1606:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x274 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0f4 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3674; op2val:0x2cf4;
   valaddr_reg:x3; val_offset:3212*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3212*FLEN/8, x4, x1, x2)

inst_1607:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x274 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0f4 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3674; op2val:0x2cf4;
   valaddr_reg:x3; val_offset:3214*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3214*FLEN/8, x4, x1, x2)

inst_1608:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x274 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0f4 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3674; op2val:0x2cf4;
   valaddr_reg:x3; val_offset:3216*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3216*FLEN/8, x4, x1, x2)

inst_1609:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x274 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x0f4 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3674; op2val:0x2cf4;
   valaddr_reg:x3; val_offset:3218*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3218*FLEN/8, x4, x1, x2)

inst_1610:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x091 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x300 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3091; op2val:0x3300;
   valaddr_reg:x3; val_offset:3220*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3220*FLEN/8, x4, x1, x2)

inst_1611:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x091 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x300 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3091; op2val:0x3300;
   valaddr_reg:x3; val_offset:3222*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3222*FLEN/8, x4, x1, x2)

inst_1612:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x091 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x300 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3091; op2val:0x3300;
   valaddr_reg:x3; val_offset:3224*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3224*FLEN/8, x4, x1, x2)

inst_1613:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x091 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x300 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3091; op2val:0x3300;
   valaddr_reg:x3; val_offset:3226*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3226*FLEN/8, x4, x1, x2)

inst_1614:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x091 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x300 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3091; op2val:0x3300;
   valaddr_reg:x3; val_offset:3228*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3228*FLEN/8, x4, x1, x2)

inst_1615:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1b3 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x399d; op2val:0x29b3;
   valaddr_reg:x3; val_offset:3230*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3230*FLEN/8, x4, x1, x2)

inst_1616:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1b3 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x399d; op2val:0x29b3;
   valaddr_reg:x3; val_offset:3232*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3232*FLEN/8, x4, x1, x2)

inst_1617:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1b3 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x399d; op2val:0x29b3;
   valaddr_reg:x3; val_offset:3234*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3234*FLEN/8, x4, x1, x2)

inst_1618:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1b3 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x399d; op2val:0x29b3;
   valaddr_reg:x3; val_offset:3236*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3236*FLEN/8, x4, x1, x2)

inst_1619:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1b3 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x399d; op2val:0x29b3;
   valaddr_reg:x3; val_offset:3238*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3238*FLEN/8, x4, x1, x2)

inst_1620:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x20e and fs2 == 0 and fe2 == 0x0c and fm2 == 0x148 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x320e; op2val:0x3148;
   valaddr_reg:x3; val_offset:3240*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3240*FLEN/8, x4, x1, x2)

inst_1621:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x20e and fs2 == 0 and fe2 == 0x0c and fm2 == 0x148 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x320e; op2val:0x3148;
   valaddr_reg:x3; val_offset:3242*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3242*FLEN/8, x4, x1, x2)

inst_1622:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x20e and fs2 == 0 and fe2 == 0x0c and fm2 == 0x148 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x320e; op2val:0x3148;
   valaddr_reg:x3; val_offset:3244*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3244*FLEN/8, x4, x1, x2)

inst_1623:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x20e and fs2 == 0 and fe2 == 0x0c and fm2 == 0x148 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x320e; op2val:0x3148;
   valaddr_reg:x3; val_offset:3246*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3246*FLEN/8, x4, x1, x2)

inst_1624:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x20e and fs2 == 0 and fe2 == 0x0c and fm2 == 0x148 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x320e; op2val:0x3148;
   valaddr_reg:x3; val_offset:3248*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3248*FLEN/8, x4, x1, x2)

inst_1625:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e6 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x00c and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be6; op2val:0x280c;
   valaddr_reg:x3; val_offset:3250*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3250*FLEN/8, x4, x1, x2)

inst_1626:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e6 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x00c and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be6; op2val:0x280c;
   valaddr_reg:x3; val_offset:3252*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3252*FLEN/8, x4, x1, x2)

inst_1627:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e6 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x00c and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be6; op2val:0x280c;
   valaddr_reg:x3; val_offset:3254*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3254*FLEN/8, x4, x1, x2)

inst_1628:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e6 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x00c and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be6; op2val:0x280c;
   valaddr_reg:x3; val_offset:3256*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3256*FLEN/8, x4, x1, x2)

inst_1629:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x3e6 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x00c and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3be6; op2val:0x280c;
   valaddr_reg:x3; val_offset:3258*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3258*FLEN/8, x4, x1, x2)

inst_1630:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0f3 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x28f3;
   valaddr_reg:x3; val_offset:3260*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3260*FLEN/8, x4, x1, x2)

inst_1631:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0f3 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x28f3;
   valaddr_reg:x3; val_offset:3262*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3262*FLEN/8, x4, x1, x2)

inst_1632:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0f3 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x28f3;
   valaddr_reg:x3; val_offset:3264*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3264*FLEN/8, x4, x1, x2)

inst_1633:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0f3 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x28f3;
   valaddr_reg:x3; val_offset:3266*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3266*FLEN/8, x4, x1, x2)

inst_1634:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x277 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0f3 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3a77; op2val:0x28f3;
   valaddr_reg:x3; val_offset:3268*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3268*FLEN/8, x4, x1, x2)

inst_1635:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x187 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1ca and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3987; op2val:0x29ca;
   valaddr_reg:x3; val_offset:3270*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3270*FLEN/8, x4, x1, x2)

inst_1636:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x187 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1ca and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3987; op2val:0x29ca;
   valaddr_reg:x3; val_offset:3272*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3272*FLEN/8, x4, x1, x2)

inst_1637:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x187 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1ca and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3987; op2val:0x29ca;
   valaddr_reg:x3; val_offset:3274*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3274*FLEN/8, x4, x1, x2)

inst_1638:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x187 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1ca and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3987; op2val:0x29ca;
   valaddr_reg:x3; val_offset:3276*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3276*FLEN/8, x4, x1, x2)

inst_1639:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x187 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x1ca and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3987; op2val:0x29ca;
   valaddr_reg:x3; val_offset:3278*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3278*FLEN/8, x4, x1, x2)

inst_1640:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b3 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34c6; op2val:0x2eb3;
   valaddr_reg:x3; val_offset:3280*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3280*FLEN/8, x4, x1, x2)

inst_1641:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b3 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34c6; op2val:0x2eb3;
   valaddr_reg:x3; val_offset:3282*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3282*FLEN/8, x4, x1, x2)

inst_1642:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b3 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34c6; op2val:0x2eb3;
   valaddr_reg:x3; val_offset:3284*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3284*FLEN/8, x4, x1, x2)

inst_1643:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b3 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34c6; op2val:0x2eb3;
   valaddr_reg:x3; val_offset:3286*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3286*FLEN/8, x4, x1, x2)

inst_1644:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x0c6 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x2b3 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x34c6; op2val:0x2eb3;
   valaddr_reg:x3; val_offset:3288*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3288*FLEN/8, x4, x1, x2)

inst_1645:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2fa and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3895; op2val:0x2afa;
   valaddr_reg:x3; val_offset:3290*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3290*FLEN/8, x4, x1, x2)

inst_1646:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2fa and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3895; op2val:0x2afa;
   valaddr_reg:x3; val_offset:3292*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3292*FLEN/8, x4, x1, x2)

inst_1647:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2fa and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3895; op2val:0x2afa;
   valaddr_reg:x3; val_offset:3294*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3294*FLEN/8, x4, x1, x2)

inst_1648:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2fa and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3895; op2val:0x2afa;
   valaddr_reg:x3; val_offset:3296*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3296*FLEN/8, x4, x1, x2)

inst_1649:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x095 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x2fa and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3895; op2val:0x2afa;
   valaddr_reg:x3; val_offset:3298*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3298*FLEN/8, x4, x1, x2)

inst_1650:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x229 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3229; op2val:0x3131;
   valaddr_reg:x3; val_offset:3300*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3300*FLEN/8, x4, x1, x2)

inst_1651:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x229 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3229; op2val:0x3131;
   valaddr_reg:x3; val_offset:3302*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3302*FLEN/8, x4, x1, x2)

inst_1652:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x229 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3229; op2val:0x3131;
   valaddr_reg:x3; val_offset:3304*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3304*FLEN/8, x4, x1, x2)

inst_1653:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x229 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3229; op2val:0x3131;
   valaddr_reg:x3; val_offset:3306*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3306*FLEN/8, x4, x1, x2)

inst_1654:
// fs1 == 0 and fe1 == 0x0c and fm1 == 0x229 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x131 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3229; op2val:0x3131;
   valaddr_reg:x3; val_offset:3308*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3308*FLEN/8, x4, x1, x2)

inst_1655:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x303 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x090 and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3703; op2val:0x2c90;
   valaddr_reg:x3; val_offset:3310*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3310*FLEN/8, x4, x1, x2)

inst_1656:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x303 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x090 and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3703; op2val:0x2c90;
   valaddr_reg:x3; val_offset:3312*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3312*FLEN/8, x4, x1, x2)

inst_1657:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x303 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x090 and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3703; op2val:0x2c90;
   valaddr_reg:x3; val_offset:3314*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3314*FLEN/8, x4, x1, x2)

inst_1658:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x303 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x090 and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3703; op2val:0x2c90;
   valaddr_reg:x3; val_offset:3316*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3316*FLEN/8, x4, x1, x2)

inst_1659:
// fs1 == 0 and fe1 == 0x0d and fm1 == 0x303 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x090 and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3703; op2val:0x2c90;
   valaddr_reg:x3; val_offset:3318*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3318*FLEN/8, x4, x1, x2)

inst_1660:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0af and  fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad5; op2val:0x28af;
   valaddr_reg:x3; val_offset:3320*FLEN/8; rmval:dyn; fcsr: 0;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 0, 0, x3, 3320*FLEN/8, x4, x1, x2)

inst_1661:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0af and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad5; op2val:0x28af;
   valaddr_reg:x3; val_offset:3322*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3322*FLEN/8, x4, x1, x2)

inst_1662:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0af and  fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad5; op2val:0x28af;
   valaddr_reg:x3; val_offset:3324*FLEN/8; rmval:dyn; fcsr: 64;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 64, 0, x3, 3324*FLEN/8, x4, x1, x2)

inst_1663:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0af and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad5; op2val:0x28af;
   valaddr_reg:x3; val_offset:3326*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3326*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_14)

inst_1664:
// fs1 == 0 and fe1 == 0x0e and fm1 == 0x2d5 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x0af and  fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x3ad5; op2val:0x28af;
   valaddr_reg:x3; val_offset:3328*FLEN/8; rmval:dyn; fcsr: 128;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 128, 0, x3, 3328*FLEN/8, x4, x1, x2)

inst_1665:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02d and  fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x29a0; op2val:0x2d;
   valaddr_reg:x3; val_offset:3330*FLEN/8; rmval:dyn; fcsr: 32;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 32, 0, x3, 3330*FLEN/8, x4, x1, x2)

inst_1666:
// fs1 == 0 and fe1 == 0x0a and fm1 == 0x1a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x02d and  fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff  
/* opcode: fmul.h ; op1:f30; op2:f29; dest:f31; op1val:0x29a0; op2val:0x2d;
   valaddr_reg:x3; val_offset:3332*FLEN/8; rmval:dyn; fcsr: 96;
   correctval:??; testreg:x2
*/
TEST_FPRR_OP(fmul.h, f31, f30, f29, dyn, 96, 0, x3, 3332*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(10656,16,FLEN)
NAN_BOXED(45,16,FLEN)
NAN_BOXED(10656,16,FLEN)
NAN_BOXED(10656,16,FLEN)
NAN_BOXED(10656,16,FLEN)
NAN_BOXED(45,16,FLEN)
NAN_BOXED(10656,16,FLEN)
NAN_BOXED(10656,16,FLEN)
NAN_BOXED(10656,16,FLEN)
NAN_BOXED(45,16,FLEN)
NAN_BOXED(15244,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(15244,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(15244,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(15244,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(15244,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(12611,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(12611,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(12611,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(12611,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(12611,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(13640,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13640,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13640,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13640,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13640,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(14003,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14003,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14003,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14003,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14003,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14477,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14477,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14477,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14477,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14477,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(13422,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13422,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13422,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13422,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13422,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(10874,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(10874,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(10874,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(10874,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(10874,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(14448,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14448,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14448,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14448,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14448,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(15286,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14407,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14407,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14407,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14407,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14407,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14230,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14230,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14230,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14230,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14230,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14876,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14876,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14876,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14876,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14876,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14694,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14694,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14694,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14694,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14694,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14294,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14294,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14294,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14294,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14294,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(13621,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13621,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13621,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13621,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13621,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(11983,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(11983,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(11983,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(11983,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(11983,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(13375,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13375,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13375,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13375,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13375,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13206,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(13206,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(13206,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(13206,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(13206,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(14635,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14635,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14635,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14635,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14635,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(10464,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(10464,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(10464,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(10464,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(10464,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(13279,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(13279,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(13279,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(13279,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(13279,16,FLEN)
NAN_BOXED(8,16,FLEN)
NAN_BOXED(14415,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14415,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14415,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14415,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14415,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14356,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14356,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14356,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14356,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14356,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(14332,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14332,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14332,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14332,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14332,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(11883,16,FLEN)
NAN_BOXED(19,16,FLEN)
NAN_BOXED(11883,16,FLEN)
NAN_BOXED(19,16,FLEN)
NAN_BOXED(11883,16,FLEN)
NAN_BOXED(19,16,FLEN)
NAN_BOXED(11883,16,FLEN)
NAN_BOXED(19,16,FLEN)
NAN_BOXED(11883,16,FLEN)
NAN_BOXED(19,16,FLEN)
NAN_BOXED(14058,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14058,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14058,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14058,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14058,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(7,16,FLEN)
NAN_BOXED(14905,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14905,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14905,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14905,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14905,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(13518,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(11748,16,FLEN)
NAN_BOXED(21,16,FLEN)
NAN_BOXED(11748,16,FLEN)
NAN_BOXED(21,16,FLEN)
NAN_BOXED(11748,16,FLEN)
NAN_BOXED(21,16,FLEN)
NAN_BOXED(11748,16,FLEN)
NAN_BOXED(21,16,FLEN)
NAN_BOXED(11748,16,FLEN)
NAN_BOXED(21,16,FLEN)
NAN_BOXED(11691,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(11691,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(11691,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(11691,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(11691,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(10613,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(10613,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(10613,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(10613,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(10613,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(14318,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14318,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14318,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14318,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14318,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(13715,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13715,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13715,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13715,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13715,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(14721,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14721,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14721,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14721,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14721,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(14287,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14287,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14287,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14287,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(14287,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(13831,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13831,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13831,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13831,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(13831,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(12735,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(12735,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(12735,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(12735,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(12735,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(11753,16,FLEN)
NAN_BOXED(4454,16,FLEN)
NAN_BOXED(11753,16,FLEN)
NAN_BOXED(4454,16,FLEN)
NAN_BOXED(11753,16,FLEN)
NAN_BOXED(4454,16,FLEN)
NAN_BOXED(11753,16,FLEN)
NAN_BOXED(4454,16,FLEN)
NAN_BOXED(11753,16,FLEN)
NAN_BOXED(4454,16,FLEN)
NAN_BOXED(13333,16,FLEN)
NAN_BOXED(3025,16,FLEN)
NAN_BOXED(13333,16,FLEN)
NAN_BOXED(3025,16,FLEN)
NAN_BOXED(13333,16,FLEN)
NAN_BOXED(3025,16,FLEN)
NAN_BOXED(13333,16,FLEN)
NAN_BOXED(3025,16,FLEN)
NAN_BOXED(13333,16,FLEN)
NAN_BOXED(3025,16,FLEN)
NAN_BOXED(13709,16,FLEN)
NAN_BOXED(2496,16,FLEN)
NAN_BOXED(13709,16,FLEN)
NAN_BOXED(2496,16,FLEN)
NAN_BOXED(13709,16,FLEN)
NAN_BOXED(2496,16,FLEN)
NAN_BOXED(13709,16,FLEN)
NAN_BOXED(2496,16,FLEN)
NAN_BOXED(13709,16,FLEN)
NAN_BOXED(2496,16,FLEN)
NAN_BOXED(14895,16,FLEN)
NAN_BOXED(1321,16,FLEN)
NAN_BOXED(14895,16,FLEN)
NAN_BOXED(1321,16,FLEN)
NAN_BOXED(14895,16,FLEN)
NAN_BOXED(1321,16,FLEN)
NAN_BOXED(14895,16,FLEN)
NAN_BOXED(1321,16,FLEN)
NAN_BOXED(14895,16,FLEN)
NAN_BOXED(1321,16,FLEN)
NAN_BOXED(15142,16,FLEN)
NAN_BOXED(1143,16,FLEN)
NAN_BOXED(15142,16,FLEN)
NAN_BOXED(1143,16,FLEN)
NAN_BOXED(15142,16,FLEN)
NAN_BOXED(1143,16,FLEN)
NAN_BOXED(15142,16,FLEN)
NAN_BOXED(1143,16,FLEN)
NAN_BOXED(15142,16,FLEN)
NAN_BOXED(1143,16,FLEN)
NAN_BOXED(12460,16,FLEN)
NAN_BOXED(3796,16,FLEN)
NAN_BOXED(12460,16,FLEN)
NAN_BOXED(3796,16,FLEN)
NAN_BOXED(12460,16,FLEN)
NAN_BOXED(3796,16,FLEN)
NAN_BOXED(12460,16,FLEN)
NAN_BOXED(3796,16,FLEN)
NAN_BOXED(12460,16,FLEN)
NAN_BOXED(3796,16,FLEN)
NAN_BOXED(14928,16,FLEN)
NAN_BOXED(1294,16,FLEN)
NAN_BOXED(14928,16,FLEN)
NAN_BOXED(1294,16,FLEN)
NAN_BOXED(14928,16,FLEN)
NAN_BOXED(1294,16,FLEN)
NAN_BOXED(14928,16,FLEN)
NAN_BOXED(1294,16,FLEN)
NAN_BOXED(14928,16,FLEN)
NAN_BOXED(1294,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1771,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1771,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1771,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1771,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1771,16,FLEN)
NAN_BOXED(15294,16,FLEN)
NAN_BOXED(1055,16,FLEN)
NAN_BOXED(15294,16,FLEN)
NAN_BOXED(1055,16,FLEN)
NAN_BOXED(15294,16,FLEN)
NAN_BOXED(1055,16,FLEN)
NAN_BOXED(15294,16,FLEN)
NAN_BOXED(1055,16,FLEN)
NAN_BOXED(15294,16,FLEN)
NAN_BOXED(1055,16,FLEN)
NAN_BOXED(15008,16,FLEN)
NAN_BOXED(1234,16,FLEN)
NAN_BOXED(15008,16,FLEN)
NAN_BOXED(1234,16,FLEN)
NAN_BOXED(15008,16,FLEN)
NAN_BOXED(1234,16,FLEN)
NAN_BOXED(15008,16,FLEN)
NAN_BOXED(1234,16,FLEN)
NAN_BOXED(15008,16,FLEN)
NAN_BOXED(1234,16,FLEN)
NAN_BOXED(15190,16,FLEN)
NAN_BOXED(1114,16,FLEN)
NAN_BOXED(15190,16,FLEN)
NAN_BOXED(1114,16,FLEN)
NAN_BOXED(15190,16,FLEN)
NAN_BOXED(1114,16,FLEN)
NAN_BOXED(15190,16,FLEN)
NAN_BOXED(1114,16,FLEN)
NAN_BOXED(15190,16,FLEN)
NAN_BOXED(1114,16,FLEN)
NAN_BOXED(15308,16,FLEN)
NAN_BOXED(1048,16,FLEN)
NAN_BOXED(15308,16,FLEN)
NAN_BOXED(1048,16,FLEN)
NAN_BOXED(15308,16,FLEN)
NAN_BOXED(1048,16,FLEN)
NAN_BOXED(15308,16,FLEN)
NAN_BOXED(1048,16,FLEN)
NAN_BOXED(15308,16,FLEN)
NAN_BOXED(1048,16,FLEN)
NAN_BOXED(15316,16,FLEN)
NAN_BOXED(1044,16,FLEN)
NAN_BOXED(15316,16,FLEN)
NAN_BOXED(1044,16,FLEN)
NAN_BOXED(15316,16,FLEN)
NAN_BOXED(1044,16,FLEN)
NAN_BOXED(15316,16,FLEN)
NAN_BOXED(1044,16,FLEN)
NAN_BOXED(15316,16,FLEN)
NAN_BOXED(1044,16,FLEN)
NAN_BOXED(12793,16,FLEN)
NAN_BOXED(3416,16,FLEN)
NAN_BOXED(12793,16,FLEN)
NAN_BOXED(3416,16,FLEN)
NAN_BOXED(12793,16,FLEN)
NAN_BOXED(3416,16,FLEN)
NAN_BOXED(12793,16,FLEN)
NAN_BOXED(3416,16,FLEN)
NAN_BOXED(12793,16,FLEN)
NAN_BOXED(3416,16,FLEN)
NAN_BOXED(14983,16,FLEN)
NAN_BOXED(1252,16,FLEN)
NAN_BOXED(14983,16,FLEN)
NAN_BOXED(1252,16,FLEN)
NAN_BOXED(14983,16,FLEN)
NAN_BOXED(1252,16,FLEN)
NAN_BOXED(14983,16,FLEN)
NAN_BOXED(1252,16,FLEN)
NAN_BOXED(14983,16,FLEN)
NAN_BOXED(1252,16,FLEN)
NAN_BOXED(14570,16,FLEN)
NAN_BOXED(1663,16,FLEN)
NAN_BOXED(14570,16,FLEN)
NAN_BOXED(1663,16,FLEN)
NAN_BOXED(14570,16,FLEN)
NAN_BOXED(1663,16,FLEN)
NAN_BOXED(14570,16,FLEN)
NAN_BOXED(1663,16,FLEN)
NAN_BOXED(14570,16,FLEN)
NAN_BOXED(1663,16,FLEN)
NAN_BOXED(8486,16,FLEN)
NAN_BOXED(7731,16,FLEN)
NAN_BOXED(8486,16,FLEN)
NAN_BOXED(7731,16,FLEN)
NAN_BOXED(8486,16,FLEN)
NAN_BOXED(7731,16,FLEN)
NAN_BOXED(8486,16,FLEN)
NAN_BOXED(7731,16,FLEN)
NAN_BOXED(8486,16,FLEN)
NAN_BOXED(7731,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(1060,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(1060,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(1060,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(1060,16,FLEN)
NAN_BOXED(15285,16,FLEN)
NAN_BOXED(1060,16,FLEN)
NAN_BOXED(13864,16,FLEN)
NAN_BOXED(2352,16,FLEN)
NAN_BOXED(13864,16,FLEN)
NAN_BOXED(2352,16,FLEN)
NAN_BOXED(13864,16,FLEN)
NAN_BOXED(2352,16,FLEN)
NAN_BOXED(13864,16,FLEN)
NAN_BOXED(2352,16,FLEN)
NAN_BOXED(13864,16,FLEN)
NAN_BOXED(2352,16,FLEN)
NAN_BOXED(15128,16,FLEN)
NAN_BOXED(1152,16,FLEN)
NAN_BOXED(15128,16,FLEN)
NAN_BOXED(1152,16,FLEN)
NAN_BOXED(15128,16,FLEN)
NAN_BOXED(1152,16,FLEN)
NAN_BOXED(15128,16,FLEN)
NAN_BOXED(1152,16,FLEN)
NAN_BOXED(15128,16,FLEN)
NAN_BOXED(1152,16,FLEN)
NAN_BOXED(15296,16,FLEN)
NAN_BOXED(1054,16,FLEN)
NAN_BOXED(15296,16,FLEN)
NAN_BOXED(1054,16,FLEN)
NAN_BOXED(15296,16,FLEN)
NAN_BOXED(1054,16,FLEN)
NAN_BOXED(15296,16,FLEN)
NAN_BOXED(1054,16,FLEN)
NAN_BOXED(15296,16,FLEN)
NAN_BOXED(1054,16,FLEN)
NAN_BOXED(13181,16,FLEN)
NAN_BOXED(3139,16,FLEN)
NAN_BOXED(13181,16,FLEN)
NAN_BOXED(3139,16,FLEN)
NAN_BOXED(13181,16,FLEN)
NAN_BOXED(3139,16,FLEN)
NAN_BOXED(13181,16,FLEN)
NAN_BOXED(3139,16,FLEN)
NAN_BOXED(13181,16,FLEN)
NAN_BOXED(3139,16,FLEN)
NAN_BOXED(11846,16,FLEN)
NAN_BOXED(4375,16,FLEN)
NAN_BOXED(11846,16,FLEN)
NAN_BOXED(4375,16,FLEN)
NAN_BOXED(11846,16,FLEN)
NAN_BOXED(4375,16,FLEN)
NAN_BOXED(11846,16,FLEN)
NAN_BOXED(4375,16,FLEN)
NAN_BOXED(11846,16,FLEN)
NAN_BOXED(4375,16,FLEN)
NAN_BOXED(12391,16,FLEN)
NAN_BOXED(3904,16,FLEN)
NAN_BOXED(12391,16,FLEN)
NAN_BOXED(3904,16,FLEN)
NAN_BOXED(12391,16,FLEN)
NAN_BOXED(3904,16,FLEN)
NAN_BOXED(12391,16,FLEN)
NAN_BOXED(3904,16,FLEN)
NAN_BOXED(12391,16,FLEN)
NAN_BOXED(3904,16,FLEN)
NAN_BOXED(14391,16,FLEN)
NAN_BOXED(1938,16,FLEN)
NAN_BOXED(14391,16,FLEN)
NAN_BOXED(1938,16,FLEN)
NAN_BOXED(14391,16,FLEN)
NAN_BOXED(1938,16,FLEN)
NAN_BOXED(14391,16,FLEN)
NAN_BOXED(1938,16,FLEN)
NAN_BOXED(14391,16,FLEN)
NAN_BOXED(1938,16,FLEN)
NAN_BOXED(13677,16,FLEN)
NAN_BOXED(2530,16,FLEN)
NAN_BOXED(13677,16,FLEN)
NAN_BOXED(2530,16,FLEN)
NAN_BOXED(13677,16,FLEN)
NAN_BOXED(2530,16,FLEN)
NAN_BOXED(13677,16,FLEN)
NAN_BOXED(2530,16,FLEN)
NAN_BOXED(13677,16,FLEN)
NAN_BOXED(2530,16,FLEN)
NAN_BOXED(15151,16,FLEN)
NAN_BOXED(1138,16,FLEN)
NAN_BOXED(15151,16,FLEN)
NAN_BOXED(1138,16,FLEN)
NAN_BOXED(15151,16,FLEN)
NAN_BOXED(1138,16,FLEN)
NAN_BOXED(15151,16,FLEN)
NAN_BOXED(1138,16,FLEN)
NAN_BOXED(15151,16,FLEN)
NAN_BOXED(1138,16,FLEN)
NAN_BOXED(12290,16,FLEN)
NAN_BOXED(4087,16,FLEN)
NAN_BOXED(12290,16,FLEN)
NAN_BOXED(4087,16,FLEN)
NAN_BOXED(12290,16,FLEN)
NAN_BOXED(4087,16,FLEN)
NAN_BOXED(12290,16,FLEN)
NAN_BOXED(4087,16,FLEN)
NAN_BOXED(12290,16,FLEN)
NAN_BOXED(4087,16,FLEN)
NAN_BOXED(13988,16,FLEN)
NAN_BOXED(2255,16,FLEN)
NAN_BOXED(13988,16,FLEN)
NAN_BOXED(2255,16,FLEN)
NAN_BOXED(13988,16,FLEN)
NAN_BOXED(2255,16,FLEN)
NAN_BOXED(13988,16,FLEN)
NAN_BOXED(2255,16,FLEN)
NAN_BOXED(13988,16,FLEN)
NAN_BOXED(2255,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(2077,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(2077,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(2077,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(2077,16,FLEN)
NAN_BOXED(14275,16,FLEN)
NAN_BOXED(2077,16,FLEN)
NAN_BOXED(10537,16,FLEN)
NAN_BOXED(5679,16,FLEN)
NAN_BOXED(10537,16,FLEN)
NAN_BOXED(5679,16,FLEN)
NAN_BOXED(10537,16,FLEN)
NAN_BOXED(5679,16,FLEN)
NAN_BOXED(10537,16,FLEN)
NAN_BOXED(5679,16,FLEN)
NAN_BOXED(10537,16,FLEN)
NAN_BOXED(5679,16,FLEN)
NAN_BOXED(13901,16,FLEN)
NAN_BOXED(2321,16,FLEN)
NAN_BOXED(13901,16,FLEN)
NAN_BOXED(2321,16,FLEN)
NAN_BOXED(13901,16,FLEN)
NAN_BOXED(2321,16,FLEN)
NAN_BOXED(13901,16,FLEN)
NAN_BOXED(2321,16,FLEN)
NAN_BOXED(13901,16,FLEN)
NAN_BOXED(2321,16,FLEN)
NAN_BOXED(15323,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(15323,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(15323,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(15323,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(15323,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(15072,16,FLEN)
NAN_BOXED(1189,16,FLEN)
NAN_BOXED(15072,16,FLEN)
NAN_BOXED(1189,16,FLEN)
NAN_BOXED(15072,16,FLEN)
NAN_BOXED(1189,16,FLEN)
NAN_BOXED(15072,16,FLEN)
NAN_BOXED(1189,16,FLEN)
NAN_BOXED(15072,16,FLEN)
NAN_BOXED(1189,16,FLEN)
NAN_BOXED(15291,16,FLEN)
NAN_BOXED(1057,16,FLEN)
NAN_BOXED(15291,16,FLEN)
NAN_BOXED(1057,16,FLEN)
NAN_BOXED(15291,16,FLEN)
NAN_BOXED(1057,16,FLEN)
NAN_BOXED(15291,16,FLEN)
NAN_BOXED(1057,16,FLEN)
NAN_BOXED(15291,16,FLEN)
NAN_BOXED(1057,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1130,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1130,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1130,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1130,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1130,16,FLEN)
NAN_BOXED(14302,16,FLEN)
NAN_BOXED(2063,16,FLEN)
NAN_BOXED(14302,16,FLEN)
NAN_BOXED(2063,16,FLEN)
NAN_BOXED(14302,16,FLEN)
NAN_BOXED(2063,16,FLEN)
NAN_BOXED(14302,16,FLEN)
NAN_BOXED(2063,16,FLEN)
NAN_BOXED(14302,16,FLEN)
NAN_BOXED(2063,16,FLEN)
NAN_BOXED(11320,16,FLEN)
NAN_BOXED(5009,16,FLEN)
NAN_BOXED(11320,16,FLEN)
NAN_BOXED(5009,16,FLEN)
NAN_BOXED(11320,16,FLEN)
NAN_BOXED(5009,16,FLEN)
NAN_BOXED(11320,16,FLEN)
NAN_BOXED(5009,16,FLEN)
NAN_BOXED(11320,16,FLEN)
NAN_BOXED(5009,16,FLEN)
NAN_BOXED(14883,16,FLEN)
NAN_BOXED(1331,16,FLEN)
NAN_BOXED(14883,16,FLEN)
NAN_BOXED(1331,16,FLEN)
NAN_BOXED(14883,16,FLEN)
NAN_BOXED(1331,16,FLEN)
NAN_BOXED(14883,16,FLEN)
NAN_BOXED(1331,16,FLEN)
NAN_BOXED(14883,16,FLEN)
NAN_BOXED(1331,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1364,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1364,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1364,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1364,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1364,16,FLEN)
NAN_BOXED(13827,16,FLEN)
NAN_BOXED(2383,16,FLEN)
NAN_BOXED(13827,16,FLEN)
NAN_BOXED(2383,16,FLEN)
NAN_BOXED(13827,16,FLEN)
NAN_BOXED(2383,16,FLEN)
NAN_BOXED(13827,16,FLEN)
NAN_BOXED(2383,16,FLEN)
NAN_BOXED(13827,16,FLEN)
NAN_BOXED(2383,16,FLEN)
NAN_BOXED(13478,16,FLEN)
NAN_BOXED(2782,16,FLEN)
NAN_BOXED(13478,16,FLEN)
NAN_BOXED(2782,16,FLEN)
NAN_BOXED(13478,16,FLEN)
NAN_BOXED(2782,16,FLEN)
NAN_BOXED(13478,16,FLEN)
NAN_BOXED(2782,16,FLEN)
NAN_BOXED(13478,16,FLEN)
NAN_BOXED(2782,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1182,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1182,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1182,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1182,16,FLEN)
NAN_BOXED(14493,16,FLEN)
NAN_BOXED(1182,16,FLEN)
NAN_BOXED(15350,16,FLEN)
NAN_BOXED(685,16,FLEN)
NAN_BOXED(15350,16,FLEN)
NAN_BOXED(685,16,FLEN)
NAN_BOXED(15350,16,FLEN)
NAN_BOXED(685,16,FLEN)
NAN_BOXED(15350,16,FLEN)
NAN_BOXED(685,16,FLEN)
NAN_BOXED(15350,16,FLEN)
NAN_BOXED(685,16,FLEN)
NAN_BOXED(14522,16,FLEN)
NAN_BOXED(1153,16,FLEN)
NAN_BOXED(14522,16,FLEN)
NAN_BOXED(1153,16,FLEN)
NAN_BOXED(14522,16,FLEN)
NAN_BOXED(1153,16,FLEN)
NAN_BOXED(14522,16,FLEN)
NAN_BOXED(1153,16,FLEN)
NAN_BOXED(14522,16,FLEN)
NAN_BOXED(1153,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(2258,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(2258,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(2258,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(2258,16,FLEN)
NAN_BOXED(13419,16,FLEN)
NAN_BOXED(2258,16,FLEN)
NAN_BOXED(15155,16,FLEN)
NAN_BOXED(757,16,FLEN)
NAN_BOXED(15155,16,FLEN)
NAN_BOXED(757,16,FLEN)
NAN_BOXED(15155,16,FLEN)
NAN_BOXED(757,16,FLEN)
NAN_BOXED(15155,16,FLEN)
NAN_BOXED(757,16,FLEN)
NAN_BOXED(15155,16,FLEN)
NAN_BOXED(757,16,FLEN)
NAN_BOXED(14885,16,FLEN)
NAN_BOXED(887,16,FLEN)
NAN_BOXED(14885,16,FLEN)
NAN_BOXED(887,16,FLEN)
NAN_BOXED(14885,16,FLEN)
NAN_BOXED(887,16,FLEN)
NAN_BOXED(14885,16,FLEN)
NAN_BOXED(887,16,FLEN)
NAN_BOXED(14885,16,FLEN)
NAN_BOXED(887,16,FLEN)
NAN_BOXED(14251,16,FLEN)
NAN_BOXED(1423,16,FLEN)
NAN_BOXED(14251,16,FLEN)
NAN_BOXED(1423,16,FLEN)
NAN_BOXED(14251,16,FLEN)
NAN_BOXED(1423,16,FLEN)
NAN_BOXED(14251,16,FLEN)
NAN_BOXED(1423,16,FLEN)
NAN_BOXED(14251,16,FLEN)
NAN_BOXED(1423,16,FLEN)
NAN_BOXED(14725,16,FLEN)
NAN_BOXED(988,16,FLEN)
NAN_BOXED(14725,16,FLEN)
NAN_BOXED(988,16,FLEN)
NAN_BOXED(14725,16,FLEN)
NAN_BOXED(988,16,FLEN)
NAN_BOXED(14725,16,FLEN)
NAN_BOXED(988,16,FLEN)
NAN_BOXED(14725,16,FLEN)
NAN_BOXED(988,16,FLEN)
NAN_BOXED(14924,16,FLEN)
NAN_BOXED(866,16,FLEN)
NAN_BOXED(14924,16,FLEN)
NAN_BOXED(866,16,FLEN)
NAN_BOXED(14924,16,FLEN)
NAN_BOXED(866,16,FLEN)
NAN_BOXED(14924,16,FLEN)
NAN_BOXED(866,16,FLEN)
NAN_BOXED(14924,16,FLEN)
NAN_BOXED(866,16,FLEN)
NAN_BOXED(10425,16,FLEN)
NAN_BOXED(5250,16,FLEN)
NAN_BOXED(10425,16,FLEN)
NAN_BOXED(5250,16,FLEN)
NAN_BOXED(10425,16,FLEN)
NAN_BOXED(5250,16,FLEN)
NAN_BOXED(10425,16,FLEN)
NAN_BOXED(5250,16,FLEN)
NAN_BOXED(10425,16,FLEN)
NAN_BOXED(5250,16,FLEN)
NAN_BOXED(14471,16,FLEN)
NAN_BOXED(1204,16,FLEN)
NAN_BOXED(14471,16,FLEN)
NAN_BOXED(1204,16,FLEN)
NAN_BOXED(14471,16,FLEN)
NAN_BOXED(1204,16,FLEN)
NAN_BOXED(14471,16,FLEN)
NAN_BOXED(1204,16,FLEN)
NAN_BOXED(14471,16,FLEN)
NAN_BOXED(1204,16,FLEN)
NAN_BOXED(14004,16,FLEN)
NAN_BOXED(1628,16,FLEN)
NAN_BOXED(14004,16,FLEN)
NAN_BOXED(1628,16,FLEN)
NAN_BOXED(14004,16,FLEN)
NAN_BOXED(1628,16,FLEN)
NAN_BOXED(14004,16,FLEN)
NAN_BOXED(1628,16,FLEN)
NAN_BOXED(14004,16,FLEN)
NAN_BOXED(1628,16,FLEN)
NAN_BOXED(14503,16,FLEN)
NAN_BOXED(1172,16,FLEN)
NAN_BOXED(14503,16,FLEN)
NAN_BOXED(1172,16,FLEN)
NAN_BOXED(14503,16,FLEN)
NAN_BOXED(1172,16,FLEN)
NAN_BOXED(14503,16,FLEN)
NAN_BOXED(1172,16,FLEN)
NAN_BOXED(14503,16,FLEN)
NAN_BOXED(1172,16,FLEN)
NAN_BOXED(14988,16,FLEN)
NAN_BOXED(833,16,FLEN)
NAN_BOXED(14988,16,FLEN)
NAN_BOXED(833,16,FLEN)
NAN_BOXED(14988,16,FLEN)
NAN_BOXED(833,16,FLEN)
NAN_BOXED(14988,16,FLEN)
NAN_BOXED(833,16,FLEN)
NAN_BOXED(14988,16,FLEN)
NAN_BOXED(833,16,FLEN)
NAN_BOXED(12880,16,FLEN)
NAN_BOXED(2751,16,FLEN)
NAN_BOXED(12880,16,FLEN)
NAN_BOXED(2751,16,FLEN)
NAN_BOXED(12880,16,FLEN)
NAN_BOXED(2751,16,FLEN)
NAN_BOXED(12880,16,FLEN)
NAN_BOXED(2751,16,FLEN)
NAN_BOXED(12880,16,FLEN)
NAN_BOXED(2751,16,FLEN)
NAN_BOXED(14257,16,FLEN)
NAN_BOXED(1418,16,FLEN)
NAN_BOXED(14257,16,FLEN)
NAN_BOXED(1418,16,FLEN)
NAN_BOXED(14257,16,FLEN)
NAN_BOXED(1418,16,FLEN)
NAN_BOXED(14257,16,FLEN)
NAN_BOXED(1418,16,FLEN)
NAN_BOXED(14257,16,FLEN)
NAN_BOXED(1418,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(1750,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(1750,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(1750,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(1750,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(1750,16,FLEN)
NAN_BOXED(9274,16,FLEN)
NAN_BOXED(6410,16,FLEN)
NAN_BOXED(9274,16,FLEN)
NAN_BOXED(6410,16,FLEN)
NAN_BOXED(9274,16,FLEN)
NAN_BOXED(6410,16,FLEN)
NAN_BOXED(9274,16,FLEN)
NAN_BOXED(6410,16,FLEN)
NAN_BOXED(9274,16,FLEN)
NAN_BOXED(6410,16,FLEN)
NAN_BOXED(15320,16,FLEN)
NAN_BOXED(695,16,FLEN)
NAN_BOXED(15320,16,FLEN)
NAN_BOXED(695,16,FLEN)
NAN_BOXED(15320,16,FLEN)
NAN_BOXED(695,16,FLEN)
NAN_BOXED(15320,16,FLEN)
NAN_BOXED(695,16,FLEN)
NAN_BOXED(15320,16,FLEN)
NAN_BOXED(695,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(758,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(758,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(758,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(758,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(758,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3117,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3117,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3117,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3117,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3117,16,FLEN)
NAN_BOXED(15327,16,FLEN)
NAN_BOXED(692,16,FLEN)
NAN_BOXED(15327,16,FLEN)
NAN_BOXED(692,16,FLEN)
NAN_BOXED(15327,16,FLEN)
NAN_BOXED(692,16,FLEN)
NAN_BOXED(15327,16,FLEN)
NAN_BOXED(692,16,FLEN)
NAN_BOXED(15327,16,FLEN)
NAN_BOXED(692,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(1157,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(1157,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(1157,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(1157,16,FLEN)
NAN_BOXED(14518,16,FLEN)
NAN_BOXED(1157,16,FLEN)
NAN_BOXED(14933,16,FLEN)
NAN_BOXED(861,16,FLEN)
NAN_BOXED(14933,16,FLEN)
NAN_BOXED(861,16,FLEN)
NAN_BOXED(14933,16,FLEN)
NAN_BOXED(861,16,FLEN)
NAN_BOXED(14933,16,FLEN)
NAN_BOXED(861,16,FLEN)
NAN_BOXED(14933,16,FLEN)
NAN_BOXED(861,16,FLEN)
NAN_BOXED(15208,16,FLEN)
NAN_BOXED(736,16,FLEN)
NAN_BOXED(15208,16,FLEN)
NAN_BOXED(736,16,FLEN)
NAN_BOXED(15208,16,FLEN)
NAN_BOXED(736,16,FLEN)
NAN_BOXED(15208,16,FLEN)
NAN_BOXED(736,16,FLEN)
NAN_BOXED(15208,16,FLEN)
NAN_BOXED(736,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1087,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1087,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1087,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1087,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1087,16,FLEN)
NAN_BOXED(15203,16,FLEN)
NAN_BOXED(738,16,FLEN)
NAN_BOXED(15203,16,FLEN)
NAN_BOXED(738,16,FLEN)
NAN_BOXED(15203,16,FLEN)
NAN_BOXED(738,16,FLEN)
NAN_BOXED(15203,16,FLEN)
NAN_BOXED(738,16,FLEN)
NAN_BOXED(15203,16,FLEN)
NAN_BOXED(738,16,FLEN)
NAN_BOXED(14966,16,FLEN)
NAN_BOXED(844,16,FLEN)
NAN_BOXED(14966,16,FLEN)
NAN_BOXED(844,16,FLEN)
NAN_BOXED(14966,16,FLEN)
NAN_BOXED(844,16,FLEN)
NAN_BOXED(14966,16,FLEN)
NAN_BOXED(844,16,FLEN)
NAN_BOXED(14966,16,FLEN)
NAN_BOXED(844,16,FLEN)
NAN_BOXED(14557,16,FLEN)
NAN_BOXED(1121,16,FLEN)
NAN_BOXED(14557,16,FLEN)
NAN_BOXED(1121,16,FLEN)
NAN_BOXED(14557,16,FLEN)
NAN_BOXED(1121,16,FLEN)
NAN_BOXED(14557,16,FLEN)
NAN_BOXED(1121,16,FLEN)
NAN_BOXED(14557,16,FLEN)
NAN_BOXED(1121,16,FLEN)
NAN_BOXED(13282,16,FLEN)
NAN_BOXED(2407,16,FLEN)
NAN_BOXED(13282,16,FLEN)
NAN_BOXED(2407,16,FLEN)
NAN_BOXED(13282,16,FLEN)
NAN_BOXED(2407,16,FLEN)
NAN_BOXED(13282,16,FLEN)
NAN_BOXED(2407,16,FLEN)
NAN_BOXED(13282,16,FLEN)
NAN_BOXED(2407,16,FLEN)
NAN_BOXED(15110,16,FLEN)
NAN_BOXED(776,16,FLEN)
NAN_BOXED(15110,16,FLEN)
NAN_BOXED(776,16,FLEN)
NAN_BOXED(15110,16,FLEN)
NAN_BOXED(776,16,FLEN)
NAN_BOXED(15110,16,FLEN)
NAN_BOXED(776,16,FLEN)
NAN_BOXED(15110,16,FLEN)
NAN_BOXED(776,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(741,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(741,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(741,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(741,16,FLEN)
NAN_BOXED(15195,16,FLEN)
NAN_BOXED(741,16,FLEN)
NAN_BOXED(13758,16,FLEN)
NAN_BOXED(1899,16,FLEN)
NAN_BOXED(13758,16,FLEN)
NAN_BOXED(1899,16,FLEN)
NAN_BOXED(13758,16,FLEN)
NAN_BOXED(1899,16,FLEN)
NAN_BOXED(13758,16,FLEN)
NAN_BOXED(1899,16,FLEN)
NAN_BOXED(13758,16,FLEN)
NAN_BOXED(1899,16,FLEN)
NAN_BOXED(13547,16,FLEN)
NAN_BOXED(2133,16,FLEN)
NAN_BOXED(13547,16,FLEN)
NAN_BOXED(2133,16,FLEN)
NAN_BOXED(13547,16,FLEN)
NAN_BOXED(2133,16,FLEN)
NAN_BOXED(13547,16,FLEN)
NAN_BOXED(2133,16,FLEN)
NAN_BOXED(13547,16,FLEN)
NAN_BOXED(2133,16,FLEN)
NAN_BOXED(13684,16,FLEN)
NAN_BOXED(2000,16,FLEN)
NAN_BOXED(13684,16,FLEN)
NAN_BOXED(2000,16,FLEN)
NAN_BOXED(13684,16,FLEN)
NAN_BOXED(2000,16,FLEN)
NAN_BOXED(13684,16,FLEN)
NAN_BOXED(2000,16,FLEN)
NAN_BOXED(13684,16,FLEN)
NAN_BOXED(2000,16,FLEN)
NAN_BOXED(13420,16,FLEN)
NAN_BOXED(2257,16,FLEN)
NAN_BOXED(13420,16,FLEN)
NAN_BOXED(2257,16,FLEN)
NAN_BOXED(13420,16,FLEN)
NAN_BOXED(2257,16,FLEN)
NAN_BOXED(13420,16,FLEN)
NAN_BOXED(2257,16,FLEN)
NAN_BOXED(13420,16,FLEN)
NAN_BOXED(2257,16,FLEN)
NAN_BOXED(14627,16,FLEN)
NAN_BOXED(1061,16,FLEN)
NAN_BOXED(14627,16,FLEN)
NAN_BOXED(1061,16,FLEN)
NAN_BOXED(14627,16,FLEN)
NAN_BOXED(1061,16,FLEN)
NAN_BOXED(14627,16,FLEN)
NAN_BOXED(1061,16,FLEN)
NAN_BOXED(14627,16,FLEN)
NAN_BOXED(1061,16,FLEN)
NAN_BOXED(12913,16,FLEN)
NAN_BOXED(2718,16,FLEN)
NAN_BOXED(12913,16,FLEN)
NAN_BOXED(2718,16,FLEN)
NAN_BOXED(12913,16,FLEN)
NAN_BOXED(2718,16,FLEN)
NAN_BOXED(12913,16,FLEN)
NAN_BOXED(2718,16,FLEN)
NAN_BOXED(12913,16,FLEN)
NAN_BOXED(2718,16,FLEN)
NAN_BOXED(14228,16,FLEN)
NAN_BOXED(1439,16,FLEN)
NAN_BOXED(14228,16,FLEN)
NAN_BOXED(1439,16,FLEN)
NAN_BOXED(14228,16,FLEN)
NAN_BOXED(1439,16,FLEN)
NAN_BOXED(14228,16,FLEN)
NAN_BOXED(1439,16,FLEN)
NAN_BOXED(14228,16,FLEN)
NAN_BOXED(1439,16,FLEN)
NAN_BOXED(10701,16,FLEN)
NAN_BOXED(4952,16,FLEN)
NAN_BOXED(10701,16,FLEN)
NAN_BOXED(4952,16,FLEN)
NAN_BOXED(10701,16,FLEN)
NAN_BOXED(4952,16,FLEN)
NAN_BOXED(10701,16,FLEN)
NAN_BOXED(4952,16,FLEN)
NAN_BOXED(10701,16,FLEN)
NAN_BOXED(4952,16,FLEN)
NAN_BOXED(11353,16,FLEN)
NAN_BOXED(4326,16,FLEN)
NAN_BOXED(11353,16,FLEN)
NAN_BOXED(4326,16,FLEN)
NAN_BOXED(11353,16,FLEN)
NAN_BOXED(4326,16,FLEN)
NAN_BOXED(11353,16,FLEN)
NAN_BOXED(4326,16,FLEN)
NAN_BOXED(11353,16,FLEN)
NAN_BOXED(4326,16,FLEN)
NAN_BOXED(14752,16,FLEN)
NAN_BOXED(969,16,FLEN)
NAN_BOXED(14752,16,FLEN)
NAN_BOXED(969,16,FLEN)
NAN_BOXED(14752,16,FLEN)
NAN_BOXED(969,16,FLEN)
NAN_BOXED(14752,16,FLEN)
NAN_BOXED(969,16,FLEN)
NAN_BOXED(14752,16,FLEN)
NAN_BOXED(969,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(2004,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(2004,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(2004,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(2004,16,FLEN)
NAN_BOXED(14359,16,FLEN)
NAN_BOXED(2004,16,FLEN)
NAN_BOXED(14484,16,FLEN)
NAN_BOXED(1790,16,FLEN)
NAN_BOXED(14484,16,FLEN)
NAN_BOXED(1790,16,FLEN)
NAN_BOXED(14484,16,FLEN)
NAN_BOXED(1790,16,FLEN)
NAN_BOXED(14484,16,FLEN)
NAN_BOXED(1790,16,FLEN)
NAN_BOXED(14484,16,FLEN)
NAN_BOXED(1790,16,FLEN)
NAN_BOXED(11574,16,FLEN)
NAN_BOXED(4644,16,FLEN)
NAN_BOXED(11574,16,FLEN)
NAN_BOXED(4644,16,FLEN)
NAN_BOXED(11574,16,FLEN)
NAN_BOXED(4644,16,FLEN)
NAN_BOXED(11574,16,FLEN)
NAN_BOXED(4644,16,FLEN)
NAN_BOXED(11574,16,FLEN)
NAN_BOXED(4644,16,FLEN)
NAN_BOXED(12756,16,FLEN)
NAN_BOXED(3454,16,FLEN)
NAN_BOXED(12756,16,FLEN)
NAN_BOXED(3454,16,FLEN)
NAN_BOXED(12756,16,FLEN)
NAN_BOXED(3454,16,FLEN)
NAN_BOXED(12756,16,FLEN)
NAN_BOXED(3454,16,FLEN)
NAN_BOXED(12756,16,FLEN)
NAN_BOXED(3454,16,FLEN)
NAN_BOXED(14630,16,FLEN)
NAN_BOXED(1591,16,FLEN)
NAN_BOXED(14630,16,FLEN)
NAN_BOXED(1591,16,FLEN)
NAN_BOXED(14630,16,FLEN)
NAN_BOXED(1591,16,FLEN)
NAN_BOXED(14630,16,FLEN)
NAN_BOXED(1591,16,FLEN)
NAN_BOXED(14630,16,FLEN)
NAN_BOXED(1591,16,FLEN)
NAN_BOXED(15059,16,FLEN)
NAN_BOXED(1201,16,FLEN)
NAN_BOXED(15059,16,FLEN)
NAN_BOXED(1201,16,FLEN)
NAN_BOXED(15059,16,FLEN)
NAN_BOXED(1201,16,FLEN)
NAN_BOXED(15059,16,FLEN)
NAN_BOXED(1201,16,FLEN)
NAN_BOXED(15059,16,FLEN)
NAN_BOXED(1201,16,FLEN)
NAN_BOXED(15223,16,FLEN)
NAN_BOXED(1098,16,FLEN)
NAN_BOXED(15223,16,FLEN)
NAN_BOXED(1098,16,FLEN)
NAN_BOXED(15223,16,FLEN)
NAN_BOXED(1098,16,FLEN)
NAN_BOXED(15223,16,FLEN)
NAN_BOXED(1098,16,FLEN)
NAN_BOXED(15223,16,FLEN)
NAN_BOXED(1098,16,FLEN)
NAN_BOXED(11953,16,FLEN)
NAN_BOXED(4297,16,FLEN)
NAN_BOXED(11953,16,FLEN)
NAN_BOXED(4297,16,FLEN)
NAN_BOXED(11953,16,FLEN)
NAN_BOXED(4297,16,FLEN)
NAN_BOXED(11953,16,FLEN)
NAN_BOXED(4297,16,FLEN)
NAN_BOXED(11953,16,FLEN)
NAN_BOXED(4297,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(2480,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(2480,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(2480,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(2480,16,FLEN)
NAN_BOXED(13729,16,FLEN)
NAN_BOXED(2480,16,FLEN)
NAN_BOXED(14753,16,FLEN)
NAN_BOXED(1456,16,FLEN)
NAN_BOXED(14753,16,FLEN)
NAN_BOXED(1456,16,FLEN)
NAN_BOXED(14753,16,FLEN)
NAN_BOXED(1456,16,FLEN)
NAN_BOXED(14753,16,FLEN)
NAN_BOXED(1456,16,FLEN)
NAN_BOXED(14753,16,FLEN)
NAN_BOXED(1456,16,FLEN)
NAN_BOXED(13636,16,FLEN)
NAN_BOXED(2580,16,FLEN)
NAN_BOXED(13636,16,FLEN)
NAN_BOXED(2580,16,FLEN)
NAN_BOXED(13636,16,FLEN)
NAN_BOXED(2580,16,FLEN)
NAN_BOXED(13636,16,FLEN)
NAN_BOXED(2580,16,FLEN)
NAN_BOXED(13636,16,FLEN)
NAN_BOXED(2580,16,FLEN)
NAN_BOXED(14461,16,FLEN)
NAN_BOXED(1826,16,FLEN)
NAN_BOXED(14461,16,FLEN)
NAN_BOXED(1826,16,FLEN)
NAN_BOXED(14461,16,FLEN)
NAN_BOXED(1826,16,FLEN)
NAN_BOXED(14461,16,FLEN)
NAN_BOXED(1826,16,FLEN)
NAN_BOXED(14461,16,FLEN)
NAN_BOXED(1826,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1154,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1154,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1154,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1154,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1154,16,FLEN)
NAN_BOXED(10858,16,FLEN)
NAN_BOXED(5374,16,FLEN)
NAN_BOXED(10858,16,FLEN)
NAN_BOXED(5374,16,FLEN)
NAN_BOXED(10858,16,FLEN)
NAN_BOXED(5374,16,FLEN)
NAN_BOXED(10858,16,FLEN)
NAN_BOXED(5374,16,FLEN)
NAN_BOXED(10858,16,FLEN)
NAN_BOXED(5374,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1134,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1134,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1134,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1134,16,FLEN)
NAN_BOXED(15163,16,FLEN)
NAN_BOXED(1134,16,FLEN)
NAN_BOXED(13454,16,FLEN)
NAN_BOXED(2824,16,FLEN)
NAN_BOXED(13454,16,FLEN)
NAN_BOXED(2824,16,FLEN)
NAN_BOXED(13454,16,FLEN)
NAN_BOXED(2824,16,FLEN)
NAN_BOXED(13454,16,FLEN)
NAN_BOXED(2824,16,FLEN)
NAN_BOXED(13454,16,FLEN)
NAN_BOXED(2824,16,FLEN)
NAN_BOXED(11962,16,FLEN)
NAN_BOXED(4290,16,FLEN)
NAN_BOXED(11962,16,FLEN)
NAN_BOXED(4290,16,FLEN)
NAN_BOXED(11962,16,FLEN)
NAN_BOXED(4290,16,FLEN)
NAN_BOXED(11962,16,FLEN)
NAN_BOXED(4290,16,FLEN)
NAN_BOXED(11962,16,FLEN)
NAN_BOXED(4290,16,FLEN)
NAN_BOXED(13503,16,FLEN)
NAN_BOXED(2750,16,FLEN)
NAN_BOXED(13503,16,FLEN)
NAN_BOXED(2750,16,FLEN)
NAN_BOXED(13503,16,FLEN)
NAN_BOXED(2750,16,FLEN)
NAN_BOXED(13503,16,FLEN)
NAN_BOXED(2750,16,FLEN)
NAN_BOXED(13503,16,FLEN)
NAN_BOXED(2750,16,FLEN)
NAN_BOXED(7435,16,FLEN)
NAN_BOXED(8793,16,FLEN)
NAN_BOXED(7435,16,FLEN)
NAN_BOXED(8793,16,FLEN)
NAN_BOXED(7435,16,FLEN)
NAN_BOXED(8793,16,FLEN)
NAN_BOXED(7435,16,FLEN)
NAN_BOXED(8793,16,FLEN)
NAN_BOXED(7435,16,FLEN)
NAN_BOXED(8793,16,FLEN)
NAN_BOXED(14035,16,FLEN)
NAN_BOXED(2225,16,FLEN)
NAN_BOXED(14035,16,FLEN)
NAN_BOXED(2225,16,FLEN)
NAN_BOXED(14035,16,FLEN)
NAN_BOXED(2225,16,FLEN)
NAN_BOXED(14035,16,FLEN)
NAN_BOXED(2225,16,FLEN)
NAN_BOXED(14035,16,FLEN)
NAN_BOXED(2225,16,FLEN)
NAN_BOXED(14456,16,FLEN)
NAN_BOXED(1834,16,FLEN)
NAN_BOXED(14456,16,FLEN)
NAN_BOXED(1834,16,FLEN)
NAN_BOXED(14456,16,FLEN)
NAN_BOXED(1834,16,FLEN)
NAN_BOXED(14456,16,FLEN)
NAN_BOXED(1834,16,FLEN)
NAN_BOXED(14456,16,FLEN)
NAN_BOXED(1834,16,FLEN)
NAN_BOXED(13946,16,FLEN)
NAN_BOXED(2290,16,FLEN)
NAN_BOXED(13946,16,FLEN)
NAN_BOXED(2290,16,FLEN)
NAN_BOXED(13946,16,FLEN)
NAN_BOXED(2290,16,FLEN)
NAN_BOXED(13946,16,FLEN)
NAN_BOXED(2290,16,FLEN)
NAN_BOXED(13946,16,FLEN)
NAN_BOXED(2290,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(1250,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(1250,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(1250,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(1250,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(1250,16,FLEN)
NAN_BOXED(14371,16,FLEN)
NAN_BOXED(1980,16,FLEN)
NAN_BOXED(14371,16,FLEN)
NAN_BOXED(1980,16,FLEN)
NAN_BOXED(14371,16,FLEN)
NAN_BOXED(1980,16,FLEN)
NAN_BOXED(14371,16,FLEN)
NAN_BOXED(1980,16,FLEN)
NAN_BOXED(14371,16,FLEN)
NAN_BOXED(1980,16,FLEN)
NAN_BOXED(13474,16,FLEN)
NAN_BOXED(2794,16,FLEN)
NAN_BOXED(13474,16,FLEN)
NAN_BOXED(2794,16,FLEN)
NAN_BOXED(13474,16,FLEN)
NAN_BOXED(2794,16,FLEN)
NAN_BOXED(13474,16,FLEN)
NAN_BOXED(2794,16,FLEN)
NAN_BOXED(13474,16,FLEN)
NAN_BOXED(2794,16,FLEN)
NAN_BOXED(13494,16,FLEN)
NAN_BOXED(2763,16,FLEN)
NAN_BOXED(13494,16,FLEN)
NAN_BOXED(2763,16,FLEN)
NAN_BOXED(13494,16,FLEN)
NAN_BOXED(2763,16,FLEN)
NAN_BOXED(13494,16,FLEN)
NAN_BOXED(2763,16,FLEN)
NAN_BOXED(13494,16,FLEN)
NAN_BOXED(2763,16,FLEN)
NAN_BOXED(10463,16,FLEN)
NAN_BOXED(5778,16,FLEN)
NAN_BOXED(10463,16,FLEN)
NAN_BOXED(5778,16,FLEN)
NAN_BOXED(10463,16,FLEN)
NAN_BOXED(5778,16,FLEN)
NAN_BOXED(10463,16,FLEN)
NAN_BOXED(5778,16,FLEN)
NAN_BOXED(10463,16,FLEN)
NAN_BOXED(5778,16,FLEN)
NAN_BOXED(13330,16,FLEN)
NAN_BOXED(3038,16,FLEN)
NAN_BOXED(13330,16,FLEN)
NAN_BOXED(3038,16,FLEN)
NAN_BOXED(13330,16,FLEN)
NAN_BOXED(3038,16,FLEN)
NAN_BOXED(13330,16,FLEN)
NAN_BOXED(3038,16,FLEN)
NAN_BOXED(13330,16,FLEN)
NAN_BOXED(3038,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3122,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3122,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3122,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3122,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3122,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(1322,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(1322,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(1322,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(1322,16,FLEN)
NAN_BOXED(14899,16,FLEN)
NAN_BOXED(1322,16,FLEN)
NAN_BOXED(14535,16,FLEN)
NAN_BOXED(1716,16,FLEN)
NAN_BOXED(14535,16,FLEN)
NAN_BOXED(1716,16,FLEN)
NAN_BOXED(14535,16,FLEN)
NAN_BOXED(1716,16,FLEN)
NAN_BOXED(14535,16,FLEN)
NAN_BOXED(1716,16,FLEN)
NAN_BOXED(14535,16,FLEN)
NAN_BOXED(1716,16,FLEN)
NAN_BOXED(9687,16,FLEN)
NAN_BOXED(6523,16,FLEN)
NAN_BOXED(9687,16,FLEN)
NAN_BOXED(6523,16,FLEN)
NAN_BOXED(9687,16,FLEN)
NAN_BOXED(6523,16,FLEN)
NAN_BOXED(9687,16,FLEN)
NAN_BOXED(6523,16,FLEN)
NAN_BOXED(9687,16,FLEN)
NAN_BOXED(6523,16,FLEN)
NAN_BOXED(15336,16,FLEN)
NAN_BOXED(1037,16,FLEN)
NAN_BOXED(15336,16,FLEN)
NAN_BOXED(1037,16,FLEN)
NAN_BOXED(15336,16,FLEN)
NAN_BOXED(1037,16,FLEN)
NAN_BOXED(15336,16,FLEN)
NAN_BOXED(1037,16,FLEN)
NAN_BOXED(15336,16,FLEN)
NAN_BOXED(1037,16,FLEN)
NAN_BOXED(13469,16,FLEN)
NAN_BOXED(2800,16,FLEN)
NAN_BOXED(13469,16,FLEN)
NAN_BOXED(2800,16,FLEN)
NAN_BOXED(13469,16,FLEN)
NAN_BOXED(2800,16,FLEN)
NAN_BOXED(13469,16,FLEN)
NAN_BOXED(2800,16,FLEN)
NAN_BOXED(13469,16,FLEN)
NAN_BOXED(2800,16,FLEN)
NAN_BOXED(13721,16,FLEN)
NAN_BOXED(2488,16,FLEN)
NAN_BOXED(13721,16,FLEN)
NAN_BOXED(2488,16,FLEN)
NAN_BOXED(13721,16,FLEN)
NAN_BOXED(2488,16,FLEN)
NAN_BOXED(13721,16,FLEN)
NAN_BOXED(2488,16,FLEN)
NAN_BOXED(13721,16,FLEN)
NAN_BOXED(2488,16,FLEN)
NAN_BOXED(15324,16,FLEN)
NAN_BOXED(1043,16,FLEN)
NAN_BOXED(15324,16,FLEN)
NAN_BOXED(1043,16,FLEN)
NAN_BOXED(15324,16,FLEN)
NAN_BOXED(1043,16,FLEN)
NAN_BOXED(15324,16,FLEN)
NAN_BOXED(1043,16,FLEN)
NAN_BOXED(15324,16,FLEN)
NAN_BOXED(1043,16,FLEN)
NAN_BOXED(13396,16,FLEN)
NAN_BOXED(2918,16,FLEN)
NAN_BOXED(13396,16,FLEN)
NAN_BOXED(2918,16,FLEN)
NAN_BOXED(13396,16,FLEN)
NAN_BOXED(2918,16,FLEN)
NAN_BOXED(13396,16,FLEN)
NAN_BOXED(2918,16,FLEN)
NAN_BOXED(13396,16,FLEN)
NAN_BOXED(2918,16,FLEN)
NAN_BOXED(11792,16,FLEN)
NAN_BOXED(4424,16,FLEN)
NAN_BOXED(11792,16,FLEN)
NAN_BOXED(4424,16,FLEN)
NAN_BOXED(11792,16,FLEN)
NAN_BOXED(4424,16,FLEN)
NAN_BOXED(11792,16,FLEN)
NAN_BOXED(4424,16,FLEN)
NAN_BOXED(11792,16,FLEN)
NAN_BOXED(4424,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(1139,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(1139,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(1139,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(1139,16,FLEN)
NAN_BOXED(15154,16,FLEN)
NAN_BOXED(1139,16,FLEN)
NAN_BOXED(13173,16,FLEN)
NAN_BOXED(3147,16,FLEN)
NAN_BOXED(13173,16,FLEN)
NAN_BOXED(3147,16,FLEN)
NAN_BOXED(13173,16,FLEN)
NAN_BOXED(3147,16,FLEN)
NAN_BOXED(13173,16,FLEN)
NAN_BOXED(3147,16,FLEN)
NAN_BOXED(13173,16,FLEN)
NAN_BOXED(3147,16,FLEN)
NAN_BOXED(13335,16,FLEN)
NAN_BOXED(3027,16,FLEN)
NAN_BOXED(13335,16,FLEN)
NAN_BOXED(3027,16,FLEN)
NAN_BOXED(13335,16,FLEN)
NAN_BOXED(3027,16,FLEN)
NAN_BOXED(13335,16,FLEN)
NAN_BOXED(3027,16,FLEN)
NAN_BOXED(13335,16,FLEN)
NAN_BOXED(3027,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(1268,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(1268,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(1268,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(1268,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(1268,16,FLEN)
NAN_BOXED(15077,16,FLEN)
NAN_BOXED(1286,16,FLEN)
NAN_BOXED(15077,16,FLEN)
NAN_BOXED(1286,16,FLEN)
NAN_BOXED(15077,16,FLEN)
NAN_BOXED(1286,16,FLEN)
NAN_BOXED(15077,16,FLEN)
NAN_BOXED(1286,16,FLEN)
NAN_BOXED(15077,16,FLEN)
NAN_BOXED(1286,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(1960,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(1960,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(1960,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(1960,16,FLEN)
NAN_BOXED(14470,16,FLEN)
NAN_BOXED(1960,16,FLEN)
NAN_BOXED(14065,16,FLEN)
NAN_BOXED(2301,16,FLEN)
NAN_BOXED(14065,16,FLEN)
NAN_BOXED(2301,16,FLEN)
NAN_BOXED(14065,16,FLEN)
NAN_BOXED(2301,16,FLEN)
NAN_BOXED(14065,16,FLEN)
NAN_BOXED(2301,16,FLEN)
NAN_BOXED(14065,16,FLEN)
NAN_BOXED(2301,16,FLEN)
NAN_BOXED(14940,16,FLEN)
NAN_BOXED(1395,16,FLEN)
NAN_BOXED(14940,16,FLEN)
NAN_BOXED(1395,16,FLEN)
NAN_BOXED(14940,16,FLEN)
NAN_BOXED(1395,16,FLEN)
NAN_BOXED(14940,16,FLEN)
NAN_BOXED(1395,16,FLEN)
NAN_BOXED(14940,16,FLEN)
NAN_BOXED(1395,16,FLEN)
NAN_BOXED(15210,16,FLEN)
NAN_BOXED(1196,16,FLEN)
NAN_BOXED(15210,16,FLEN)
NAN_BOXED(1196,16,FLEN)
NAN_BOXED(15210,16,FLEN)
NAN_BOXED(1196,16,FLEN)
NAN_BOXED(15210,16,FLEN)
NAN_BOXED(1196,16,FLEN)
NAN_BOXED(15210,16,FLEN)
NAN_BOXED(1196,16,FLEN)
NAN_BOXED(14365,16,FLEN)
NAN_BOXED(2101,16,FLEN)
NAN_BOXED(14365,16,FLEN)
NAN_BOXED(2101,16,FLEN)
NAN_BOXED(14365,16,FLEN)
NAN_BOXED(2101,16,FLEN)
NAN_BOXED(14365,16,FLEN)
NAN_BOXED(2101,16,FLEN)
NAN_BOXED(14365,16,FLEN)
NAN_BOXED(2101,16,FLEN)
NAN_BOXED(13687,16,FLEN)
NAN_BOXED(2647,16,FLEN)
NAN_BOXED(13687,16,FLEN)
NAN_BOXED(2647,16,FLEN)
NAN_BOXED(13687,16,FLEN)
NAN_BOXED(2647,16,FLEN)
NAN_BOXED(13687,16,FLEN)
NAN_BOXED(2647,16,FLEN)
NAN_BOXED(13687,16,FLEN)
NAN_BOXED(2647,16,FLEN)
NAN_BOXED(14366,16,FLEN)
NAN_BOXED(2100,16,FLEN)
NAN_BOXED(14366,16,FLEN)
NAN_BOXED(2100,16,FLEN)
NAN_BOXED(14366,16,FLEN)
NAN_BOXED(2100,16,FLEN)
NAN_BOXED(14366,16,FLEN)
NAN_BOXED(2100,16,FLEN)
NAN_BOXED(14366,16,FLEN)
NAN_BOXED(2100,16,FLEN)
NAN_BOXED(14674,16,FLEN)
NAN_BOXED(1667,16,FLEN)
NAN_BOXED(14674,16,FLEN)
NAN_BOXED(1667,16,FLEN)
NAN_BOXED(14674,16,FLEN)
NAN_BOXED(1667,16,FLEN)
NAN_BOXED(14674,16,FLEN)
NAN_BOXED(1667,16,FLEN)
NAN_BOXED(14674,16,FLEN)
NAN_BOXED(1667,16,FLEN)
NAN_BOXED(14324,16,FLEN)
NAN_BOXED(2139,16,FLEN)
NAN_BOXED(14324,16,FLEN)
NAN_BOXED(2139,16,FLEN)
NAN_BOXED(14324,16,FLEN)
NAN_BOXED(2139,16,FLEN)
NAN_BOXED(14324,16,FLEN)
NAN_BOXED(2139,16,FLEN)
NAN_BOXED(14324,16,FLEN)
NAN_BOXED(2139,16,FLEN)
NAN_BOXED(15196,16,FLEN)
NAN_BOXED(1205,16,FLEN)
NAN_BOXED(15196,16,FLEN)
NAN_BOXED(1205,16,FLEN)
NAN_BOXED(15196,16,FLEN)
NAN_BOXED(1205,16,FLEN)
NAN_BOXED(15196,16,FLEN)
NAN_BOXED(1205,16,FLEN)
NAN_BOXED(15196,16,FLEN)
NAN_BOXED(1205,16,FLEN)
NAN_BOXED(15004,16,FLEN)
NAN_BOXED(1342,16,FLEN)
NAN_BOXED(15004,16,FLEN)
NAN_BOXED(1342,16,FLEN)
NAN_BOXED(15004,16,FLEN)
NAN_BOXED(1342,16,FLEN)
NAN_BOXED(15004,16,FLEN)
NAN_BOXED(1342,16,FLEN)
NAN_BOXED(15004,16,FLEN)
NAN_BOXED(1342,16,FLEN)
NAN_BOXED(13030,16,FLEN)
NAN_BOXED(3333,16,FLEN)
NAN_BOXED(13030,16,FLEN)
NAN_BOXED(3333,16,FLEN)
NAN_BOXED(13030,16,FLEN)
NAN_BOXED(3333,16,FLEN)
NAN_BOXED(13030,16,FLEN)
NAN_BOXED(3333,16,FLEN)
NAN_BOXED(13030,16,FLEN)
NAN_BOXED(3333,16,FLEN)
NAN_BOXED(13619,16,FLEN)
NAN_BOXED(2730,16,FLEN)
NAN_BOXED(13619,16,FLEN)
NAN_BOXED(2730,16,FLEN)
NAN_BOXED(13619,16,FLEN)
NAN_BOXED(2730,16,FLEN)
NAN_BOXED(13619,16,FLEN)
NAN_BOXED(2730,16,FLEN)
NAN_BOXED(13619,16,FLEN)
NAN_BOXED(2730,16,FLEN)
NAN_BOXED(12378,16,FLEN)
NAN_BOXED(4086,16,FLEN)
NAN_BOXED(12378,16,FLEN)
NAN_BOXED(4086,16,FLEN)
NAN_BOXED(12378,16,FLEN)
NAN_BOXED(4086,16,FLEN)
NAN_BOXED(12378,16,FLEN)
NAN_BOXED(4086,16,FLEN)
NAN_BOXED(12378,16,FLEN)
NAN_BOXED(4086,16,FLEN)
NAN_BOXED(15027,16,FLEN)
NAN_BOXED(1324,16,FLEN)
NAN_BOXED(15027,16,FLEN)
NAN_BOXED(1324,16,FLEN)
NAN_BOXED(15027,16,FLEN)
NAN_BOXED(1324,16,FLEN)
NAN_BOXED(15027,16,FLEN)
NAN_BOXED(1324,16,FLEN)
NAN_BOXED(15027,16,FLEN)
NAN_BOXED(1324,16,FLEN)
NAN_BOXED(14408,16,FLEN)
NAN_BOXED(2059,16,FLEN)
NAN_BOXED(14408,16,FLEN)
NAN_BOXED(2059,16,FLEN)
NAN_BOXED(14408,16,FLEN)
NAN_BOXED(2059,16,FLEN)
NAN_BOXED(14408,16,FLEN)
NAN_BOXED(2059,16,FLEN)
NAN_BOXED(14408,16,FLEN)
NAN_BOXED(2059,16,FLEN)
NAN_BOXED(15338,16,FLEN)
NAN_BOXED(1120,16,FLEN)
NAN_BOXED(15338,16,FLEN)
NAN_BOXED(1120,16,FLEN)
NAN_BOXED(15338,16,FLEN)
NAN_BOXED(1120,16,FLEN)
NAN_BOXED(15338,16,FLEN)
NAN_BOXED(1120,16,FLEN)
NAN_BOXED(15338,16,FLEN)
NAN_BOXED(1120,16,FLEN)
NAN_BOXED(10302,16,FLEN)
NAN_BOXED(6165,16,FLEN)
NAN_BOXED(10302,16,FLEN)
NAN_BOXED(6165,16,FLEN)
NAN_BOXED(10302,16,FLEN)
NAN_BOXED(6165,16,FLEN)
NAN_BOXED(10302,16,FLEN)
NAN_BOXED(6165,16,FLEN)
NAN_BOXED(10302,16,FLEN)
NAN_BOXED(6165,16,FLEN)
NAN_BOXED(14180,16,FLEN)
NAN_BOXED(2224,16,FLEN)
NAN_BOXED(14180,16,FLEN)
NAN_BOXED(2224,16,FLEN)
NAN_BOXED(14180,16,FLEN)
NAN_BOXED(2224,16,FLEN)
NAN_BOXED(14180,16,FLEN)
NAN_BOXED(2224,16,FLEN)
NAN_BOXED(14180,16,FLEN)
NAN_BOXED(2224,16,FLEN)
NAN_BOXED(14453,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14453,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14453,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14453,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14453,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(1603,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(1603,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(1603,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(1603,16,FLEN)
NAN_BOXED(14728,16,FLEN)
NAN_BOXED(1603,16,FLEN)
NAN_BOXED(14369,16,FLEN)
NAN_BOXED(2098,16,FLEN)
NAN_BOXED(14369,16,FLEN)
NAN_BOXED(2098,16,FLEN)
NAN_BOXED(14369,16,FLEN)
NAN_BOXED(2098,16,FLEN)
NAN_BOXED(14369,16,FLEN)
NAN_BOXED(2098,16,FLEN)
NAN_BOXED(14369,16,FLEN)
NAN_BOXED(2098,16,FLEN)
NAN_BOXED(11638,16,FLEN)
NAN_BOXED(4696,16,FLEN)
NAN_BOXED(11638,16,FLEN)
NAN_BOXED(4696,16,FLEN)
NAN_BOXED(11638,16,FLEN)
NAN_BOXED(4696,16,FLEN)
NAN_BOXED(11638,16,FLEN)
NAN_BOXED(4696,16,FLEN)
NAN_BOXED(11638,16,FLEN)
NAN_BOXED(4696,16,FLEN)
NAN_BOXED(12703,16,FLEN)
NAN_BOXED(3626,16,FLEN)
NAN_BOXED(12703,16,FLEN)
NAN_BOXED(3626,16,FLEN)
NAN_BOXED(12703,16,FLEN)
NAN_BOXED(3626,16,FLEN)
NAN_BOXED(12703,16,FLEN)
NAN_BOXED(3626,16,FLEN)
NAN_BOXED(12703,16,FLEN)
NAN_BOXED(3626,16,FLEN)
NAN_BOXED(13736,16,FLEN)
NAN_BOXED(2591,16,FLEN)
NAN_BOXED(13736,16,FLEN)
NAN_BOXED(2591,16,FLEN)
NAN_BOXED(13736,16,FLEN)
NAN_BOXED(2591,16,FLEN)
NAN_BOXED(13736,16,FLEN)
NAN_BOXED(2591,16,FLEN)
NAN_BOXED(13736,16,FLEN)
NAN_BOXED(2591,16,FLEN)
NAN_BOXED(13707,16,FLEN)
NAN_BOXED(2623,16,FLEN)
NAN_BOXED(13707,16,FLEN)
NAN_BOXED(2623,16,FLEN)
NAN_BOXED(13707,16,FLEN)
NAN_BOXED(2623,16,FLEN)
NAN_BOXED(13707,16,FLEN)
NAN_BOXED(2623,16,FLEN)
NAN_BOXED(13707,16,FLEN)
NAN_BOXED(2623,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3788,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3788,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3788,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3788,16,FLEN)
NAN_BOXED(12569,16,FLEN)
NAN_BOXED(3788,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(2536,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(2536,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(2536,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(2536,16,FLEN)
NAN_BOXED(13790,16,FLEN)
NAN_BOXED(2536,16,FLEN)
NAN_BOXED(14211,16,FLEN)
NAN_BOXED(2204,16,FLEN)
NAN_BOXED(14211,16,FLEN)
NAN_BOXED(2204,16,FLEN)
NAN_BOXED(14211,16,FLEN)
NAN_BOXED(2204,16,FLEN)
NAN_BOXED(14211,16,FLEN)
NAN_BOXED(2204,16,FLEN)
NAN_BOXED(14211,16,FLEN)
NAN_BOXED(2204,16,FLEN)
NAN_BOXED(12920,16,FLEN)
NAN_BOXED(3419,16,FLEN)
NAN_BOXED(12920,16,FLEN)
NAN_BOXED(3419,16,FLEN)
NAN_BOXED(12920,16,FLEN)
NAN_BOXED(3419,16,FLEN)
NAN_BOXED(12920,16,FLEN)
NAN_BOXED(3419,16,FLEN)
NAN_BOXED(12920,16,FLEN)
NAN_BOXED(3419,16,FLEN)
NAN_BOXED(14729,16,FLEN)
NAN_BOXED(1602,16,FLEN)
NAN_BOXED(14729,16,FLEN)
NAN_BOXED(1602,16,FLEN)
NAN_BOXED(14729,16,FLEN)
NAN_BOXED(1602,16,FLEN)
NAN_BOXED(14729,16,FLEN)
NAN_BOXED(1602,16,FLEN)
NAN_BOXED(14729,16,FLEN)
NAN_BOXED(1602,16,FLEN)
NAN_BOXED(14423,16,FLEN)
NAN_BOXED(2044,16,FLEN)
NAN_BOXED(14423,16,FLEN)
NAN_BOXED(2044,16,FLEN)
NAN_BOXED(14423,16,FLEN)
NAN_BOXED(2044,16,FLEN)
NAN_BOXED(14423,16,FLEN)
NAN_BOXED(2044,16,FLEN)
NAN_BOXED(14423,16,FLEN)
NAN_BOXED(2044,16,FLEN)
NAN_BOXED(14791,16,FLEN)
NAN_BOXED(1535,16,FLEN)
NAN_BOXED(14791,16,FLEN)
NAN_BOXED(1535,16,FLEN)
NAN_BOXED(14791,16,FLEN)
NAN_BOXED(1535,16,FLEN)
NAN_BOXED(14791,16,FLEN)
NAN_BOXED(1535,16,FLEN)
NAN_BOXED(14791,16,FLEN)
NAN_BOXED(1535,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1248,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1248,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1248,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1248,16,FLEN)
NAN_BOXED(15130,16,FLEN)
NAN_BOXED(1248,16,FLEN)
NAN_BOXED(14583,16,FLEN)
NAN_BOXED(1786,16,FLEN)
NAN_BOXED(14583,16,FLEN)
NAN_BOXED(1786,16,FLEN)
NAN_BOXED(14583,16,FLEN)
NAN_BOXED(1786,16,FLEN)
NAN_BOXED(14583,16,FLEN)
NAN_BOXED(1786,16,FLEN)
NAN_BOXED(14583,16,FLEN)
NAN_BOXED(1786,16,FLEN)
NAN_BOXED(14707,16,FLEN)
NAN_BOXED(1627,16,FLEN)
NAN_BOXED(14707,16,FLEN)
NAN_BOXED(1627,16,FLEN)
NAN_BOXED(14707,16,FLEN)
NAN_BOXED(1627,16,FLEN)
NAN_BOXED(14707,16,FLEN)
NAN_BOXED(1627,16,FLEN)
NAN_BOXED(14707,16,FLEN)
NAN_BOXED(1627,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(1987,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(1987,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(1987,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(1987,16,FLEN)
NAN_BOXED(14454,16,FLEN)
NAN_BOXED(1987,16,FLEN)
NAN_BOXED(11968,16,FLEN)
NAN_BOXED(4386,16,FLEN)
NAN_BOXED(11968,16,FLEN)
NAN_BOXED(4386,16,FLEN)
NAN_BOXED(11968,16,FLEN)
NAN_BOXED(4386,16,FLEN)
NAN_BOXED(11968,16,FLEN)
NAN_BOXED(4386,16,FLEN)
NAN_BOXED(11968,16,FLEN)
NAN_BOXED(4386,16,FLEN)
NAN_BOXED(11393,16,FLEN)
NAN_BOXED(5041,16,FLEN)
NAN_BOXED(11393,16,FLEN)
NAN_BOXED(5041,16,FLEN)
NAN_BOXED(11393,16,FLEN)
NAN_BOXED(5041,16,FLEN)
NAN_BOXED(11393,16,FLEN)
NAN_BOXED(5041,16,FLEN)
NAN_BOXED(11393,16,FLEN)
NAN_BOXED(5041,16,FLEN)
NAN_BOXED(15156,16,FLEN)
NAN_BOXED(1326,16,FLEN)
NAN_BOXED(15156,16,FLEN)
NAN_BOXED(1326,16,FLEN)
NAN_BOXED(15156,16,FLEN)
NAN_BOXED(1326,16,FLEN)
NAN_BOXED(15156,16,FLEN)
NAN_BOXED(1326,16,FLEN)
NAN_BOXED(15156,16,FLEN)
NAN_BOXED(1326,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(1473,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(1473,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(1473,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(1473,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(1473,16,FLEN)
NAN_BOXED(14594,16,FLEN)
NAN_BOXED(1906,16,FLEN)
NAN_BOXED(14594,16,FLEN)
NAN_BOXED(1906,16,FLEN)
NAN_BOXED(14594,16,FLEN)
NAN_BOXED(1906,16,FLEN)
NAN_BOXED(14594,16,FLEN)
NAN_BOXED(1906,16,FLEN)
NAN_BOXED(14594,16,FLEN)
NAN_BOXED(1906,16,FLEN)
NAN_BOXED(12943,16,FLEN)
NAN_BOXED(3504,16,FLEN)
NAN_BOXED(12943,16,FLEN)
NAN_BOXED(3504,16,FLEN)
NAN_BOXED(12943,16,FLEN)
NAN_BOXED(3504,16,FLEN)
NAN_BOXED(12943,16,FLEN)
NAN_BOXED(3504,16,FLEN)
NAN_BOXED(12943,16,FLEN)
NAN_BOXED(3504,16,FLEN)
NAN_BOXED(12832,16,FLEN)
NAN_BOXED(3606,16,FLEN)
NAN_BOXED(12832,16,FLEN)
NAN_BOXED(3606,16,FLEN)
NAN_BOXED(12832,16,FLEN)
NAN_BOXED(3606,16,FLEN)
NAN_BOXED(12832,16,FLEN)
NAN_BOXED(3606,16,FLEN)
NAN_BOXED(12832,16,FLEN)
NAN_BOXED(3606,16,FLEN)
NAN_BOXED(14540,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14540,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14540,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14540,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14540,16,FLEN)
NAN_BOXED(1990,16,FLEN)
NAN_BOXED(14659,16,FLEN)
NAN_BOXED(1815,16,FLEN)
NAN_BOXED(14659,16,FLEN)
NAN_BOXED(1815,16,FLEN)
NAN_BOXED(14659,16,FLEN)
NAN_BOXED(1815,16,FLEN)
NAN_BOXED(14659,16,FLEN)
NAN_BOXED(1815,16,FLEN)
NAN_BOXED(14659,16,FLEN)
NAN_BOXED(1815,16,FLEN)
NAN_BOXED(11454,16,FLEN)
NAN_BOXED(5085,16,FLEN)
NAN_BOXED(11454,16,FLEN)
NAN_BOXED(5085,16,FLEN)
NAN_BOXED(11454,16,FLEN)
NAN_BOXED(5085,16,FLEN)
NAN_BOXED(11454,16,FLEN)
NAN_BOXED(5085,16,FLEN)
NAN_BOXED(11454,16,FLEN)
NAN_BOXED(5085,16,FLEN)
NAN_BOXED(13558,16,FLEN)
NAN_BOXED(2949,16,FLEN)
NAN_BOXED(13558,16,FLEN)
NAN_BOXED(2949,16,FLEN)
NAN_BOXED(13558,16,FLEN)
NAN_BOXED(2949,16,FLEN)
NAN_BOXED(13558,16,FLEN)
NAN_BOXED(2949,16,FLEN)
NAN_BOXED(13558,16,FLEN)
NAN_BOXED(2949,16,FLEN)
NAN_BOXED(13342,16,FLEN)
NAN_BOXED(3207,16,FLEN)
NAN_BOXED(13342,16,FLEN)
NAN_BOXED(3207,16,FLEN)
NAN_BOXED(13342,16,FLEN)
NAN_BOXED(3207,16,FLEN)
NAN_BOXED(13342,16,FLEN)
NAN_BOXED(3207,16,FLEN)
NAN_BOXED(13342,16,FLEN)
NAN_BOXED(3207,16,FLEN)
NAN_BOXED(12335,16,FLEN)
NAN_BOXED(4213,16,FLEN)
NAN_BOXED(12335,16,FLEN)
NAN_BOXED(4213,16,FLEN)
NAN_BOXED(12335,16,FLEN)
NAN_BOXED(4213,16,FLEN)
NAN_BOXED(12335,16,FLEN)
NAN_BOXED(4213,16,FLEN)
NAN_BOXED(12335,16,FLEN)
NAN_BOXED(4213,16,FLEN)
NAN_BOXED(13283,16,FLEN)
NAN_BOXED(3259,16,FLEN)
NAN_BOXED(13283,16,FLEN)
NAN_BOXED(3259,16,FLEN)
NAN_BOXED(13283,16,FLEN)
NAN_BOXED(3259,16,FLEN)
NAN_BOXED(13283,16,FLEN)
NAN_BOXED(3259,16,FLEN)
NAN_BOXED(13283,16,FLEN)
NAN_BOXED(3259,16,FLEN)
NAN_BOXED(14762,16,FLEN)
NAN_BOXED(1685,16,FLEN)
NAN_BOXED(14762,16,FLEN)
NAN_BOXED(1685,16,FLEN)
NAN_BOXED(14762,16,FLEN)
NAN_BOXED(1685,16,FLEN)
NAN_BOXED(14762,16,FLEN)
NAN_BOXED(1685,16,FLEN)
NAN_BOXED(14762,16,FLEN)
NAN_BOXED(1685,16,FLEN)
NAN_BOXED(13637,16,FLEN)
NAN_BOXED(2836,16,FLEN)
NAN_BOXED(13637,16,FLEN)
NAN_BOXED(2836,16,FLEN)
NAN_BOXED(13637,16,FLEN)
NAN_BOXED(2836,16,FLEN)
NAN_BOXED(13637,16,FLEN)
NAN_BOXED(2836,16,FLEN)
NAN_BOXED(13637,16,FLEN)
NAN_BOXED(2836,16,FLEN)
NAN_BOXED(14550,16,FLEN)
NAN_BOXED(1974,16,FLEN)
NAN_BOXED(14550,16,FLEN)
NAN_BOXED(1974,16,FLEN)
NAN_BOXED(14550,16,FLEN)
NAN_BOXED(1974,16,FLEN)
NAN_BOXED(14550,16,FLEN)
NAN_BOXED(1974,16,FLEN)
NAN_BOXED(14550,16,FLEN)
NAN_BOXED(1974,16,FLEN)
NAN_BOXED(10603,16,FLEN)
NAN_BOXED(5857,16,FLEN)
NAN_BOXED(10603,16,FLEN)
NAN_BOXED(5857,16,FLEN)
NAN_BOXED(10603,16,FLEN)
NAN_BOXED(5857,16,FLEN)
NAN_BOXED(10603,16,FLEN)
NAN_BOXED(5857,16,FLEN)
NAN_BOXED(10603,16,FLEN)
NAN_BOXED(5857,16,FLEN)
NAN_BOXED(14383,16,FLEN)
NAN_BOXED(2164,16,FLEN)
NAN_BOXED(14383,16,FLEN)
NAN_BOXED(2164,16,FLEN)
NAN_BOXED(14383,16,FLEN)
NAN_BOXED(2164,16,FLEN)
NAN_BOXED(14383,16,FLEN)
NAN_BOXED(2164,16,FLEN)
NAN_BOXED(14383,16,FLEN)
NAN_BOXED(2164,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(1467,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(1467,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(1467,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(1467,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(1467,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(1367,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(1367,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(1367,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(1367,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(1367,16,FLEN)
NAN_BOXED(14641,16,FLEN)
NAN_BOXED(1839,16,FLEN)
NAN_BOXED(14641,16,FLEN)
NAN_BOXED(1839,16,FLEN)
NAN_BOXED(14641,16,FLEN)
NAN_BOXED(1839,16,FLEN)
NAN_BOXED(14641,16,FLEN)
NAN_BOXED(1839,16,FLEN)
NAN_BOXED(14641,16,FLEN)
NAN_BOXED(1839,16,FLEN)
NAN_BOXED(11590,16,FLEN)
NAN_BOXED(4883,16,FLEN)
NAN_BOXED(11590,16,FLEN)
NAN_BOXED(4883,16,FLEN)
NAN_BOXED(11590,16,FLEN)
NAN_BOXED(4883,16,FLEN)
NAN_BOXED(11590,16,FLEN)
NAN_BOXED(4883,16,FLEN)
NAN_BOXED(11590,16,FLEN)
NAN_BOXED(4883,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3299,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3299,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3299,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3299,16,FLEN)
NAN_BOXED(13217,16,FLEN)
NAN_BOXED(3299,16,FLEN)
NAN_BOXED(14161,16,FLEN)
NAN_BOXED(2329,16,FLEN)
NAN_BOXED(14161,16,FLEN)
NAN_BOXED(2329,16,FLEN)
NAN_BOXED(14161,16,FLEN)
NAN_BOXED(2329,16,FLEN)
NAN_BOXED(14161,16,FLEN)
NAN_BOXED(2329,16,FLEN)
NAN_BOXED(14161,16,FLEN)
NAN_BOXED(2329,16,FLEN)
NAN_BOXED(12628,16,FLEN)
NAN_BOXED(3840,16,FLEN)
NAN_BOXED(12628,16,FLEN)
NAN_BOXED(3840,16,FLEN)
NAN_BOXED(12628,16,FLEN)
NAN_BOXED(3840,16,FLEN)
NAN_BOXED(12628,16,FLEN)
NAN_BOXED(3840,16,FLEN)
NAN_BOXED(12628,16,FLEN)
NAN_BOXED(3840,16,FLEN)
NAN_BOXED(14777,16,FLEN)
NAN_BOXED(1669,16,FLEN)
NAN_BOXED(14777,16,FLEN)
NAN_BOXED(1669,16,FLEN)
NAN_BOXED(14777,16,FLEN)
NAN_BOXED(1669,16,FLEN)
NAN_BOXED(14777,16,FLEN)
NAN_BOXED(1669,16,FLEN)
NAN_BOXED(14777,16,FLEN)
NAN_BOXED(1669,16,FLEN)
NAN_BOXED(15051,16,FLEN)
NAN_BOXED(1405,16,FLEN)
NAN_BOXED(15051,16,FLEN)
NAN_BOXED(1405,16,FLEN)
NAN_BOXED(15051,16,FLEN)
NAN_BOXED(1405,16,FLEN)
NAN_BOXED(15051,16,FLEN)
NAN_BOXED(1405,16,FLEN)
NAN_BOXED(15051,16,FLEN)
NAN_BOXED(1405,16,FLEN)
NAN_BOXED(11450,16,FLEN)
NAN_BOXED(5092,16,FLEN)
NAN_BOXED(11450,16,FLEN)
NAN_BOXED(5092,16,FLEN)
NAN_BOXED(11450,16,FLEN)
NAN_BOXED(5092,16,FLEN)
NAN_BOXED(11450,16,FLEN)
NAN_BOXED(5092,16,FLEN)
NAN_BOXED(11450,16,FLEN)
NAN_BOXED(5092,16,FLEN)
NAN_BOXED(15068,16,FLEN)
NAN_BOXED(1392,16,FLEN)
NAN_BOXED(15068,16,FLEN)
NAN_BOXED(1392,16,FLEN)
NAN_BOXED(15068,16,FLEN)
NAN_BOXED(1392,16,FLEN)
NAN_BOXED(15068,16,FLEN)
NAN_BOXED(1392,16,FLEN)
NAN_BOXED(15068,16,FLEN)
NAN_BOXED(1392,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1594,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1594,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1594,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1594,16,FLEN)
NAN_BOXED(14846,16,FLEN)
NAN_BOXED(1594,16,FLEN)
NAN_BOXED(14847,16,FLEN)
NAN_BOXED(1592,16,FLEN)
NAN_BOXED(14847,16,FLEN)
NAN_BOXED(1592,16,FLEN)
NAN_BOXED(14847,16,FLEN)
NAN_BOXED(1592,16,FLEN)
NAN_BOXED(14847,16,FLEN)
NAN_BOXED(1592,16,FLEN)
NAN_BOXED(14847,16,FLEN)
NAN_BOXED(1592,16,FLEN)
NAN_BOXED(14855,16,FLEN)
NAN_BOXED(1584,16,FLEN)
NAN_BOXED(14855,16,FLEN)
NAN_BOXED(1584,16,FLEN)
NAN_BOXED(14855,16,FLEN)
NAN_BOXED(1584,16,FLEN)
NAN_BOXED(14855,16,FLEN)
NAN_BOXED(1584,16,FLEN)
NAN_BOXED(14855,16,FLEN)
NAN_BOXED(1584,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(2557,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(2557,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(2557,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(2557,16,FLEN)
NAN_BOXED(13883,16,FLEN)
NAN_BOXED(2557,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1903,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1903,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1903,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1903,16,FLEN)
NAN_BOXED(14596,16,FLEN)
NAN_BOXED(1903,16,FLEN)
NAN_BOXED(15233,16,FLEN)
NAN_BOXED(1272,16,FLEN)
NAN_BOXED(15233,16,FLEN)
NAN_BOXED(1272,16,FLEN)
NAN_BOXED(15233,16,FLEN)
NAN_BOXED(1272,16,FLEN)
NAN_BOXED(15233,16,FLEN)
NAN_BOXED(1272,16,FLEN)
NAN_BOXED(15233,16,FLEN)
NAN_BOXED(1272,16,FLEN)
NAN_BOXED(12486,16,FLEN)
NAN_BOXED(4048,16,FLEN)
NAN_BOXED(12486,16,FLEN)
NAN_BOXED(4048,16,FLEN)
NAN_BOXED(12486,16,FLEN)
NAN_BOXED(4048,16,FLEN)
NAN_BOXED(12486,16,FLEN)
NAN_BOXED(4048,16,FLEN)
NAN_BOXED(12486,16,FLEN)
NAN_BOXED(4048,16,FLEN)
NAN_BOXED(13076,16,FLEN)
NAN_BOXED(3397,16,FLEN)
NAN_BOXED(13076,16,FLEN)
NAN_BOXED(3397,16,FLEN)
NAN_BOXED(13076,16,FLEN)
NAN_BOXED(3397,16,FLEN)
NAN_BOXED(13076,16,FLEN)
NAN_BOXED(3397,16,FLEN)
NAN_BOXED(13076,16,FLEN)
NAN_BOXED(3397,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(2275,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(2275,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(2275,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(2275,16,FLEN)
NAN_BOXED(14241,16,FLEN)
NAN_BOXED(2275,16,FLEN)
NAN_BOXED(14667,16,FLEN)
NAN_BOXED(1803,16,FLEN)
NAN_BOXED(14667,16,FLEN)
NAN_BOXED(1803,16,FLEN)
NAN_BOXED(14667,16,FLEN)
NAN_BOXED(1803,16,FLEN)
NAN_BOXED(14667,16,FLEN)
NAN_BOXED(1803,16,FLEN)
NAN_BOXED(14667,16,FLEN)
NAN_BOXED(1803,16,FLEN)
NAN_BOXED(13884,16,FLEN)
NAN_BOXED(2556,16,FLEN)
NAN_BOXED(13884,16,FLEN)
NAN_BOXED(2556,16,FLEN)
NAN_BOXED(13884,16,FLEN)
NAN_BOXED(2556,16,FLEN)
NAN_BOXED(13884,16,FLEN)
NAN_BOXED(2556,16,FLEN)
NAN_BOXED(13884,16,FLEN)
NAN_BOXED(2556,16,FLEN)
NAN_BOXED(6545,16,FLEN)
NAN_BOXED(9907,16,FLEN)
NAN_BOXED(6545,16,FLEN)
NAN_BOXED(9907,16,FLEN)
NAN_BOXED(6545,16,FLEN)
NAN_BOXED(9907,16,FLEN)
NAN_BOXED(6545,16,FLEN)
NAN_BOXED(9907,16,FLEN)
NAN_BOXED(6545,16,FLEN)
NAN_BOXED(9907,16,FLEN)
NAN_BOXED(14389,16,FLEN)
NAN_BOXED(2158,16,FLEN)
NAN_BOXED(14389,16,FLEN)
NAN_BOXED(2158,16,FLEN)
NAN_BOXED(14389,16,FLEN)
NAN_BOXED(2158,16,FLEN)
NAN_BOXED(14389,16,FLEN)
NAN_BOXED(2158,16,FLEN)
NAN_BOXED(14389,16,FLEN)
NAN_BOXED(2158,16,FLEN)
NAN_BOXED(14711,16,FLEN)
NAN_BOXED(1748,16,FLEN)
NAN_BOXED(14711,16,FLEN)
NAN_BOXED(1748,16,FLEN)
NAN_BOXED(14711,16,FLEN)
NAN_BOXED(1748,16,FLEN)
NAN_BOXED(14711,16,FLEN)
NAN_BOXED(1748,16,FLEN)
NAN_BOXED(14711,16,FLEN)
NAN_BOXED(1748,16,FLEN)
NAN_BOXED(20692,16,FLEN)
NAN_BOXED(16031,16,FLEN)
NAN_BOXED(20692,16,FLEN)
NAN_BOXED(16031,16,FLEN)
NAN_BOXED(20692,16,FLEN)
NAN_BOXED(16031,16,FLEN)
NAN_BOXED(20692,16,FLEN)
NAN_BOXED(16031,16,FLEN)
NAN_BOXED(20692,16,FLEN)
NAN_BOXED(16031,16,FLEN)
NAN_BOXED(20573,16,FLEN)
NAN_BOXED(16212,16,FLEN)
NAN_BOXED(20573,16,FLEN)
NAN_BOXED(16212,16,FLEN)
NAN_BOXED(20573,16,FLEN)
NAN_BOXED(16212,16,FLEN)
NAN_BOXED(20573,16,FLEN)
NAN_BOXED(16212,16,FLEN)
NAN_BOXED(20573,16,FLEN)
NAN_BOXED(16212,16,FLEN)
NAN_BOXED(21481,16,FLEN)
NAN_BOXED(15371,16,FLEN)
NAN_BOXED(21481,16,FLEN)
NAN_BOXED(15371,16,FLEN)
NAN_BOXED(21481,16,FLEN)
NAN_BOXED(15371,16,FLEN)
NAN_BOXED(21481,16,FLEN)
NAN_BOXED(15371,16,FLEN)
NAN_BOXED(21481,16,FLEN)
NAN_BOXED(15371,16,FLEN)
NAN_BOXED(20329,16,FLEN)
NAN_BOXED(16465,16,FLEN)
NAN_BOXED(20329,16,FLEN)
NAN_BOXED(16465,16,FLEN)
NAN_BOXED(20329,16,FLEN)
NAN_BOXED(16465,16,FLEN)
NAN_BOXED(20329,16,FLEN)
NAN_BOXED(16465,16,FLEN)
NAN_BOXED(20329,16,FLEN)
NAN_BOXED(16465,16,FLEN)
NAN_BOXED(20546,16,FLEN)
NAN_BOXED(16260,16,FLEN)
NAN_BOXED(20546,16,FLEN)
NAN_BOXED(16260,16,FLEN)
NAN_BOXED(20546,16,FLEN)
NAN_BOXED(16260,16,FLEN)
NAN_BOXED(20546,16,FLEN)
NAN_BOXED(16260,16,FLEN)
NAN_BOXED(20546,16,FLEN)
NAN_BOXED(16260,16,FLEN)
NAN_BOXED(18386,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(18386,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(18386,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(18386,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(18386,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(18570,16,FLEN)
NAN_BOXED(18188,16,FLEN)
NAN_BOXED(18570,16,FLEN)
NAN_BOXED(18188,16,FLEN)
NAN_BOXED(18570,16,FLEN)
NAN_BOXED(18188,16,FLEN)
NAN_BOXED(18570,16,FLEN)
NAN_BOXED(18188,16,FLEN)
NAN_BOXED(18570,16,FLEN)
NAN_BOXED(18188,16,FLEN)
NAN_BOXED(20858,16,FLEN)
NAN_BOXED(15831,16,FLEN)
NAN_BOXED(20858,16,FLEN)
NAN_BOXED(15831,16,FLEN)
NAN_BOXED(20858,16,FLEN)
NAN_BOXED(15831,16,FLEN)
NAN_BOXED(20858,16,FLEN)
NAN_BOXED(15831,16,FLEN)
NAN_BOXED(20858,16,FLEN)
NAN_BOXED(15831,16,FLEN)
NAN_BOXED(17887,16,FLEN)
NAN_BOXED(18803,16,FLEN)
NAN_BOXED(17887,16,FLEN)
NAN_BOXED(18803,16,FLEN)
NAN_BOXED(17887,16,FLEN)
NAN_BOXED(18803,16,FLEN)
NAN_BOXED(17887,16,FLEN)
NAN_BOXED(18803,16,FLEN)
NAN_BOXED(17887,16,FLEN)
NAN_BOXED(18803,16,FLEN)
NAN_BOXED(21096,16,FLEN)
NAN_BOXED(15614,16,FLEN)
NAN_BOXED(21096,16,FLEN)
NAN_BOXED(15614,16,FLEN)
NAN_BOXED(21096,16,FLEN)
NAN_BOXED(15614,16,FLEN)
NAN_BOXED(21096,16,FLEN)
NAN_BOXED(15614,16,FLEN)
NAN_BOXED(21096,16,FLEN)
NAN_BOXED(15614,16,FLEN)
NAN_BOXED(18349,16,FLEN)
NAN_BOXED(18475,16,FLEN)
NAN_BOXED(18349,16,FLEN)
NAN_BOXED(18475,16,FLEN)
NAN_BOXED(18349,16,FLEN)
NAN_BOXED(18475,16,FLEN)
NAN_BOXED(18349,16,FLEN)
NAN_BOXED(18475,16,FLEN)
NAN_BOXED(18349,16,FLEN)
NAN_BOXED(18475,16,FLEN)
NAN_BOXED(18932,16,FLEN)
NAN_BOXED(17759,16,FLEN)
NAN_BOXED(18932,16,FLEN)
NAN_BOXED(17759,16,FLEN)
NAN_BOXED(18932,16,FLEN)
NAN_BOXED(17759,16,FLEN)
NAN_BOXED(18932,16,FLEN)
NAN_BOXED(17759,16,FLEN)
NAN_BOXED(18932,16,FLEN)
NAN_BOXED(17759,16,FLEN)
NAN_BOXED(20838,16,FLEN)
NAN_BOXED(15853,16,FLEN)
NAN_BOXED(20838,16,FLEN)
NAN_BOXED(15853,16,FLEN)
NAN_BOXED(20838,16,FLEN)
NAN_BOXED(15853,16,FLEN)
NAN_BOXED(20838,16,FLEN)
NAN_BOXED(15853,16,FLEN)
NAN_BOXED(20838,16,FLEN)
NAN_BOXED(15853,16,FLEN)
NAN_BOXED(21447,16,FLEN)
NAN_BOXED(15389,16,FLEN)
NAN_BOXED(21447,16,FLEN)
NAN_BOXED(15389,16,FLEN)
NAN_BOXED(21447,16,FLEN)
NAN_BOXED(15389,16,FLEN)
NAN_BOXED(21447,16,FLEN)
NAN_BOXED(15389,16,FLEN)
NAN_BOXED(21447,16,FLEN)
NAN_BOXED(15389,16,FLEN)
NAN_BOXED(17442,16,FLEN)
NAN_BOXED(19389,16,FLEN)
NAN_BOXED(17442,16,FLEN)
NAN_BOXED(19389,16,FLEN)
NAN_BOXED(17442,16,FLEN)
NAN_BOXED(19389,16,FLEN)
NAN_BOXED(17442,16,FLEN)
NAN_BOXED(19389,16,FLEN)
NAN_BOXED(17442,16,FLEN)
NAN_BOXED(19389,16,FLEN)
NAN_BOXED(19469,16,FLEN)
NAN_BOXED(17380,16,FLEN)
NAN_BOXED(19469,16,FLEN)
NAN_BOXED(17380,16,FLEN)
NAN_BOXED(19469,16,FLEN)
NAN_BOXED(17380,16,FLEN)
NAN_BOXED(19469,16,FLEN)
NAN_BOXED(17380,16,FLEN)
NAN_BOXED(19469,16,FLEN)
NAN_BOXED(17380,16,FLEN)
NAN_BOXED(20614,16,FLEN)
NAN_BOXED(16146,16,FLEN)
NAN_BOXED(20614,16,FLEN)
NAN_BOXED(16146,16,FLEN)
NAN_BOXED(20614,16,FLEN)
NAN_BOXED(16146,16,FLEN)
NAN_BOXED(20614,16,FLEN)
NAN_BOXED(16146,16,FLEN)
NAN_BOXED(20614,16,FLEN)
NAN_BOXED(16146,16,FLEN)
NAN_BOXED(20500,16,FLEN)
NAN_BOXED(16344,16,FLEN)
NAN_BOXED(20500,16,FLEN)
NAN_BOXED(16344,16,FLEN)
NAN_BOXED(20500,16,FLEN)
NAN_BOXED(16344,16,FLEN)
NAN_BOXED(20500,16,FLEN)
NAN_BOXED(16344,16,FLEN)
NAN_BOXED(20500,16,FLEN)
NAN_BOXED(16344,16,FLEN)
NAN_BOXED(19145,16,FLEN)
NAN_BOXED(17590,16,FLEN)
NAN_BOXED(19145,16,FLEN)
NAN_BOXED(17590,16,FLEN)
NAN_BOXED(19145,16,FLEN)
NAN_BOXED(17590,16,FLEN)
NAN_BOXED(19145,16,FLEN)
NAN_BOXED(17590,16,FLEN)
NAN_BOXED(19145,16,FLEN)
NAN_BOXED(17590,16,FLEN)
NAN_BOXED(21145,16,FLEN)
NAN_BOXED(15577,16,FLEN)
NAN_BOXED(21145,16,FLEN)
NAN_BOXED(15577,16,FLEN)
NAN_BOXED(21145,16,FLEN)
NAN_BOXED(15577,16,FLEN)
NAN_BOXED(21145,16,FLEN)
NAN_BOXED(15577,16,FLEN)
NAN_BOXED(21145,16,FLEN)
NAN_BOXED(15577,16,FLEN)
NAN_BOXED(20862,16,FLEN)
NAN_BOXED(15826,16,FLEN)
NAN_BOXED(20862,16,FLEN)
NAN_BOXED(15826,16,FLEN)
NAN_BOXED(20862,16,FLEN)
NAN_BOXED(15826,16,FLEN)
NAN_BOXED(20862,16,FLEN)
NAN_BOXED(15826,16,FLEN)
NAN_BOXED(20862,16,FLEN)
NAN_BOXED(15826,16,FLEN)
NAN_BOXED(18664,16,FLEN)
NAN_BOXED(18052,16,FLEN)
NAN_BOXED(18664,16,FLEN)
NAN_BOXED(18052,16,FLEN)
NAN_BOXED(18664,16,FLEN)
NAN_BOXED(18052,16,FLEN)
NAN_BOXED(18664,16,FLEN)
NAN_BOXED(18052,16,FLEN)
NAN_BOXED(18664,16,FLEN)
NAN_BOXED(18052,16,FLEN)
NAN_BOXED(18598,16,FLEN)
NAN_BOXED(18145,16,FLEN)
NAN_BOXED(18598,16,FLEN)
NAN_BOXED(18145,16,FLEN)
NAN_BOXED(18598,16,FLEN)
NAN_BOXED(18145,16,FLEN)
NAN_BOXED(18598,16,FLEN)
NAN_BOXED(18145,16,FLEN)
NAN_BOXED(18598,16,FLEN)
NAN_BOXED(18145,16,FLEN)
NAN_BOXED(18385,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(18385,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(18385,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(18385,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(18385,16,FLEN)
NAN_BOXED(18455,16,FLEN)
NAN_BOXED(17497,16,FLEN)
NAN_BOXED(19291,16,FLEN)
NAN_BOXED(17497,16,FLEN)
NAN_BOXED(19291,16,FLEN)
NAN_BOXED(17497,16,FLEN)
NAN_BOXED(19291,16,FLEN)
NAN_BOXED(17497,16,FLEN)
NAN_BOXED(19291,16,FLEN)
NAN_BOXED(17497,16,FLEN)
NAN_BOXED(19291,16,FLEN)
NAN_BOXED(20024,16,FLEN)
NAN_BOXED(16676,16,FLEN)
NAN_BOXED(20024,16,FLEN)
NAN_BOXED(16676,16,FLEN)
NAN_BOXED(20024,16,FLEN)
NAN_BOXED(16676,16,FLEN)
NAN_BOXED(20024,16,FLEN)
NAN_BOXED(16676,16,FLEN)
NAN_BOXED(20024,16,FLEN)
NAN_BOXED(16676,16,FLEN)
NAN_BOXED(21219,16,FLEN)
NAN_BOXED(15525,16,FLEN)
NAN_BOXED(21219,16,FLEN)
NAN_BOXED(15525,16,FLEN)
NAN_BOXED(21219,16,FLEN)
NAN_BOXED(15525,16,FLEN)
NAN_BOXED(21219,16,FLEN)
NAN_BOXED(15525,16,FLEN)
NAN_BOXED(21219,16,FLEN)
NAN_BOXED(15525,16,FLEN)
NAN_BOXED(20935,16,FLEN)
NAN_BOXED(15754,16,FLEN)
NAN_BOXED(20935,16,FLEN)
NAN_BOXED(15754,16,FLEN)
NAN_BOXED(20935,16,FLEN)
NAN_BOXED(15754,16,FLEN)
NAN_BOXED(20935,16,FLEN)
NAN_BOXED(15754,16,FLEN)
NAN_BOXED(20935,16,FLEN)
NAN_BOXED(15754,16,FLEN)
NAN_BOXED(21336,16,FLEN)
NAN_BOXED(15451,16,FLEN)
NAN_BOXED(21336,16,FLEN)
NAN_BOXED(15451,16,FLEN)
NAN_BOXED(21336,16,FLEN)
NAN_BOXED(15451,16,FLEN)
NAN_BOXED(21336,16,FLEN)
NAN_BOXED(15451,16,FLEN)
NAN_BOXED(21336,16,FLEN)
NAN_BOXED(15451,16,FLEN)
NAN_BOXED(18340,16,FLEN)
NAN_BOXED(18479,16,FLEN)
NAN_BOXED(18340,16,FLEN)
NAN_BOXED(18479,16,FLEN)
NAN_BOXED(18340,16,FLEN)
NAN_BOXED(18479,16,FLEN)
NAN_BOXED(18340,16,FLEN)
NAN_BOXED(18479,16,FLEN)
NAN_BOXED(18340,16,FLEN)
NAN_BOXED(18479,16,FLEN)
NAN_BOXED(20752,16,FLEN)
NAN_BOXED(15953,16,FLEN)
NAN_BOXED(20752,16,FLEN)
NAN_BOXED(15953,16,FLEN)
NAN_BOXED(20752,16,FLEN)
NAN_BOXED(15953,16,FLEN)
NAN_BOXED(20752,16,FLEN)
NAN_BOXED(15953,16,FLEN)
NAN_BOXED(20752,16,FLEN)
NAN_BOXED(15953,16,FLEN)
NAN_BOXED(20017,16,FLEN)
NAN_BOXED(16682,16,FLEN)
NAN_BOXED(20017,16,FLEN)
NAN_BOXED(16682,16,FLEN)
NAN_BOXED(20017,16,FLEN)
NAN_BOXED(16682,16,FLEN)
NAN_BOXED(20017,16,FLEN)
NAN_BOXED(16682,16,FLEN)
NAN_BOXED(20017,16,FLEN)
NAN_BOXED(16682,16,FLEN)
NAN_BOXED(20233,16,FLEN)
NAN_BOXED(16524,16,FLEN)
NAN_BOXED(20233,16,FLEN)
NAN_BOXED(16524,16,FLEN)
NAN_BOXED(20233,16,FLEN)
NAN_BOXED(16524,16,FLEN)
NAN_BOXED(20233,16,FLEN)
NAN_BOXED(16524,16,FLEN)
NAN_BOXED(20233,16,FLEN)
NAN_BOXED(16524,16,FLEN)
NAN_BOXED(20101,16,FLEN)
NAN_BOXED(16616,16,FLEN)
NAN_BOXED(20101,16,FLEN)
NAN_BOXED(16616,16,FLEN)
NAN_BOXED(20101,16,FLEN)
NAN_BOXED(16616,16,FLEN)
NAN_BOXED(20101,16,FLEN)
NAN_BOXED(16616,16,FLEN)
NAN_BOXED(20101,16,FLEN)
NAN_BOXED(16616,16,FLEN)
NAN_BOXED(21124,16,FLEN)
NAN_BOXED(15593,16,FLEN)
NAN_BOXED(21124,16,FLEN)
NAN_BOXED(15593,16,FLEN)
NAN_BOXED(21124,16,FLEN)
NAN_BOXED(15593,16,FLEN)
NAN_BOXED(21124,16,FLEN)
NAN_BOXED(15593,16,FLEN)
NAN_BOXED(21124,16,FLEN)
NAN_BOXED(15593,16,FLEN)
NAN_BOXED(20402,16,FLEN)
NAN_BOXED(16424,16,FLEN)
NAN_BOXED(20402,16,FLEN)
NAN_BOXED(16424,16,FLEN)
NAN_BOXED(20402,16,FLEN)
NAN_BOXED(16424,16,FLEN)
NAN_BOXED(20402,16,FLEN)
NAN_BOXED(16424,16,FLEN)
NAN_BOXED(20402,16,FLEN)
NAN_BOXED(16424,16,FLEN)
NAN_BOXED(21031,16,FLEN)
NAN_BOXED(15667,16,FLEN)
NAN_BOXED(21031,16,FLEN)
NAN_BOXED(15667,16,FLEN)
NAN_BOXED(21031,16,FLEN)
NAN_BOXED(15667,16,FLEN)
NAN_BOXED(21031,16,FLEN)
NAN_BOXED(15667,16,FLEN)
NAN_BOXED(21031,16,FLEN)
NAN_BOXED(15667,16,FLEN)
NAN_BOXED(19383,16,FLEN)
NAN_BOXED(17445,16,FLEN)
NAN_BOXED(19383,16,FLEN)
NAN_BOXED(17445,16,FLEN)
NAN_BOXED(19383,16,FLEN)
NAN_BOXED(17445,16,FLEN)
NAN_BOXED(19383,16,FLEN)
NAN_BOXED(17445,16,FLEN)
NAN_BOXED(19383,16,FLEN)
NAN_BOXED(17445,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(15791,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(15791,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(15791,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(15791,16,FLEN)
NAN_BOXED(20897,16,FLEN)
NAN_BOXED(15791,16,FLEN)
NAN_BOXED(16859,16,FLEN)
NAN_BOXED(19830,16,FLEN)
NAN_BOXED(16859,16,FLEN)
NAN_BOXED(19830,16,FLEN)
NAN_BOXED(16859,16,FLEN)
NAN_BOXED(19830,16,FLEN)
NAN_BOXED(16859,16,FLEN)
NAN_BOXED(19830,16,FLEN)
NAN_BOXED(16859,16,FLEN)
NAN_BOXED(19830,16,FLEN)
NAN_BOXED(19165,16,FLEN)
NAN_BOXED(17577,16,FLEN)
NAN_BOXED(19165,16,FLEN)
NAN_BOXED(17577,16,FLEN)
NAN_BOXED(19165,16,FLEN)
NAN_BOXED(17577,16,FLEN)
NAN_BOXED(19165,16,FLEN)
NAN_BOXED(17577,16,FLEN)
NAN_BOXED(19165,16,FLEN)
NAN_BOXED(17577,16,FLEN)
NAN_BOXED(20657,16,FLEN)
NAN_BOXED(16082,16,FLEN)
NAN_BOXED(20657,16,FLEN)
NAN_BOXED(16082,16,FLEN)
NAN_BOXED(20657,16,FLEN)
NAN_BOXED(16082,16,FLEN)
NAN_BOXED(20657,16,FLEN)
NAN_BOXED(16082,16,FLEN)
NAN_BOXED(20657,16,FLEN)
NAN_BOXED(16082,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(11539,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(11539,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(11539,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(11539,16,FLEN)
NAN_BOXED(13902,16,FLEN)
NAN_BOXED(11539,16,FLEN)
NAN_BOXED(13595,16,FLEN)
NAN_BOXED(11843,16,FLEN)
NAN_BOXED(13595,16,FLEN)
NAN_BOXED(11843,16,FLEN)
NAN_BOXED(13595,16,FLEN)
NAN_BOXED(11843,16,FLEN)
NAN_BOXED(13595,16,FLEN)
NAN_BOXED(11843,16,FLEN)
NAN_BOXED(13595,16,FLEN)
NAN_BOXED(11843,16,FLEN)
NAN_BOXED(15265,16,FLEN)
NAN_BOXED(10289,16,FLEN)
NAN_BOXED(15265,16,FLEN)
NAN_BOXED(10289,16,FLEN)
NAN_BOXED(15265,16,FLEN)
NAN_BOXED(10289,16,FLEN)
NAN_BOXED(15265,16,FLEN)
NAN_BOXED(10289,16,FLEN)
NAN_BOXED(15265,16,FLEN)
NAN_BOXED(10289,16,FLEN)
NAN_BOXED(12924,16,FLEN)
NAN_BOXED(12527,16,FLEN)
NAN_BOXED(12924,16,FLEN)
NAN_BOXED(12527,16,FLEN)
NAN_BOXED(12924,16,FLEN)
NAN_BOXED(12527,16,FLEN)
NAN_BOXED(12924,16,FLEN)
NAN_BOXED(12527,16,FLEN)
NAN_BOXED(12924,16,FLEN)
NAN_BOXED(12527,16,FLEN)
NAN_BOXED(14010,16,FLEN)
NAN_BOXED(11457,16,FLEN)
NAN_BOXED(14010,16,FLEN)
NAN_BOXED(11457,16,FLEN)
NAN_BOXED(14010,16,FLEN)
NAN_BOXED(11457,16,FLEN)
NAN_BOXED(14010,16,FLEN)
NAN_BOXED(11457,16,FLEN)
NAN_BOXED(14010,16,FLEN)
NAN_BOXED(11457,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(10479,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(10479,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(10479,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(10479,16,FLEN)
NAN_BOXED(14971,16,FLEN)
NAN_BOXED(10479,16,FLEN)
NAN_BOXED(13861,16,FLEN)
NAN_BOXED(11573,16,FLEN)
NAN_BOXED(13861,16,FLEN)
NAN_BOXED(11573,16,FLEN)
NAN_BOXED(13861,16,FLEN)
NAN_BOXED(11573,16,FLEN)
NAN_BOXED(13861,16,FLEN)
NAN_BOXED(11573,16,FLEN)
NAN_BOXED(13861,16,FLEN)
NAN_BOXED(11573,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(10465,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(10465,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(10465,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(10465,16,FLEN)
NAN_BOXED(14990,16,FLEN)
NAN_BOXED(10465,16,FLEN)
NAN_BOXED(10939,16,FLEN)
NAN_BOXED(14529,16,FLEN)
NAN_BOXED(10939,16,FLEN)
NAN_BOXED(14529,16,FLEN)
NAN_BOXED(10939,16,FLEN)
NAN_BOXED(14529,16,FLEN)
NAN_BOXED(10939,16,FLEN)
NAN_BOXED(14529,16,FLEN)
NAN_BOXED(10939,16,FLEN)
NAN_BOXED(14529,16,FLEN)
NAN_BOXED(14439,16,FLEN)
NAN_BOXED(11076,16,FLEN)
NAN_BOXED(14439,16,FLEN)
NAN_BOXED(11076,16,FLEN)
NAN_BOXED(14439,16,FLEN)
NAN_BOXED(11076,16,FLEN)
NAN_BOXED(14439,16,FLEN)
NAN_BOXED(11076,16,FLEN)
NAN_BOXED(14439,16,FLEN)
NAN_BOXED(11076,16,FLEN)
NAN_BOXED(14945,16,FLEN)
NAN_BOXED(10499,16,FLEN)
NAN_BOXED(14945,16,FLEN)
NAN_BOXED(10499,16,FLEN)
NAN_BOXED(14945,16,FLEN)
NAN_BOXED(10499,16,FLEN)
NAN_BOXED(14945,16,FLEN)
NAN_BOXED(10499,16,FLEN)
NAN_BOXED(14945,16,FLEN)
NAN_BOXED(10499,16,FLEN)
NAN_BOXED(13602,16,FLEN)
NAN_BOXED(11835,16,FLEN)
NAN_BOXED(13602,16,FLEN)
NAN_BOXED(11835,16,FLEN)
NAN_BOXED(13602,16,FLEN)
NAN_BOXED(11835,16,FLEN)
NAN_BOXED(13602,16,FLEN)
NAN_BOXED(11835,16,FLEN)
NAN_BOXED(13602,16,FLEN)
NAN_BOXED(11835,16,FLEN)
NAN_BOXED(12294,16,FLEN)
NAN_BOXED(13300,16,FLEN)
NAN_BOXED(12294,16,FLEN)
NAN_BOXED(13300,16,FLEN)
NAN_BOXED(12294,16,FLEN)
NAN_BOXED(13300,16,FLEN)
NAN_BOXED(12294,16,FLEN)
NAN_BOXED(13300,16,FLEN)
NAN_BOXED(12294,16,FLEN)
NAN_BOXED(13300,16,FLEN)
NAN_BOXED(14541,16,FLEN)
NAN_BOXED(10922,16,FLEN)
NAN_BOXED(14541,16,FLEN)
NAN_BOXED(10922,16,FLEN)
NAN_BOXED(14541,16,FLEN)
NAN_BOXED(10922,16,FLEN)
NAN_BOXED(14541,16,FLEN)
NAN_BOXED(10922,16,FLEN)
NAN_BOXED(14541,16,FLEN)
NAN_BOXED(10922,16,FLEN)
NAN_BOXED(13525,16,FLEN)
NAN_BOXED(11935,16,FLEN)
NAN_BOXED(13525,16,FLEN)
NAN_BOXED(11935,16,FLEN)
NAN_BOXED(13525,16,FLEN)
NAN_BOXED(11935,16,FLEN)
NAN_BOXED(13525,16,FLEN)
NAN_BOXED(11935,16,FLEN)
NAN_BOXED(13525,16,FLEN)
NAN_BOXED(11935,16,FLEN)
NAN_BOXED(13768,16,FLEN)
NAN_BOXED(11657,16,FLEN)
NAN_BOXED(13768,16,FLEN)
NAN_BOXED(11657,16,FLEN)
NAN_BOXED(13768,16,FLEN)
NAN_BOXED(11657,16,FLEN)
NAN_BOXED(13768,16,FLEN)
NAN_BOXED(11657,16,FLEN)
NAN_BOXED(13768,16,FLEN)
NAN_BOXED(11657,16,FLEN)
NAN_BOXED(13597,16,FLEN)
NAN_BOXED(11841,16,FLEN)
NAN_BOXED(13597,16,FLEN)
NAN_BOXED(11841,16,FLEN)
NAN_BOXED(13597,16,FLEN)
NAN_BOXED(11841,16,FLEN)
NAN_BOXED(13597,16,FLEN)
NAN_BOXED(11841,16,FLEN)
NAN_BOXED(13597,16,FLEN)
NAN_BOXED(11841,16,FLEN)
NAN_BOXED(12172,16,FLEN)
NAN_BOXED(13373,16,FLEN)
NAN_BOXED(12172,16,FLEN)
NAN_BOXED(13373,16,FLEN)
NAN_BOXED(12172,16,FLEN)
NAN_BOXED(13373,16,FLEN)
NAN_BOXED(12172,16,FLEN)
NAN_BOXED(13373,16,FLEN)
NAN_BOXED(12172,16,FLEN)
NAN_BOXED(13373,16,FLEN)
NAN_BOXED(14698,16,FLEN)
NAN_BOXED(10728,16,FLEN)
NAN_BOXED(14698,16,FLEN)
NAN_BOXED(10728,16,FLEN)
NAN_BOXED(14698,16,FLEN)
NAN_BOXED(10728,16,FLEN)
NAN_BOXED(14698,16,FLEN)
NAN_BOXED(10728,16,FLEN)
NAN_BOXED(14698,16,FLEN)
NAN_BOXED(10728,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(10868,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(10868,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(10868,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(10868,16,FLEN)
NAN_BOXED(14581,16,FLEN)
NAN_BOXED(10868,16,FLEN)
NAN_BOXED(11961,16,FLEN)
NAN_BOXED(13506,16,FLEN)
NAN_BOXED(11961,16,FLEN)
NAN_BOXED(13506,16,FLEN)
NAN_BOXED(11961,16,FLEN)
NAN_BOXED(13506,16,FLEN)
NAN_BOXED(11961,16,FLEN)
NAN_BOXED(13506,16,FLEN)
NAN_BOXED(11961,16,FLEN)
NAN_BOXED(13506,16,FLEN)
NAN_BOXED(13319,16,FLEN)
NAN_BOXED(12272,16,FLEN)
NAN_BOXED(13319,16,FLEN)
NAN_BOXED(12272,16,FLEN)
NAN_BOXED(13319,16,FLEN)
NAN_BOXED(12272,16,FLEN)
NAN_BOXED(13319,16,FLEN)
NAN_BOXED(12272,16,FLEN)
NAN_BOXED(13319,16,FLEN)
NAN_BOXED(12272,16,FLEN)
NAN_BOXED(13216,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(13216,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(13216,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(13216,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(13216,16,FLEN)
NAN_BOXED(12338,16,FLEN)
NAN_BOXED(14458,16,FLEN)
NAN_BOXED(11045,16,FLEN)
NAN_BOXED(14458,16,FLEN)
NAN_BOXED(11045,16,FLEN)
NAN_BOXED(14458,16,FLEN)
NAN_BOXED(11045,16,FLEN)
NAN_BOXED(14458,16,FLEN)
NAN_BOXED(11045,16,FLEN)
NAN_BOXED(14458,16,FLEN)
NAN_BOXED(11045,16,FLEN)
NAN_BOXED(14421,16,FLEN)
NAN_BOXED(11107,16,FLEN)
NAN_BOXED(14421,16,FLEN)
NAN_BOXED(11107,16,FLEN)
NAN_BOXED(14421,16,FLEN)
NAN_BOXED(11107,16,FLEN)
NAN_BOXED(14421,16,FLEN)
NAN_BOXED(11107,16,FLEN)
NAN_BOXED(14421,16,FLEN)
NAN_BOXED(11107,16,FLEN)
NAN_BOXED(14981,16,FLEN)
NAN_BOXED(10472,16,FLEN)
NAN_BOXED(14981,16,FLEN)
NAN_BOXED(10472,16,FLEN)
NAN_BOXED(14981,16,FLEN)
NAN_BOXED(10472,16,FLEN)
NAN_BOXED(14981,16,FLEN)
NAN_BOXED(10472,16,FLEN)
NAN_BOXED(14981,16,FLEN)
NAN_BOXED(10472,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(10474,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(10474,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(10474,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(10474,16,FLEN)
NAN_BOXED(14978,16,FLEN)
NAN_BOXED(10474,16,FLEN)
NAN_BOXED(14109,16,FLEN)
NAN_BOXED(11391,16,FLEN)
NAN_BOXED(14109,16,FLEN)
NAN_BOXED(11391,16,FLEN)
NAN_BOXED(14109,16,FLEN)
NAN_BOXED(11391,16,FLEN)
NAN_BOXED(14109,16,FLEN)
NAN_BOXED(11391,16,FLEN)
NAN_BOXED(14109,16,FLEN)
NAN_BOXED(11391,16,FLEN)
NAN_BOXED(15021,16,FLEN)
NAN_BOXED(10442,16,FLEN)
NAN_BOXED(15021,16,FLEN)
NAN_BOXED(10442,16,FLEN)
NAN_BOXED(15021,16,FLEN)
NAN_BOXED(10442,16,FLEN)
NAN_BOXED(15021,16,FLEN)
NAN_BOXED(10442,16,FLEN)
NAN_BOXED(15021,16,FLEN)
NAN_BOXED(10442,16,FLEN)
NAN_BOXED(12629,16,FLEN)
NAN_BOXED(12799,16,FLEN)
NAN_BOXED(12629,16,FLEN)
NAN_BOXED(12799,16,FLEN)
NAN_BOXED(12629,16,FLEN)
NAN_BOXED(12799,16,FLEN)
NAN_BOXED(12629,16,FLEN)
NAN_BOXED(12799,16,FLEN)
NAN_BOXED(12629,16,FLEN)
NAN_BOXED(12799,16,FLEN)
NAN_BOXED(13940,16,FLEN)
NAN_BOXED(11508,16,FLEN)
NAN_BOXED(13940,16,FLEN)
NAN_BOXED(11508,16,FLEN)
NAN_BOXED(13940,16,FLEN)
NAN_BOXED(11508,16,FLEN)
NAN_BOXED(13940,16,FLEN)
NAN_BOXED(11508,16,FLEN)
NAN_BOXED(13940,16,FLEN)
NAN_BOXED(11508,16,FLEN)
NAN_BOXED(12433,16,FLEN)
NAN_BOXED(13056,16,FLEN)
NAN_BOXED(12433,16,FLEN)
NAN_BOXED(13056,16,FLEN)
NAN_BOXED(12433,16,FLEN)
NAN_BOXED(13056,16,FLEN)
NAN_BOXED(12433,16,FLEN)
NAN_BOXED(13056,16,FLEN)
NAN_BOXED(12433,16,FLEN)
NAN_BOXED(13056,16,FLEN)
NAN_BOXED(14749,16,FLEN)
NAN_BOXED(10675,16,FLEN)
NAN_BOXED(14749,16,FLEN)
NAN_BOXED(10675,16,FLEN)
NAN_BOXED(14749,16,FLEN)
NAN_BOXED(10675,16,FLEN)
NAN_BOXED(14749,16,FLEN)
NAN_BOXED(10675,16,FLEN)
NAN_BOXED(14749,16,FLEN)
NAN_BOXED(10675,16,FLEN)
NAN_BOXED(12814,16,FLEN)
NAN_BOXED(12616,16,FLEN)
NAN_BOXED(12814,16,FLEN)
NAN_BOXED(12616,16,FLEN)
NAN_BOXED(12814,16,FLEN)
NAN_BOXED(12616,16,FLEN)
NAN_BOXED(12814,16,FLEN)
NAN_BOXED(12616,16,FLEN)
NAN_BOXED(12814,16,FLEN)
NAN_BOXED(12616,16,FLEN)
NAN_BOXED(15334,16,FLEN)
NAN_BOXED(10252,16,FLEN)
NAN_BOXED(15334,16,FLEN)
NAN_BOXED(10252,16,FLEN)
NAN_BOXED(15334,16,FLEN)
NAN_BOXED(10252,16,FLEN)
NAN_BOXED(15334,16,FLEN)
NAN_BOXED(10252,16,FLEN)
NAN_BOXED(15334,16,FLEN)
NAN_BOXED(10252,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(10483,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(10483,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(10483,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(10483,16,FLEN)
NAN_BOXED(14967,16,FLEN)
NAN_BOXED(10483,16,FLEN)
NAN_BOXED(14727,16,FLEN)
NAN_BOXED(10698,16,FLEN)
NAN_BOXED(14727,16,FLEN)
NAN_BOXED(10698,16,FLEN)
NAN_BOXED(14727,16,FLEN)
NAN_BOXED(10698,16,FLEN)
NAN_BOXED(14727,16,FLEN)
NAN_BOXED(10698,16,FLEN)
NAN_BOXED(14727,16,FLEN)
NAN_BOXED(10698,16,FLEN)
NAN_BOXED(13510,16,FLEN)
NAN_BOXED(11955,16,FLEN)
NAN_BOXED(13510,16,FLEN)
NAN_BOXED(11955,16,FLEN)
NAN_BOXED(13510,16,FLEN)
NAN_BOXED(11955,16,FLEN)
NAN_BOXED(13510,16,FLEN)
NAN_BOXED(11955,16,FLEN)
NAN_BOXED(13510,16,FLEN)
NAN_BOXED(11955,16,FLEN)
NAN_BOXED(14485,16,FLEN)
NAN_BOXED(11002,16,FLEN)
NAN_BOXED(14485,16,FLEN)
NAN_BOXED(11002,16,FLEN)
NAN_BOXED(14485,16,FLEN)
NAN_BOXED(11002,16,FLEN)
NAN_BOXED(14485,16,FLEN)
NAN_BOXED(11002,16,FLEN)
NAN_BOXED(14485,16,FLEN)
NAN_BOXED(11002,16,FLEN)
NAN_BOXED(12841,16,FLEN)
NAN_BOXED(12593,16,FLEN)
NAN_BOXED(12841,16,FLEN)
NAN_BOXED(12593,16,FLEN)
NAN_BOXED(12841,16,FLEN)
NAN_BOXED(12593,16,FLEN)
NAN_BOXED(12841,16,FLEN)
NAN_BOXED(12593,16,FLEN)
NAN_BOXED(12841,16,FLEN)
NAN_BOXED(12593,16,FLEN)
NAN_BOXED(14083,16,FLEN)
NAN_BOXED(11408,16,FLEN)
NAN_BOXED(14083,16,FLEN)
NAN_BOXED(11408,16,FLEN)
NAN_BOXED(14083,16,FLEN)
NAN_BOXED(11408,16,FLEN)
NAN_BOXED(14083,16,FLEN)
NAN_BOXED(11408,16,FLEN)
NAN_BOXED(14083,16,FLEN)
NAN_BOXED(11408,16,FLEN)
NAN_BOXED(15061,16,FLEN)
NAN_BOXED(10415,16,FLEN)
NAN_BOXED(15061,16,FLEN)
NAN_BOXED(10415,16,FLEN)
NAN_BOXED(15061,16,FLEN)
NAN_BOXED(10415,16,FLEN)
NAN_BOXED(15061,16,FLEN)
NAN_BOXED(10415,16,FLEN)
NAN_BOXED(15061,16,FLEN)
NAN_BOXED(10415,16,FLEN)
NAN_BOXED(10656,16,FLEN)
NAN_BOXED(45,16,FLEN)
NAN_BOXED(10656,16,FLEN)
NAN_BOXED(45,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_13:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_14:
    .fill 6*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
