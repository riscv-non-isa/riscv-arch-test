
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Tue Jan 30 08:43:40 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32H/rv32h_fmadd.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.h instruction of the RISC-V RV32F_Zicsr_Zfh,RV64F_Zicsr_Zfh extension for the fmadd_b7 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr_Zfh,RV64IF_Zicsr_Zfh")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*Zfh.*);def TEST_CASE_1=True;",fmadd_b7)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f30, rs2==f29, rs3==f29, rd==f31,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0c3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f29; dest:f31; op1val:0x78fb; op2val:0xbcc3;
op3val:0xbcc3; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f29, dyn, 96, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f29, rs2==f31, rs3==f30, rd==f29,fs1 == 0 and fe1 == 0x1e and fm1 == 0x25b and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0bd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x389 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f29; op2:f31; op3:f30; dest:f29; op1val:0x7a5b; op2val:0xbcbd;
op3val:0x7b89; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f29, f29, f31, f30, dyn, 96, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rs3 != rd, rs1==f28, rs2==f28, rs3==f28, rd==f30,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ea and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0fc and fs3 == 0 and fe3 == 0x1e and fm3 == 0x360 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f28; op2:f28; op3:f28; dest:f30; op1val:0x79ea; op2val:0x79ea;
op3val:0x79ea; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f30, f28, f28, f28, dyn, 96, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f27, rs2==f27, rs3==f31, rd==f28,fs1 == 0 and fe1 == 0x19 and fm1 == 0x36c and fs2 == 1 and fe2 == 0x13 and fm2 == 0x002 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x372 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f27; op2:f27; op3:f31; dest:f28; op1val:0x676c; op2val:0x676c;
op3val:0x7772; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f28, f27, f27, f31, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f26, rs2==f30, rs3==f26, rd==f27,fs1 == 0 and fe1 == 0x1e and fm1 == 0x38b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x180 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x130 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f26; op2:f30; op3:f26; dest:f27; op1val:0x7b8b; op2val:0xb980;
op3val:0x7b8b; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f27, f26, f30, f26, dyn, 96, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f31, rs2==f25, rs3==f25, rd==f25,fs1 == 0 and fe1 == 0x1e and fm1 == 0x334 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x005 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x33e and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f31; op2:f25; op3:f25; dest:f25; op1val:0x7b34; op2val:0xb005;
op3val:0xb005; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f25, f31, f25, f25, dyn, 96, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f25, rs2==f24, rs3==f27, rd==f26,fs1 == 0 and fe1 == 0x1d and fm1 == 0x380 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x034 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3e3 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f25; op2:f24; op3:f27; dest:f26; op1val:0x7780; op2val:0xb834;
op3val:0x73e3; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f26, f25, f24, f27, dyn, 96, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rs2 == rs3 == rd, rs1==f23, rs2==f23, rs3==f23, rd==f23,fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x038 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x096 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f23; op2:f23; op3:f23; dest:f23; op1val:0x7859; op2val:0x7859;
op3val:0x7859; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f23, f23, f23, f23, dyn, 96, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f22, rs2==f26, rs3==f24, rd==f24,fs1 == 0 and fe1 == 0x18 and fm1 == 0x2b8 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x020 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2ee and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f22; op2:f26; op3:f24; dest:f24; op1val:0x62b8; op2val:0xcc20;
op3val:0x72ee; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f24, f22, f26, f24, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 == rd != rs3, rs1==f21, rs2==f21, rs3==f22, rd==f21,fs1 == 0 and fe1 == 0x1d and fm1 == 0x078 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x28e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x353 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f21; op2:f21; op3:f22; dest:f21; op1val:0x7478; op2val:0x7478;
op3val:0x7b53; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f21, f21, f21, f22, dyn, 96, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f24, rs2==f22, rs3==f21, rd==f22,fs1 == 0 and fe1 == 0x1e and fm1 == 0x21f and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2ab and fs3 == 0 and fe3 == 0x1c and fm3 == 0x11a and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f24; op2:f22; op3:f21; dest:f22; op1val:0x7a1f; op2val:0xb2ab;
op3val:0x711a; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f22, f24, f22, f21, dyn, 96, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rd == rs3 != rs2, rs1==f20, rs2==f19, rs3==f20, rd==f20,fs1 == 0 and fe1 == 0x1e and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0c and fm2 == 0x192 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x070 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f20; op2:f19; op3:f20; dest:f20; op1val:0x7a5f; op2val:0xb192;
op3val:0x7a5f; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f20, f20, f19, f20, dyn, 96, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f18, rs2==f20, rs3==f17, rd==f19,fs1 == 0 and fe1 == 0x1e and fm1 == 0x0ef and fs2 == 1 and fe2 == 0x0c and fm2 == 0x291 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x00d and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f18; op2:f20; op3:f17; dest:f19; op1val:0x78ef; op2val:0xb291;
op3val:0x700d; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f19, f18, f20, f17, dyn, 96, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f19, rs2==f17, rs3==f16, rd==f18,fs1 == 0 and fe1 == 0x15 and fm1 == 0x354 and fs2 == 1 and fe2 == 0x17 and fm2 == 0x39b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f7 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f19; op2:f17; op3:f16; dest:f18; op1val:0x5754; op2val:0xdf9b;
op3val:0x7af7; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f18, f19, f17, f16, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f16, rs2==f18, rs3==f19, rd==f17,fs1 == 0 and fe1 == 0x1c and fm1 == 0x2b3 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x01d and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2e4 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f16; op2:f18; op3:f19; dest:f17; op1val:0x72b3; op2val:0xbc1d;
op3val:0x72e4; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f17, f16, f18, f19, dyn, 96, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f17, rs2==f15, rs3==f18, rd==f16,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3db and fs2 == 1 and fe2 == 0x0e and fm2 == 0x31a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2f9 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f17; op2:f15; op3:f18; dest:f16; op1val:0x7bdb; op2val:0xbb1a;
op3val:0x7af9; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f16, f17, f15, f18, dyn, 96, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f14, rs2==f16, rs3==f13, rd==f15,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x2a5 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b0 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f14; op2:f16; op3:f13; dest:f15; op1val:0x74a0; op2val:0xc2a5;
op3val:0x7bb0; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f15, f14, f16, f13, dyn, 96, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f15, rs2==f13, rs3==f12, rd==f14,fs1 == 0 and fe1 == 0x1e and fm1 == 0x04f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x107 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f15; op2:f13; op3:f12; dest:f14; op1val:0x784f; op2val:0xbd07;
op3val:0x796b; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f14, f15, f13, f12, dyn, 96, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f12, rs2==f14, rs3==f15, rd==f13,fs1 == 0 and fe1 == 0x1c and fm1 == 0x28c and fs2 == 1 and fe2 == 0x11 and fm2 == 0x098 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x386 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f12; op2:f14; op3:f15; dest:f13; op1val:0x728c; op2val:0xc498;
op3val:0x7b86; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f13, f12, f14, f15, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f13, rs2==f11, rs3==f14, rd==f12,fs1 == 0 and fe1 == 0x1e and fm1 == 0x185 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x199 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ba and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f13; op2:f11; op3:f14; dest:f12; op1val:0x7985; op2val:0xbd99;
op3val:0x7bba; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f12, f13, f11, f14, dyn, 96, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f10, rs2==f12, rs3==f9, rd==f11,fs1 == 0 and fe1 == 0x1e and fm1 == 0x325 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x159 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0c7 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f10; op2:f12; op3:f9; dest:f11; op1val:0x7b25; op2val:0xb559;
op3val:0x74c7; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f11, f10, f12, f9, dyn, 96, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f11, rs2==f9, rs3==f8, rd==f10,fs1 == 0 and fe1 == 0x1d and fm1 == 0x1c6 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x35a and fs3 == 0 and fe3 == 0x1c and fm3 == 0x14e and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f11; op2:f9; op3:f8; dest:f10; op1val:0x75c6; op2val:0xb75a;
op3val:0x714e; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f10, f11, f9, f8, dyn, 96, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f8, rs2==f10, rs3==f11, rd==f9,fs1 == 0 and fe1 == 0x1c and fm1 == 0x0a9 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x327 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x02a and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f8; op2:f10; op3:f11; dest:f9; op1val:0x70a9; op2val:0xb727;
op3val:0x6c2a; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f9, f8, f10, f11, dyn, 96, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f9, rs2==f7, rs3==f10, rd==f8,fs1 == 0 and fe1 == 0x1d and fm1 == 0x0d1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x000 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0d2 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f9; op2:f7; op3:f10; dest:f8; op1val:0x74d1; op2val:0xc000;
op3val:0x78d2; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f8, f9, f7, f10, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f6, rs2==f8, rs3==f5, rd==f7,fs1 == 0 and fe1 == 0x16 and fm1 == 0x2f4 and fs2 == 1 and fe2 == 0x16 and fm2 == 0x23b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x16b and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f6; op2:f8; op3:f5; dest:f7; op1val:0x5af4; op2val:0xda3b;
op3val:0x796b; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f7, f6, f8, f5, dyn, 96, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f7, rs2==f5, rs3==f4, rd==f6,fs1 == 0 and fe1 == 0x1d and fm1 == 0x167 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x356 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0f5 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f7; op2:f5; op3:f4; dest:f6; op1val:0x7567; op2val:0xbb56;
op3val:0x74f5; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f6, f7, f5, f4, dyn, 96, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f4, rs2==f6, rs3==f7, rd==f5,fs1 == 0 and fe1 == 0x1e and fm1 == 0x28b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0b2 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b0 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f4; op2:f6; op3:f7; dest:f5; op1val:0x7a8b; op2val:0xb8b2;
op3val:0x77b0; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f5, f4, f6, f7, dyn, 96, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f5, rs2==f3, rs3==f6, rd==f4,fs1 == 0 and fe1 == 0x1d and fm1 == 0x10c and fs2 == 1 and fe2 == 0x0f and fm2 == 0x218 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3b2 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f5; op2:f3; op3:f6; dest:f4; op1val:0x750c; op2val:0xbe18;
op3val:0x77b2; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f4, f5, f3, f6, dyn, 96, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f2, rs2==f4, rs3==f1, rd==f3,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1a2 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x12d and fs3 == 0 and fe3 == 0x1a and fm3 == 0x34b and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f2; op2:f4; op3:f1; dest:f3; op1val:0x79a2; op2val:0xad2d;
op3val:0x6b4b; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f3, f2, f4, f1, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f3, rs2==f1, rs3==f0, rd==f2,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3cc and fs2 == 1 and fe2 == 0x09 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x1da and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f3; op2:f1; op3:f0; dest:f2; op1val:0x7bcc; op2val:0xa601;
op3val:0x65da; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f2, f3, f1, f0, dyn, 96, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f0, rs2==f2, rs3==f3, rd==f1,fs1 == 0 and fe1 == 0x1e and fm1 == 0x1fe and fs2 == 1 and fe2 == 0x0f and fm2 == 0x081 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2c1 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f0; op2:f2; op3:f3; dest:f1; op1val:0x79fe; op2val:0xbc81;
op3val:0x7ac1; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f1, f0, f2, f3, dyn, 96, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f1,fs1 == 0 and fe1 == 0x19 and fm1 == 0x0a0 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x172 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x24c and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f1; op2:f30; op3:f29; dest:f31; op1val:0x64a0; op2val:0xd172;
op3val:0x7a4c; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f1, f30, f29, dyn, 96, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// rs2==f0,fs1 == 0 and fe1 == 0x1d and fm1 == 0x1db and fs2 == 1 and fe2 == 0x0f and fm2 == 0x251 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a0 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f0; op3:f29; dest:f31; op1val:0x75db; op2val:0xbe51;
op3val:0x78a0; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f0, f29, dyn, 96, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// rs3==f2,fs1 == 0 and fe1 == 0x18 and fm1 == 0x0a7 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x123 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x1fa and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f2; dest:f31; op1val:0x60a7; op2val:0xc523;
op3val:0x69fa; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f2, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// rd==f0,fs1 == 0 and fe1 == 0x1c and fm1 == 0x1c9 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x147 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3a3 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f31; op2:f30; op3:f29; dest:f0; op1val:0x71c9; op2val:0xc547;
op3val:0x7ba3; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f0, f31, f30, f29, dyn, 96, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x249 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x3b0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x20b and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7249; op2val:0xc3b0;
op3val:0x7a0b; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x36f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x00d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x388 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b6f; op2val:0xbc0d;
op3val:0x7b88; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x181 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x01e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x1ac and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7581; op2val:0xbc1e;
op3val:0x75ac; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1e9 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x233 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7832; op2val:0xbde9;
op3val:0x7a33; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x2e9 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x2ec and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1fb and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6ee9; op2val:0xc6ec;
op3val:0x79fb; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0f and fm2 == 0x050 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2df and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7a5f; op2val:0xbc50;
op3val:0x7adf; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0b0 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x273 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x68b0; op2val:0xce73;
op3val:0x7b90; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1d5 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x373 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x173 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6dd5; op2val:0xc373;
op3val:0x7573; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0e2 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x357 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x78e2; op2val:0xbe01;
op3val:0x7b57; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x16f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x16e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x363 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x756f; op2val:0xc16e;
op3val:0x7b63; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x092 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x0ff and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x785b; op2val:0xb892;
op3val:0x74ff; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x111 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x1ad and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7511; op2val:0xb875;
op3val:0x71ad; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x100 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x390 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0c3 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6d00; op2val:0xbf90;
op3val:0x70c3; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x182 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x1c7 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3f8 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7982; op2val:0xbdc7;
op3val:0x7bf8; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x12a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0cf and fs3 == 0 and fe3 == 0x1a and fm3 == 0x236 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x712a; op2val:0xb4cf;
op3val:0x6a36; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x3e3 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x044 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7be3; op2val:0xb853;
op3val:0x7844; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x27d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x0ad and fs3 == 0 and fe3 == 0x1c and fm3 == 0x397 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x767d; op2val:0xb8ad;
op3val:0x7397; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0bf and fs2 == 1 and fe2 == 0x0f and fm2 == 0x190 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x29b and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x78bf; op2val:0xbd90;
op3val:0x7a9b; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x349 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x367 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x2be and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7749; op2val:0xbb67;
op3val:0x76be; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x320 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x01c and fs3 == 0 and fe3 == 0x1e and fm3 == 0x353 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6b20; op2val:0xcc1c;
op3val:0x7b53; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x030 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x389 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3e4 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6830; op2val:0xcb89;
op3val:0x77e4; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0fb and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0c3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1ee and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x78fb; op2val:0xbcc3;
op3val:0x79ee; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x1ea and fs2 == 1 and fe2 == 0x0f and fm2 == 0x0fc and fs3 == 0 and fe3 == 0x1e and fm3 == 0x360 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x79ea; op2val:0xbcfc;
op3val:0x7b60; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x36c and fs2 == 1 and fe2 == 0x13 and fm2 == 0x002 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x372 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x676c; op2val:0xcc02;
op3val:0x7772; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x38b and fs2 == 1 and fe2 == 0x0e and fm2 == 0x180 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x130 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b8b; op2val:0xb980;
op3val:0x7930; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x334 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x005 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x33e and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b34; op2val:0xb005;
op3val:0x6f3e; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x059 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x038 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x096 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7859; op2val:0xbc38;
op3val:0x7896; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x078 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x28e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x353 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7478; op2val:0xc28e;
op3val:0x7b53; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x25f and fs2 == 1 and fe2 == 0x0c and fm2 == 0x192 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x070 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fmadd.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7a5f; op2val:0xb192;
op3val:0x7070; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.h, f31, f30, f29, f28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(48323,16,FLEN)
NAN_BOXED(48323,16,FLEN)
NAN_BOXED(31323,16,FLEN)
NAN_BOXED(48317,16,FLEN)
NAN_BOXED(31625,16,FLEN)
NAN_BOXED(31210,16,FLEN)
NAN_BOXED(31210,16,FLEN)
NAN_BOXED(31210,16,FLEN)
NAN_BOXED(26476,16,FLEN)
NAN_BOXED(26476,16,FLEN)
NAN_BOXED(30578,16,FLEN)
NAN_BOXED(31627,16,FLEN)
NAN_BOXED(47488,16,FLEN)
NAN_BOXED(31627,16,FLEN)
NAN_BOXED(31540,16,FLEN)
NAN_BOXED(45061,16,FLEN)
NAN_BOXED(45061,16,FLEN)
NAN_BOXED(30592,16,FLEN)
NAN_BOXED(47156,16,FLEN)
NAN_BOXED(29667,16,FLEN)
NAN_BOXED(30809,16,FLEN)
NAN_BOXED(30809,16,FLEN)
NAN_BOXED(30809,16,FLEN)
NAN_BOXED(25272,16,FLEN)
NAN_BOXED(52256,16,FLEN)
NAN_BOXED(29422,16,FLEN)
NAN_BOXED(29816,16,FLEN)
NAN_BOXED(29816,16,FLEN)
NAN_BOXED(31571,16,FLEN)
NAN_BOXED(31263,16,FLEN)
NAN_BOXED(45739,16,FLEN)
NAN_BOXED(28954,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(45458,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(30959,16,FLEN)
NAN_BOXED(45713,16,FLEN)
NAN_BOXED(28685,16,FLEN)
NAN_BOXED(22356,16,FLEN)
NAN_BOXED(57243,16,FLEN)
NAN_BOXED(31479,16,FLEN)
NAN_BOXED(29363,16,FLEN)
NAN_BOXED(48157,16,FLEN)
NAN_BOXED(29412,16,FLEN)
NAN_BOXED(31707,16,FLEN)
NAN_BOXED(47898,16,FLEN)
NAN_BOXED(31481,16,FLEN)
NAN_BOXED(29856,16,FLEN)
NAN_BOXED(49829,16,FLEN)
NAN_BOXED(31664,16,FLEN)
NAN_BOXED(30799,16,FLEN)
NAN_BOXED(48391,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(29324,16,FLEN)
NAN_BOXED(50328,16,FLEN)
NAN_BOXED(31622,16,FLEN)
NAN_BOXED(31109,16,FLEN)
NAN_BOXED(48537,16,FLEN)
NAN_BOXED(31674,16,FLEN)
NAN_BOXED(31525,16,FLEN)
NAN_BOXED(46425,16,FLEN)
NAN_BOXED(29895,16,FLEN)
NAN_BOXED(30150,16,FLEN)
NAN_BOXED(46938,16,FLEN)
NAN_BOXED(29006,16,FLEN)
NAN_BOXED(28841,16,FLEN)
NAN_BOXED(46887,16,FLEN)
NAN_BOXED(27690,16,FLEN)
NAN_BOXED(29905,16,FLEN)
NAN_BOXED(49152,16,FLEN)
NAN_BOXED(30930,16,FLEN)
NAN_BOXED(23284,16,FLEN)
NAN_BOXED(55867,16,FLEN)
NAN_BOXED(31083,16,FLEN)
NAN_BOXED(30055,16,FLEN)
NAN_BOXED(47958,16,FLEN)
NAN_BOXED(29941,16,FLEN)
NAN_BOXED(31371,16,FLEN)
NAN_BOXED(47282,16,FLEN)
NAN_BOXED(30640,16,FLEN)
NAN_BOXED(29964,16,FLEN)
NAN_BOXED(48664,16,FLEN)
NAN_BOXED(30642,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(44333,16,FLEN)
NAN_BOXED(27467,16,FLEN)
NAN_BOXED(31692,16,FLEN)
NAN_BOXED(42497,16,FLEN)
NAN_BOXED(26074,16,FLEN)
NAN_BOXED(31230,16,FLEN)
NAN_BOXED(48257,16,FLEN)
NAN_BOXED(31425,16,FLEN)
NAN_BOXED(25760,16,FLEN)
NAN_BOXED(53618,16,FLEN)
NAN_BOXED(31308,16,FLEN)
NAN_BOXED(30171,16,FLEN)
NAN_BOXED(48721,16,FLEN)
NAN_BOXED(30880,16,FLEN)
NAN_BOXED(24743,16,FLEN)
NAN_BOXED(50467,16,FLEN)
NAN_BOXED(27130,16,FLEN)
NAN_BOXED(29129,16,FLEN)
NAN_BOXED(50503,16,FLEN)
NAN_BOXED(31651,16,FLEN)
NAN_BOXED(29257,16,FLEN)
NAN_BOXED(50096,16,FLEN)
NAN_BOXED(31243,16,FLEN)
NAN_BOXED(31599,16,FLEN)
NAN_BOXED(48141,16,FLEN)
NAN_BOXED(31624,16,FLEN)
NAN_BOXED(30081,16,FLEN)
NAN_BOXED(48158,16,FLEN)
NAN_BOXED(30124,16,FLEN)
NAN_BOXED(30770,16,FLEN)
NAN_BOXED(48617,16,FLEN)
NAN_BOXED(31283,16,FLEN)
NAN_BOXED(28393,16,FLEN)
NAN_BOXED(50924,16,FLEN)
NAN_BOXED(31227,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(48208,16,FLEN)
NAN_BOXED(31455,16,FLEN)
NAN_BOXED(26800,16,FLEN)
NAN_BOXED(52851,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(28117,16,FLEN)
NAN_BOXED(50035,16,FLEN)
NAN_BOXED(30067,16,FLEN)
NAN_BOXED(30946,16,FLEN)
NAN_BOXED(48641,16,FLEN)
NAN_BOXED(31575,16,FLEN)
NAN_BOXED(30063,16,FLEN)
NAN_BOXED(49518,16,FLEN)
NAN_BOXED(31587,16,FLEN)
NAN_BOXED(30811,16,FLEN)
NAN_BOXED(47250,16,FLEN)
NAN_BOXED(29951,16,FLEN)
NAN_BOXED(29969,16,FLEN)
NAN_BOXED(47221,16,FLEN)
NAN_BOXED(29101,16,FLEN)
NAN_BOXED(27904,16,FLEN)
NAN_BOXED(49040,16,FLEN)
NAN_BOXED(28867,16,FLEN)
NAN_BOXED(31106,16,FLEN)
NAN_BOXED(48583,16,FLEN)
NAN_BOXED(31736,16,FLEN)
NAN_BOXED(28970,16,FLEN)
NAN_BOXED(46287,16,FLEN)
NAN_BOXED(27190,16,FLEN)
NAN_BOXED(31715,16,FLEN)
NAN_BOXED(47187,16,FLEN)
NAN_BOXED(30788,16,FLEN)
NAN_BOXED(30333,16,FLEN)
NAN_BOXED(47277,16,FLEN)
NAN_BOXED(29591,16,FLEN)
NAN_BOXED(30911,16,FLEN)
NAN_BOXED(48528,16,FLEN)
NAN_BOXED(31387,16,FLEN)
NAN_BOXED(30537,16,FLEN)
NAN_BOXED(47975,16,FLEN)
NAN_BOXED(30398,16,FLEN)
NAN_BOXED(27424,16,FLEN)
NAN_BOXED(52252,16,FLEN)
NAN_BOXED(31571,16,FLEN)
NAN_BOXED(26672,16,FLEN)
NAN_BOXED(52105,16,FLEN)
NAN_BOXED(30692,16,FLEN)
NAN_BOXED(30971,16,FLEN)
NAN_BOXED(48323,16,FLEN)
NAN_BOXED(31214,16,FLEN)
NAN_BOXED(31210,16,FLEN)
NAN_BOXED(48380,16,FLEN)
NAN_BOXED(31584,16,FLEN)
NAN_BOXED(26476,16,FLEN)
NAN_BOXED(52226,16,FLEN)
NAN_BOXED(30578,16,FLEN)
NAN_BOXED(31627,16,FLEN)
NAN_BOXED(47488,16,FLEN)
NAN_BOXED(31024,16,FLEN)
NAN_BOXED(31540,16,FLEN)
NAN_BOXED(45061,16,FLEN)
NAN_BOXED(28478,16,FLEN)
NAN_BOXED(30809,16,FLEN)
NAN_BOXED(48184,16,FLEN)
NAN_BOXED(30870,16,FLEN)
NAN_BOXED(29816,16,FLEN)
NAN_BOXED(49806,16,FLEN)
NAN_BOXED(31571,16,FLEN)
NAN_BOXED(31327,16,FLEN)
NAN_BOXED(45458,16,FLEN)
NAN_BOXED(28784,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 128*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
