
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Tue Jan 30 08:45:11 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32H/rv32h_fnmsub.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.h instruction of the RISC-V RV32F_Zicsr_Zfh,RV32FD_Zicsr,RV64F_Zicsr_Zfh,RV64FD_Zicsr extension for the fnmsub_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr_Zfh,RV32IFD_Zicsr,RV64IF_Zicsr_Zfh,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*Zfh.*);def TEST_CASE_1=True;",fnmsub_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 == rd, rs1==f31, rs2==f31, rs3==f31, rd==f31,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f31; op2:f31; op3:f31; dest:f31; op1val:0x7340; op2val:0x7340;
op3val:0x7340; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f31, f31, f31, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rd == rs3 != rs2, rs1==f30, rs2==f29, rs3==f30, rd==f30,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f30; dest:f30; op1val:0x7340; op2val:0xc853;
op3val:0x7340; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f30, f30, f29, f30, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f29, rs2==f30, rs3==f28, rd==f29,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f29; op2:f30; op3:f28; dest:f29; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f29, f29, f30, f28, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f27, rs2==f28, rs3==f29, rd==f28,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f27; op2:f28; op3:f29; dest:f28; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f28, f27, f28, f29, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rd == rs2 == rs3 != rs1, rs1==f28, rs2==f27, rs3==f27, rd==f27,fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f28; op2:f27; op3:f27; dest:f27; op1val:0x7340; op2val:0xc853;
op3val:0xc853; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f27, f28, f27, f27, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f25, rs2==f24, rs3==f26, rd==f26,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f25; op2:f24; op3:f26; dest:f26; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f26, f25, f24, f26, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f24, rs2==f26, rs3==f24, rd==f25,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f24; op2:f26; op3:f24; dest:f25; op1val:0x700a; op2val:0x40ac;
op3val:0x700a; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f25, f24, f26, f24, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rs2 == rs3 != rd, rs1==f23, rs2==f23, rs3==f23, rd==f24,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f23; op2:f23; op3:f23; dest:f24; op1val:0x700a; op2val:0x700a;
op3val:0x700a; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f24, f23, f23, f23, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f26, rs2==f25, rs3==f25, rd==f23,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f26; op2:f25; op3:f25; dest:f23; op1val:0x700a; op2val:0x40ac;
op3val:0x40ac; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f23, f26, f25, f25, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f21, rs2==f21, rs3==f20, rd==f22,fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f21; op2:f21; op3:f20; dest:f22; op1val:0x700a; op2val:0x700a;
op3val:0x79a2; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f22, f21, f21, f20, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f20, rs2==f20, rs3==f22, rd==f20,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f20; op2:f20; op3:f22; dest:f20; op1val:0x6d73; op2val:0x6d73;
op3val:0x73ea; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f20, f20, f20, f22, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f22, rs2==f19, rs3==f18, rd==f21,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f22; op2:f19; op3:f18; dest:f21; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f21, f22, f19, f18, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f18, rs2==f22, rs3==f21, rd==f19,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f18; op2:f22; op3:f21; dest:f19; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f19, f18, f22, f21, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f19, rs2==f17, rs3==f16, rd==f18,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f19; op2:f17; op3:f16; dest:f18; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f18, f19, f17, f16, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f16, rs2==f18, rs3==f19, rd==f17,fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f16; op2:f18; op3:f19; dest:f17; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f17, f16, f18, f19, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f17, rs2==f15, rs3==f14, rd==f16,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f17; op2:f15; op3:f14; dest:f16; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f16, f17, f15, f14, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f14, rs2==f16, rs3==f17, rd==f15,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f14; op2:f16; op3:f17; dest:f15; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f15, f14, f16, f17, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f15, rs2==f13, rs3==f12, rd==f14,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f15; op2:f13; op3:f12; dest:f14; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f14, f15, f13, f12, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f12, rs2==f14, rs3==f15, rd==f13,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f12; op2:f14; op3:f15; dest:f13; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f13, f12, f14, f15, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f13, rs2==f11, rs3==f10, rd==f12,fs1 == 0 and fe1 == 0x1e and fm1 == 0x3fd and fs2 == 0 and fe2 == 0x0e and fm2 == 0x254 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x2b2 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f13; op2:f11; op3:f10; dest:f12; op1val:0x7bfd; op2val:0x3a54;
op3val:0x72b2; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f12, f13, f11, f10, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f10, rs2==f12, rs3==f13, rd==f11,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f10; op2:f12; op3:f13; dest:f11; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f11, f10, f12, f13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f11, rs2==f9, rs3==f8, rd==f10,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f11; op2:f9; op3:f8; dest:f10; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f10, f11, f9, f8, dyn, 32, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f8, rs2==f10, rs3==f11, rd==f9,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f8; op2:f10; op3:f11; dest:f9; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f9, f8, f10, f11, dyn, 64, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f9, rs2==f7, rs3==f6, rd==f8,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f9; op2:f7; op3:f6; dest:f8; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f8, f9, f7, f6, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f6, rs2==f8, rs3==f9, rd==f7,fs1 == 0 and fe1 == 0x1e and fm1 == 0x121 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x08b and fs3 == 0 and fe3 == 0x1d and fm3 == 0x357 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f6; op2:f8; op3:f9; dest:f7; op1val:0x7921; op2val:0xc08b;
op3val:0x7757; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f7, f6, f8, f9, dyn, 128, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f7, rs2==f5, rs3==f4, rd==f6,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f7; op2:f5; op3:f4; dest:f6; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f6, f7, f5, f4, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f4, rs2==f6, rs3==f7, rd==f5,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f4; op2:f6; op3:f7; dest:f5; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f5, f4, f6, f7, dyn, 32, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f5, rs2==f3, rs3==f2, rd==f4,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f5; op2:f3; op3:f2; dest:f4; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f4, f5, f3, f2, dyn, 64, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f2, rs2==f4, rs3==f5, rd==f3,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f2; op2:f4; op3:f5; dest:f3; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f3, f2, f4, f5, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f3, rs2==f1, rs3==f0, rd==f2,fs1 == 0 and fe1 == 0x1d and fm1 == 0x33f and fs2 == 0 and fe2 == 0x0f and fm2 == 0x075 and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3ea and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f3; op2:f1; op3:f0; dest:f2; op1val:0x773f; op2val:0x3c75;
op3val:0x77ea; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f2, f3, f1, f0, dyn, 128, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f0, rs2==f2, rs3==f3, rd==f1,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f0; op2:f2; op3:f3; dest:f1; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f1, f0, f2, f3, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f1,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f1; op2:f30; op3:f29; dest:f31; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f1, f30, f29, dyn, 32, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// rs2==f0,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f0; op3:f29; dest:f31; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f0, f29, dyn, 64, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// rs3==f1,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f1; dest:f31; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f1, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// rd==f0,fs1 == 0 and fe1 == 0x1c and fm1 == 0x226 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x0c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x2a4 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f31; op2:f30; op3:f29; dest:f0; op1val:0x7226; op2val:0xc8c2;
op3val:0x7aa4; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f0, f31, f30, f29, dyn, 128, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1ba and fs2 == 0 and fe2 == 0x12 and fm2 == 0x046 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x37d and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6dba; op2val:0x4846;
op3val:0x737d; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x11e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x3ea and fs3 == 0 and fe3 == 0x1d and fm3 == 0x044 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x651e; op2val:0xd3ea;
op3val:0x7444; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x285 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3af and fs3 == 0 and fe3 == 0x1e and fm3 == 0x336 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7685; op2val:0x33af;
op3val:0x7b36; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x20f and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1e0 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x346 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x760f; op2val:0xc1e0;
op3val:0x6f46; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x021 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x029 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3ed and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7421; op2val:0x2829;
op3val:0x7bed; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x009 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x26b and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0f5 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6c09; op2val:0xce6b;
op3val:0x78f5; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x208 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x331 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x148 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7608; op2val:0x3b31;
op3val:0x7948; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x169 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0d2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x187 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7569; op2val:0xc0d2;
op3val:0x7987; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x3f5 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x037 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x131 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x77f5; op2val:0xbc37;
op3val:0x7931; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x335 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x361 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x0a6 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b35; op2val:0xbb61;
op3val:0x78a6; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x08b and fs2 == 0 and fe2 == 0x0f and fm2 == 0x139 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01e and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x708b; op2val:0x3d39;
op3val:0x6c1e; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x390 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x02e and fs3 == 0 and fe3 == 0x1d and fm3 == 0x3d0 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b90; op2val:0xbc2e;
op3val:0x77d0; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x233 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x09a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x390 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7233; op2val:0xc09a;
op3val:0x7b90; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x0a1 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1f8 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1d4 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x78a1; op2val:0xc1f8;
op3val:0x79d4; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x30b and fs2 == 0 and fe2 == 0x0e and fm2 == 0x27c and fs3 == 0 and fe3 == 0x1d and fm3 == 0x091 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b0b; op2val:0x3a7c;
op3val:0x7491; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x1d and fm1 == 0x1b4 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x008 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x305 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x75b4; op2val:0xc808;
op3val:0x7b05; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x051 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x093 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x21c and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7051; op2val:0x4893;
op3val:0x7a1c; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x23e and fs2 == 1 and fe2 == 0x14 and fm2 == 0x201 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x184 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6e3e; op2val:0xd201;
op3val:0x7984; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x19d and fs2 == 0 and fe2 == 0x11 and fm2 == 0x058 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x398 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x799d; op2val:0x4458;
op3val:0x7b98; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x2be and fs2 == 1 and fe2 == 0x12 and fm2 == 0x10a and fs3 == 0 and fe3 == 0x1e and fm3 == 0x006 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe; op2val:0xc90a;
op3val:0x7806; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x252 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0f6 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x0cd and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7252; op2val:0x50f6;
op3val:0x70cd; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x340 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x053 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x3b1 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7340; op2val:0xc853;
op3val:0x7bb1; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and fcsr == 0x20 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 32, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and fcsr == 0x40 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 64, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and fcsr == 0x60 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 96, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x1c and fm1 == 0x00a and fs2 == 0 and fe2 == 0x10 and fm2 == 0x0ac and fs3 == 0 and fe3 == 0x1e and fm3 == 0x1a2 and fcsr == 0x80 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x700a; op2val:0x40ac;
op3val:0x79a2; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 128, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x173 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x352 and fs3 == 0 and fe3 == 0x1c and fm3 == 0x3ea and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x6d73; op2val:0xcb52;
op3val:0x73ea; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(29674,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,16,FLEN)
NAN_BOXED(31741,16,FLEN)
NAN_BOXED(14932,16,FLEN)
NAN_BOXED(29362,16,FLEN)
NAN_BOXED(31741,16,FLEN)
NAN_BOXED(14932,16,FLEN)
NAN_BOXED(29362,16,FLEN)
NAN_BOXED(31741,16,FLEN)
NAN_BOXED(14932,16,FLEN)
NAN_BOXED(29362,16,FLEN)
NAN_BOXED(31741,16,FLEN)
NAN_BOXED(14932,16,FLEN)
NAN_BOXED(29362,16,FLEN)
NAN_BOXED(31741,16,FLEN)
NAN_BOXED(14932,16,FLEN)
NAN_BOXED(29362,16,FLEN)
NAN_BOXED(31009,16,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,16,FLEN)
NAN_BOXED(31009,16,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,16,FLEN)
NAN_BOXED(31009,16,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,16,FLEN)
NAN_BOXED(31009,16,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,16,FLEN)
NAN_BOXED(31009,16,FLEN)
NAN_BOXED(49291,16,FLEN)
NAN_BOXED(30551,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(15477,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(15477,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(15477,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(15477,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(30527,16,FLEN)
NAN_BOXED(15477,16,FLEN)
NAN_BOXED(30698,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(29222,16,FLEN)
NAN_BOXED(51394,16,FLEN)
NAN_BOXED(31396,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(18502,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(18502,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(18502,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(18502,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(28090,16,FLEN)
NAN_BOXED(18502,16,FLEN)
NAN_BOXED(29565,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(25886,16,FLEN)
NAN_BOXED(54250,16,FLEN)
NAN_BOXED(29764,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30341,16,FLEN)
NAN_BOXED(13231,16,FLEN)
NAN_BOXED(31542,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(30223,16,FLEN)
NAN_BOXED(49632,16,FLEN)
NAN_BOXED(28486,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(29729,16,FLEN)
NAN_BOXED(10281,16,FLEN)
NAN_BOXED(31725,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(27657,16,FLEN)
NAN_BOXED(52843,16,FLEN)
NAN_BOXED(30965,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30216,16,FLEN)
NAN_BOXED(15153,16,FLEN)
NAN_BOXED(31048,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30057,16,FLEN)
NAN_BOXED(49362,16,FLEN)
NAN_BOXED(31111,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(30709,16,FLEN)
NAN_BOXED(48183,16,FLEN)
NAN_BOXED(31025,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(31541,16,FLEN)
NAN_BOXED(47969,16,FLEN)
NAN_BOXED(30886,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(28811,16,FLEN)
NAN_BOXED(15673,16,FLEN)
NAN_BOXED(27678,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(48174,16,FLEN)
NAN_BOXED(30672,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(29235,16,FLEN)
NAN_BOXED(49306,16,FLEN)
NAN_BOXED(31632,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(30881,16,FLEN)
NAN_BOXED(49656,16,FLEN)
NAN_BOXED(31188,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(31499,16,FLEN)
NAN_BOXED(14972,16,FLEN)
NAN_BOXED(29841,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(30132,16,FLEN)
NAN_BOXED(51208,16,FLEN)
NAN_BOXED(31493,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28753,16,FLEN)
NAN_BOXED(18579,16,FLEN)
NAN_BOXED(31260,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(28222,16,FLEN)
NAN_BOXED(53761,16,FLEN)
NAN_BOXED(31108,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31133,16,FLEN)
NAN_BOXED(17496,16,FLEN)
NAN_BOXED(31640,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(31422,16,FLEN)
NAN_BOXED(51466,16,FLEN)
NAN_BOXED(30726,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29266,16,FLEN)
NAN_BOXED(20726,16,FLEN)
NAN_BOXED(28877,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(29504,16,FLEN)
NAN_BOXED(51283,16,FLEN)
NAN_BOXED(31665,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28682,16,FLEN)
NAN_BOXED(16556,16,FLEN)
NAN_BOXED(31138,16,FLEN)
NAN_BOXED(28019,16,FLEN)
NAN_BOXED(52050,16,FLEN)
NAN_BOXED(29674,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 40*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
