
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Tue Jan 30 08:45:11 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV32H/rv32h_fnmsub.cgf \
 \
//                  -- xlen 32  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.h instruction of the RISC-V RV32F_Zicsr_Zfh,RV32FD_Zicsr,RV64F_Zicsr_Zfh,RV64FD_Zicsr extension for the fnmsub_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr_Zfh,RV32IFD_Zicsr,RV64IF_Zicsr_Zfh,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*Zfh.*);def TEST_CASE_1=True;",fnmsub_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 == rd, rs1==f31, rs2==f31, rs3==f31, rd==f31,fs1 == 0 and fe1 == 0x00 and fm1 == 0x01e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x288 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x030 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f31; op2:f31; op3:f31; dest:f31; op1val:0x1e; op2val:0x1e;
op3val:0x1e; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f31, f31, f31, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rd == rs3 != rs2, rs1==f30, rs2==f29, rs3==f30, rd==f30,fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x234 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x011 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f30; dest:f30; op1val:0x31; op2val:0xb634;
op3val:0x31; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f30, f30, f29, f30, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f29, rs2==f30, rs3==f28, rd==f29,fs1 == 0 and fe1 == 0x00 and fm1 == 0x019 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x399 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f29; op2:f30; op3:f28; dest:f29; op1val:0x19; op2val:0xc399;
op3val:0x5b; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f29, f29, f30, f28, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f27, rs2==f28, rs3==f29, rd==f28,fs1 == 0 and fe1 == 0x00 and fm1 == 0x006 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x255 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f27; op2:f28; op3:f29; dest:f28; op1val:0x6; op2val:0xc255;
op3val:0xb; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f28, f27, f28, f29, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rd == rs2 == rs3 != rs1, rs1==f28, rs2==f27, rs3==f27, rd==f27,fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x155 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f28; op2:f27; op3:f27; dest:f27; op1val:0x12; op2val:0xc155;
op3val:0xc155; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f27, f28, f27, f27, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f25, rs2==f24, rs3==f26, rd==f26,fs1 == 0 and fe1 == 0x00 and fm1 == 0x041 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x342 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f25; op2:f24; op3:f26; dest:f26; op1val:0x41; op2val:0xbb42;
op3val:0x1b; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f26, f25, f24, f26, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f24, rs2==f26, rs3==f24, rd==f25,fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x053 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f24; op2:f26; op3:f24; dest:f25; op1val:0x34; op2val:0xc1a7;
op3val:0x34; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f25, f24, f26, f24, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rs2 == rs3 != rd, rs1==f23, rs2==f23, rs3==f23, rd==f24,fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x1d8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f23; op2:f23; op3:f23; dest:f24; op1val:0x4; op2val:0x4;
op3val:0x4; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f24, f23, f23, f23, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f26, rs2==f25, rs3==f25, rd==f23,fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x11 and fm2 == 0x100 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f26; op2:f25; op3:f25; dest:f23; op1val:0x3f; op2val:0xc500;
op3val:0xc500; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f23, f26, f25, f25, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f21, rs2==f21, rs3==f20, rd==f22,fs1 == 0 and fe1 == 0x00 and fm1 == 0x032 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1c2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x040 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f21; op2:f21; op3:f20; dest:f22; op1val:0x32; op2val:0x32;
op3val:0x40; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f22, f21, f21, f20, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f20, rs2==f20, rs3==f22, rd==f20,fs1 == 0 and fe1 == 0x00 and fm1 == 0x04a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x130 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x019 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f20; op2:f20; op3:f22; dest:f20; op1val:0x4a; op2val:0x4a;
op3val:0x19; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f20, f20, f20, f22, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f22, rs2==f19, rs3==f18, rd==f21,fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x0c and fm2 == 0x227 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00c and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f22; op2:f19; op3:f18; dest:f21; op1val:0x34; op2val:0xb227;
op3val:0xc; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f21, f22, f19, f18, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f18, rs2==f22, rs3==f21, rd==f19,fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x0d and fm2 == 0x29a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01e and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f18; op2:f22; op3:f21; dest:f19; op1val:0x3f; op2val:0xb69a;
op3val:0x1e; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f19, f18, f22, f21, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f19, rs2==f17, rs3==f16, rd==f18,fs1 == 0 and fe1 == 0x00 and fm1 == 0x062 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x287 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x003 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f19; op2:f17; op3:f16; dest:f18; op1val:0x62; op2val:0x2a87;
op3val:0x3; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f18, f19, f17, f16, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f16, rs2==f18, rs3==f19, rd==f17,fs1 == 0 and fe1 == 0x00 and fm1 == 0x05a and fs2 == 1 and fe2 == 0x0c and fm2 == 0x2c1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x023 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f16; op2:f18; op3:f19; dest:f17; op1val:0x5a; op2val:0xb2c1;
op3val:0x23; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f17, f16, f18, f19, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f17, rs2==f15, rs3==f14, rd==f16,fs1 == 0 and fe1 == 0x00 and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x103 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x035 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f17; op2:f15; op3:f14; dest:f16; op1val:0x43; op2val:0xb503;
op3val:0x35; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f16, f17, f15, f14, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f14, rs2==f16, rs3==f17, rd==f15,fs1 == 0 and fe1 == 0x00 and fm1 == 0x03d and fs2 == 0 and fe2 == 0x0c and fm2 == 0x3de and fs3 == 0 and fe3 == 0x00 and fm3 == 0x031 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f14; op2:f16; op3:f17; dest:f15; op1val:0x3d; op2val:0x33de;
op3val:0x31; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f15, f14, f16, f17, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f15, rs2==f13, rs3==f12, rd==f14,fs1 == 0 and fe1 == 0x00 and fm1 == 0x05d and fs2 == 0 and fe2 == 0x0f and fm2 == 0x0dc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f15; op2:f13; op3:f12; dest:f14; op1val:0x5d; op2val:0x3cdc;
op3val:0xf; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f14, f15, f13, f12, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f12, rs2==f14, rs3==f15, rd==f13,fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x10 and fm2 == 0x139 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x022 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f12; op2:f14; op3:f15; dest:f13; op1val:0x55; op2val:0x4139;
op3val:0x22; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f13, f12, f14, f15, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f13, rs2==f11, rs3==f10, rd==f12,fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d and fs2 == 0 and fe2 == 0x14 and fm2 == 0x0d6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x009 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f13; op2:f11; op3:f10; dest:f12; op1val:0xd; op2val:0x50d6;
op3val:0x9; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f12, f13, f11, f10, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f10, rs2==f12, rs3==f13, rd==f11,fs1 == 0 and fe1 == 0x0f and fm1 == 0x032 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ed and fs3 == 0 and fe3 == 0x0f and fm3 == 0x050 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f10; op2:f12; op3:f13; dest:f11; op1val:0x3c32; op2val:0xbfed;
op3val:0x3c50; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f11, f10, f12, f13, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f11, rs2==f9, rs3==f8, rd==f10,fs1 == 0 and fe1 == 0x0f and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3b1 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00e and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f11; op2:f9; op3:f8; dest:f10; op1val:0x3c31; op2val:0xbfb1;
op3val:0x3c0e; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f10, f11, f9, f8, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f8, rs2==f10, rs3==f11, rd==f9,fs1 == 0 and fe1 == 0x0f and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x36e and fs3 == 0 and fe3 == 0x0f and fm3 == 0x008 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f8; op2:f10; op3:f11; dest:f9; op1val:0x3c55; op2val:0xbf6e;
op3val:0x3c08; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f9, f8, f10, f11, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f9, rs2==f7, rs3==f6, rd==f8,fs1 == 0 and fe1 == 0x0f and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3d1 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01f and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f9; op2:f7; op3:f6; dest:f8; op1val:0x3c2c; op2val:0xbfd1;
op3val:0x3c1f; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f8, f9, f7, f6, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f6, rs2==f8, rs3==f9, rd==f7,fs1 == 0 and fe1 == 0x0f and fm1 == 0x059 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x375 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00c and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f6; op2:f8; op3:f9; dest:f7; op1val:0x3c59; op2val:0xbf75;
op3val:0x3c0c; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f7, f6, f8, f9, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f7, rs2==f5, rs3==f4, rd==f6,fs1 == 0 and fe1 == 0x0f and fm1 == 0x040 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3f4 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x054 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f7; op2:f5; op3:f4; dest:f6; op1val:0x3c40; op2val:0xbff4;
op3val:0x3c54; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f6, f7, f5, f4, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f4, rs2==f6, rs3==f7, rd==f5,fs1 == 0 and fe1 == 0x0f and fm1 == 0x043 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3d7 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x01b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f4; op2:f6; op3:f7; dest:f5; op1val:0x3c43; op2val:0xbfd7;
op3val:0x3c1b; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f5, f4, f6, f7, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f5, rs2==f3, rs3==f2, rd==f4,fs1 == 0 and fe1 == 0x0f and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3fd and fs3 == 0 and fe3 == 0x0f and fm3 == 0x013 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f5; op2:f3; op3:f2; dest:f4; op1val:0x3c4b; op2val:0xbffd;
op3val:0x3c13; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f4, f5, f3, f2, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f2, rs2==f4, rs3==f5, rd==f3,fs1 == 0 and fe1 == 0x0f and fm1 == 0x04e and fs2 == 1 and fe2 == 0x10 and fm2 == 0x032 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x009 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f2; op2:f4; op3:f5; dest:f3; op1val:0x3c4e; op2val:0xc032;
op3val:0x3c09; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f3, f2, f4, f5, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f3, rs2==f1, rs3==f0, rd==f2,fs1 == 0 and fe1 == 0x0f and fm1 == 0x046 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x0b0 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x005 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f3; op2:f1; op3:f0; dest:f2; op1val:0x3c46; op2val:0xc0b0;
op3val:0x3c05; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f2, f3, f1, f0, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f0, rs2==f2, rs3==f3, rd==f1,fs1 == 0 and fe1 == 0x0f and fm1 == 0x03f and fs2 == 1 and fe2 == 0x0b and fm2 == 0x13d and fs3 == 0 and fe3 == 0x0f and fm3 == 0x05a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f0; op2:f2; op3:f3; dest:f1; op1val:0x3c3f; op2val:0xad3d;
op3val:0x3c5a; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f1, f0, f2, f3, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f1,fs1 == 0 and fe1 == 0x0f and fm1 == 0x019 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x026 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x013 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f1; op2:f30; op3:f29; dest:f31; op1val:0x3c19; op2val:0xa426;
op3val:0x3c13; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f1, f30, f29, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// rs2==f0,fs1 == 0 and fe1 == 0x0f and fm1 == 0x04b and fs2 == 1 and fe2 == 0x0a and fm2 == 0x267 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x03b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f0; op3:f29; dest:f31; op1val:0x3c4b; op2val:0xaa67;
op3val:0x3c3b; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f0, f29, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// rs3==f1,fs1 == 0 and fe1 == 0x0f and fm1 == 0x05e and fs2 == 1 and fe2 == 0x0a and fm2 == 0x3ab and fs3 == 0 and fe3 == 0x0f and fm3 == 0x04b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f1; dest:f31; op1val:0x3c5e; op2val:0xabab;
op3val:0x3c4b; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f1, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// rd==f0,fs1 == 0 and fe1 == 0x0f and fm1 == 0x039 and fs2 == 1 and fe2 == 0x09 and fm2 == 0x0f9 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x025 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f31; op2:f30; op3:f29; dest:f0; op1val:0x3c39; op2val:0xa4f9;
op3val:0x3c25; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f0, f31, f30, f29, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x048 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x28a and fs3 == 0 and fe3 == 0x0f and fm3 == 0x02e and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c48; op2val:0xa28a;
op3val:0x3c2e; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x037 and fs2 == 0 and fe2 == 0x0a and fm2 == 0x174 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x012 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c37; op2val:0x2974;
op3val:0x3c12; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x015 and fs2 == 0 and fe2 == 0x09 and fm2 == 0x359 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x062 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c15; op2val:0x2759;
op3val:0x3c62; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0c and fm2 == 0x310 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x00d and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c4d; op2val:0x3310;
op3val:0x3c0d; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x0f and fm1 == 0x045 and fs2 == 0 and fe2 == 0x0d and fm2 == 0x231 and fs3 == 0 and fe3 == 0x0f and fm3 == 0x059 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3c45; op2val:0x3631;
op3val:0x3c59; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x029 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x070 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x29; op2val:0xc070;
op3val:0x5a; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x37a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x053 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2e; op2val:0xbf7a;
op3val:0x53; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x040 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x060 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x041 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x40; op2val:0xbc60;
op3val:0x41; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x050 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x300 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x50; op2val:0xb700;
op3val:0x1a; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x028 and fs2 == 1 and fe2 == 0x0e and fm2 == 0x366 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x014 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x28; op2val:0xbb66;
op3val:0x14; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02e and fs2 == 1 and fe2 == 0x10 and fm2 == 0x064 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x044 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2e; op2val:0xc064;
op3val:0x44; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x025 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x314 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x042 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x25; op2val:0xc314;
op3val:0x42; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x28a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x55; op2val:0xbe8a;
op3val:0xa; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x041 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x156 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x41; op2val:0xc556;
op3val:0x5a; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x046 and fs2 == 1 and fe2 == 0x11 and fm2 == 0x3be and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01d and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x46; op2val:0xc7be;
op3val:0x1d; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02d and fs2 == 1 and fe2 == 0x0e and fm2 == 0x182 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2d; op2val:0xb982;
op3val:0x20; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x060 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x026 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2; op2val:0xcc60;
op3val:0x26; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0e and fm2 == 0x05d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01d and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2c; op2val:0xb85d;
op3val:0x1d; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x023 and fs2 == 0 and fe2 == 0x0b and fm2 == 0x350 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x005 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x23; op2val:0x2f50;
op3val:0x5; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x037 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x0a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x021 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x37; op2val:0xb4a7;
op3val:0x21; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x3d6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x027 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x31; op2val:0xafd6;
op3val:0x27; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05b and fs2 == 0 and fe2 == 0x0b and fm2 == 0x3bc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x036 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5b; op2val:0x2fbc;
op3val:0x36; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x017 and fs2 == 0 and fe2 == 0x0f and fm2 == 0x3a6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x055 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x17; op2val:0x3fa6;
op3val:0x55; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x033 and fs2 == 0 and fe2 == 0x11 and fm2 == 0x0be and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x33; op2val:0x44be;
op3val:0xf; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x016 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x0dd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x055 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x16; op2val:0x4cdd;
op3val:0x55; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x17 and fm2 == 0x018 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4; op2val:0xdc18;
op3val:0x1a; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x063 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x143 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x015 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x63; op2val:0xc943;
op3val:0x15; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x027 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x2a0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00f and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x27; op2val:0xcea0;
op3val:0xf; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002 and fs2 == 1 and fe2 == 0x18 and fm2 == 0x059 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x062 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x2; op2val:0xe059;
op3val:0x62; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x15c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02c and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x31; op2val:0xcd5c;
op3val:0x2c; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x016 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x20b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x049 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x16; op2val:0xd20b;
op3val:0x49; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x038 and fs2 == 1 and fe2 == 0x13 and fm2 == 0x06a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x01e and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x38; op2val:0xcc6a;
op3val:0x1e; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x295 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x035 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x12; op2val:0xd295;
op3val:0x35; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x049 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1a6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x49; op2val:0xc9a6;
op3val:0x3a; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x035 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x154 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x036 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x35; op2val:0xc954;
op3val:0x36; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00b and fs2 == 0 and fe2 == 0x15 and fm2 == 0x160 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04c and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0xb; op2val:0x5560;
op3val:0x4c; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x009 and fs2 == 0 and fe2 == 0x15 and fm2 == 0x2d5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x025 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x9; op2val:0x56d5;
op3val:0x25; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x05c and fs2 == 0 and fe2 == 0x12 and fm2 == 0x177 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00d and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5c; op2val:0x4977;
op3val:0xd; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x005 and fs2 == 0 and fe2 == 0x16 and fm2 == 0x246 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5; op2val:0x5a46;
op3val:0xb; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x055 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x1d7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00e and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x55; op2val:0x49d7;
op3val:0xe; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x062 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x0b6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x043 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x62; op2val:0x48b6;
op3val:0x43; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x044 and fs2 == 0 and fe2 == 0x12 and fm2 == 0x2b4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x02f and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x44; op2val:0x4ab4;
op3val:0x2f; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x14 and fm2 == 0x130 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x041 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x14; op2val:0x5130;
op3val:0x41; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 0 and fe2 == 0x12 and fm2 == 0x15d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x05b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3f; op2val:0x495d;
op3val:0x5b; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x014 and fs2 == 0 and fe2 == 0x13 and fm2 == 0x169 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x04e and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x14; op2val:0x4d69;
op3val:0x4e; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x009 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x003 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x019 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x409; op2val:0xc003;
op3val:0x419; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x003 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x006 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x012 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x403; op2val:0xc006;
op3val:0x412; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x02c and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3df and fs3 == 0 and fe3 == 0x01 and fm3 == 0x032 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x42c; op2val:0xbfdf;
op3val:0x432; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x055 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ae and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x455; op2val:0xbfae;
op3val:0x44a; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x010 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x027 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x060 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x410; op2val:0xc027;
op3val:0x460; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x027 and fs2 == 1 and fe2 == 0x0f and fm2 == 0x3ff and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02d and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x427; op2val:0xbfff;
op3val:0x42d; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x02a and fs2 == 1 and fe2 == 0x10 and fm2 == 0x00c and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02f and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x42a; op2val:0xc00c;
op3val:0x42f; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x001 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x068 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x053 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x401; op2val:0xc068;
op3val:0x453; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x040 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x048 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x01b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x440; op2val:0xc048;
op3val:0x41b; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x008 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x11d and fs3 == 0 and fe3 == 0x01 and fm3 == 0x050 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x408; op2val:0xc11d;
op3val:0x450; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x005 and fs2 == 1 and fe2 == 0x0b and fm2 == 0x208 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x062 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x405; op2val:0xae08;
op3val:0x462; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x04b and fs2 == 1 and fe2 == 0x09 and fm2 == 0x0e4 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x017 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x44b; op2val:0xa4e4;
op3val:0x417; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x017 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x0e3 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x02c and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x417; op2val:0xa8e3;
op3val:0x42c; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x038 and fs2 == 1 and fe2 == 0x0a and fm2 == 0x1ce and fs3 == 0 and fe3 == 0x01 and fm3 == 0x039 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x438; op2val:0xa9ce;
op3val:0x439; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x010 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x0ec and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x410; op2val:0x1cec;
op3val:0x40b; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01a and fs2 == 1 and fe2 == 0x0a and fm2 == 0x19b and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04e and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x41a; op2val:0xa99b;
op3val:0x44e; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x01d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x040 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x41d; op2val:0x2f0;
op3val:0x440; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x03d and fs2 == 0 and fe2 == 0x0b and fm2 == 0x25e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x014 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x43d; op2val:0x2e5e;
op3val:0x414; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x031 and fs2 == 0 and fe2 == 0x0c and fm2 == 0x328 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x010 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x431; op2val:0x3328;
op3val:0x410; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00e and fs2 == 0 and fe2 == 0x0d and fm2 == 0x2bc and fs3 == 0 and fe3 == 0x01 and fm3 == 0x04b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x40e; op2val:0x36bc;
op3val:0x44b; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x199 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x785d; op2val:0xc199;
op3val:0x783a; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x053 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x193 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x011 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7853; op2val:0xc193;
op3val:0x7811; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x197 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x039 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x785d; op2val:0xc197;
op3val:0x7839; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x042 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1ca and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05d and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7842; op2val:0xc1ca;
op3val:0x785d; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00c and fs2 == 1 and fe2 == 0x10 and fm2 == 0x213 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05c and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x780c; op2val:0xc213;
op3val:0x785c; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03d and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1bc and fs3 == 0 and fe3 == 0x1e and fm3 == 0x049 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x783d; op2val:0xc1bc;
op3val:0x7849; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x033 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1ae and fs3 == 0 and fe3 == 0x1e and fm3 == 0x02f and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7833; op2val:0xc1ae;
op3val:0x782f; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x03b and fs2 == 1 and fe2 == 0x10 and fm2 == 0x17d and fs3 == 0 and fe3 == 0x1e and fm3 == 0x01d and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x783b; op2val:0xc17d;
op3val:0x781d; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x007 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x182 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x01a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7807; op2val:0xc182;
op3val:0x781a; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x007 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x113 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x03a and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7807; op2val:0xc113;
op3val:0x783a; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x00f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x3c2 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00e and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x780f; op2val:0x3bc2;
op3val:0x780e; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x01c and fs2 == 0 and fe2 == 0x0e and fm2 == 0x30e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05d and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x781c; op2val:0x3b0e;
op3val:0x785d; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x001 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x33e and fs3 == 0 and fe3 == 0x1e and fm3 == 0x05b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7801; op2val:0x3b3e;
op3val:0x785b; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2cd and fs3 == 0 and fe3 == 0x1e and fm3 == 0x04f and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x784d; op2val:0x3acd;
op3val:0x784f; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x003 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x330 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x054 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7803; op2val:0x3b30;
op3val:0x7854; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x02f and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2fb and fs3 == 0 and fe3 == 0x1e and fm3 == 0x038 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x782f; op2val:0x3afb;
op3val:0x7838; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x044 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x2f0 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x00c and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7844; op2val:0x3af0;
op3val:0x780c; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x060 and fs2 == 0 and fe2 == 0x0e and fm2 == 0x1b3 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x061 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7860; op2val:0x39b3;
op3val:0x7861; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x04d and fs2 == 0 and fe2 == 0x0e and fm2 == 0x119 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x041 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x784d; op2val:0x3919;
op3val:0x7841; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x1e and fm1 == 0x05b and fs2 == 0 and fe2 == 0x0d and fm2 == 0x249 and fs3 == 0 and fe3 == 0x1e and fm3 == 0x049 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x785b; op2val:0x3649;
op3val:0x7849; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01e and fs2 == 1 and fe2 == 0x0f and fm2 == 0x288 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x030 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x1e; op2val:0xbe88;
op3val:0x30; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x031 and fs2 == 1 and fe2 == 0x0d and fm2 == 0x234 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x011 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x31; op2val:0xb634;
op3val:0x11; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x012 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x155 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x020 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x12; op2val:0xc155;
op3val:0x20; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x034 and fs2 == 1 and fe2 == 0x10 and fm2 == 0x1a7 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x053 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x34; op2val:0xc1a7;
op3val:0x53; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x004 and fs2 == 1 and fe2 == 0x14 and fm2 == 0x1d8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4; op2val:0xd1d8;
op3val:0x3b; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03f and fs2 == 1 and fe2 == 0x11 and fm2 == 0x100 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x03b and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x3f; op2val:0xc500;
op3val:0x3b; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x032 and fs2 == 1 and fe2 == 0x12 and fm2 == 0x1c2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x040 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x32; op2val:0xc9c2;
op3val:0x40; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04a and fs2 == 1 and fe2 == 0x0d and fm2 == 0x130 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x019 and fcsr == 0x0 and rm_val == 7  and rs1_nan_prefix == 0xffff and rs2_nan_prefix == 0xffff and rs3_nan_prefix == 0xffff  
/* opcode: fnmsub.h ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x4a; op2val:0xb530;
op3val:0x19; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.h, f31, f30, f29, f28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(30,16,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(49,16,FLEN)
NAN_BOXED(46644,16,FLEN)
NAN_BOXED(49,16,FLEN)
NAN_BOXED(25,16,FLEN)
NAN_BOXED(50073,16,FLEN)
NAN_BOXED(91,16,FLEN)
NAN_BOXED(6,16,FLEN)
NAN_BOXED(49749,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(49493,16,FLEN)
NAN_BOXED(49493,16,FLEN)
NAN_BOXED(65,16,FLEN)
NAN_BOXED(47938,16,FLEN)
NAN_BOXED(27,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(49575,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(63,16,FLEN)
NAN_BOXED(50432,16,FLEN)
NAN_BOXED(50432,16,FLEN)
NAN_BOXED(50,16,FLEN)
NAN_BOXED(50,16,FLEN)
NAN_BOXED(64,16,FLEN)
NAN_BOXED(74,16,FLEN)
NAN_BOXED(74,16,FLEN)
NAN_BOXED(25,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(45607,16,FLEN)
NAN_BOXED(12,16,FLEN)
NAN_BOXED(63,16,FLEN)
NAN_BOXED(46746,16,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(98,16,FLEN)
NAN_BOXED(10887,16,FLEN)
NAN_BOXED(3,16,FLEN)
NAN_BOXED(90,16,FLEN)
NAN_BOXED(45761,16,FLEN)
NAN_BOXED(35,16,FLEN)
NAN_BOXED(67,16,FLEN)
NAN_BOXED(46339,16,FLEN)
NAN_BOXED(53,16,FLEN)
NAN_BOXED(61,16,FLEN)
NAN_BOXED(13278,16,FLEN)
NAN_BOXED(49,16,FLEN)
NAN_BOXED(93,16,FLEN)
NAN_BOXED(15580,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(16697,16,FLEN)
NAN_BOXED(34,16,FLEN)
NAN_BOXED(13,16,FLEN)
NAN_BOXED(20694,16,FLEN)
NAN_BOXED(9,16,FLEN)
NAN_BOXED(15410,16,FLEN)
NAN_BOXED(49133,16,FLEN)
NAN_BOXED(15440,16,FLEN)
NAN_BOXED(15409,16,FLEN)
NAN_BOXED(49073,16,FLEN)
NAN_BOXED(15374,16,FLEN)
NAN_BOXED(15445,16,FLEN)
NAN_BOXED(49006,16,FLEN)
NAN_BOXED(15368,16,FLEN)
NAN_BOXED(15404,16,FLEN)
NAN_BOXED(49105,16,FLEN)
NAN_BOXED(15391,16,FLEN)
NAN_BOXED(15449,16,FLEN)
NAN_BOXED(49013,16,FLEN)
NAN_BOXED(15372,16,FLEN)
NAN_BOXED(15424,16,FLEN)
NAN_BOXED(49140,16,FLEN)
NAN_BOXED(15444,16,FLEN)
NAN_BOXED(15427,16,FLEN)
NAN_BOXED(49111,16,FLEN)
NAN_BOXED(15387,16,FLEN)
NAN_BOXED(15435,16,FLEN)
NAN_BOXED(49149,16,FLEN)
NAN_BOXED(15379,16,FLEN)
NAN_BOXED(15438,16,FLEN)
NAN_BOXED(49202,16,FLEN)
NAN_BOXED(15369,16,FLEN)
NAN_BOXED(15430,16,FLEN)
NAN_BOXED(49328,16,FLEN)
NAN_BOXED(15365,16,FLEN)
NAN_BOXED(15423,16,FLEN)
NAN_BOXED(44349,16,FLEN)
NAN_BOXED(15450,16,FLEN)
NAN_BOXED(15385,16,FLEN)
NAN_BOXED(42022,16,FLEN)
NAN_BOXED(15379,16,FLEN)
NAN_BOXED(15435,16,FLEN)
NAN_BOXED(43623,16,FLEN)
NAN_BOXED(15419,16,FLEN)
NAN_BOXED(15454,16,FLEN)
NAN_BOXED(43947,16,FLEN)
NAN_BOXED(15435,16,FLEN)
NAN_BOXED(15417,16,FLEN)
NAN_BOXED(42233,16,FLEN)
NAN_BOXED(15397,16,FLEN)
NAN_BOXED(15432,16,FLEN)
NAN_BOXED(41610,16,FLEN)
NAN_BOXED(15406,16,FLEN)
NAN_BOXED(15415,16,FLEN)
NAN_BOXED(10612,16,FLEN)
NAN_BOXED(15378,16,FLEN)
NAN_BOXED(15381,16,FLEN)
NAN_BOXED(10073,16,FLEN)
NAN_BOXED(15458,16,FLEN)
NAN_BOXED(15437,16,FLEN)
NAN_BOXED(13072,16,FLEN)
NAN_BOXED(15373,16,FLEN)
NAN_BOXED(15429,16,FLEN)
NAN_BOXED(13873,16,FLEN)
NAN_BOXED(15449,16,FLEN)
NAN_BOXED(41,16,FLEN)
NAN_BOXED(49264,16,FLEN)
NAN_BOXED(90,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(49018,16,FLEN)
NAN_BOXED(83,16,FLEN)
NAN_BOXED(64,16,FLEN)
NAN_BOXED(48224,16,FLEN)
NAN_BOXED(65,16,FLEN)
NAN_BOXED(80,16,FLEN)
NAN_BOXED(46848,16,FLEN)
NAN_BOXED(26,16,FLEN)
NAN_BOXED(40,16,FLEN)
NAN_BOXED(47974,16,FLEN)
NAN_BOXED(20,16,FLEN)
NAN_BOXED(46,16,FLEN)
NAN_BOXED(49252,16,FLEN)
NAN_BOXED(68,16,FLEN)
NAN_BOXED(37,16,FLEN)
NAN_BOXED(49940,16,FLEN)
NAN_BOXED(66,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(48778,16,FLEN)
NAN_BOXED(10,16,FLEN)
NAN_BOXED(65,16,FLEN)
NAN_BOXED(50518,16,FLEN)
NAN_BOXED(90,16,FLEN)
NAN_BOXED(70,16,FLEN)
NAN_BOXED(51134,16,FLEN)
NAN_BOXED(29,16,FLEN)
NAN_BOXED(45,16,FLEN)
NAN_BOXED(47490,16,FLEN)
NAN_BOXED(32,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(52320,16,FLEN)
NAN_BOXED(38,16,FLEN)
NAN_BOXED(44,16,FLEN)
NAN_BOXED(47197,16,FLEN)
NAN_BOXED(29,16,FLEN)
NAN_BOXED(35,16,FLEN)
NAN_BOXED(12112,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(55,16,FLEN)
NAN_BOXED(46247,16,FLEN)
NAN_BOXED(33,16,FLEN)
NAN_BOXED(49,16,FLEN)
NAN_BOXED(45014,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(91,16,FLEN)
NAN_BOXED(12220,16,FLEN)
NAN_BOXED(54,16,FLEN)
NAN_BOXED(23,16,FLEN)
NAN_BOXED(16294,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(51,16,FLEN)
NAN_BOXED(17598,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(19677,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(56344,16,FLEN)
NAN_BOXED(26,16,FLEN)
NAN_BOXED(99,16,FLEN)
NAN_BOXED(51523,16,FLEN)
NAN_BOXED(21,16,FLEN)
NAN_BOXED(39,16,FLEN)
NAN_BOXED(52896,16,FLEN)
NAN_BOXED(15,16,FLEN)
NAN_BOXED(2,16,FLEN)
NAN_BOXED(57433,16,FLEN)
NAN_BOXED(98,16,FLEN)
NAN_BOXED(49,16,FLEN)
NAN_BOXED(52572,16,FLEN)
NAN_BOXED(44,16,FLEN)
NAN_BOXED(22,16,FLEN)
NAN_BOXED(53771,16,FLEN)
NAN_BOXED(73,16,FLEN)
NAN_BOXED(56,16,FLEN)
NAN_BOXED(52330,16,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(53909,16,FLEN)
NAN_BOXED(53,16,FLEN)
NAN_BOXED(73,16,FLEN)
NAN_BOXED(51622,16,FLEN)
NAN_BOXED(58,16,FLEN)
NAN_BOXED(53,16,FLEN)
NAN_BOXED(51540,16,FLEN)
NAN_BOXED(54,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(21856,16,FLEN)
NAN_BOXED(76,16,FLEN)
NAN_BOXED(9,16,FLEN)
NAN_BOXED(22229,16,FLEN)
NAN_BOXED(37,16,FLEN)
NAN_BOXED(92,16,FLEN)
NAN_BOXED(18807,16,FLEN)
NAN_BOXED(13,16,FLEN)
NAN_BOXED(5,16,FLEN)
NAN_BOXED(23110,16,FLEN)
NAN_BOXED(11,16,FLEN)
NAN_BOXED(85,16,FLEN)
NAN_BOXED(18903,16,FLEN)
NAN_BOXED(14,16,FLEN)
NAN_BOXED(98,16,FLEN)
NAN_BOXED(18614,16,FLEN)
NAN_BOXED(67,16,FLEN)
NAN_BOXED(68,16,FLEN)
NAN_BOXED(19124,16,FLEN)
NAN_BOXED(47,16,FLEN)
NAN_BOXED(20,16,FLEN)
NAN_BOXED(20784,16,FLEN)
NAN_BOXED(65,16,FLEN)
NAN_BOXED(63,16,FLEN)
NAN_BOXED(18781,16,FLEN)
NAN_BOXED(91,16,FLEN)
NAN_BOXED(20,16,FLEN)
NAN_BOXED(19817,16,FLEN)
NAN_BOXED(78,16,FLEN)
NAN_BOXED(1033,16,FLEN)
NAN_BOXED(49155,16,FLEN)
NAN_BOXED(1049,16,FLEN)
NAN_BOXED(1027,16,FLEN)
NAN_BOXED(49158,16,FLEN)
NAN_BOXED(1042,16,FLEN)
NAN_BOXED(1068,16,FLEN)
NAN_BOXED(49119,16,FLEN)
NAN_BOXED(1074,16,FLEN)
NAN_BOXED(1109,16,FLEN)
NAN_BOXED(49070,16,FLEN)
NAN_BOXED(1098,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(49191,16,FLEN)
NAN_BOXED(1120,16,FLEN)
NAN_BOXED(1063,16,FLEN)
NAN_BOXED(49151,16,FLEN)
NAN_BOXED(1069,16,FLEN)
NAN_BOXED(1066,16,FLEN)
NAN_BOXED(49164,16,FLEN)
NAN_BOXED(1071,16,FLEN)
NAN_BOXED(1025,16,FLEN)
NAN_BOXED(49256,16,FLEN)
NAN_BOXED(1107,16,FLEN)
NAN_BOXED(1088,16,FLEN)
NAN_BOXED(49224,16,FLEN)
NAN_BOXED(1051,16,FLEN)
NAN_BOXED(1032,16,FLEN)
NAN_BOXED(49437,16,FLEN)
NAN_BOXED(1104,16,FLEN)
NAN_BOXED(1029,16,FLEN)
NAN_BOXED(44552,16,FLEN)
NAN_BOXED(1122,16,FLEN)
NAN_BOXED(1099,16,FLEN)
NAN_BOXED(42212,16,FLEN)
NAN_BOXED(1047,16,FLEN)
NAN_BOXED(1047,16,FLEN)
NAN_BOXED(43235,16,FLEN)
NAN_BOXED(1068,16,FLEN)
NAN_BOXED(1080,16,FLEN)
NAN_BOXED(43470,16,FLEN)
NAN_BOXED(1081,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(7404,16,FLEN)
NAN_BOXED(1035,16,FLEN)
NAN_BOXED(1050,16,FLEN)
NAN_BOXED(43419,16,FLEN)
NAN_BOXED(1102,16,FLEN)
NAN_BOXED(1053,16,FLEN)
NAN_BOXED(752,16,FLEN)
NAN_BOXED(1088,16,FLEN)
NAN_BOXED(1085,16,FLEN)
NAN_BOXED(11870,16,FLEN)
NAN_BOXED(1044,16,FLEN)
NAN_BOXED(1073,16,FLEN)
NAN_BOXED(13096,16,FLEN)
NAN_BOXED(1040,16,FLEN)
NAN_BOXED(1038,16,FLEN)
NAN_BOXED(14012,16,FLEN)
NAN_BOXED(1099,16,FLEN)
NAN_BOXED(30813,16,FLEN)
NAN_BOXED(49561,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(30803,16,FLEN)
NAN_BOXED(49555,16,FLEN)
NAN_BOXED(30737,16,FLEN)
NAN_BOXED(30813,16,FLEN)
NAN_BOXED(49559,16,FLEN)
NAN_BOXED(30777,16,FLEN)
NAN_BOXED(30786,16,FLEN)
NAN_BOXED(49610,16,FLEN)
NAN_BOXED(30813,16,FLEN)
NAN_BOXED(30732,16,FLEN)
NAN_BOXED(49683,16,FLEN)
NAN_BOXED(30812,16,FLEN)
NAN_BOXED(30781,16,FLEN)
NAN_BOXED(49596,16,FLEN)
NAN_BOXED(30793,16,FLEN)
NAN_BOXED(30771,16,FLEN)
NAN_BOXED(49582,16,FLEN)
NAN_BOXED(30767,16,FLEN)
NAN_BOXED(30779,16,FLEN)
NAN_BOXED(49533,16,FLEN)
NAN_BOXED(30749,16,FLEN)
NAN_BOXED(30727,16,FLEN)
NAN_BOXED(49538,16,FLEN)
NAN_BOXED(30746,16,FLEN)
NAN_BOXED(30727,16,FLEN)
NAN_BOXED(49427,16,FLEN)
NAN_BOXED(30778,16,FLEN)
NAN_BOXED(30735,16,FLEN)
NAN_BOXED(15298,16,FLEN)
NAN_BOXED(30734,16,FLEN)
NAN_BOXED(30748,16,FLEN)
NAN_BOXED(15118,16,FLEN)
NAN_BOXED(30813,16,FLEN)
NAN_BOXED(30721,16,FLEN)
NAN_BOXED(15166,16,FLEN)
NAN_BOXED(30811,16,FLEN)
NAN_BOXED(30797,16,FLEN)
NAN_BOXED(15053,16,FLEN)
NAN_BOXED(30799,16,FLEN)
NAN_BOXED(30723,16,FLEN)
NAN_BOXED(15152,16,FLEN)
NAN_BOXED(30804,16,FLEN)
NAN_BOXED(30767,16,FLEN)
NAN_BOXED(15099,16,FLEN)
NAN_BOXED(30776,16,FLEN)
NAN_BOXED(30788,16,FLEN)
NAN_BOXED(15088,16,FLEN)
NAN_BOXED(30732,16,FLEN)
NAN_BOXED(30816,16,FLEN)
NAN_BOXED(14771,16,FLEN)
NAN_BOXED(30817,16,FLEN)
NAN_BOXED(30797,16,FLEN)
NAN_BOXED(14617,16,FLEN)
NAN_BOXED(30785,16,FLEN)
NAN_BOXED(30811,16,FLEN)
NAN_BOXED(13897,16,FLEN)
NAN_BOXED(30793,16,FLEN)
NAN_BOXED(30,16,FLEN)
NAN_BOXED(48776,16,FLEN)
NAN_BOXED(48,16,FLEN)
NAN_BOXED(49,16,FLEN)
NAN_BOXED(46644,16,FLEN)
NAN_BOXED(17,16,FLEN)
NAN_BOXED(18,16,FLEN)
NAN_BOXED(49493,16,FLEN)
NAN_BOXED(32,16,FLEN)
NAN_BOXED(52,16,FLEN)
NAN_BOXED(49575,16,FLEN)
NAN_BOXED(83,16,FLEN)
NAN_BOXED(4,16,FLEN)
NAN_BOXED(53720,16,FLEN)
NAN_BOXED(59,16,FLEN)
NAN_BOXED(63,16,FLEN)
NAN_BOXED(50432,16,FLEN)
NAN_BOXED(59,16,FLEN)
NAN_BOXED(50,16,FLEN)
NAN_BOXED(51650,16,FLEN)
NAN_BOXED(64,16,FLEN)
NAN_BOXED(74,16,FLEN)
NAN_BOXED(46384,16,FLEN)
NAN_BOXED(25,16,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
