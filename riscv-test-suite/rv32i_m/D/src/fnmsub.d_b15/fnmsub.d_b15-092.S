
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_69888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffe000000; valaddr_reg:x3; val_offset:209664*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209664*0 + 3*0*FLEN/8, x4, x1, x2)

inst_69889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffff000000; valaddr_reg:x3; val_offset:209667*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209667*0 + 3*1*FLEN/8, x4, x1, x2)

inst_69890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffff800000; valaddr_reg:x3; val_offset:209670*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209670*0 + 3*2*FLEN/8, x4, x1, x2)

inst_69891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffc00000; valaddr_reg:x3; val_offset:209673*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209673*0 + 3*3*FLEN/8, x4, x1, x2)

inst_69892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffe00000; valaddr_reg:x3; val_offset:209676*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209676*0 + 3*4*FLEN/8, x4, x1, x2)

inst_69893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffff00000; valaddr_reg:x3; val_offset:209679*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209679*0 + 3*5*FLEN/8, x4, x1, x2)

inst_69894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffff80000; valaddr_reg:x3; val_offset:209682*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209682*0 + 3*6*FLEN/8, x4, x1, x2)

inst_69895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffc0000; valaddr_reg:x3; val_offset:209685*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209685*0 + 3*7*FLEN/8, x4, x1, x2)

inst_69896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffe0000; valaddr_reg:x3; val_offset:209688*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209688*0 + 3*8*FLEN/8, x4, x1, x2)

inst_69897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffff0000; valaddr_reg:x3; val_offset:209691*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209691*0 + 3*9*FLEN/8, x4, x1, x2)

inst_69898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffff8000; valaddr_reg:x3; val_offset:209694*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209694*0 + 3*10*FLEN/8, x4, x1, x2)

inst_69899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffffc000; valaddr_reg:x3; val_offset:209697*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209697*0 + 3*11*FLEN/8, x4, x1, x2)

inst_69900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffffe000; valaddr_reg:x3; val_offset:209700*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209700*0 + 3*12*FLEN/8, x4, x1, x2)

inst_69901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffff000; valaddr_reg:x3; val_offset:209703*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209703*0 + 3*13*FLEN/8, x4, x1, x2)

inst_69902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffff800; valaddr_reg:x3; val_offset:209706*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209706*0 + 3*14*FLEN/8, x4, x1, x2)

inst_69903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffffc00; valaddr_reg:x3; val_offset:209709*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209709*0 + 3*15*FLEN/8, x4, x1, x2)

inst_69904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffffe00; valaddr_reg:x3; val_offset:209712*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209712*0 + 3*16*FLEN/8, x4, x1, x2)

inst_69905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffffff00; valaddr_reg:x3; val_offset:209715*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209715*0 + 3*17*FLEN/8, x4, x1, x2)

inst_69906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffffff80; valaddr_reg:x3; val_offset:209718*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209718*0 + 3*18*FLEN/8, x4, x1, x2)

inst_69907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffffffc0; valaddr_reg:x3; val_offset:209721*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209721*0 + 3*19*FLEN/8, x4, x1, x2)

inst_69908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffffffe0; valaddr_reg:x3; val_offset:209724*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209724*0 + 3*20*FLEN/8, x4, x1, x2)

inst_69909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffffff0; valaddr_reg:x3; val_offset:209727*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209727*0 + 3*21*FLEN/8, x4, x1, x2)

inst_69910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffffff8; valaddr_reg:x3; val_offset:209730*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209730*0 + 3*22*FLEN/8, x4, x1, x2)

inst_69911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffffffc; valaddr_reg:x3; val_offset:209733*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209733*0 + 3*23*FLEN/8, x4, x1, x2)

inst_69912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389ffffffffffffe; valaddr_reg:x3; val_offset:209736*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209736*0 + 3*24*FLEN/8, x4, x1, x2)

inst_69913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x389 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x389fffffffffffff; valaddr_reg:x3; val_offset:209739*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209739*0 + 3*25*FLEN/8, x4, x1, x2)

inst_69914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:209742*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209742*0 + 3*26*FLEN/8, x4, x1, x2)

inst_69915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:209745*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209745*0 + 3*27*FLEN/8, x4, x1, x2)

inst_69916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:209748*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209748*0 + 3*28*FLEN/8, x4, x1, x2)

inst_69917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:209751*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209751*0 + 3*29*FLEN/8, x4, x1, x2)

inst_69918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:209754*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209754*0 + 3*30*FLEN/8, x4, x1, x2)

inst_69919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:209757*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209757*0 + 3*31*FLEN/8, x4, x1, x2)

inst_69920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:209760*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209760*0 + 3*32*FLEN/8, x4, x1, x2)

inst_69921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:209763*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209763*0 + 3*33*FLEN/8, x4, x1, x2)

inst_69922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:209766*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209766*0 + 3*34*FLEN/8, x4, x1, x2)

inst_69923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:209769*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209769*0 + 3*35*FLEN/8, x4, x1, x2)

inst_69924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:209772*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209772*0 + 3*36*FLEN/8, x4, x1, x2)

inst_69925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:209775*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209775*0 + 3*37*FLEN/8, x4, x1, x2)

inst_69926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:209778*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209778*0 + 3*38*FLEN/8, x4, x1, x2)

inst_69927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:209781*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209781*0 + 3*39*FLEN/8, x4, x1, x2)

inst_69928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:209784*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209784*0 + 3*40*FLEN/8, x4, x1, x2)

inst_69929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:209787*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209787*0 + 3*41*FLEN/8, x4, x1, x2)

inst_69930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:209790*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209790*0 + 3*42*FLEN/8, x4, x1, x2)

inst_69931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:209793*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209793*0 + 3*43*FLEN/8, x4, x1, x2)

inst_69932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:209796*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209796*0 + 3*44*FLEN/8, x4, x1, x2)

inst_69933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:209799*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209799*0 + 3*45*FLEN/8, x4, x1, x2)

inst_69934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:209802*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209802*0 + 3*46*FLEN/8, x4, x1, x2)

inst_69935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b2b275bdae0f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x798bb2e597092 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b2b275bdae0f; op2val:0x203798bb2e597092;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:209805*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209805*0 + 3*47*FLEN/8, x4, x1, x2)

inst_69936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:209808*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209808*0 + 3*48*FLEN/8, x4, x1, x2)

inst_69937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:209811*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209811*0 + 3*49*FLEN/8, x4, x1, x2)

inst_69938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:209814*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209814*0 + 3*50*FLEN/8, x4, x1, x2)

inst_69939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:209817*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209817*0 + 3*51*FLEN/8, x4, x1, x2)

inst_69940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:209820*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209820*0 + 3*52*FLEN/8, x4, x1, x2)

inst_69941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:209823*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209823*0 + 3*53*FLEN/8, x4, x1, x2)

inst_69942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:209826*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209826*0 + 3*54*FLEN/8, x4, x1, x2)

inst_69943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:209829*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209829*0 + 3*55*FLEN/8, x4, x1, x2)

inst_69944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:209832*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209832*0 + 3*56*FLEN/8, x4, x1, x2)

inst_69945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:209835*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209835*0 + 3*57*FLEN/8, x4, x1, x2)

inst_69946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:209838*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209838*0 + 3*58*FLEN/8, x4, x1, x2)

inst_69947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:209841*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209841*0 + 3*59*FLEN/8, x4, x1, x2)

inst_69948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:209844*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209844*0 + 3*60*FLEN/8, x4, x1, x2)

inst_69949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:209847*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209847*0 + 3*61*FLEN/8, x4, x1, x2)

inst_69950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:209850*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209850*0 + 3*62*FLEN/8, x4, x1, x2)

inst_69951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:209853*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209853*0 + 3*63*FLEN/8, x4, x1, x2)

inst_69952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:209856*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209856*0 + 3*64*FLEN/8, x4, x1, x2)

inst_69953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:209859*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209859*0 + 3*65*FLEN/8, x4, x1, x2)

inst_69954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:209862*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209862*0 + 3*66*FLEN/8, x4, x1, x2)

inst_69955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:209865*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209865*0 + 3*67*FLEN/8, x4, x1, x2)

inst_69956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:209868*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209868*0 + 3*68*FLEN/8, x4, x1, x2)

inst_69957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:209871*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209871*0 + 3*69*FLEN/8, x4, x1, x2)

inst_69958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000000000000; valaddr_reg:x3; val_offset:209874*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209874*0 + 3*70*FLEN/8, x4, x1, x2)

inst_69959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000000000001; valaddr_reg:x3; val_offset:209877*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209877*0 + 3*71*FLEN/8, x4, x1, x2)

inst_69960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000000000003; valaddr_reg:x3; val_offset:209880*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209880*0 + 3*72*FLEN/8, x4, x1, x2)

inst_69961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000000000007; valaddr_reg:x3; val_offset:209883*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209883*0 + 3*73*FLEN/8, x4, x1, x2)

inst_69962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000000000000f; valaddr_reg:x3; val_offset:209886*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209886*0 + 3*74*FLEN/8, x4, x1, x2)

inst_69963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000000000001f; valaddr_reg:x3; val_offset:209889*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209889*0 + 3*75*FLEN/8, x4, x1, x2)

inst_69964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000000000003f; valaddr_reg:x3; val_offset:209892*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209892*0 + 3*76*FLEN/8, x4, x1, x2)

inst_69965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000000000007f; valaddr_reg:x3; val_offset:209895*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209895*0 + 3*77*FLEN/8, x4, x1, x2)

inst_69966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000000000000ff; valaddr_reg:x3; val_offset:209898*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209898*0 + 3*78*FLEN/8, x4, x1, x2)

inst_69967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000000000001ff; valaddr_reg:x3; val_offset:209901*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209901*0 + 3*79*FLEN/8, x4, x1, x2)

inst_69968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000000000003ff; valaddr_reg:x3; val_offset:209904*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209904*0 + 3*80*FLEN/8, x4, x1, x2)

inst_69969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000000000007ff; valaddr_reg:x3; val_offset:209907*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209907*0 + 3*81*FLEN/8, x4, x1, x2)

inst_69970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000000000fff; valaddr_reg:x3; val_offset:209910*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209910*0 + 3*82*FLEN/8, x4, x1, x2)

inst_69971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000000001fff; valaddr_reg:x3; val_offset:209913*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209913*0 + 3*83*FLEN/8, x4, x1, x2)

inst_69972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000000003fff; valaddr_reg:x3; val_offset:209916*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209916*0 + 3*84*FLEN/8, x4, x1, x2)

inst_69973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000000007fff; valaddr_reg:x3; val_offset:209919*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209919*0 + 3*85*FLEN/8, x4, x1, x2)

inst_69974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000000000ffff; valaddr_reg:x3; val_offset:209922*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209922*0 + 3*86*FLEN/8, x4, x1, x2)

inst_69975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000000001ffff; valaddr_reg:x3; val_offset:209925*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209925*0 + 3*87*FLEN/8, x4, x1, x2)

inst_69976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000000003ffff; valaddr_reg:x3; val_offset:209928*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209928*0 + 3*88*FLEN/8, x4, x1, x2)

inst_69977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000000007ffff; valaddr_reg:x3; val_offset:209931*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209931*0 + 3*89*FLEN/8, x4, x1, x2)

inst_69978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000000000fffff; valaddr_reg:x3; val_offset:209934*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209934*0 + 3*90*FLEN/8, x4, x1, x2)

inst_69979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000000001fffff; valaddr_reg:x3; val_offset:209937*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209937*0 + 3*91*FLEN/8, x4, x1, x2)

inst_69980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000000003fffff; valaddr_reg:x3; val_offset:209940*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209940*0 + 3*92*FLEN/8, x4, x1, x2)

inst_69981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000000007fffff; valaddr_reg:x3; val_offset:209943*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209943*0 + 3*93*FLEN/8, x4, x1, x2)

inst_69982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000000ffffff; valaddr_reg:x3; val_offset:209946*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209946*0 + 3*94*FLEN/8, x4, x1, x2)

inst_69983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000001ffffff; valaddr_reg:x3; val_offset:209949*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209949*0 + 3*95*FLEN/8, x4, x1, x2)

inst_69984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000003ffffff; valaddr_reg:x3; val_offset:209952*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209952*0 + 3*96*FLEN/8, x4, x1, x2)

inst_69985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000007ffffff; valaddr_reg:x3; val_offset:209955*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209955*0 + 3*97*FLEN/8, x4, x1, x2)

inst_69986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000000fffffff; valaddr_reg:x3; val_offset:209958*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209958*0 + 3*98*FLEN/8, x4, x1, x2)

inst_69987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000001fffffff; valaddr_reg:x3; val_offset:209961*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209961*0 + 3*99*FLEN/8, x4, x1, x2)

inst_69988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000003fffffff; valaddr_reg:x3; val_offset:209964*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209964*0 + 3*100*FLEN/8, x4, x1, x2)

inst_69989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000007fffffff; valaddr_reg:x3; val_offset:209967*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209967*0 + 3*101*FLEN/8, x4, x1, x2)

inst_69990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000000ffffffff; valaddr_reg:x3; val_offset:209970*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209970*0 + 3*102*FLEN/8, x4, x1, x2)

inst_69991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000001ffffffff; valaddr_reg:x3; val_offset:209973*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209973*0 + 3*103*FLEN/8, x4, x1, x2)

inst_69992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000003ffffffff; valaddr_reg:x3; val_offset:209976*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209976*0 + 3*104*FLEN/8, x4, x1, x2)

inst_69993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000007ffffffff; valaddr_reg:x3; val_offset:209979*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209979*0 + 3*105*FLEN/8, x4, x1, x2)

inst_69994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200000fffffffff; valaddr_reg:x3; val_offset:209982*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209982*0 + 3*106*FLEN/8, x4, x1, x2)

inst_69995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200001fffffffff; valaddr_reg:x3; val_offset:209985*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209985*0 + 3*107*FLEN/8, x4, x1, x2)

inst_69996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200003fffffffff; valaddr_reg:x3; val_offset:209988*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209988*0 + 3*108*FLEN/8, x4, x1, x2)

inst_69997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200007fffffffff; valaddr_reg:x3; val_offset:209991*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209991*0 + 3*109*FLEN/8, x4, x1, x2)

inst_69998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20000ffffffffff; valaddr_reg:x3; val_offset:209994*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209994*0 + 3*110*FLEN/8, x4, x1, x2)

inst_69999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20001ffffffffff; valaddr_reg:x3; val_offset:209997*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209997*0 + 3*111*FLEN/8, x4, x1, x2)

inst_70000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20003ffffffffff; valaddr_reg:x3; val_offset:210000*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210000*0 + 3*112*FLEN/8, x4, x1, x2)

inst_70001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20007ffffffffff; valaddr_reg:x3; val_offset:210003*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210003*0 + 3*113*FLEN/8, x4, x1, x2)

inst_70002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2000fffffffffff; valaddr_reg:x3; val_offset:210006*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210006*0 + 3*114*FLEN/8, x4, x1, x2)

inst_70003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2001fffffffffff; valaddr_reg:x3; val_offset:210009*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210009*0 + 3*115*FLEN/8, x4, x1, x2)

inst_70004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2003fffffffffff; valaddr_reg:x3; val_offset:210012*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210012*0 + 3*116*FLEN/8, x4, x1, x2)

inst_70005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x2007fffffffffff; valaddr_reg:x3; val_offset:210015*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210015*0 + 3*117*FLEN/8, x4, x1, x2)

inst_70006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x200ffffffffffff; valaddr_reg:x3; val_offset:210018*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210018*0 + 3*118*FLEN/8, x4, x1, x2)

inst_70007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x201ffffffffffff; valaddr_reg:x3; val_offset:210021*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210021*0 + 3*119*FLEN/8, x4, x1, x2)

inst_70008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x203ffffffffffff; valaddr_reg:x3; val_offset:210024*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210024*0 + 3*120*FLEN/8, x4, x1, x2)

inst_70009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x207ffffffffffff; valaddr_reg:x3; val_offset:210027*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210027*0 + 3*121*FLEN/8, x4, x1, x2)

inst_70010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x208000000000000; valaddr_reg:x3; val_offset:210030*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210030*0 + 3*122*FLEN/8, x4, x1, x2)

inst_70011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20c000000000000; valaddr_reg:x3; val_offset:210033*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210033*0 + 3*123*FLEN/8, x4, x1, x2)

inst_70012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20e000000000000; valaddr_reg:x3; val_offset:210036*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210036*0 + 3*124*FLEN/8, x4, x1, x2)

inst_70013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20f000000000000; valaddr_reg:x3; val_offset:210039*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210039*0 + 3*125*FLEN/8, x4, x1, x2)

inst_70014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20f800000000000; valaddr_reg:x3; val_offset:210042*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210042*0 + 3*126*FLEN/8, x4, x1, x2)

inst_70015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fc00000000000; valaddr_reg:x3; val_offset:210045*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210045*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_70016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fe00000000000; valaddr_reg:x3; val_offset:210048*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210048*0 + 3*128*FLEN/8, x4, x1, x2)

inst_70017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ff00000000000; valaddr_reg:x3; val_offset:210051*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210051*0 + 3*129*FLEN/8, x4, x1, x2)

inst_70018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ff80000000000; valaddr_reg:x3; val_offset:210054*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210054*0 + 3*130*FLEN/8, x4, x1, x2)

inst_70019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffc0000000000; valaddr_reg:x3; val_offset:210057*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210057*0 + 3*131*FLEN/8, x4, x1, x2)

inst_70020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffe0000000000; valaddr_reg:x3; val_offset:210060*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210060*0 + 3*132*FLEN/8, x4, x1, x2)

inst_70021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fff0000000000; valaddr_reg:x3; val_offset:210063*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210063*0 + 3*133*FLEN/8, x4, x1, x2)

inst_70022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fff8000000000; valaddr_reg:x3; val_offset:210066*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210066*0 + 3*134*FLEN/8, x4, x1, x2)

inst_70023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffc000000000; valaddr_reg:x3; val_offset:210069*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210069*0 + 3*135*FLEN/8, x4, x1, x2)

inst_70024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffe000000000; valaddr_reg:x3; val_offset:210072*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210072*0 + 3*136*FLEN/8, x4, x1, x2)

inst_70025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffff000000000; valaddr_reg:x3; val_offset:210075*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210075*0 + 3*137*FLEN/8, x4, x1, x2)

inst_70026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffff800000000; valaddr_reg:x3; val_offset:210078*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210078*0 + 3*138*FLEN/8, x4, x1, x2)

inst_70027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffc00000000; valaddr_reg:x3; val_offset:210081*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210081*0 + 3*139*FLEN/8, x4, x1, x2)

inst_70028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffe00000000; valaddr_reg:x3; val_offset:210084*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210084*0 + 3*140*FLEN/8, x4, x1, x2)

inst_70029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffff00000000; valaddr_reg:x3; val_offset:210087*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210087*0 + 3*141*FLEN/8, x4, x1, x2)

inst_70030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffff80000000; valaddr_reg:x3; val_offset:210090*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210090*0 + 3*142*FLEN/8, x4, x1, x2)

inst_70031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffc0000000; valaddr_reg:x3; val_offset:210093*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210093*0 + 3*143*FLEN/8, x4, x1, x2)

inst_70032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffe0000000; valaddr_reg:x3; val_offset:210096*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210096*0 + 3*144*FLEN/8, x4, x1, x2)

inst_70033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffff0000000; valaddr_reg:x3; val_offset:210099*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210099*0 + 3*145*FLEN/8, x4, x1, x2)

inst_70034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffff8000000; valaddr_reg:x3; val_offset:210102*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210102*0 + 3*146*FLEN/8, x4, x1, x2)

inst_70035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffc000000; valaddr_reg:x3; val_offset:210105*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210105*0 + 3*147*FLEN/8, x4, x1, x2)

inst_70036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffe000000; valaddr_reg:x3; val_offset:210108*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210108*0 + 3*148*FLEN/8, x4, x1, x2)

inst_70037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffff000000; valaddr_reg:x3; val_offset:210111*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210111*0 + 3*149*FLEN/8, x4, x1, x2)

inst_70038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffff800000; valaddr_reg:x3; val_offset:210114*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210114*0 + 3*150*FLEN/8, x4, x1, x2)

inst_70039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffc00000; valaddr_reg:x3; val_offset:210117*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210117*0 + 3*151*FLEN/8, x4, x1, x2)

inst_70040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffe00000; valaddr_reg:x3; val_offset:210120*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210120*0 + 3*152*FLEN/8, x4, x1, x2)

inst_70041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffff00000; valaddr_reg:x3; val_offset:210123*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210123*0 + 3*153*FLEN/8, x4, x1, x2)

inst_70042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffff80000; valaddr_reg:x3; val_offset:210126*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210126*0 + 3*154*FLEN/8, x4, x1, x2)

inst_70043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffc0000; valaddr_reg:x3; val_offset:210129*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210129*0 + 3*155*FLEN/8, x4, x1, x2)

inst_70044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffe0000; valaddr_reg:x3; val_offset:210132*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210132*0 + 3*156*FLEN/8, x4, x1, x2)

inst_70045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffff0000; valaddr_reg:x3; val_offset:210135*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210135*0 + 3*157*FLEN/8, x4, x1, x2)

inst_70046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffff8000; valaddr_reg:x3; val_offset:210138*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210138*0 + 3*158*FLEN/8, x4, x1, x2)

inst_70047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffffc000; valaddr_reg:x3; val_offset:210141*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210141*0 + 3*159*FLEN/8, x4, x1, x2)

inst_70048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffffe000; valaddr_reg:x3; val_offset:210144*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210144*0 + 3*160*FLEN/8, x4, x1, x2)

inst_70049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffff000; valaddr_reg:x3; val_offset:210147*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210147*0 + 3*161*FLEN/8, x4, x1, x2)

inst_70050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffff800; valaddr_reg:x3; val_offset:210150*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210150*0 + 3*162*FLEN/8, x4, x1, x2)

inst_70051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffffc00; valaddr_reg:x3; val_offset:210153*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210153*0 + 3*163*FLEN/8, x4, x1, x2)

inst_70052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffffe00; valaddr_reg:x3; val_offset:210156*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210156*0 + 3*164*FLEN/8, x4, x1, x2)

inst_70053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffffff00; valaddr_reg:x3; val_offset:210159*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210159*0 + 3*165*FLEN/8, x4, x1, x2)

inst_70054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffffff80; valaddr_reg:x3; val_offset:210162*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210162*0 + 3*166*FLEN/8, x4, x1, x2)

inst_70055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffffffc0; valaddr_reg:x3; val_offset:210165*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210165*0 + 3*167*FLEN/8, x4, x1, x2)

inst_70056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffffffe0; valaddr_reg:x3; val_offset:210168*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210168*0 + 3*168*FLEN/8, x4, x1, x2)

inst_70057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffffff0; valaddr_reg:x3; val_offset:210171*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210171*0 + 3*169*FLEN/8, x4, x1, x2)

inst_70058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffffff8; valaddr_reg:x3; val_offset:210174*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210174*0 + 3*170*FLEN/8, x4, x1, x2)

inst_70059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffffffc; valaddr_reg:x3; val_offset:210177*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210177*0 + 3*171*FLEN/8, x4, x1, x2)

inst_70060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20ffffffffffffe; valaddr_reg:x3; val_offset:210180*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210180*0 + 3*172*FLEN/8, x4, x1, x2)

inst_70061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b5af5316f511 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5b5af5316f511; op2val:0x0;
op3val:0x20fffffffffffff; valaddr_reg:x3; val_offset:210183*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210183*0 + 3*173*FLEN/8, x4, x1, x2)

inst_70062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:210186*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210186*0 + 3*174*FLEN/8, x4, x1, x2)

inst_70063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:210189*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210189*0 + 3*175*FLEN/8, x4, x1, x2)

inst_70064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:210192*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210192*0 + 3*176*FLEN/8, x4, x1, x2)

inst_70065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:210195*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210195*0 + 3*177*FLEN/8, x4, x1, x2)

inst_70066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:210198*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210198*0 + 3*178*FLEN/8, x4, x1, x2)

inst_70067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:210201*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210201*0 + 3*179*FLEN/8, x4, x1, x2)

inst_70068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:210204*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210204*0 + 3*180*FLEN/8, x4, x1, x2)

inst_70069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:210207*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210207*0 + 3*181*FLEN/8, x4, x1, x2)

inst_70070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:210210*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210210*0 + 3*182*FLEN/8, x4, x1, x2)

inst_70071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:210213*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210213*0 + 3*183*FLEN/8, x4, x1, x2)

inst_70072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:210216*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210216*0 + 3*184*FLEN/8, x4, x1, x2)

inst_70073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:210219*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210219*0 + 3*185*FLEN/8, x4, x1, x2)

inst_70074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:210222*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210222*0 + 3*186*FLEN/8, x4, x1, x2)

inst_70075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:210225*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210225*0 + 3*187*FLEN/8, x4, x1, x2)

inst_70076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:210228*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210228*0 + 3*188*FLEN/8, x4, x1, x2)

inst_70077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:210231*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210231*0 + 3*189*FLEN/8, x4, x1, x2)

inst_70078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:210234*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210234*0 + 3*190*FLEN/8, x4, x1, x2)

inst_70079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:210237*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210237*0 + 3*191*FLEN/8, x4, x1, x2)

inst_70080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:210240*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210240*0 + 3*192*FLEN/8, x4, x1, x2)

inst_70081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:210243*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210243*0 + 3*193*FLEN/8, x4, x1, x2)

inst_70082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:210246*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210246*0 + 3*194*FLEN/8, x4, x1, x2)

inst_70083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:210249*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210249*0 + 3*195*FLEN/8, x4, x1, x2)

inst_70084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000000000000; valaddr_reg:x3; val_offset:210252*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210252*0 + 3*196*FLEN/8, x4, x1, x2)

inst_70085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000000000001; valaddr_reg:x3; val_offset:210255*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210255*0 + 3*197*FLEN/8, x4, x1, x2)

inst_70086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000000000003; valaddr_reg:x3; val_offset:210258*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210258*0 + 3*198*FLEN/8, x4, x1, x2)

inst_70087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000000000007; valaddr_reg:x3; val_offset:210261*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210261*0 + 3*199*FLEN/8, x4, x1, x2)

inst_70088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000000000000f; valaddr_reg:x3; val_offset:210264*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210264*0 + 3*200*FLEN/8, x4, x1, x2)

inst_70089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000000000001f; valaddr_reg:x3; val_offset:210267*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210267*0 + 3*201*FLEN/8, x4, x1, x2)

inst_70090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000000000003f; valaddr_reg:x3; val_offset:210270*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210270*0 + 3*202*FLEN/8, x4, x1, x2)

inst_70091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000000000007f; valaddr_reg:x3; val_offset:210273*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210273*0 + 3*203*FLEN/8, x4, x1, x2)

inst_70092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400000000000ff; valaddr_reg:x3; val_offset:210276*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210276*0 + 3*204*FLEN/8, x4, x1, x2)

inst_70093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400000000001ff; valaddr_reg:x3; val_offset:210279*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210279*0 + 3*205*FLEN/8, x4, x1, x2)

inst_70094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400000000003ff; valaddr_reg:x3; val_offset:210282*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210282*0 + 3*206*FLEN/8, x4, x1, x2)

inst_70095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400000000007ff; valaddr_reg:x3; val_offset:210285*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210285*0 + 3*207*FLEN/8, x4, x1, x2)

inst_70096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000000000fff; valaddr_reg:x3; val_offset:210288*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210288*0 + 3*208*FLEN/8, x4, x1, x2)

inst_70097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000000001fff; valaddr_reg:x3; val_offset:210291*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210291*0 + 3*209*FLEN/8, x4, x1, x2)

inst_70098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000000003fff; valaddr_reg:x3; val_offset:210294*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210294*0 + 3*210*FLEN/8, x4, x1, x2)

inst_70099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000000007fff; valaddr_reg:x3; val_offset:210297*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210297*0 + 3*211*FLEN/8, x4, x1, x2)

inst_70100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000000000ffff; valaddr_reg:x3; val_offset:210300*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210300*0 + 3*212*FLEN/8, x4, x1, x2)

inst_70101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000000001ffff; valaddr_reg:x3; val_offset:210303*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210303*0 + 3*213*FLEN/8, x4, x1, x2)

inst_70102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000000003ffff; valaddr_reg:x3; val_offset:210306*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210306*0 + 3*214*FLEN/8, x4, x1, x2)

inst_70103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000000007ffff; valaddr_reg:x3; val_offset:210309*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210309*0 + 3*215*FLEN/8, x4, x1, x2)

inst_70104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400000000fffff; valaddr_reg:x3; val_offset:210312*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210312*0 + 3*216*FLEN/8, x4, x1, x2)

inst_70105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400000001fffff; valaddr_reg:x3; val_offset:210315*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210315*0 + 3*217*FLEN/8, x4, x1, x2)

inst_70106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400000003fffff; valaddr_reg:x3; val_offset:210318*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210318*0 + 3*218*FLEN/8, x4, x1, x2)

inst_70107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400000007fffff; valaddr_reg:x3; val_offset:210321*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210321*0 + 3*219*FLEN/8, x4, x1, x2)

inst_70108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000000ffffff; valaddr_reg:x3; val_offset:210324*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210324*0 + 3*220*FLEN/8, x4, x1, x2)

inst_70109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000001ffffff; valaddr_reg:x3; val_offset:210327*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210327*0 + 3*221*FLEN/8, x4, x1, x2)

inst_70110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000003ffffff; valaddr_reg:x3; val_offset:210330*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210330*0 + 3*222*FLEN/8, x4, x1, x2)

inst_70111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000007ffffff; valaddr_reg:x3; val_offset:210333*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210333*0 + 3*223*FLEN/8, x4, x1, x2)

inst_70112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000000fffffff; valaddr_reg:x3; val_offset:210336*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210336*0 + 3*224*FLEN/8, x4, x1, x2)

inst_70113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000001fffffff; valaddr_reg:x3; val_offset:210339*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210339*0 + 3*225*FLEN/8, x4, x1, x2)

inst_70114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000003fffffff; valaddr_reg:x3; val_offset:210342*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210342*0 + 3*226*FLEN/8, x4, x1, x2)

inst_70115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000007fffffff; valaddr_reg:x3; val_offset:210345*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210345*0 + 3*227*FLEN/8, x4, x1, x2)

inst_70116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400000ffffffff; valaddr_reg:x3; val_offset:210348*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210348*0 + 3*228*FLEN/8, x4, x1, x2)

inst_70117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400001ffffffff; valaddr_reg:x3; val_offset:210351*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210351*0 + 3*229*FLEN/8, x4, x1, x2)

inst_70118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400003ffffffff; valaddr_reg:x3; val_offset:210354*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210354*0 + 3*230*FLEN/8, x4, x1, x2)

inst_70119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400007ffffffff; valaddr_reg:x3; val_offset:210357*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210357*0 + 3*231*FLEN/8, x4, x1, x2)

inst_70120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340000fffffffff; valaddr_reg:x3; val_offset:210360*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210360*0 + 3*232*FLEN/8, x4, x1, x2)

inst_70121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340001fffffffff; valaddr_reg:x3; val_offset:210363*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210363*0 + 3*233*FLEN/8, x4, x1, x2)

inst_70122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340003fffffffff; valaddr_reg:x3; val_offset:210366*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210366*0 + 3*234*FLEN/8, x4, x1, x2)

inst_70123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340007fffffffff; valaddr_reg:x3; val_offset:210369*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210369*0 + 3*235*FLEN/8, x4, x1, x2)

inst_70124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834000ffffffffff; valaddr_reg:x3; val_offset:210372*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210372*0 + 3*236*FLEN/8, x4, x1, x2)

inst_70125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834001ffffffffff; valaddr_reg:x3; val_offset:210375*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210375*0 + 3*237*FLEN/8, x4, x1, x2)

inst_70126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834003ffffffffff; valaddr_reg:x3; val_offset:210378*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210378*0 + 3*238*FLEN/8, x4, x1, x2)

inst_70127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834007ffffffffff; valaddr_reg:x3; val_offset:210381*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210381*0 + 3*239*FLEN/8, x4, x1, x2)

inst_70128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83400fffffffffff; valaddr_reg:x3; val_offset:210384*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210384*0 + 3*240*FLEN/8, x4, x1, x2)

inst_70129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83401fffffffffff; valaddr_reg:x3; val_offset:210387*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210387*0 + 3*241*FLEN/8, x4, x1, x2)

inst_70130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83403fffffffffff; valaddr_reg:x3; val_offset:210390*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210390*0 + 3*242*FLEN/8, x4, x1, x2)

inst_70131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x83407fffffffffff; valaddr_reg:x3; val_offset:210393*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210393*0 + 3*243*FLEN/8, x4, x1, x2)

inst_70132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8340ffffffffffff; valaddr_reg:x3; val_offset:210396*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210396*0 + 3*244*FLEN/8, x4, x1, x2)

inst_70133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8341ffffffffffff; valaddr_reg:x3; val_offset:210399*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210399*0 + 3*245*FLEN/8, x4, x1, x2)

inst_70134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8343ffffffffffff; valaddr_reg:x3; val_offset:210402*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210402*0 + 3*246*FLEN/8, x4, x1, x2)

inst_70135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8347ffffffffffff; valaddr_reg:x3; val_offset:210405*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210405*0 + 3*247*FLEN/8, x4, x1, x2)

inst_70136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x8348000000000000; valaddr_reg:x3; val_offset:210408*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210408*0 + 3*248*FLEN/8, x4, x1, x2)

inst_70137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834c000000000000; valaddr_reg:x3; val_offset:210411*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210411*0 + 3*249*FLEN/8, x4, x1, x2)

inst_70138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834e000000000000; valaddr_reg:x3; val_offset:210414*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210414*0 + 3*250*FLEN/8, x4, x1, x2)

inst_70139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834f000000000000; valaddr_reg:x3; val_offset:210417*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210417*0 + 3*251*FLEN/8, x4, x1, x2)

inst_70140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834f800000000000; valaddr_reg:x3; val_offset:210420*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210420*0 + 3*252*FLEN/8, x4, x1, x2)

inst_70141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fc00000000000; valaddr_reg:x3; val_offset:210423*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210423*0 + 3*253*FLEN/8, x4, x1, x2)

inst_70142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fe00000000000; valaddr_reg:x3; val_offset:210426*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210426*0 + 3*254*FLEN/8, x4, x1, x2)

inst_70143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ff00000000000; valaddr_reg:x3; val_offset:210429*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210429*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_70144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ff80000000000; valaddr_reg:x3; val_offset:210432*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210432*0 + 3*256*FLEN/8, x4, x1, x2)

inst_70145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffc0000000000; valaddr_reg:x3; val_offset:210435*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210435*0 + 3*257*FLEN/8, x4, x1, x2)

inst_70146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffe0000000000; valaddr_reg:x3; val_offset:210438*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210438*0 + 3*258*FLEN/8, x4, x1, x2)

inst_70147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fff0000000000; valaddr_reg:x3; val_offset:210441*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210441*0 + 3*259*FLEN/8, x4, x1, x2)

inst_70148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fff8000000000; valaddr_reg:x3; val_offset:210444*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210444*0 + 3*260*FLEN/8, x4, x1, x2)

inst_70149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffc000000000; valaddr_reg:x3; val_offset:210447*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210447*0 + 3*261*FLEN/8, x4, x1, x2)

inst_70150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffe000000000; valaddr_reg:x3; val_offset:210450*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210450*0 + 3*262*FLEN/8, x4, x1, x2)

inst_70151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffff000000000; valaddr_reg:x3; val_offset:210453*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210453*0 + 3*263*FLEN/8, x4, x1, x2)

inst_70152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffff800000000; valaddr_reg:x3; val_offset:210456*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210456*0 + 3*264*FLEN/8, x4, x1, x2)

inst_70153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffc00000000; valaddr_reg:x3; val_offset:210459*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210459*0 + 3*265*FLEN/8, x4, x1, x2)

inst_70154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffe00000000; valaddr_reg:x3; val_offset:210462*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210462*0 + 3*266*FLEN/8, x4, x1, x2)

inst_70155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffff00000000; valaddr_reg:x3; val_offset:210465*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210465*0 + 3*267*FLEN/8, x4, x1, x2)

inst_70156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffff80000000; valaddr_reg:x3; val_offset:210468*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210468*0 + 3*268*FLEN/8, x4, x1, x2)

inst_70157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffc0000000; valaddr_reg:x3; val_offset:210471*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210471*0 + 3*269*FLEN/8, x4, x1, x2)

inst_70158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffe0000000; valaddr_reg:x3; val_offset:210474*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210474*0 + 3*270*FLEN/8, x4, x1, x2)

inst_70159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffff0000000; valaddr_reg:x3; val_offset:210477*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210477*0 + 3*271*FLEN/8, x4, x1, x2)

inst_70160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffff8000000; valaddr_reg:x3; val_offset:210480*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210480*0 + 3*272*FLEN/8, x4, x1, x2)

inst_70161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffc000000; valaddr_reg:x3; val_offset:210483*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210483*0 + 3*273*FLEN/8, x4, x1, x2)

inst_70162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffe000000; valaddr_reg:x3; val_offset:210486*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210486*0 + 3*274*FLEN/8, x4, x1, x2)

inst_70163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffff000000; valaddr_reg:x3; val_offset:210489*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210489*0 + 3*275*FLEN/8, x4, x1, x2)

inst_70164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffff800000; valaddr_reg:x3; val_offset:210492*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210492*0 + 3*276*FLEN/8, x4, x1, x2)

inst_70165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffc00000; valaddr_reg:x3; val_offset:210495*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210495*0 + 3*277*FLEN/8, x4, x1, x2)

inst_70166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffe00000; valaddr_reg:x3; val_offset:210498*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210498*0 + 3*278*FLEN/8, x4, x1, x2)

inst_70167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffff00000; valaddr_reg:x3; val_offset:210501*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210501*0 + 3*279*FLEN/8, x4, x1, x2)

inst_70168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffff80000; valaddr_reg:x3; val_offset:210504*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210504*0 + 3*280*FLEN/8, x4, x1, x2)

inst_70169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffc0000; valaddr_reg:x3; val_offset:210507*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210507*0 + 3*281*FLEN/8, x4, x1, x2)

inst_70170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffe0000; valaddr_reg:x3; val_offset:210510*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210510*0 + 3*282*FLEN/8, x4, x1, x2)

inst_70171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffff0000; valaddr_reg:x3; val_offset:210513*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210513*0 + 3*283*FLEN/8, x4, x1, x2)

inst_70172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffff8000; valaddr_reg:x3; val_offset:210516*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210516*0 + 3*284*FLEN/8, x4, x1, x2)

inst_70173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffffc000; valaddr_reg:x3; val_offset:210519*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210519*0 + 3*285*FLEN/8, x4, x1, x2)

inst_70174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffffe000; valaddr_reg:x3; val_offset:210522*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210522*0 + 3*286*FLEN/8, x4, x1, x2)

inst_70175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffff000; valaddr_reg:x3; val_offset:210525*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210525*0 + 3*287*FLEN/8, x4, x1, x2)

inst_70176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffff800; valaddr_reg:x3; val_offset:210528*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210528*0 + 3*288*FLEN/8, x4, x1, x2)

inst_70177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffffc00; valaddr_reg:x3; val_offset:210531*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210531*0 + 3*289*FLEN/8, x4, x1, x2)

inst_70178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffffe00; valaddr_reg:x3; val_offset:210534*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210534*0 + 3*290*FLEN/8, x4, x1, x2)

inst_70179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffffff00; valaddr_reg:x3; val_offset:210537*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210537*0 + 3*291*FLEN/8, x4, x1, x2)

inst_70180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffffff80; valaddr_reg:x3; val_offset:210540*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210540*0 + 3*292*FLEN/8, x4, x1, x2)

inst_70181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffffffc0; valaddr_reg:x3; val_offset:210543*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210543*0 + 3*293*FLEN/8, x4, x1, x2)

inst_70182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffffffe0; valaddr_reg:x3; val_offset:210546*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210546*0 + 3*294*FLEN/8, x4, x1, x2)

inst_70183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffffff0; valaddr_reg:x3; val_offset:210549*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210549*0 + 3*295*FLEN/8, x4, x1, x2)

inst_70184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffffff8; valaddr_reg:x3; val_offset:210552*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210552*0 + 3*296*FLEN/8, x4, x1, x2)

inst_70185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffffffc; valaddr_reg:x3; val_offset:210555*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210555*0 + 3*297*FLEN/8, x4, x1, x2)

inst_70186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834ffffffffffffe; valaddr_reg:x3; val_offset:210558*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210558*0 + 3*298*FLEN/8, x4, x1, x2)

inst_70187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bcac57ab5ace and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5bcac57ab5ace; op2val:0x8000;
op3val:0x834fffffffffffff; valaddr_reg:x3; val_offset:210561*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210561*0 + 3*299*FLEN/8, x4, x1, x2)

inst_70188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:210564*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210564*0 + 3*300*FLEN/8, x4, x1, x2)

inst_70189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:210567*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210567*0 + 3*301*FLEN/8, x4, x1, x2)

inst_70190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:210570*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210570*0 + 3*302*FLEN/8, x4, x1, x2)

inst_70191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:210573*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210573*0 + 3*303*FLEN/8, x4, x1, x2)

inst_70192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:210576*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210576*0 + 3*304*FLEN/8, x4, x1, x2)

inst_70193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:210579*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210579*0 + 3*305*FLEN/8, x4, x1, x2)

inst_70194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:210582*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210582*0 + 3*306*FLEN/8, x4, x1, x2)

inst_70195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:210585*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210585*0 + 3*307*FLEN/8, x4, x1, x2)

inst_70196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:210588*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210588*0 + 3*308*FLEN/8, x4, x1, x2)

inst_70197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:210591*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210591*0 + 3*309*FLEN/8, x4, x1, x2)

inst_70198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:210594*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210594*0 + 3*310*FLEN/8, x4, x1, x2)

inst_70199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:210597*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210597*0 + 3*311*FLEN/8, x4, x1, x2)

inst_70200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:210600*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210600*0 + 3*312*FLEN/8, x4, x1, x2)

inst_70201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:210603*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210603*0 + 3*313*FLEN/8, x4, x1, x2)

inst_70202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:210606*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210606*0 + 3*314*FLEN/8, x4, x1, x2)

inst_70203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:210609*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210609*0 + 3*315*FLEN/8, x4, x1, x2)

inst_70204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:210612*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210612*0 + 3*316*FLEN/8, x4, x1, x2)

inst_70205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:210615*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210615*0 + 3*317*FLEN/8, x4, x1, x2)

inst_70206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:210618*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210618*0 + 3*318*FLEN/8, x4, x1, x2)

inst_70207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:210621*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210621*0 + 3*319*FLEN/8, x4, x1, x2)

inst_70208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:210624*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210624*0 + 3*320*FLEN/8, x4, x1, x2)

inst_70209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:210627*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210627*0 + 3*321*FLEN/8, x4, x1, x2)

inst_70210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000000000000; valaddr_reg:x3; val_offset:210630*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210630*0 + 3*322*FLEN/8, x4, x1, x2)

inst_70211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000000000001; valaddr_reg:x3; val_offset:210633*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210633*0 + 3*323*FLEN/8, x4, x1, x2)

inst_70212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000000000003; valaddr_reg:x3; val_offset:210636*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210636*0 + 3*324*FLEN/8, x4, x1, x2)

inst_70213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000000000007; valaddr_reg:x3; val_offset:210639*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210639*0 + 3*325*FLEN/8, x4, x1, x2)

inst_70214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000000000000f; valaddr_reg:x3; val_offset:210642*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210642*0 + 3*326*FLEN/8, x4, x1, x2)

inst_70215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000000000001f; valaddr_reg:x3; val_offset:210645*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210645*0 + 3*327*FLEN/8, x4, x1, x2)

inst_70216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000000000003f; valaddr_reg:x3; val_offset:210648*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210648*0 + 3*328*FLEN/8, x4, x1, x2)

inst_70217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000000000007f; valaddr_reg:x3; val_offset:210651*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210651*0 + 3*329*FLEN/8, x4, x1, x2)

inst_70218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500000000000ff; valaddr_reg:x3; val_offset:210654*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210654*0 + 3*330*FLEN/8, x4, x1, x2)

inst_70219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500000000001ff; valaddr_reg:x3; val_offset:210657*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210657*0 + 3*331*FLEN/8, x4, x1, x2)

inst_70220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500000000003ff; valaddr_reg:x3; val_offset:210660*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210660*0 + 3*332*FLEN/8, x4, x1, x2)

inst_70221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500000000007ff; valaddr_reg:x3; val_offset:210663*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210663*0 + 3*333*FLEN/8, x4, x1, x2)

inst_70222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000000000fff; valaddr_reg:x3; val_offset:210666*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210666*0 + 3*334*FLEN/8, x4, x1, x2)

inst_70223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000000001fff; valaddr_reg:x3; val_offset:210669*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210669*0 + 3*335*FLEN/8, x4, x1, x2)

inst_70224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000000003fff; valaddr_reg:x3; val_offset:210672*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210672*0 + 3*336*FLEN/8, x4, x1, x2)

inst_70225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000000007fff; valaddr_reg:x3; val_offset:210675*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210675*0 + 3*337*FLEN/8, x4, x1, x2)

inst_70226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000000000ffff; valaddr_reg:x3; val_offset:210678*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210678*0 + 3*338*FLEN/8, x4, x1, x2)

inst_70227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000000001ffff; valaddr_reg:x3; val_offset:210681*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210681*0 + 3*339*FLEN/8, x4, x1, x2)

inst_70228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000000003ffff; valaddr_reg:x3; val_offset:210684*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210684*0 + 3*340*FLEN/8, x4, x1, x2)

inst_70229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000000007ffff; valaddr_reg:x3; val_offset:210687*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210687*0 + 3*341*FLEN/8, x4, x1, x2)

inst_70230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500000000fffff; valaddr_reg:x3; val_offset:210690*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210690*0 + 3*342*FLEN/8, x4, x1, x2)

inst_70231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500000001fffff; valaddr_reg:x3; val_offset:210693*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210693*0 + 3*343*FLEN/8, x4, x1, x2)

inst_70232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500000003fffff; valaddr_reg:x3; val_offset:210696*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210696*0 + 3*344*FLEN/8, x4, x1, x2)

inst_70233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500000007fffff; valaddr_reg:x3; val_offset:210699*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210699*0 + 3*345*FLEN/8, x4, x1, x2)

inst_70234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000000ffffff; valaddr_reg:x3; val_offset:210702*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210702*0 + 3*346*FLEN/8, x4, x1, x2)

inst_70235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000001ffffff; valaddr_reg:x3; val_offset:210705*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210705*0 + 3*347*FLEN/8, x4, x1, x2)

inst_70236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000003ffffff; valaddr_reg:x3; val_offset:210708*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210708*0 + 3*348*FLEN/8, x4, x1, x2)

inst_70237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000007ffffff; valaddr_reg:x3; val_offset:210711*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210711*0 + 3*349*FLEN/8, x4, x1, x2)

inst_70238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000000fffffff; valaddr_reg:x3; val_offset:210714*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210714*0 + 3*350*FLEN/8, x4, x1, x2)

inst_70239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000001fffffff; valaddr_reg:x3; val_offset:210717*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210717*0 + 3*351*FLEN/8, x4, x1, x2)

inst_70240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000003fffffff; valaddr_reg:x3; val_offset:210720*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210720*0 + 3*352*FLEN/8, x4, x1, x2)

inst_70241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000007fffffff; valaddr_reg:x3; val_offset:210723*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210723*0 + 3*353*FLEN/8, x4, x1, x2)

inst_70242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500000ffffffff; valaddr_reg:x3; val_offset:210726*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210726*0 + 3*354*FLEN/8, x4, x1, x2)

inst_70243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500001ffffffff; valaddr_reg:x3; val_offset:210729*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210729*0 + 3*355*FLEN/8, x4, x1, x2)

inst_70244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500003ffffffff; valaddr_reg:x3; val_offset:210732*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210732*0 + 3*356*FLEN/8, x4, x1, x2)

inst_70245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500007ffffffff; valaddr_reg:x3; val_offset:210735*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210735*0 + 3*357*FLEN/8, x4, x1, x2)

inst_70246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350000fffffffff; valaddr_reg:x3; val_offset:210738*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210738*0 + 3*358*FLEN/8, x4, x1, x2)

inst_70247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350001fffffffff; valaddr_reg:x3; val_offset:210741*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210741*0 + 3*359*FLEN/8, x4, x1, x2)

inst_70248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350003fffffffff; valaddr_reg:x3; val_offset:210744*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210744*0 + 3*360*FLEN/8, x4, x1, x2)

inst_70249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350007fffffffff; valaddr_reg:x3; val_offset:210747*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210747*0 + 3*361*FLEN/8, x4, x1, x2)

inst_70250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835000ffffffffff; valaddr_reg:x3; val_offset:210750*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210750*0 + 3*362*FLEN/8, x4, x1, x2)

inst_70251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835001ffffffffff; valaddr_reg:x3; val_offset:210753*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210753*0 + 3*363*FLEN/8, x4, x1, x2)

inst_70252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835003ffffffffff; valaddr_reg:x3; val_offset:210756*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210756*0 + 3*364*FLEN/8, x4, x1, x2)

inst_70253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835007ffffffffff; valaddr_reg:x3; val_offset:210759*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210759*0 + 3*365*FLEN/8, x4, x1, x2)

inst_70254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83500fffffffffff; valaddr_reg:x3; val_offset:210762*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210762*0 + 3*366*FLEN/8, x4, x1, x2)

inst_70255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83501fffffffffff; valaddr_reg:x3; val_offset:210765*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210765*0 + 3*367*FLEN/8, x4, x1, x2)

inst_70256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83503fffffffffff; valaddr_reg:x3; val_offset:210768*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210768*0 + 3*368*FLEN/8, x4, x1, x2)

inst_70257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x83507fffffffffff; valaddr_reg:x3; val_offset:210771*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210771*0 + 3*369*FLEN/8, x4, x1, x2)

inst_70258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8350ffffffffffff; valaddr_reg:x3; val_offset:210774*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210774*0 + 3*370*FLEN/8, x4, x1, x2)

inst_70259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8351ffffffffffff; valaddr_reg:x3; val_offset:210777*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210777*0 + 3*371*FLEN/8, x4, x1, x2)

inst_70260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8353ffffffffffff; valaddr_reg:x3; val_offset:210780*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210780*0 + 3*372*FLEN/8, x4, x1, x2)

inst_70261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8357ffffffffffff; valaddr_reg:x3; val_offset:210783*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210783*0 + 3*373*FLEN/8, x4, x1, x2)

inst_70262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x8358000000000000; valaddr_reg:x3; val_offset:210786*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210786*0 + 3*374*FLEN/8, x4, x1, x2)

inst_70263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835c000000000000; valaddr_reg:x3; val_offset:210789*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210789*0 + 3*375*FLEN/8, x4, x1, x2)

inst_70264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835e000000000000; valaddr_reg:x3; val_offset:210792*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210792*0 + 3*376*FLEN/8, x4, x1, x2)

inst_70265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835f000000000000; valaddr_reg:x3; val_offset:210795*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210795*0 + 3*377*FLEN/8, x4, x1, x2)

inst_70266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835f800000000000; valaddr_reg:x3; val_offset:210798*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210798*0 + 3*378*FLEN/8, x4, x1, x2)

inst_70267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fc00000000000; valaddr_reg:x3; val_offset:210801*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210801*0 + 3*379*FLEN/8, x4, x1, x2)

inst_70268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fe00000000000; valaddr_reg:x3; val_offset:210804*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210804*0 + 3*380*FLEN/8, x4, x1, x2)

inst_70269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ff00000000000; valaddr_reg:x3; val_offset:210807*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210807*0 + 3*381*FLEN/8, x4, x1, x2)

inst_70270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ff80000000000; valaddr_reg:x3; val_offset:210810*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210810*0 + 3*382*FLEN/8, x4, x1, x2)

inst_70271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffc0000000000; valaddr_reg:x3; val_offset:210813*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210813*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_70272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffe0000000000; valaddr_reg:x3; val_offset:210816*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210816*0 + 3*384*FLEN/8, x4, x1, x2)

inst_70273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fff0000000000; valaddr_reg:x3; val_offset:210819*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210819*0 + 3*385*FLEN/8, x4, x1, x2)

inst_70274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fff8000000000; valaddr_reg:x3; val_offset:210822*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210822*0 + 3*386*FLEN/8, x4, x1, x2)

inst_70275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffc000000000; valaddr_reg:x3; val_offset:210825*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210825*0 + 3*387*FLEN/8, x4, x1, x2)

inst_70276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffe000000000; valaddr_reg:x3; val_offset:210828*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210828*0 + 3*388*FLEN/8, x4, x1, x2)

inst_70277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffff000000000; valaddr_reg:x3; val_offset:210831*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210831*0 + 3*389*FLEN/8, x4, x1, x2)

inst_70278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffff800000000; valaddr_reg:x3; val_offset:210834*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210834*0 + 3*390*FLEN/8, x4, x1, x2)

inst_70279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffc00000000; valaddr_reg:x3; val_offset:210837*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210837*0 + 3*391*FLEN/8, x4, x1, x2)

inst_70280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffe00000000; valaddr_reg:x3; val_offset:210840*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210840*0 + 3*392*FLEN/8, x4, x1, x2)

inst_70281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffff00000000; valaddr_reg:x3; val_offset:210843*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210843*0 + 3*393*FLEN/8, x4, x1, x2)

inst_70282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffff80000000; valaddr_reg:x3; val_offset:210846*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210846*0 + 3*394*FLEN/8, x4, x1, x2)

inst_70283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffc0000000; valaddr_reg:x3; val_offset:210849*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210849*0 + 3*395*FLEN/8, x4, x1, x2)

inst_70284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffe0000000; valaddr_reg:x3; val_offset:210852*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210852*0 + 3*396*FLEN/8, x4, x1, x2)

inst_70285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffff0000000; valaddr_reg:x3; val_offset:210855*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210855*0 + 3*397*FLEN/8, x4, x1, x2)

inst_70286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffff8000000; valaddr_reg:x3; val_offset:210858*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210858*0 + 3*398*FLEN/8, x4, x1, x2)

inst_70287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffc000000; valaddr_reg:x3; val_offset:210861*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210861*0 + 3*399*FLEN/8, x4, x1, x2)

inst_70288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffe000000; valaddr_reg:x3; val_offset:210864*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210864*0 + 3*400*FLEN/8, x4, x1, x2)

inst_70289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffff000000; valaddr_reg:x3; val_offset:210867*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210867*0 + 3*401*FLEN/8, x4, x1, x2)

inst_70290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffff800000; valaddr_reg:x3; val_offset:210870*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210870*0 + 3*402*FLEN/8, x4, x1, x2)

inst_70291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffc00000; valaddr_reg:x3; val_offset:210873*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210873*0 + 3*403*FLEN/8, x4, x1, x2)

inst_70292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffe00000; valaddr_reg:x3; val_offset:210876*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210876*0 + 3*404*FLEN/8, x4, x1, x2)

inst_70293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffff00000; valaddr_reg:x3; val_offset:210879*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210879*0 + 3*405*FLEN/8, x4, x1, x2)

inst_70294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffff80000; valaddr_reg:x3; val_offset:210882*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210882*0 + 3*406*FLEN/8, x4, x1, x2)

inst_70295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffc0000; valaddr_reg:x3; val_offset:210885*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210885*0 + 3*407*FLEN/8, x4, x1, x2)

inst_70296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffe0000; valaddr_reg:x3; val_offset:210888*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210888*0 + 3*408*FLEN/8, x4, x1, x2)

inst_70297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffff0000; valaddr_reg:x3; val_offset:210891*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210891*0 + 3*409*FLEN/8, x4, x1, x2)

inst_70298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffff8000; valaddr_reg:x3; val_offset:210894*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210894*0 + 3*410*FLEN/8, x4, x1, x2)

inst_70299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffffc000; valaddr_reg:x3; val_offset:210897*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210897*0 + 3*411*FLEN/8, x4, x1, x2)

inst_70300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffffe000; valaddr_reg:x3; val_offset:210900*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210900*0 + 3*412*FLEN/8, x4, x1, x2)

inst_70301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffff000; valaddr_reg:x3; val_offset:210903*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210903*0 + 3*413*FLEN/8, x4, x1, x2)

inst_70302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffff800; valaddr_reg:x3; val_offset:210906*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210906*0 + 3*414*FLEN/8, x4, x1, x2)

inst_70303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffffc00; valaddr_reg:x3; val_offset:210909*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210909*0 + 3*415*FLEN/8, x4, x1, x2)

inst_70304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffffe00; valaddr_reg:x3; val_offset:210912*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210912*0 + 3*416*FLEN/8, x4, x1, x2)

inst_70305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffffff00; valaddr_reg:x3; val_offset:210915*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210915*0 + 3*417*FLEN/8, x4, x1, x2)

inst_70306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffffff80; valaddr_reg:x3; val_offset:210918*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210918*0 + 3*418*FLEN/8, x4, x1, x2)

inst_70307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffffffc0; valaddr_reg:x3; val_offset:210921*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210921*0 + 3*419*FLEN/8, x4, x1, x2)

inst_70308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffffffe0; valaddr_reg:x3; val_offset:210924*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210924*0 + 3*420*FLEN/8, x4, x1, x2)

inst_70309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffffff0; valaddr_reg:x3; val_offset:210927*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210927*0 + 3*421*FLEN/8, x4, x1, x2)

inst_70310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffffff8; valaddr_reg:x3; val_offset:210930*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210930*0 + 3*422*FLEN/8, x4, x1, x2)

inst_70311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffffffc; valaddr_reg:x3; val_offset:210933*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210933*0 + 3*423*FLEN/8, x4, x1, x2)

inst_70312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835ffffffffffffe; valaddr_reg:x3; val_offset:210936*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210936*0 + 3*424*FLEN/8, x4, x1, x2)

inst_70313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c2f3871d0414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c2f3871d0414; op2val:0x8000;
op3val:0x835fffffffffffff; valaddr_reg:x3; val_offset:210939*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210939*0 + 3*425*FLEN/8, x4, x1, x2)

inst_70314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:210942*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210942*0 + 3*426*FLEN/8, x4, x1, x2)

inst_70315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:210945*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210945*0 + 3*427*FLEN/8, x4, x1, x2)

inst_70316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:210948*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210948*0 + 3*428*FLEN/8, x4, x1, x2)

inst_70317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:210951*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210951*0 + 3*429*FLEN/8, x4, x1, x2)

inst_70318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:210954*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210954*0 + 3*430*FLEN/8, x4, x1, x2)

inst_70319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:210957*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210957*0 + 3*431*FLEN/8, x4, x1, x2)

inst_70320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:210960*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210960*0 + 3*432*FLEN/8, x4, x1, x2)

inst_70321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:210963*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210963*0 + 3*433*FLEN/8, x4, x1, x2)

inst_70322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:210966*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210966*0 + 3*434*FLEN/8, x4, x1, x2)

inst_70323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:210969*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210969*0 + 3*435*FLEN/8, x4, x1, x2)

inst_70324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:210972*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210972*0 + 3*436*FLEN/8, x4, x1, x2)

inst_70325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:210975*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210975*0 + 3*437*FLEN/8, x4, x1, x2)

inst_70326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:210978*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210978*0 + 3*438*FLEN/8, x4, x1, x2)

inst_70327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:210981*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210981*0 + 3*439*FLEN/8, x4, x1, x2)

inst_70328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:210984*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210984*0 + 3*440*FLEN/8, x4, x1, x2)

inst_70329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:210987*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210987*0 + 3*441*FLEN/8, x4, x1, x2)

inst_70330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:210990*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210990*0 + 3*442*FLEN/8, x4, x1, x2)

inst_70331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:210993*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210993*0 + 3*443*FLEN/8, x4, x1, x2)

inst_70332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:210996*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210996*0 + 3*444*FLEN/8, x4, x1, x2)

inst_70333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:210999*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210999*0 + 3*445*FLEN/8, x4, x1, x2)

inst_70334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:211002*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211002*0 + 3*446*FLEN/8, x4, x1, x2)

inst_70335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:211005*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211005*0 + 3*447*FLEN/8, x4, x1, x2)

inst_70336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000000000000; valaddr_reg:x3; val_offset:211008*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211008*0 + 3*448*FLEN/8, x4, x1, x2)

inst_70337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000000000001; valaddr_reg:x3; val_offset:211011*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211011*0 + 3*449*FLEN/8, x4, x1, x2)

inst_70338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000000000003; valaddr_reg:x3; val_offset:211014*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211014*0 + 3*450*FLEN/8, x4, x1, x2)

inst_70339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000000000007; valaddr_reg:x3; val_offset:211017*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211017*0 + 3*451*FLEN/8, x4, x1, x2)

inst_70340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000000000000f; valaddr_reg:x3; val_offset:211020*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211020*0 + 3*452*FLEN/8, x4, x1, x2)

inst_70341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000000000001f; valaddr_reg:x3; val_offset:211023*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211023*0 + 3*453*FLEN/8, x4, x1, x2)

inst_70342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000000000003f; valaddr_reg:x3; val_offset:211026*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211026*0 + 3*454*FLEN/8, x4, x1, x2)

inst_70343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000000000007f; valaddr_reg:x3; val_offset:211029*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211029*0 + 3*455*FLEN/8, x4, x1, x2)

inst_70344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00000000000ff; valaddr_reg:x3; val_offset:211032*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211032*0 + 3*456*FLEN/8, x4, x1, x2)

inst_70345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00000000001ff; valaddr_reg:x3; val_offset:211035*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211035*0 + 3*457*FLEN/8, x4, x1, x2)

inst_70346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00000000003ff; valaddr_reg:x3; val_offset:211038*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211038*0 + 3*458*FLEN/8, x4, x1, x2)

inst_70347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00000000007ff; valaddr_reg:x3; val_offset:211041*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211041*0 + 3*459*FLEN/8, x4, x1, x2)

inst_70348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000000000fff; valaddr_reg:x3; val_offset:211044*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211044*0 + 3*460*FLEN/8, x4, x1, x2)

inst_70349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000000001fff; valaddr_reg:x3; val_offset:211047*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211047*0 + 3*461*FLEN/8, x4, x1, x2)

inst_70350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000000003fff; valaddr_reg:x3; val_offset:211050*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211050*0 + 3*462*FLEN/8, x4, x1, x2)

inst_70351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000000007fff; valaddr_reg:x3; val_offset:211053*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211053*0 + 3*463*FLEN/8, x4, x1, x2)

inst_70352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000000000ffff; valaddr_reg:x3; val_offset:211056*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211056*0 + 3*464*FLEN/8, x4, x1, x2)

inst_70353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000000001ffff; valaddr_reg:x3; val_offset:211059*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211059*0 + 3*465*FLEN/8, x4, x1, x2)

inst_70354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000000003ffff; valaddr_reg:x3; val_offset:211062*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211062*0 + 3*466*FLEN/8, x4, x1, x2)

inst_70355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000000007ffff; valaddr_reg:x3; val_offset:211065*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211065*0 + 3*467*FLEN/8, x4, x1, x2)

inst_70356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00000000fffff; valaddr_reg:x3; val_offset:211068*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211068*0 + 3*468*FLEN/8, x4, x1, x2)

inst_70357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00000001fffff; valaddr_reg:x3; val_offset:211071*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211071*0 + 3*469*FLEN/8, x4, x1, x2)

inst_70358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00000003fffff; valaddr_reg:x3; val_offset:211074*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211074*0 + 3*470*FLEN/8, x4, x1, x2)

inst_70359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00000007fffff; valaddr_reg:x3; val_offset:211077*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211077*0 + 3*471*FLEN/8, x4, x1, x2)

inst_70360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000000ffffff; valaddr_reg:x3; val_offset:211080*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211080*0 + 3*472*FLEN/8, x4, x1, x2)

inst_70361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000001ffffff; valaddr_reg:x3; val_offset:211083*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211083*0 + 3*473*FLEN/8, x4, x1, x2)

inst_70362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000003ffffff; valaddr_reg:x3; val_offset:211086*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211086*0 + 3*474*FLEN/8, x4, x1, x2)

inst_70363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000007ffffff; valaddr_reg:x3; val_offset:211089*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211089*0 + 3*475*FLEN/8, x4, x1, x2)

inst_70364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000000fffffff; valaddr_reg:x3; val_offset:211092*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211092*0 + 3*476*FLEN/8, x4, x1, x2)

inst_70365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000001fffffff; valaddr_reg:x3; val_offset:211095*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211095*0 + 3*477*FLEN/8, x4, x1, x2)

inst_70366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000003fffffff; valaddr_reg:x3; val_offset:211098*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211098*0 + 3*478*FLEN/8, x4, x1, x2)

inst_70367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000007fffffff; valaddr_reg:x3; val_offset:211101*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211101*0 + 3*479*FLEN/8, x4, x1, x2)

inst_70368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00000ffffffff; valaddr_reg:x3; val_offset:211104*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211104*0 + 3*480*FLEN/8, x4, x1, x2)

inst_70369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00001ffffffff; valaddr_reg:x3; val_offset:211107*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211107*0 + 3*481*FLEN/8, x4, x1, x2)

inst_70370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00003ffffffff; valaddr_reg:x3; val_offset:211110*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211110*0 + 3*482*FLEN/8, x4, x1, x2)

inst_70371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00007ffffffff; valaddr_reg:x3; val_offset:211113*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211113*0 + 3*483*FLEN/8, x4, x1, x2)

inst_70372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0000fffffffff; valaddr_reg:x3; val_offset:211116*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211116*0 + 3*484*FLEN/8, x4, x1, x2)

inst_70373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0001fffffffff; valaddr_reg:x3; val_offset:211119*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211119*0 + 3*485*FLEN/8, x4, x1, x2)

inst_70374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0003fffffffff; valaddr_reg:x3; val_offset:211122*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211122*0 + 3*486*FLEN/8, x4, x1, x2)

inst_70375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0007fffffffff; valaddr_reg:x3; val_offset:211125*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211125*0 + 3*487*FLEN/8, x4, x1, x2)

inst_70376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a000ffffffffff; valaddr_reg:x3; val_offset:211128*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211128*0 + 3*488*FLEN/8, x4, x1, x2)

inst_70377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a001ffffffffff; valaddr_reg:x3; val_offset:211131*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211131*0 + 3*489*FLEN/8, x4, x1, x2)

inst_70378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a003ffffffffff; valaddr_reg:x3; val_offset:211134*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211134*0 + 3*490*FLEN/8, x4, x1, x2)

inst_70379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a007ffffffffff; valaddr_reg:x3; val_offset:211137*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211137*0 + 3*491*FLEN/8, x4, x1, x2)

inst_70380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a00fffffffffff; valaddr_reg:x3; val_offset:211140*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211140*0 + 3*492*FLEN/8, x4, x1, x2)

inst_70381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a01fffffffffff; valaddr_reg:x3; val_offset:211143*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211143*0 + 3*493*FLEN/8, x4, x1, x2)

inst_70382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a03fffffffffff; valaddr_reg:x3; val_offset:211146*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211146*0 + 3*494*FLEN/8, x4, x1, x2)

inst_70383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a07fffffffffff; valaddr_reg:x3; val_offset:211149*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211149*0 + 3*495*FLEN/8, x4, x1, x2)

inst_70384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a0ffffffffffff; valaddr_reg:x3; val_offset:211152*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211152*0 + 3*496*FLEN/8, x4, x1, x2)

inst_70385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a1ffffffffffff; valaddr_reg:x3; val_offset:211155*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211155*0 + 3*497*FLEN/8, x4, x1, x2)

inst_70386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a3ffffffffffff; valaddr_reg:x3; val_offset:211158*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211158*0 + 3*498*FLEN/8, x4, x1, x2)

inst_70387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a7ffffffffffff; valaddr_reg:x3; val_offset:211161*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211161*0 + 3*499*FLEN/8, x4, x1, x2)

inst_70388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3a8000000000000; valaddr_reg:x3; val_offset:211164*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211164*0 + 3*500*FLEN/8, x4, x1, x2)

inst_70389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3ac000000000000; valaddr_reg:x3; val_offset:211167*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211167*0 + 3*501*FLEN/8, x4, x1, x2)

inst_70390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3ae000000000000; valaddr_reg:x3; val_offset:211170*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211170*0 + 3*502*FLEN/8, x4, x1, x2)

inst_70391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3af000000000000; valaddr_reg:x3; val_offset:211173*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211173*0 + 3*503*FLEN/8, x4, x1, x2)

inst_70392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3af800000000000; valaddr_reg:x3; val_offset:211176*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211176*0 + 3*504*FLEN/8, x4, x1, x2)

inst_70393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afc00000000000; valaddr_reg:x3; val_offset:211179*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211179*0 + 3*505*FLEN/8, x4, x1, x2)

inst_70394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afe00000000000; valaddr_reg:x3; val_offset:211182*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211182*0 + 3*506*FLEN/8, x4, x1, x2)

inst_70395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3aff00000000000; valaddr_reg:x3; val_offset:211185*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211185*0 + 3*507*FLEN/8, x4, x1, x2)

inst_70396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3aff80000000000; valaddr_reg:x3; val_offset:211188*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211188*0 + 3*508*FLEN/8, x4, x1, x2)

inst_70397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affc0000000000; valaddr_reg:x3; val_offset:211191*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211191*0 + 3*509*FLEN/8, x4, x1, x2)

inst_70398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affe0000000000; valaddr_reg:x3; val_offset:211194*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211194*0 + 3*510*FLEN/8, x4, x1, x2)

inst_70399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afff0000000000; valaddr_reg:x3; val_offset:211197*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211197*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_70400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afff8000000000; valaddr_reg:x3; val_offset:211200*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211200*0 + 3*512*FLEN/8, x4, x1, x2)

inst_70401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffc000000000; valaddr_reg:x3; val_offset:211203*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211203*0 + 3*513*FLEN/8, x4, x1, x2)

inst_70402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffe000000000; valaddr_reg:x3; val_offset:211206*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211206*0 + 3*514*FLEN/8, x4, x1, x2)

inst_70403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affff000000000; valaddr_reg:x3; val_offset:211209*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211209*0 + 3*515*FLEN/8, x4, x1, x2)

inst_70404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affff800000000; valaddr_reg:x3; val_offset:211212*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211212*0 + 3*516*FLEN/8, x4, x1, x2)

inst_70405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffc00000000; valaddr_reg:x3; val_offset:211215*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211215*0 + 3*517*FLEN/8, x4, x1, x2)

inst_70406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffe00000000; valaddr_reg:x3; val_offset:211218*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211218*0 + 3*518*FLEN/8, x4, x1, x2)

inst_70407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffff00000000; valaddr_reg:x3; val_offset:211221*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211221*0 + 3*519*FLEN/8, x4, x1, x2)

inst_70408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffff80000000; valaddr_reg:x3; val_offset:211224*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211224*0 + 3*520*FLEN/8, x4, x1, x2)

inst_70409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffc0000000; valaddr_reg:x3; val_offset:211227*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211227*0 + 3*521*FLEN/8, x4, x1, x2)

inst_70410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffe0000000; valaddr_reg:x3; val_offset:211230*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211230*0 + 3*522*FLEN/8, x4, x1, x2)

inst_70411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffff0000000; valaddr_reg:x3; val_offset:211233*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211233*0 + 3*523*FLEN/8, x4, x1, x2)

inst_70412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffff8000000; valaddr_reg:x3; val_offset:211236*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211236*0 + 3*524*FLEN/8, x4, x1, x2)

inst_70413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffc000000; valaddr_reg:x3; val_offset:211239*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211239*0 + 3*525*FLEN/8, x4, x1, x2)

inst_70414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffe000000; valaddr_reg:x3; val_offset:211242*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211242*0 + 3*526*FLEN/8, x4, x1, x2)

inst_70415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffff000000; valaddr_reg:x3; val_offset:211245*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211245*0 + 3*527*FLEN/8, x4, x1, x2)

inst_70416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffff800000; valaddr_reg:x3; val_offset:211248*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211248*0 + 3*528*FLEN/8, x4, x1, x2)

inst_70417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffc00000; valaddr_reg:x3; val_offset:211251*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211251*0 + 3*529*FLEN/8, x4, x1, x2)

inst_70418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffe00000; valaddr_reg:x3; val_offset:211254*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211254*0 + 3*530*FLEN/8, x4, x1, x2)

inst_70419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffff00000; valaddr_reg:x3; val_offset:211257*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211257*0 + 3*531*FLEN/8, x4, x1, x2)

inst_70420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffff80000; valaddr_reg:x3; val_offset:211260*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211260*0 + 3*532*FLEN/8, x4, x1, x2)

inst_70421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffc0000; valaddr_reg:x3; val_offset:211263*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211263*0 + 3*533*FLEN/8, x4, x1, x2)

inst_70422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffe0000; valaddr_reg:x3; val_offset:211266*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211266*0 + 3*534*FLEN/8, x4, x1, x2)

inst_70423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffff0000; valaddr_reg:x3; val_offset:211269*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211269*0 + 3*535*FLEN/8, x4, x1, x2)

inst_70424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffff8000; valaddr_reg:x3; val_offset:211272*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211272*0 + 3*536*FLEN/8, x4, x1, x2)

inst_70425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffffc000; valaddr_reg:x3; val_offset:211275*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211275*0 + 3*537*FLEN/8, x4, x1, x2)

inst_70426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffffe000; valaddr_reg:x3; val_offset:211278*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211278*0 + 3*538*FLEN/8, x4, x1, x2)

inst_70427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffff000; valaddr_reg:x3; val_offset:211281*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211281*0 + 3*539*FLEN/8, x4, x1, x2)

inst_70428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffff800; valaddr_reg:x3; val_offset:211284*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211284*0 + 3*540*FLEN/8, x4, x1, x2)

inst_70429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffffc00; valaddr_reg:x3; val_offset:211287*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211287*0 + 3*541*FLEN/8, x4, x1, x2)

inst_70430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffffe00; valaddr_reg:x3; val_offset:211290*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211290*0 + 3*542*FLEN/8, x4, x1, x2)

inst_70431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffffff00; valaddr_reg:x3; val_offset:211293*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211293*0 + 3*543*FLEN/8, x4, x1, x2)

inst_70432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffffff80; valaddr_reg:x3; val_offset:211296*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211296*0 + 3*544*FLEN/8, x4, x1, x2)

inst_70433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffffffc0; valaddr_reg:x3; val_offset:211299*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211299*0 + 3*545*FLEN/8, x4, x1, x2)

inst_70434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffffffe0; valaddr_reg:x3; val_offset:211302*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211302*0 + 3*546*FLEN/8, x4, x1, x2)

inst_70435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffffff0; valaddr_reg:x3; val_offset:211305*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211305*0 + 3*547*FLEN/8, x4, x1, x2)

inst_70436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffffff8; valaddr_reg:x3; val_offset:211308*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211308*0 + 3*548*FLEN/8, x4, x1, x2)

inst_70437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffffffc; valaddr_reg:x3; val_offset:211311*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211311*0 + 3*549*FLEN/8, x4, x1, x2)

inst_70438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3affffffffffffe; valaddr_reg:x3; val_offset:211314*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211314*0 + 3*550*FLEN/8, x4, x1, x2)

inst_70439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c7ddae763106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5c7ddae763106; op2val:0x0;
op3val:0x3afffffffffffff; valaddr_reg:x3; val_offset:211317*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211317*0 + 3*551*FLEN/8, x4, x1, x2)

inst_70440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:211320*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211320*0 + 3*552*FLEN/8, x4, x1, x2)

inst_70441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:211323*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211323*0 + 3*553*FLEN/8, x4, x1, x2)

inst_70442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:211326*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211326*0 + 3*554*FLEN/8, x4, x1, x2)

inst_70443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:211329*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211329*0 + 3*555*FLEN/8, x4, x1, x2)

inst_70444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:211332*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211332*0 + 3*556*FLEN/8, x4, x1, x2)

inst_70445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:211335*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211335*0 + 3*557*FLEN/8, x4, x1, x2)

inst_70446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:211338*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211338*0 + 3*558*FLEN/8, x4, x1, x2)

inst_70447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:211341*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211341*0 + 3*559*FLEN/8, x4, x1, x2)

inst_70448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:211344*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211344*0 + 3*560*FLEN/8, x4, x1, x2)

inst_70449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:211347*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211347*0 + 3*561*FLEN/8, x4, x1, x2)

inst_70450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:211350*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211350*0 + 3*562*FLEN/8, x4, x1, x2)

inst_70451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:211353*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211353*0 + 3*563*FLEN/8, x4, x1, x2)

inst_70452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:211356*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211356*0 + 3*564*FLEN/8, x4, x1, x2)

inst_70453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:211359*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211359*0 + 3*565*FLEN/8, x4, x1, x2)

inst_70454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:211362*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211362*0 + 3*566*FLEN/8, x4, x1, x2)

inst_70455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:211365*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211365*0 + 3*567*FLEN/8, x4, x1, x2)

inst_70456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:211368*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211368*0 + 3*568*FLEN/8, x4, x1, x2)

inst_70457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:211371*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211371*0 + 3*569*FLEN/8, x4, x1, x2)

inst_70458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:211374*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211374*0 + 3*570*FLEN/8, x4, x1, x2)

inst_70459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:211377*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211377*0 + 3*571*FLEN/8, x4, x1, x2)

inst_70460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:211380*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211380*0 + 3*572*FLEN/8, x4, x1, x2)

inst_70461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:211383*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211383*0 + 3*573*FLEN/8, x4, x1, x2)

inst_70462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000000000000; valaddr_reg:x3; val_offset:211386*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211386*0 + 3*574*FLEN/8, x4, x1, x2)

inst_70463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000000000001; valaddr_reg:x3; val_offset:211389*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211389*0 + 3*575*FLEN/8, x4, x1, x2)

inst_70464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000000000003; valaddr_reg:x3; val_offset:211392*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211392*0 + 3*576*FLEN/8, x4, x1, x2)

inst_70465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000000000007; valaddr_reg:x3; val_offset:211395*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211395*0 + 3*577*FLEN/8, x4, x1, x2)

inst_70466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000000000000f; valaddr_reg:x3; val_offset:211398*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211398*0 + 3*578*FLEN/8, x4, x1, x2)

inst_70467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000000000001f; valaddr_reg:x3; val_offset:211401*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211401*0 + 3*579*FLEN/8, x4, x1, x2)

inst_70468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000000000003f; valaddr_reg:x3; val_offset:211404*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211404*0 + 3*580*FLEN/8, x4, x1, x2)

inst_70469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000000000007f; valaddr_reg:x3; val_offset:211407*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211407*0 + 3*581*FLEN/8, x4, x1, x2)

inst_70470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00000000000ff; valaddr_reg:x3; val_offset:211410*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211410*0 + 3*582*FLEN/8, x4, x1, x2)

inst_70471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00000000001ff; valaddr_reg:x3; val_offset:211413*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211413*0 + 3*583*FLEN/8, x4, x1, x2)

inst_70472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00000000003ff; valaddr_reg:x3; val_offset:211416*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211416*0 + 3*584*FLEN/8, x4, x1, x2)

inst_70473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00000000007ff; valaddr_reg:x3; val_offset:211419*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211419*0 + 3*585*FLEN/8, x4, x1, x2)

inst_70474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000000000fff; valaddr_reg:x3; val_offset:211422*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211422*0 + 3*586*FLEN/8, x4, x1, x2)

inst_70475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000000001fff; valaddr_reg:x3; val_offset:211425*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211425*0 + 3*587*FLEN/8, x4, x1, x2)

inst_70476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000000003fff; valaddr_reg:x3; val_offset:211428*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211428*0 + 3*588*FLEN/8, x4, x1, x2)

inst_70477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000000007fff; valaddr_reg:x3; val_offset:211431*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211431*0 + 3*589*FLEN/8, x4, x1, x2)

inst_70478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000000000ffff; valaddr_reg:x3; val_offset:211434*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211434*0 + 3*590*FLEN/8, x4, x1, x2)

inst_70479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000000001ffff; valaddr_reg:x3; val_offset:211437*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211437*0 + 3*591*FLEN/8, x4, x1, x2)

inst_70480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000000003ffff; valaddr_reg:x3; val_offset:211440*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211440*0 + 3*592*FLEN/8, x4, x1, x2)

inst_70481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000000007ffff; valaddr_reg:x3; val_offset:211443*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211443*0 + 3*593*FLEN/8, x4, x1, x2)

inst_70482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00000000fffff; valaddr_reg:x3; val_offset:211446*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211446*0 + 3*594*FLEN/8, x4, x1, x2)

inst_70483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00000001fffff; valaddr_reg:x3; val_offset:211449*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211449*0 + 3*595*FLEN/8, x4, x1, x2)

inst_70484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00000003fffff; valaddr_reg:x3; val_offset:211452*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211452*0 + 3*596*FLEN/8, x4, x1, x2)

inst_70485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00000007fffff; valaddr_reg:x3; val_offset:211455*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211455*0 + 3*597*FLEN/8, x4, x1, x2)

inst_70486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000000ffffff; valaddr_reg:x3; val_offset:211458*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211458*0 + 3*598*FLEN/8, x4, x1, x2)

inst_70487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000001ffffff; valaddr_reg:x3; val_offset:211461*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211461*0 + 3*599*FLEN/8, x4, x1, x2)

inst_70488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000003ffffff; valaddr_reg:x3; val_offset:211464*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211464*0 + 3*600*FLEN/8, x4, x1, x2)

inst_70489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000007ffffff; valaddr_reg:x3; val_offset:211467*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211467*0 + 3*601*FLEN/8, x4, x1, x2)

inst_70490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000000fffffff; valaddr_reg:x3; val_offset:211470*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211470*0 + 3*602*FLEN/8, x4, x1, x2)

inst_70491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000001fffffff; valaddr_reg:x3; val_offset:211473*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211473*0 + 3*603*FLEN/8, x4, x1, x2)

inst_70492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000003fffffff; valaddr_reg:x3; val_offset:211476*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211476*0 + 3*604*FLEN/8, x4, x1, x2)

inst_70493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000007fffffff; valaddr_reg:x3; val_offset:211479*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211479*0 + 3*605*FLEN/8, x4, x1, x2)

inst_70494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00000ffffffff; valaddr_reg:x3; val_offset:211482*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211482*0 + 3*606*FLEN/8, x4, x1, x2)

inst_70495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00001ffffffff; valaddr_reg:x3; val_offset:211485*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211485*0 + 3*607*FLEN/8, x4, x1, x2)

inst_70496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00003ffffffff; valaddr_reg:x3; val_offset:211488*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211488*0 + 3*608*FLEN/8, x4, x1, x2)

inst_70497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00007ffffffff; valaddr_reg:x3; val_offset:211491*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211491*0 + 3*609*FLEN/8, x4, x1, x2)

inst_70498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0000fffffffff; valaddr_reg:x3; val_offset:211494*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211494*0 + 3*610*FLEN/8, x4, x1, x2)

inst_70499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0001fffffffff; valaddr_reg:x3; val_offset:211497*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211497*0 + 3*611*FLEN/8, x4, x1, x2)

inst_70500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0003fffffffff; valaddr_reg:x3; val_offset:211500*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211500*0 + 3*612*FLEN/8, x4, x1, x2)

inst_70501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0007fffffffff; valaddr_reg:x3; val_offset:211503*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211503*0 + 3*613*FLEN/8, x4, x1, x2)

inst_70502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a000ffffffffff; valaddr_reg:x3; val_offset:211506*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211506*0 + 3*614*FLEN/8, x4, x1, x2)

inst_70503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a001ffffffffff; valaddr_reg:x3; val_offset:211509*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211509*0 + 3*615*FLEN/8, x4, x1, x2)

inst_70504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a003ffffffffff; valaddr_reg:x3; val_offset:211512*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211512*0 + 3*616*FLEN/8, x4, x1, x2)

inst_70505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a007ffffffffff; valaddr_reg:x3; val_offset:211515*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211515*0 + 3*617*FLEN/8, x4, x1, x2)

inst_70506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a00fffffffffff; valaddr_reg:x3; val_offset:211518*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211518*0 + 3*618*FLEN/8, x4, x1, x2)

inst_70507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a01fffffffffff; valaddr_reg:x3; val_offset:211521*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211521*0 + 3*619*FLEN/8, x4, x1, x2)

inst_70508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a03fffffffffff; valaddr_reg:x3; val_offset:211524*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211524*0 + 3*620*FLEN/8, x4, x1, x2)

inst_70509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a07fffffffffff; valaddr_reg:x3; val_offset:211527*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211527*0 + 3*621*FLEN/8, x4, x1, x2)

inst_70510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a0ffffffffffff; valaddr_reg:x3; val_offset:211530*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211530*0 + 3*622*FLEN/8, x4, x1, x2)

inst_70511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a1ffffffffffff; valaddr_reg:x3; val_offset:211533*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211533*0 + 3*623*FLEN/8, x4, x1, x2)

inst_70512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a3ffffffffffff; valaddr_reg:x3; val_offset:211536*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211536*0 + 3*624*FLEN/8, x4, x1, x2)

inst_70513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a7ffffffffffff; valaddr_reg:x3; val_offset:211539*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211539*0 + 3*625*FLEN/8, x4, x1, x2)

inst_70514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81a8000000000000; valaddr_reg:x3; val_offset:211542*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211542*0 + 3*626*FLEN/8, x4, x1, x2)

inst_70515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81ac000000000000; valaddr_reg:x3; val_offset:211545*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211545*0 + 3*627*FLEN/8, x4, x1, x2)

inst_70516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81ae000000000000; valaddr_reg:x3; val_offset:211548*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211548*0 + 3*628*FLEN/8, x4, x1, x2)

inst_70517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81af000000000000; valaddr_reg:x3; val_offset:211551*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211551*0 + 3*629*FLEN/8, x4, x1, x2)

inst_70518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81af800000000000; valaddr_reg:x3; val_offset:211554*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211554*0 + 3*630*FLEN/8, x4, x1, x2)

inst_70519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afc00000000000; valaddr_reg:x3; val_offset:211557*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211557*0 + 3*631*FLEN/8, x4, x1, x2)

inst_70520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afe00000000000; valaddr_reg:x3; val_offset:211560*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211560*0 + 3*632*FLEN/8, x4, x1, x2)

inst_70521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81aff00000000000; valaddr_reg:x3; val_offset:211563*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211563*0 + 3*633*FLEN/8, x4, x1, x2)

inst_70522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81aff80000000000; valaddr_reg:x3; val_offset:211566*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211566*0 + 3*634*FLEN/8, x4, x1, x2)

inst_70523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affc0000000000; valaddr_reg:x3; val_offset:211569*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211569*0 + 3*635*FLEN/8, x4, x1, x2)

inst_70524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affe0000000000; valaddr_reg:x3; val_offset:211572*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211572*0 + 3*636*FLEN/8, x4, x1, x2)

inst_70525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afff0000000000; valaddr_reg:x3; val_offset:211575*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211575*0 + 3*637*FLEN/8, x4, x1, x2)

inst_70526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afff8000000000; valaddr_reg:x3; val_offset:211578*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211578*0 + 3*638*FLEN/8, x4, x1, x2)

inst_70527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffc000000000; valaddr_reg:x3; val_offset:211581*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211581*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_70528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffe000000000; valaddr_reg:x3; val_offset:211584*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211584*0 + 3*640*FLEN/8, x4, x1, x2)

inst_70529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affff000000000; valaddr_reg:x3; val_offset:211587*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211587*0 + 3*641*FLEN/8, x4, x1, x2)

inst_70530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affff800000000; valaddr_reg:x3; val_offset:211590*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211590*0 + 3*642*FLEN/8, x4, x1, x2)

inst_70531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffc00000000; valaddr_reg:x3; val_offset:211593*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211593*0 + 3*643*FLEN/8, x4, x1, x2)

inst_70532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffe00000000; valaddr_reg:x3; val_offset:211596*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211596*0 + 3*644*FLEN/8, x4, x1, x2)

inst_70533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffff00000000; valaddr_reg:x3; val_offset:211599*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211599*0 + 3*645*FLEN/8, x4, x1, x2)

inst_70534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffff80000000; valaddr_reg:x3; val_offset:211602*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211602*0 + 3*646*FLEN/8, x4, x1, x2)

inst_70535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffc0000000; valaddr_reg:x3; val_offset:211605*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211605*0 + 3*647*FLEN/8, x4, x1, x2)

inst_70536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffe0000000; valaddr_reg:x3; val_offset:211608*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211608*0 + 3*648*FLEN/8, x4, x1, x2)

inst_70537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffff0000000; valaddr_reg:x3; val_offset:211611*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211611*0 + 3*649*FLEN/8, x4, x1, x2)

inst_70538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffff8000000; valaddr_reg:x3; val_offset:211614*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211614*0 + 3*650*FLEN/8, x4, x1, x2)

inst_70539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffc000000; valaddr_reg:x3; val_offset:211617*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211617*0 + 3*651*FLEN/8, x4, x1, x2)

inst_70540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffe000000; valaddr_reg:x3; val_offset:211620*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211620*0 + 3*652*FLEN/8, x4, x1, x2)

inst_70541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffff000000; valaddr_reg:x3; val_offset:211623*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211623*0 + 3*653*FLEN/8, x4, x1, x2)

inst_70542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffff800000; valaddr_reg:x3; val_offset:211626*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211626*0 + 3*654*FLEN/8, x4, x1, x2)

inst_70543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffc00000; valaddr_reg:x3; val_offset:211629*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211629*0 + 3*655*FLEN/8, x4, x1, x2)

inst_70544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffe00000; valaddr_reg:x3; val_offset:211632*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211632*0 + 3*656*FLEN/8, x4, x1, x2)

inst_70545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffff00000; valaddr_reg:x3; val_offset:211635*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211635*0 + 3*657*FLEN/8, x4, x1, x2)

inst_70546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffff80000; valaddr_reg:x3; val_offset:211638*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211638*0 + 3*658*FLEN/8, x4, x1, x2)

inst_70547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffc0000; valaddr_reg:x3; val_offset:211641*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211641*0 + 3*659*FLEN/8, x4, x1, x2)

inst_70548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffe0000; valaddr_reg:x3; val_offset:211644*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211644*0 + 3*660*FLEN/8, x4, x1, x2)

inst_70549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffff0000; valaddr_reg:x3; val_offset:211647*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211647*0 + 3*661*FLEN/8, x4, x1, x2)

inst_70550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffff8000; valaddr_reg:x3; val_offset:211650*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211650*0 + 3*662*FLEN/8, x4, x1, x2)

inst_70551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffffc000; valaddr_reg:x3; val_offset:211653*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211653*0 + 3*663*FLEN/8, x4, x1, x2)

inst_70552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffffe000; valaddr_reg:x3; val_offset:211656*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211656*0 + 3*664*FLEN/8, x4, x1, x2)

inst_70553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffff000; valaddr_reg:x3; val_offset:211659*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211659*0 + 3*665*FLEN/8, x4, x1, x2)

inst_70554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffff800; valaddr_reg:x3; val_offset:211662*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211662*0 + 3*666*FLEN/8, x4, x1, x2)

inst_70555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffffc00; valaddr_reg:x3; val_offset:211665*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211665*0 + 3*667*FLEN/8, x4, x1, x2)

inst_70556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffffe00; valaddr_reg:x3; val_offset:211668*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211668*0 + 3*668*FLEN/8, x4, x1, x2)

inst_70557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffffff00; valaddr_reg:x3; val_offset:211671*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211671*0 + 3*669*FLEN/8, x4, x1, x2)

inst_70558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffffff80; valaddr_reg:x3; val_offset:211674*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211674*0 + 3*670*FLEN/8, x4, x1, x2)

inst_70559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffffffc0; valaddr_reg:x3; val_offset:211677*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211677*0 + 3*671*FLEN/8, x4, x1, x2)

inst_70560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffffffe0; valaddr_reg:x3; val_offset:211680*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211680*0 + 3*672*FLEN/8, x4, x1, x2)

inst_70561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffffff0; valaddr_reg:x3; val_offset:211683*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211683*0 + 3*673*FLEN/8, x4, x1, x2)

inst_70562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffffff8; valaddr_reg:x3; val_offset:211686*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211686*0 + 3*674*FLEN/8, x4, x1, x2)

inst_70563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffffffc; valaddr_reg:x3; val_offset:211689*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211689*0 + 3*675*FLEN/8, x4, x1, x2)

inst_70564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81affffffffffffe; valaddr_reg:x3; val_offset:211692*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211692*0 + 3*676*FLEN/8, x4, x1, x2)

inst_70565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d635a9bdd782 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5d635a9bdd782; op2val:0x8000;
op3val:0x81afffffffffffff; valaddr_reg:x3; val_offset:211695*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211695*0 + 3*677*FLEN/8, x4, x1, x2)

inst_70566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000000000000; valaddr_reg:x3; val_offset:211698*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211698*0 + 3*678*FLEN/8, x4, x1, x2)

inst_70567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000000000001; valaddr_reg:x3; val_offset:211701*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211701*0 + 3*679*FLEN/8, x4, x1, x2)

inst_70568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000000000003; valaddr_reg:x3; val_offset:211704*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211704*0 + 3*680*FLEN/8, x4, x1, x2)

inst_70569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000000000007; valaddr_reg:x3; val_offset:211707*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211707*0 + 3*681*FLEN/8, x4, x1, x2)

inst_70570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000000000000f; valaddr_reg:x3; val_offset:211710*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211710*0 + 3*682*FLEN/8, x4, x1, x2)

inst_70571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000000000001f; valaddr_reg:x3; val_offset:211713*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211713*0 + 3*683*FLEN/8, x4, x1, x2)

inst_70572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000000000003f; valaddr_reg:x3; val_offset:211716*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211716*0 + 3*684*FLEN/8, x4, x1, x2)

inst_70573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000000000007f; valaddr_reg:x3; val_offset:211719*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211719*0 + 3*685*FLEN/8, x4, x1, x2)

inst_70574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300000000000ff; valaddr_reg:x3; val_offset:211722*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211722*0 + 3*686*FLEN/8, x4, x1, x2)

inst_70575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300000000001ff; valaddr_reg:x3; val_offset:211725*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211725*0 + 3*687*FLEN/8, x4, x1, x2)

inst_70576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300000000003ff; valaddr_reg:x3; val_offset:211728*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211728*0 + 3*688*FLEN/8, x4, x1, x2)

inst_70577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300000000007ff; valaddr_reg:x3; val_offset:211731*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211731*0 + 3*689*FLEN/8, x4, x1, x2)

inst_70578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000000000fff; valaddr_reg:x3; val_offset:211734*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211734*0 + 3*690*FLEN/8, x4, x1, x2)

inst_70579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000000001fff; valaddr_reg:x3; val_offset:211737*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211737*0 + 3*691*FLEN/8, x4, x1, x2)

inst_70580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000000003fff; valaddr_reg:x3; val_offset:211740*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211740*0 + 3*692*FLEN/8, x4, x1, x2)

inst_70581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000000007fff; valaddr_reg:x3; val_offset:211743*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211743*0 + 3*693*FLEN/8, x4, x1, x2)

inst_70582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000000000ffff; valaddr_reg:x3; val_offset:211746*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211746*0 + 3*694*FLEN/8, x4, x1, x2)

inst_70583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000000001ffff; valaddr_reg:x3; val_offset:211749*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211749*0 + 3*695*FLEN/8, x4, x1, x2)

inst_70584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000000003ffff; valaddr_reg:x3; val_offset:211752*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211752*0 + 3*696*FLEN/8, x4, x1, x2)

inst_70585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000000007ffff; valaddr_reg:x3; val_offset:211755*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211755*0 + 3*697*FLEN/8, x4, x1, x2)

inst_70586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300000000fffff; valaddr_reg:x3; val_offset:211758*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211758*0 + 3*698*FLEN/8, x4, x1, x2)

inst_70587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300000001fffff; valaddr_reg:x3; val_offset:211761*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211761*0 + 3*699*FLEN/8, x4, x1, x2)

inst_70588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300000003fffff; valaddr_reg:x3; val_offset:211764*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211764*0 + 3*700*FLEN/8, x4, x1, x2)

inst_70589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300000007fffff; valaddr_reg:x3; val_offset:211767*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211767*0 + 3*701*FLEN/8, x4, x1, x2)

inst_70590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000000ffffff; valaddr_reg:x3; val_offset:211770*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211770*0 + 3*702*FLEN/8, x4, x1, x2)

inst_70591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000001ffffff; valaddr_reg:x3; val_offset:211773*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211773*0 + 3*703*FLEN/8, x4, x1, x2)

inst_70592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000003ffffff; valaddr_reg:x3; val_offset:211776*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211776*0 + 3*704*FLEN/8, x4, x1, x2)

inst_70593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000007ffffff; valaddr_reg:x3; val_offset:211779*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211779*0 + 3*705*FLEN/8, x4, x1, x2)

inst_70594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000000fffffff; valaddr_reg:x3; val_offset:211782*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211782*0 + 3*706*FLEN/8, x4, x1, x2)

inst_70595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000001fffffff; valaddr_reg:x3; val_offset:211785*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211785*0 + 3*707*FLEN/8, x4, x1, x2)

inst_70596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000003fffffff; valaddr_reg:x3; val_offset:211788*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211788*0 + 3*708*FLEN/8, x4, x1, x2)

inst_70597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000007fffffff; valaddr_reg:x3; val_offset:211791*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211791*0 + 3*709*FLEN/8, x4, x1, x2)

inst_70598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300000ffffffff; valaddr_reg:x3; val_offset:211794*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211794*0 + 3*710*FLEN/8, x4, x1, x2)

inst_70599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300001ffffffff; valaddr_reg:x3; val_offset:211797*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211797*0 + 3*711*FLEN/8, x4, x1, x2)

inst_70600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300003ffffffff; valaddr_reg:x3; val_offset:211800*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211800*0 + 3*712*FLEN/8, x4, x1, x2)

inst_70601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300007ffffffff; valaddr_reg:x3; val_offset:211803*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211803*0 + 3*713*FLEN/8, x4, x1, x2)

inst_70602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830000fffffffff; valaddr_reg:x3; val_offset:211806*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211806*0 + 3*714*FLEN/8, x4, x1, x2)

inst_70603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830001fffffffff; valaddr_reg:x3; val_offset:211809*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211809*0 + 3*715*FLEN/8, x4, x1, x2)

inst_70604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830003fffffffff; valaddr_reg:x3; val_offset:211812*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211812*0 + 3*716*FLEN/8, x4, x1, x2)

inst_70605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830007fffffffff; valaddr_reg:x3; val_offset:211815*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211815*0 + 3*717*FLEN/8, x4, x1, x2)

inst_70606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383000ffffffffff; valaddr_reg:x3; val_offset:211818*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211818*0 + 3*718*FLEN/8, x4, x1, x2)

inst_70607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383001ffffffffff; valaddr_reg:x3; val_offset:211821*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211821*0 + 3*719*FLEN/8, x4, x1, x2)

inst_70608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383003ffffffffff; valaddr_reg:x3; val_offset:211824*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211824*0 + 3*720*FLEN/8, x4, x1, x2)

inst_70609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383007ffffffffff; valaddr_reg:x3; val_offset:211827*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211827*0 + 3*721*FLEN/8, x4, x1, x2)

inst_70610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38300fffffffffff; valaddr_reg:x3; val_offset:211830*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211830*0 + 3*722*FLEN/8, x4, x1, x2)

inst_70611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38301fffffffffff; valaddr_reg:x3; val_offset:211833*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211833*0 + 3*723*FLEN/8, x4, x1, x2)

inst_70612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38303fffffffffff; valaddr_reg:x3; val_offset:211836*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211836*0 + 3*724*FLEN/8, x4, x1, x2)

inst_70613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x38307fffffffffff; valaddr_reg:x3; val_offset:211839*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211839*0 + 3*725*FLEN/8, x4, x1, x2)

inst_70614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3830ffffffffffff; valaddr_reg:x3; val_offset:211842*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211842*0 + 3*726*FLEN/8, x4, x1, x2)

inst_70615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3831ffffffffffff; valaddr_reg:x3; val_offset:211845*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211845*0 + 3*727*FLEN/8, x4, x1, x2)

inst_70616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3833ffffffffffff; valaddr_reg:x3; val_offset:211848*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211848*0 + 3*728*FLEN/8, x4, x1, x2)

inst_70617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3837ffffffffffff; valaddr_reg:x3; val_offset:211851*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211851*0 + 3*729*FLEN/8, x4, x1, x2)

inst_70618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x3838000000000000; valaddr_reg:x3; val_offset:211854*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211854*0 + 3*730*FLEN/8, x4, x1, x2)

inst_70619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383c000000000000; valaddr_reg:x3; val_offset:211857*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211857*0 + 3*731*FLEN/8, x4, x1, x2)

inst_70620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383e000000000000; valaddr_reg:x3; val_offset:211860*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211860*0 + 3*732*FLEN/8, x4, x1, x2)

inst_70621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383f000000000000; valaddr_reg:x3; val_offset:211863*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211863*0 + 3*733*FLEN/8, x4, x1, x2)

inst_70622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383f800000000000; valaddr_reg:x3; val_offset:211866*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211866*0 + 3*734*FLEN/8, x4, x1, x2)

inst_70623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fc00000000000; valaddr_reg:x3; val_offset:211869*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211869*0 + 3*735*FLEN/8, x4, x1, x2)

inst_70624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fe00000000000; valaddr_reg:x3; val_offset:211872*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211872*0 + 3*736*FLEN/8, x4, x1, x2)

inst_70625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ff00000000000; valaddr_reg:x3; val_offset:211875*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211875*0 + 3*737*FLEN/8, x4, x1, x2)

inst_70626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ff80000000000; valaddr_reg:x3; val_offset:211878*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211878*0 + 3*738*FLEN/8, x4, x1, x2)

inst_70627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffc0000000000; valaddr_reg:x3; val_offset:211881*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211881*0 + 3*739*FLEN/8, x4, x1, x2)

inst_70628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffe0000000000; valaddr_reg:x3; val_offset:211884*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211884*0 + 3*740*FLEN/8, x4, x1, x2)

inst_70629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fff0000000000; valaddr_reg:x3; val_offset:211887*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211887*0 + 3*741*FLEN/8, x4, x1, x2)

inst_70630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fff8000000000; valaddr_reg:x3; val_offset:211890*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211890*0 + 3*742*FLEN/8, x4, x1, x2)

inst_70631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffc000000000; valaddr_reg:x3; val_offset:211893*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211893*0 + 3*743*FLEN/8, x4, x1, x2)

inst_70632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffe000000000; valaddr_reg:x3; val_offset:211896*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211896*0 + 3*744*FLEN/8, x4, x1, x2)

inst_70633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffff000000000; valaddr_reg:x3; val_offset:211899*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211899*0 + 3*745*FLEN/8, x4, x1, x2)

inst_70634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffff800000000; valaddr_reg:x3; val_offset:211902*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211902*0 + 3*746*FLEN/8, x4, x1, x2)

inst_70635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffc00000000; valaddr_reg:x3; val_offset:211905*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211905*0 + 3*747*FLEN/8, x4, x1, x2)

inst_70636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffe00000000; valaddr_reg:x3; val_offset:211908*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211908*0 + 3*748*FLEN/8, x4, x1, x2)

inst_70637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffff00000000; valaddr_reg:x3; val_offset:211911*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211911*0 + 3*749*FLEN/8, x4, x1, x2)

inst_70638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffff80000000; valaddr_reg:x3; val_offset:211914*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211914*0 + 3*750*FLEN/8, x4, x1, x2)

inst_70639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffffc0000000; valaddr_reg:x3; val_offset:211917*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211917*0 + 3*751*FLEN/8, x4, x1, x2)

inst_70640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffffe0000000; valaddr_reg:x3; val_offset:211920*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211920*0 + 3*752*FLEN/8, x4, x1, x2)

inst_70641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffff0000000; valaddr_reg:x3; val_offset:211923*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211923*0 + 3*753*FLEN/8, x4, x1, x2)

inst_70642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffff8000000; valaddr_reg:x3; val_offset:211926*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211926*0 + 3*754*FLEN/8, x4, x1, x2)

inst_70643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffffc000000; valaddr_reg:x3; val_offset:211929*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211929*0 + 3*755*FLEN/8, x4, x1, x2)

inst_70644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffffe000000; valaddr_reg:x3; val_offset:211932*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211932*0 + 3*756*FLEN/8, x4, x1, x2)

inst_70645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffffff000000; valaddr_reg:x3; val_offset:211935*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211935*0 + 3*757*FLEN/8, x4, x1, x2)

inst_70646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffffff800000; valaddr_reg:x3; val_offset:211938*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211938*0 + 3*758*FLEN/8, x4, x1, x2)

inst_70647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffffffc00000; valaddr_reg:x3; val_offset:211941*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211941*0 + 3*759*FLEN/8, x4, x1, x2)

inst_70648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffffffe00000; valaddr_reg:x3; val_offset:211944*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211944*0 + 3*760*FLEN/8, x4, x1, x2)

inst_70649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffffff00000; valaddr_reg:x3; val_offset:211947*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211947*0 + 3*761*FLEN/8, x4, x1, x2)

inst_70650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffffff80000; valaddr_reg:x3; val_offset:211950*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211950*0 + 3*762*FLEN/8, x4, x1, x2)

inst_70651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffffffc0000; valaddr_reg:x3; val_offset:211953*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211953*0 + 3*763*FLEN/8, x4, x1, x2)

inst_70652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383ffffffffe0000; valaddr_reg:x3; val_offset:211956*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211956*0 + 3*764*FLEN/8, x4, x1, x2)

inst_70653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffffffff0000; valaddr_reg:x3; val_offset:211959*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211959*0 + 3*765*FLEN/8, x4, x1, x2)

inst_70654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffffffff8000; valaddr_reg:x3; val_offset:211962*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211962*0 + 3*766*FLEN/8, x4, x1, x2)

inst_70655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5e123b6f0d13c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x766a4d3d2f4ee and fs3 == 0 and fe3 == 0x383 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5e123b6f0d13c; op2val:0x203766a4d3d2f4ee;
op3val:0x383fffffffffc000; valaddr_reg:x3; val_offset:211965*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 211965*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262364114944,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262380892160,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262389280768,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262393475072,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262395572224,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262396620800,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397145088,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397407232,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397538304,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397603840,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397636608,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397652992,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397661184,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397665280,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397667328,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397668352,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397668864,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397669120,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397669248,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397669312,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397669344,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397669360,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397669368,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397669372,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397669374,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4080261262397669375,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892111284309700111,64,FLEN)
NAN_BOXED(2321492062636699794,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855872,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855873,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855875,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855879,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855887,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855903,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855935,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855999,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856127,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856383,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856895,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075857919,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075859967,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075864063,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075872255,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075888639,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075921407,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075986943,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076118015,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076380159,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076904447,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188077953023,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188080050175,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188084244479,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188092633087,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188109410303,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188142964735,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188210073599,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188344291327,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188612726783,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115189149597695,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115190223339519,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115192370823167,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115196665790463,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115205255725055,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115222435594239,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115256795332607,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115325514809343,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115462953762815,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115737831669759,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144116287587483647,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144117387099111423,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144119586122366975,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144123984168878079,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144132780261900287,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144150372447944703,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144185556820033535,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144255925564211199,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144396663052566527,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144678138029277183,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(145241087982698495,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541119,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541120,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(147492887796383744,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148055837749805056,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148337312726515712,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148478050214871040,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148548418959048704,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148583603331137536,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148601195517181952,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148609991610204160,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148614389656715264,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148616588679970816,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148617688191598592,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618237947412480,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618512825319424,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618650264272896,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618718983749632,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618753343488000,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618770523357184,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618779113291776,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618783408259072,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618785555742720,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618786629484544,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787166355456,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787434790912,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787569008640,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787636117504,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787669671936,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787686449152,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787694837760,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787699032064,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787701129216,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702177792,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702702080,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702964224,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703095296,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703160832,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703193600,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703209984,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703218176,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703222272,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703224320,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225344,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225856,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226112,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226240,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226304,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226336,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226352,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226360,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226364,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226366,64,FLEN)
NAN_BOXED(6892114569378329873,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226367,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041600,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041601,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041603,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041607,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041615,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041631,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041663,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041727,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041855,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478042111,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478042623,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478043647,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478045695,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478049791,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478057983,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478074367,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478107135,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478172671,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478303743,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478565887,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217479090175,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217480138751,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217482235903,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217486430207,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217494818815,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217511596031,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217545150463,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217612259327,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217746477055,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559218014912511,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559218551783423,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559219625525247,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559221773008895,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559226067976191,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559234657910783,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559251837779967,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559286197518335,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559354916995071,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559492355948543,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559767233855487,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457560316989669375,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457561416501297151,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457563615524552703,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457568013571063807,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457576809664086015,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457594401850130431,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457629586222219263,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457699954966396927,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457840692454752255,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9458122167431462911,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9458685117384884223,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9459811017291726847,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9459811017291726848,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9460936917198569472,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461499867151990784,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461781342128701440,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461922079617056768,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461992448361234432,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462027632733323264,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462045224919367680,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462054021012389888,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462058419058900992,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462060618082156544,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462061717593784320,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062267349598208,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062542227505152,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062679666458624,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062748385935360,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062782745673728,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062799925542912,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062808515477504,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062812810444800,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062814957928448,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816031670272,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816568541184,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816836976640,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816971194368,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817038303232,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817071857664,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817088634880,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817097023488,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817101217792,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817103314944,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104363520,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104887808,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105149952,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105281024,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105346560,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105379328,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105395712,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105403904,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105408000,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105410048,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411072,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411584,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411840,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411968,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412032,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412064,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412080,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412088,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412092,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412094,64,FLEN)
NAN_BOXED(6892122253151656654,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412095,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412096,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412097,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412099,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412103,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412111,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412127,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412159,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412223,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412351,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412607,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105413119,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105414143,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105416191,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105420287,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105428479,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105444863,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105477631,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105543167,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105674239,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105936383,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817106460671,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817107509247,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817109606399,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817113800703,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817122189311,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817138966527,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817172520959,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817239629823,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817373847551,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817642283007,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062818179153919,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062819252895743,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062821400379391,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062825695346687,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062834285281279,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062851465150463,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062885824888831,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062954544365567,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063091983319039,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063366861225983,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063916617039871,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462065016128667647,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462067215151923199,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462071613198434303,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462080409291456511,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462098001477500927,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462133185849589759,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462203554593767423,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462344292082122751,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462625767058833407,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9463188717012254719,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097343,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097344,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9465440516825939968,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466003466779361280,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466284941756071936,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466425679244427264,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466496047988604928,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466531232360693760,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466548824546738176,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466557620639760384,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466562018686271488,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466564217709527040,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565317221154816,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565866976968704,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566141854875648,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566279293829120,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566348013305856,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566382373044224,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566399552913408,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566408142848000,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566412437815296,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566414585298944,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566415659040768,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416195911680,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416464347136,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416598564864,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416665673728,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416699228160,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416716005376,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416724393984,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416728588288,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416730685440,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416731734016,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732258304,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732520448,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732651520,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732717056,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732749824,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732766208,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732774400,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732778496,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732780544,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732781568,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782080,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782336,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782464,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782528,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782560,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782576,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782584,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782588,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782590,64,FLEN)
NAN_BOXED(6892129155960079380,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782591,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488768,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488769,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488771,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488775,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488783,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488799,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488831,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488895,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489023,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489279,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489791,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387490815,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387492863,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387496959,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387505151,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387521535,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387554303,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387619839,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387750911,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388013055,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388537343,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778389585919,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778391683071,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778395877375,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778404265983,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778421043199,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778454597631,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778521706495,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778655924223,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778924359679,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208779461230591,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208780534972415,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208782682456063,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208786977423359,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208795567357951,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208812747227135,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208847106965503,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208915826442239,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209053265395711,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209328143302655,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209877899116543,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261210977410744319,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261213176433999871,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261217574480510975,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261226370573533183,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261243962759577599,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261279147131666431,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261349515875844095,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261490253364199423,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261771728340910079,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262334678294331391,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174015,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174016,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(264586478108016640,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265149428061437952,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265430903038148608,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265571640526503936,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265642009270681600,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265677193642770432,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265694785828814848,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265703581921837056,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265707979968348160,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265710178991603712,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711278503231488,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711828259045376,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712103136952320,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712240575905792,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712309295382528,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712343655120896,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712360834990080,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712369424924672,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712373719891968,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712375867375616,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712376941117440,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377477988352,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377746423808,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377880641536,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377947750400,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377981304832,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377998082048,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378006470656,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378010664960,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378012762112,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378013810688,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014334976,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014597120,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014728192,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014793728,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014826496,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014842880,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014851072,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014855168,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014857216,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858240,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858752,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859008,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859136,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859200,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859232,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859248,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859256,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859260,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859262,64,FLEN)
NAN_BOXED(6892134559689093382,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859263,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408704,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408705,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408707,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408711,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408719,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408735,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408767,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408831,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408959,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409215,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409727,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166410751,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166412799,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166416895,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166425087,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166441471,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166474239,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166539775,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166670847,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166932991,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627167457279,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627168505855,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627170603007,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627174797311,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627183185919,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627199963135,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627233517567,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627300626431,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627434844159,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627703279615,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465628240150527,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465629313892351,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465631461375999,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465635756343295,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465644346277887,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465661526147071,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465695885885439,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465764605362175,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465902044315647,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466176922222591,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466726678036479,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340467826189664255,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340470025212919807,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340474423259430911,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340483219352453119,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340500811538497535,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340535995910586367,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340606364654764031,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340747102143119359,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341028577119830015,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341591527073251327,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093951,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093952,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9343843326886936576,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344406276840357888,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344687751817068544,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344828489305423872,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344898858049601536,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344934042421690368,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344951634607734784,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344960430700756992,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344964828747268096,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344967027770523648,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968127282151424,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968677037965312,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968951915872256,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969089354825728,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969158074302464,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969192434040832,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969209613910016,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969218203844608,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969222498811904,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969224646295552,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969225720037376,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226256908288,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226525343744,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226659561472,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226726670336,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226760224768,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226777001984,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226785390592,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226789584896,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226791682048,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226792730624,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793254912,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793517056,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793648128,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793713664,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793746432,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793762816,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793771008,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793775104,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793777152,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778176,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778688,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778944,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779072,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779136,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779168,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779184,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779192,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779196,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779198,64,FLEN)
NAN_BOXED(6892150330729813890,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779199,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006075904,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006075905,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006075907,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006075911,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006075919,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006075935,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006075967,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006076031,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006076159,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006076415,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006076927,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006077951,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006079999,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006084095,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006092287,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006108671,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006141439,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006206975,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006338047,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065006600191,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065007124479,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065008173055,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065010270207,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065014464511,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065022853119,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065039630335,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065073184767,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065140293631,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065274511359,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736065542946815,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736066079817727,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736067153559551,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736069301043199,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736073596010495,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736082185945087,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736099365814271,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736133725552639,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736202445029375,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736339883982847,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048736614761889791,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048737164517703679,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048738264029331455,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048740463052587007,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048744861099098111,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048753657192120319,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048771249378164735,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048806433750253567,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4048876802494431231,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4049017539982786559,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4049299014959497215,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4049861964912918527,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4050987864819761151,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4050987864819761152,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4052113764726603776,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4052676714680025088,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4052958189656735744,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053098927145091072,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053169295889268736,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053204480261357568,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053222072447401984,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053230868540424192,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053235266586935296,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053237465610190848,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053238565121818624,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239114877632512,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239389755539456,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239527194492928,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239595913969664,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239630273708032,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239647453577216,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239656043511808,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239660338479104,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239662485962752,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239663559704576,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664096575488,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664365010944,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664499228672,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664566337536,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664599891968,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664616669184,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664625057792,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664629252096,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664631349248,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664632397824,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664632922112,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664633184256,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664633315328,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664633380864,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664633413632,64,FLEN)
NAN_BOXED(6892162348269752636,64,FLEN)
NAN_BOXED(2321436991047267566,64,FLEN)
NAN_BOXED(4053239664633430016,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
