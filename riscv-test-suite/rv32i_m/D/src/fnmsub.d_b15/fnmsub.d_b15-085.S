
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_64512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffe0000000; valaddr_reg:x3; val_offset:193536*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193536*0 + 3*0*FLEN/8, x4, x1, x2)

inst_64513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffff0000000; valaddr_reg:x3; val_offset:193539*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193539*0 + 3*1*FLEN/8, x4, x1, x2)

inst_64514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffff8000000; valaddr_reg:x3; val_offset:193542*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193542*0 + 3*2*FLEN/8, x4, x1, x2)

inst_64515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffc000000; valaddr_reg:x3; val_offset:193545*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193545*0 + 3*3*FLEN/8, x4, x1, x2)

inst_64516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffe000000; valaddr_reg:x3; val_offset:193548*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193548*0 + 3*4*FLEN/8, x4, x1, x2)

inst_64517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffff000000; valaddr_reg:x3; val_offset:193551*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193551*0 + 3*5*FLEN/8, x4, x1, x2)

inst_64518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffff800000; valaddr_reg:x3; val_offset:193554*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193554*0 + 3*6*FLEN/8, x4, x1, x2)

inst_64519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffc00000; valaddr_reg:x3; val_offset:193557*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193557*0 + 3*7*FLEN/8, x4, x1, x2)

inst_64520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffe00000; valaddr_reg:x3; val_offset:193560*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193560*0 + 3*8*FLEN/8, x4, x1, x2)

inst_64521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffff00000; valaddr_reg:x3; val_offset:193563*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193563*0 + 3*9*FLEN/8, x4, x1, x2)

inst_64522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffff80000; valaddr_reg:x3; val_offset:193566*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193566*0 + 3*10*FLEN/8, x4, x1, x2)

inst_64523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffc0000; valaddr_reg:x3; val_offset:193569*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193569*0 + 3*11*FLEN/8, x4, x1, x2)

inst_64524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffe0000; valaddr_reg:x3; val_offset:193572*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193572*0 + 3*12*FLEN/8, x4, x1, x2)

inst_64525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffff0000; valaddr_reg:x3; val_offset:193575*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193575*0 + 3*13*FLEN/8, x4, x1, x2)

inst_64526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffff8000; valaddr_reg:x3; val_offset:193578*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193578*0 + 3*14*FLEN/8, x4, x1, x2)

inst_64527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffffc000; valaddr_reg:x3; val_offset:193581*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193581*0 + 3*15*FLEN/8, x4, x1, x2)

inst_64528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffffe000; valaddr_reg:x3; val_offset:193584*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193584*0 + 3*16*FLEN/8, x4, x1, x2)

inst_64529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffff000; valaddr_reg:x3; val_offset:193587*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193587*0 + 3*17*FLEN/8, x4, x1, x2)

inst_64530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffff800; valaddr_reg:x3; val_offset:193590*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193590*0 + 3*18*FLEN/8, x4, x1, x2)

inst_64531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffffc00; valaddr_reg:x3; val_offset:193593*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193593*0 + 3*19*FLEN/8, x4, x1, x2)

inst_64532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffffe00; valaddr_reg:x3; val_offset:193596*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193596*0 + 3*20*FLEN/8, x4, x1, x2)

inst_64533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffffff00; valaddr_reg:x3; val_offset:193599*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193599*0 + 3*21*FLEN/8, x4, x1, x2)

inst_64534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffffff80; valaddr_reg:x3; val_offset:193602*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193602*0 + 3*22*FLEN/8, x4, x1, x2)

inst_64535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffffffc0; valaddr_reg:x3; val_offset:193605*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193605*0 + 3*23*FLEN/8, x4, x1, x2)

inst_64536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffffffe0; valaddr_reg:x3; val_offset:193608*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193608*0 + 3*24*FLEN/8, x4, x1, x2)

inst_64537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffffff0; valaddr_reg:x3; val_offset:193611*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193611*0 + 3*25*FLEN/8, x4, x1, x2)

inst_64538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffffff8; valaddr_reg:x3; val_offset:193614*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193614*0 + 3*26*FLEN/8, x4, x1, x2)

inst_64539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffffffc; valaddr_reg:x3; val_offset:193617*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193617*0 + 3*27*FLEN/8, x4, x1, x2)

inst_64540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80affffffffffffe; valaddr_reg:x3; val_offset:193620*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193620*0 + 3*28*FLEN/8, x4, x1, x2)

inst_64541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3eb1fac76efe1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3eb1fac76efe1; op2val:0x8000;
op3val:0x80afffffffffffff; valaddr_reg:x3; val_offset:193623*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193623*0 + 3*29*FLEN/8, x4, x1, x2)

inst_64542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000000000000; valaddr_reg:x3; val_offset:193626*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193626*0 + 3*30*FLEN/8, x4, x1, x2)

inst_64543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000000000001; valaddr_reg:x3; val_offset:193629*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193629*0 + 3*31*FLEN/8, x4, x1, x2)

inst_64544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000000000003; valaddr_reg:x3; val_offset:193632*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193632*0 + 3*32*FLEN/8, x4, x1, x2)

inst_64545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000000000007; valaddr_reg:x3; val_offset:193635*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193635*0 + 3*33*FLEN/8, x4, x1, x2)

inst_64546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000000000000f; valaddr_reg:x3; val_offset:193638*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193638*0 + 3*34*FLEN/8, x4, x1, x2)

inst_64547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000000000001f; valaddr_reg:x3; val_offset:193641*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193641*0 + 3*35*FLEN/8, x4, x1, x2)

inst_64548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000000000003f; valaddr_reg:x3; val_offset:193644*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193644*0 + 3*36*FLEN/8, x4, x1, x2)

inst_64549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000000000007f; valaddr_reg:x3; val_offset:193647*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193647*0 + 3*37*FLEN/8, x4, x1, x2)

inst_64550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00000000000ff; valaddr_reg:x3; val_offset:193650*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193650*0 + 3*38*FLEN/8, x4, x1, x2)

inst_64551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00000000001ff; valaddr_reg:x3; val_offset:193653*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193653*0 + 3*39*FLEN/8, x4, x1, x2)

inst_64552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00000000003ff; valaddr_reg:x3; val_offset:193656*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193656*0 + 3*40*FLEN/8, x4, x1, x2)

inst_64553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00000000007ff; valaddr_reg:x3; val_offset:193659*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193659*0 + 3*41*FLEN/8, x4, x1, x2)

inst_64554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000000000fff; valaddr_reg:x3; val_offset:193662*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193662*0 + 3*42*FLEN/8, x4, x1, x2)

inst_64555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000000001fff; valaddr_reg:x3; val_offset:193665*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193665*0 + 3*43*FLEN/8, x4, x1, x2)

inst_64556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000000003fff; valaddr_reg:x3; val_offset:193668*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193668*0 + 3*44*FLEN/8, x4, x1, x2)

inst_64557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000000007fff; valaddr_reg:x3; val_offset:193671*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193671*0 + 3*45*FLEN/8, x4, x1, x2)

inst_64558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000000000ffff; valaddr_reg:x3; val_offset:193674*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193674*0 + 3*46*FLEN/8, x4, x1, x2)

inst_64559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000000001ffff; valaddr_reg:x3; val_offset:193677*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193677*0 + 3*47*FLEN/8, x4, x1, x2)

inst_64560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000000003ffff; valaddr_reg:x3; val_offset:193680*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193680*0 + 3*48*FLEN/8, x4, x1, x2)

inst_64561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000000007ffff; valaddr_reg:x3; val_offset:193683*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193683*0 + 3*49*FLEN/8, x4, x1, x2)

inst_64562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00000000fffff; valaddr_reg:x3; val_offset:193686*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193686*0 + 3*50*FLEN/8, x4, x1, x2)

inst_64563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00000001fffff; valaddr_reg:x3; val_offset:193689*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193689*0 + 3*51*FLEN/8, x4, x1, x2)

inst_64564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00000003fffff; valaddr_reg:x3; val_offset:193692*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193692*0 + 3*52*FLEN/8, x4, x1, x2)

inst_64565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00000007fffff; valaddr_reg:x3; val_offset:193695*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193695*0 + 3*53*FLEN/8, x4, x1, x2)

inst_64566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000000ffffff; valaddr_reg:x3; val_offset:193698*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193698*0 + 3*54*FLEN/8, x4, x1, x2)

inst_64567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000001ffffff; valaddr_reg:x3; val_offset:193701*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193701*0 + 3*55*FLEN/8, x4, x1, x2)

inst_64568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000003ffffff; valaddr_reg:x3; val_offset:193704*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193704*0 + 3*56*FLEN/8, x4, x1, x2)

inst_64569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000007ffffff; valaddr_reg:x3; val_offset:193707*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193707*0 + 3*57*FLEN/8, x4, x1, x2)

inst_64570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000000fffffff; valaddr_reg:x3; val_offset:193710*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193710*0 + 3*58*FLEN/8, x4, x1, x2)

inst_64571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000001fffffff; valaddr_reg:x3; val_offset:193713*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193713*0 + 3*59*FLEN/8, x4, x1, x2)

inst_64572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000003fffffff; valaddr_reg:x3; val_offset:193716*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193716*0 + 3*60*FLEN/8, x4, x1, x2)

inst_64573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000007fffffff; valaddr_reg:x3; val_offset:193719*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193719*0 + 3*61*FLEN/8, x4, x1, x2)

inst_64574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00000ffffffff; valaddr_reg:x3; val_offset:193722*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193722*0 + 3*62*FLEN/8, x4, x1, x2)

inst_64575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00001ffffffff; valaddr_reg:x3; val_offset:193725*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193725*0 + 3*63*FLEN/8, x4, x1, x2)

inst_64576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00003ffffffff; valaddr_reg:x3; val_offset:193728*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193728*0 + 3*64*FLEN/8, x4, x1, x2)

inst_64577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00007ffffffff; valaddr_reg:x3; val_offset:193731*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193731*0 + 3*65*FLEN/8, x4, x1, x2)

inst_64578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0000fffffffff; valaddr_reg:x3; val_offset:193734*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193734*0 + 3*66*FLEN/8, x4, x1, x2)

inst_64579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0001fffffffff; valaddr_reg:x3; val_offset:193737*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193737*0 + 3*67*FLEN/8, x4, x1, x2)

inst_64580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0003fffffffff; valaddr_reg:x3; val_offset:193740*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193740*0 + 3*68*FLEN/8, x4, x1, x2)

inst_64581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0007fffffffff; valaddr_reg:x3; val_offset:193743*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193743*0 + 3*69*FLEN/8, x4, x1, x2)

inst_64582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af000ffffffffff; valaddr_reg:x3; val_offset:193746*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193746*0 + 3*70*FLEN/8, x4, x1, x2)

inst_64583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af001ffffffffff; valaddr_reg:x3; val_offset:193749*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193749*0 + 3*71*FLEN/8, x4, x1, x2)

inst_64584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af003ffffffffff; valaddr_reg:x3; val_offset:193752*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193752*0 + 3*72*FLEN/8, x4, x1, x2)

inst_64585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af007ffffffffff; valaddr_reg:x3; val_offset:193755*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193755*0 + 3*73*FLEN/8, x4, x1, x2)

inst_64586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af00fffffffffff; valaddr_reg:x3; val_offset:193758*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193758*0 + 3*74*FLEN/8, x4, x1, x2)

inst_64587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af01fffffffffff; valaddr_reg:x3; val_offset:193761*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193761*0 + 3*75*FLEN/8, x4, x1, x2)

inst_64588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af03fffffffffff; valaddr_reg:x3; val_offset:193764*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193764*0 + 3*76*FLEN/8, x4, x1, x2)

inst_64589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af07fffffffffff; valaddr_reg:x3; val_offset:193767*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193767*0 + 3*77*FLEN/8, x4, x1, x2)

inst_64590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af0ffffffffffff; valaddr_reg:x3; val_offset:193770*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193770*0 + 3*78*FLEN/8, x4, x1, x2)

inst_64591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af1ffffffffffff; valaddr_reg:x3; val_offset:193773*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193773*0 + 3*79*FLEN/8, x4, x1, x2)

inst_64592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af3ffffffffffff; valaddr_reg:x3; val_offset:193776*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193776*0 + 3*80*FLEN/8, x4, x1, x2)

inst_64593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af7ffffffffffff; valaddr_reg:x3; val_offset:193779*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193779*0 + 3*81*FLEN/8, x4, x1, x2)

inst_64594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3af8000000000000; valaddr_reg:x3; val_offset:193782*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193782*0 + 3*82*FLEN/8, x4, x1, x2)

inst_64595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afc000000000000; valaddr_reg:x3; val_offset:193785*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193785*0 + 3*83*FLEN/8, x4, x1, x2)

inst_64596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afe000000000000; valaddr_reg:x3; val_offset:193788*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193788*0 + 3*84*FLEN/8, x4, x1, x2)

inst_64597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3aff000000000000; valaddr_reg:x3; val_offset:193791*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193791*0 + 3*85*FLEN/8, x4, x1, x2)

inst_64598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3aff800000000000; valaddr_reg:x3; val_offset:193794*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193794*0 + 3*86*FLEN/8, x4, x1, x2)

inst_64599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affc00000000000; valaddr_reg:x3; val_offset:193797*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193797*0 + 3*87*FLEN/8, x4, x1, x2)

inst_64600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affe00000000000; valaddr_reg:x3; val_offset:193800*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193800*0 + 3*88*FLEN/8, x4, x1, x2)

inst_64601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afff00000000000; valaddr_reg:x3; val_offset:193803*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193803*0 + 3*89*FLEN/8, x4, x1, x2)

inst_64602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afff80000000000; valaddr_reg:x3; val_offset:193806*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193806*0 + 3*90*FLEN/8, x4, x1, x2)

inst_64603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffc0000000000; valaddr_reg:x3; val_offset:193809*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193809*0 + 3*91*FLEN/8, x4, x1, x2)

inst_64604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffe0000000000; valaddr_reg:x3; val_offset:193812*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193812*0 + 3*92*FLEN/8, x4, x1, x2)

inst_64605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affff0000000000; valaddr_reg:x3; val_offset:193815*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193815*0 + 3*93*FLEN/8, x4, x1, x2)

inst_64606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affff8000000000; valaddr_reg:x3; val_offset:193818*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193818*0 + 3*94*FLEN/8, x4, x1, x2)

inst_64607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffc000000000; valaddr_reg:x3; val_offset:193821*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193821*0 + 3*95*FLEN/8, x4, x1, x2)

inst_64608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffe000000000; valaddr_reg:x3; val_offset:193824*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193824*0 + 3*96*FLEN/8, x4, x1, x2)

inst_64609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffff000000000; valaddr_reg:x3; val_offset:193827*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193827*0 + 3*97*FLEN/8, x4, x1, x2)

inst_64610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffff800000000; valaddr_reg:x3; val_offset:193830*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193830*0 + 3*98*FLEN/8, x4, x1, x2)

inst_64611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffc00000000; valaddr_reg:x3; val_offset:193833*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193833*0 + 3*99*FLEN/8, x4, x1, x2)

inst_64612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffe00000000; valaddr_reg:x3; val_offset:193836*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193836*0 + 3*100*FLEN/8, x4, x1, x2)

inst_64613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffff00000000; valaddr_reg:x3; val_offset:193839*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193839*0 + 3*101*FLEN/8, x4, x1, x2)

inst_64614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffff80000000; valaddr_reg:x3; val_offset:193842*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193842*0 + 3*102*FLEN/8, x4, x1, x2)

inst_64615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffc0000000; valaddr_reg:x3; val_offset:193845*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193845*0 + 3*103*FLEN/8, x4, x1, x2)

inst_64616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffe0000000; valaddr_reg:x3; val_offset:193848*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193848*0 + 3*104*FLEN/8, x4, x1, x2)

inst_64617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffff0000000; valaddr_reg:x3; val_offset:193851*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193851*0 + 3*105*FLEN/8, x4, x1, x2)

inst_64618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffff8000000; valaddr_reg:x3; val_offset:193854*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193854*0 + 3*106*FLEN/8, x4, x1, x2)

inst_64619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffc000000; valaddr_reg:x3; val_offset:193857*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193857*0 + 3*107*FLEN/8, x4, x1, x2)

inst_64620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffe000000; valaddr_reg:x3; val_offset:193860*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193860*0 + 3*108*FLEN/8, x4, x1, x2)

inst_64621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffff000000; valaddr_reg:x3; val_offset:193863*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193863*0 + 3*109*FLEN/8, x4, x1, x2)

inst_64622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffff800000; valaddr_reg:x3; val_offset:193866*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193866*0 + 3*110*FLEN/8, x4, x1, x2)

inst_64623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffc00000; valaddr_reg:x3; val_offset:193869*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193869*0 + 3*111*FLEN/8, x4, x1, x2)

inst_64624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffe00000; valaddr_reg:x3; val_offset:193872*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193872*0 + 3*112*FLEN/8, x4, x1, x2)

inst_64625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffff00000; valaddr_reg:x3; val_offset:193875*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193875*0 + 3*113*FLEN/8, x4, x1, x2)

inst_64626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffff80000; valaddr_reg:x3; val_offset:193878*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193878*0 + 3*114*FLEN/8, x4, x1, x2)

inst_64627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffc0000; valaddr_reg:x3; val_offset:193881*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193881*0 + 3*115*FLEN/8, x4, x1, x2)

inst_64628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffe0000; valaddr_reg:x3; val_offset:193884*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193884*0 + 3*116*FLEN/8, x4, x1, x2)

inst_64629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffff0000; valaddr_reg:x3; val_offset:193887*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193887*0 + 3*117*FLEN/8, x4, x1, x2)

inst_64630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffff8000; valaddr_reg:x3; val_offset:193890*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193890*0 + 3*118*FLEN/8, x4, x1, x2)

inst_64631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffffc000; valaddr_reg:x3; val_offset:193893*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193893*0 + 3*119*FLEN/8, x4, x1, x2)

inst_64632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffffe000; valaddr_reg:x3; val_offset:193896*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193896*0 + 3*120*FLEN/8, x4, x1, x2)

inst_64633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffff000; valaddr_reg:x3; val_offset:193899*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193899*0 + 3*121*FLEN/8, x4, x1, x2)

inst_64634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffff800; valaddr_reg:x3; val_offset:193902*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193902*0 + 3*122*FLEN/8, x4, x1, x2)

inst_64635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffffc00; valaddr_reg:x3; val_offset:193905*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193905*0 + 3*123*FLEN/8, x4, x1, x2)

inst_64636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffffe00; valaddr_reg:x3; val_offset:193908*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193908*0 + 3*124*FLEN/8, x4, x1, x2)

inst_64637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffffff00; valaddr_reg:x3; val_offset:193911*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193911*0 + 3*125*FLEN/8, x4, x1, x2)

inst_64638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffffff80; valaddr_reg:x3; val_offset:193914*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193914*0 + 3*126*FLEN/8, x4, x1, x2)

inst_64639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffffffc0; valaddr_reg:x3; val_offset:193917*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193917*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_64640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffffffe0; valaddr_reg:x3; val_offset:193920*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193920*0 + 3*128*FLEN/8, x4, x1, x2)

inst_64641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffffff0; valaddr_reg:x3; val_offset:193923*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193923*0 + 3*129*FLEN/8, x4, x1, x2)

inst_64642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffffff8; valaddr_reg:x3; val_offset:193926*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193926*0 + 3*130*FLEN/8, x4, x1, x2)

inst_64643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffffffc; valaddr_reg:x3; val_offset:193929*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193929*0 + 3*131*FLEN/8, x4, x1, x2)

inst_64644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3afffffffffffffe; valaddr_reg:x3; val_offset:193932*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193932*0 + 3*132*FLEN/8, x4, x1, x2)

inst_64645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3affffffffffffff; valaddr_reg:x3; val_offset:193935*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193935*0 + 3*133*FLEN/8, x4, x1, x2)

inst_64646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:193938*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193938*0 + 3*134*FLEN/8, x4, x1, x2)

inst_64647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:193941*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193941*0 + 3*135*FLEN/8, x4, x1, x2)

inst_64648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:193944*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193944*0 + 3*136*FLEN/8, x4, x1, x2)

inst_64649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:193947*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193947*0 + 3*137*FLEN/8, x4, x1, x2)

inst_64650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:193950*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193950*0 + 3*138*FLEN/8, x4, x1, x2)

inst_64651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:193953*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193953*0 + 3*139*FLEN/8, x4, x1, x2)

inst_64652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:193956*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193956*0 + 3*140*FLEN/8, x4, x1, x2)

inst_64653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:193959*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193959*0 + 3*141*FLEN/8, x4, x1, x2)

inst_64654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:193962*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193962*0 + 3*142*FLEN/8, x4, x1, x2)

inst_64655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:193965*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193965*0 + 3*143*FLEN/8, x4, x1, x2)

inst_64656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:193968*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193968*0 + 3*144*FLEN/8, x4, x1, x2)

inst_64657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:193971*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193971*0 + 3*145*FLEN/8, x4, x1, x2)

inst_64658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:193974*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193974*0 + 3*146*FLEN/8, x4, x1, x2)

inst_64659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:193977*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193977*0 + 3*147*FLEN/8, x4, x1, x2)

inst_64660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:193980*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193980*0 + 3*148*FLEN/8, x4, x1, x2)

inst_64661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:193983*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193983*0 + 3*149*FLEN/8, x4, x1, x2)

inst_64662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:193986*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193986*0 + 3*150*FLEN/8, x4, x1, x2)

inst_64663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:193989*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193989*0 + 3*151*FLEN/8, x4, x1, x2)

inst_64664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:193992*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193992*0 + 3*152*FLEN/8, x4, x1, x2)

inst_64665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:193995*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193995*0 + 3*153*FLEN/8, x4, x1, x2)

inst_64666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:193998*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 193998*0 + 3*154*FLEN/8, x4, x1, x2)

inst_64667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ecd5abf2997d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9b2394be493ec and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ecd5abf2997d; op2val:0x2039b2394be493ec;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:194001*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194001*0 + 3*155*FLEN/8, x4, x1, x2)

inst_64668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000000000000; valaddr_reg:x3; val_offset:194004*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194004*0 + 3*156*FLEN/8, x4, x1, x2)

inst_64669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000000000001; valaddr_reg:x3; val_offset:194007*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194007*0 + 3*157*FLEN/8, x4, x1, x2)

inst_64670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000000000003; valaddr_reg:x3; val_offset:194010*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194010*0 + 3*158*FLEN/8, x4, x1, x2)

inst_64671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000000000007; valaddr_reg:x3; val_offset:194013*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194013*0 + 3*159*FLEN/8, x4, x1, x2)

inst_64672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000000000000f; valaddr_reg:x3; val_offset:194016*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194016*0 + 3*160*FLEN/8, x4, x1, x2)

inst_64673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000000000001f; valaddr_reg:x3; val_offset:194019*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194019*0 + 3*161*FLEN/8, x4, x1, x2)

inst_64674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000000000003f; valaddr_reg:x3; val_offset:194022*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194022*0 + 3*162*FLEN/8, x4, x1, x2)

inst_64675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000000000007f; valaddr_reg:x3; val_offset:194025*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194025*0 + 3*163*FLEN/8, x4, x1, x2)

inst_64676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900000000000ff; valaddr_reg:x3; val_offset:194028*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194028*0 + 3*164*FLEN/8, x4, x1, x2)

inst_64677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900000000001ff; valaddr_reg:x3; val_offset:194031*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194031*0 + 3*165*FLEN/8, x4, x1, x2)

inst_64678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900000000003ff; valaddr_reg:x3; val_offset:194034*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194034*0 + 3*166*FLEN/8, x4, x1, x2)

inst_64679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900000000007ff; valaddr_reg:x3; val_offset:194037*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194037*0 + 3*167*FLEN/8, x4, x1, x2)

inst_64680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000000000fff; valaddr_reg:x3; val_offset:194040*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194040*0 + 3*168*FLEN/8, x4, x1, x2)

inst_64681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000000001fff; valaddr_reg:x3; val_offset:194043*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194043*0 + 3*169*FLEN/8, x4, x1, x2)

inst_64682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000000003fff; valaddr_reg:x3; val_offset:194046*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194046*0 + 3*170*FLEN/8, x4, x1, x2)

inst_64683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000000007fff; valaddr_reg:x3; val_offset:194049*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194049*0 + 3*171*FLEN/8, x4, x1, x2)

inst_64684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000000000ffff; valaddr_reg:x3; val_offset:194052*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194052*0 + 3*172*FLEN/8, x4, x1, x2)

inst_64685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000000001ffff; valaddr_reg:x3; val_offset:194055*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194055*0 + 3*173*FLEN/8, x4, x1, x2)

inst_64686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000000003ffff; valaddr_reg:x3; val_offset:194058*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194058*0 + 3*174*FLEN/8, x4, x1, x2)

inst_64687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000000007ffff; valaddr_reg:x3; val_offset:194061*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194061*0 + 3*175*FLEN/8, x4, x1, x2)

inst_64688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900000000fffff; valaddr_reg:x3; val_offset:194064*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194064*0 + 3*176*FLEN/8, x4, x1, x2)

inst_64689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900000001fffff; valaddr_reg:x3; val_offset:194067*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194067*0 + 3*177*FLEN/8, x4, x1, x2)

inst_64690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900000003fffff; valaddr_reg:x3; val_offset:194070*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194070*0 + 3*178*FLEN/8, x4, x1, x2)

inst_64691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900000007fffff; valaddr_reg:x3; val_offset:194073*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194073*0 + 3*179*FLEN/8, x4, x1, x2)

inst_64692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000000ffffff; valaddr_reg:x3; val_offset:194076*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194076*0 + 3*180*FLEN/8, x4, x1, x2)

inst_64693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000001ffffff; valaddr_reg:x3; val_offset:194079*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194079*0 + 3*181*FLEN/8, x4, x1, x2)

inst_64694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000003ffffff; valaddr_reg:x3; val_offset:194082*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194082*0 + 3*182*FLEN/8, x4, x1, x2)

inst_64695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000007ffffff; valaddr_reg:x3; val_offset:194085*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194085*0 + 3*183*FLEN/8, x4, x1, x2)

inst_64696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000000fffffff; valaddr_reg:x3; val_offset:194088*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194088*0 + 3*184*FLEN/8, x4, x1, x2)

inst_64697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000001fffffff; valaddr_reg:x3; val_offset:194091*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194091*0 + 3*185*FLEN/8, x4, x1, x2)

inst_64698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000003fffffff; valaddr_reg:x3; val_offset:194094*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194094*0 + 3*186*FLEN/8, x4, x1, x2)

inst_64699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000007fffffff; valaddr_reg:x3; val_offset:194097*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194097*0 + 3*187*FLEN/8, x4, x1, x2)

inst_64700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900000ffffffff; valaddr_reg:x3; val_offset:194100*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194100*0 + 3*188*FLEN/8, x4, x1, x2)

inst_64701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900001ffffffff; valaddr_reg:x3; val_offset:194103*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194103*0 + 3*189*FLEN/8, x4, x1, x2)

inst_64702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900003ffffffff; valaddr_reg:x3; val_offset:194106*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194106*0 + 3*190*FLEN/8, x4, x1, x2)

inst_64703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900007ffffffff; valaddr_reg:x3; val_offset:194109*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194109*0 + 3*191*FLEN/8, x4, x1, x2)

inst_64704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790000fffffffff; valaddr_reg:x3; val_offset:194112*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194112*0 + 3*192*FLEN/8, x4, x1, x2)

inst_64705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790001fffffffff; valaddr_reg:x3; val_offset:194115*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194115*0 + 3*193*FLEN/8, x4, x1, x2)

inst_64706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790003fffffffff; valaddr_reg:x3; val_offset:194118*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194118*0 + 3*194*FLEN/8, x4, x1, x2)

inst_64707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790007fffffffff; valaddr_reg:x3; val_offset:194121*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194121*0 + 3*195*FLEN/8, x4, x1, x2)

inst_64708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79000ffffffffff; valaddr_reg:x3; val_offset:194124*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194124*0 + 3*196*FLEN/8, x4, x1, x2)

inst_64709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79001ffffffffff; valaddr_reg:x3; val_offset:194127*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194127*0 + 3*197*FLEN/8, x4, x1, x2)

inst_64710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79003ffffffffff; valaddr_reg:x3; val_offset:194130*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194130*0 + 3*198*FLEN/8, x4, x1, x2)

inst_64711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79007ffffffffff; valaddr_reg:x3; val_offset:194133*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194133*0 + 3*199*FLEN/8, x4, x1, x2)

inst_64712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7900fffffffffff; valaddr_reg:x3; val_offset:194136*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194136*0 + 3*200*FLEN/8, x4, x1, x2)

inst_64713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7901fffffffffff; valaddr_reg:x3; val_offset:194139*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194139*0 + 3*201*FLEN/8, x4, x1, x2)

inst_64714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7903fffffffffff; valaddr_reg:x3; val_offset:194142*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194142*0 + 3*202*FLEN/8, x4, x1, x2)

inst_64715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb7907fffffffffff; valaddr_reg:x3; val_offset:194145*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194145*0 + 3*203*FLEN/8, x4, x1, x2)

inst_64716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb790ffffffffffff; valaddr_reg:x3; val_offset:194148*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194148*0 + 3*204*FLEN/8, x4, x1, x2)

inst_64717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb791ffffffffffff; valaddr_reg:x3; val_offset:194151*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194151*0 + 3*205*FLEN/8, x4, x1, x2)

inst_64718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb793ffffffffffff; valaddr_reg:x3; val_offset:194154*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194154*0 + 3*206*FLEN/8, x4, x1, x2)

inst_64719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb797ffffffffffff; valaddr_reg:x3; val_offset:194157*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194157*0 + 3*207*FLEN/8, x4, x1, x2)

inst_64720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb798000000000000; valaddr_reg:x3; val_offset:194160*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194160*0 + 3*208*FLEN/8, x4, x1, x2)

inst_64721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79c000000000000; valaddr_reg:x3; val_offset:194163*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194163*0 + 3*209*FLEN/8, x4, x1, x2)

inst_64722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79e000000000000; valaddr_reg:x3; val_offset:194166*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194166*0 + 3*210*FLEN/8, x4, x1, x2)

inst_64723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79f000000000000; valaddr_reg:x3; val_offset:194169*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194169*0 + 3*211*FLEN/8, x4, x1, x2)

inst_64724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79f800000000000; valaddr_reg:x3; val_offset:194172*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194172*0 + 3*212*FLEN/8, x4, x1, x2)

inst_64725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fc00000000000; valaddr_reg:x3; val_offset:194175*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194175*0 + 3*213*FLEN/8, x4, x1, x2)

inst_64726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fe00000000000; valaddr_reg:x3; val_offset:194178*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194178*0 + 3*214*FLEN/8, x4, x1, x2)

inst_64727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ff00000000000; valaddr_reg:x3; val_offset:194181*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194181*0 + 3*215*FLEN/8, x4, x1, x2)

inst_64728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ff80000000000; valaddr_reg:x3; val_offset:194184*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194184*0 + 3*216*FLEN/8, x4, x1, x2)

inst_64729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffc0000000000; valaddr_reg:x3; val_offset:194187*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194187*0 + 3*217*FLEN/8, x4, x1, x2)

inst_64730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffe0000000000; valaddr_reg:x3; val_offset:194190*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194190*0 + 3*218*FLEN/8, x4, x1, x2)

inst_64731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fff0000000000; valaddr_reg:x3; val_offset:194193*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194193*0 + 3*219*FLEN/8, x4, x1, x2)

inst_64732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fff8000000000; valaddr_reg:x3; val_offset:194196*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194196*0 + 3*220*FLEN/8, x4, x1, x2)

inst_64733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffc000000000; valaddr_reg:x3; val_offset:194199*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194199*0 + 3*221*FLEN/8, x4, x1, x2)

inst_64734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffe000000000; valaddr_reg:x3; val_offset:194202*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194202*0 + 3*222*FLEN/8, x4, x1, x2)

inst_64735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffff000000000; valaddr_reg:x3; val_offset:194205*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194205*0 + 3*223*FLEN/8, x4, x1, x2)

inst_64736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffff800000000; valaddr_reg:x3; val_offset:194208*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194208*0 + 3*224*FLEN/8, x4, x1, x2)

inst_64737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffc00000000; valaddr_reg:x3; val_offset:194211*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194211*0 + 3*225*FLEN/8, x4, x1, x2)

inst_64738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffe00000000; valaddr_reg:x3; val_offset:194214*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194214*0 + 3*226*FLEN/8, x4, x1, x2)

inst_64739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffff00000000; valaddr_reg:x3; val_offset:194217*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194217*0 + 3*227*FLEN/8, x4, x1, x2)

inst_64740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffff80000000; valaddr_reg:x3; val_offset:194220*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194220*0 + 3*228*FLEN/8, x4, x1, x2)

inst_64741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffc0000000; valaddr_reg:x3; val_offset:194223*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194223*0 + 3*229*FLEN/8, x4, x1, x2)

inst_64742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffe0000000; valaddr_reg:x3; val_offset:194226*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194226*0 + 3*230*FLEN/8, x4, x1, x2)

inst_64743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffff0000000; valaddr_reg:x3; val_offset:194229*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194229*0 + 3*231*FLEN/8, x4, x1, x2)

inst_64744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffff8000000; valaddr_reg:x3; val_offset:194232*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194232*0 + 3*232*FLEN/8, x4, x1, x2)

inst_64745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffc000000; valaddr_reg:x3; val_offset:194235*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194235*0 + 3*233*FLEN/8, x4, x1, x2)

inst_64746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffe000000; valaddr_reg:x3; val_offset:194238*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194238*0 + 3*234*FLEN/8, x4, x1, x2)

inst_64747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffff000000; valaddr_reg:x3; val_offset:194241*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194241*0 + 3*235*FLEN/8, x4, x1, x2)

inst_64748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffff800000; valaddr_reg:x3; val_offset:194244*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194244*0 + 3*236*FLEN/8, x4, x1, x2)

inst_64749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffc00000; valaddr_reg:x3; val_offset:194247*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194247*0 + 3*237*FLEN/8, x4, x1, x2)

inst_64750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffe00000; valaddr_reg:x3; val_offset:194250*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194250*0 + 3*238*FLEN/8, x4, x1, x2)

inst_64751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffff00000; valaddr_reg:x3; val_offset:194253*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194253*0 + 3*239*FLEN/8, x4, x1, x2)

inst_64752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffff80000; valaddr_reg:x3; val_offset:194256*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194256*0 + 3*240*FLEN/8, x4, x1, x2)

inst_64753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffc0000; valaddr_reg:x3; val_offset:194259*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194259*0 + 3*241*FLEN/8, x4, x1, x2)

inst_64754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffe0000; valaddr_reg:x3; val_offset:194262*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194262*0 + 3*242*FLEN/8, x4, x1, x2)

inst_64755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffff0000; valaddr_reg:x3; val_offset:194265*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194265*0 + 3*243*FLEN/8, x4, x1, x2)

inst_64756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffff8000; valaddr_reg:x3; val_offset:194268*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194268*0 + 3*244*FLEN/8, x4, x1, x2)

inst_64757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffffc000; valaddr_reg:x3; val_offset:194271*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194271*0 + 3*245*FLEN/8, x4, x1, x2)

inst_64758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffffe000; valaddr_reg:x3; val_offset:194274*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194274*0 + 3*246*FLEN/8, x4, x1, x2)

inst_64759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffff000; valaddr_reg:x3; val_offset:194277*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194277*0 + 3*247*FLEN/8, x4, x1, x2)

inst_64760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffff800; valaddr_reg:x3; val_offset:194280*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194280*0 + 3*248*FLEN/8, x4, x1, x2)

inst_64761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffffc00; valaddr_reg:x3; val_offset:194283*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194283*0 + 3*249*FLEN/8, x4, x1, x2)

inst_64762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffffe00; valaddr_reg:x3; val_offset:194286*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194286*0 + 3*250*FLEN/8, x4, x1, x2)

inst_64763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffffff00; valaddr_reg:x3; val_offset:194289*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194289*0 + 3*251*FLEN/8, x4, x1, x2)

inst_64764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffffff80; valaddr_reg:x3; val_offset:194292*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194292*0 + 3*252*FLEN/8, x4, x1, x2)

inst_64765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffffffc0; valaddr_reg:x3; val_offset:194295*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194295*0 + 3*253*FLEN/8, x4, x1, x2)

inst_64766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffffffe0; valaddr_reg:x3; val_offset:194298*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194298*0 + 3*254*FLEN/8, x4, x1, x2)

inst_64767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffffff0; valaddr_reg:x3; val_offset:194301*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194301*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_64768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffffff8; valaddr_reg:x3; val_offset:194304*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194304*0 + 3*256*FLEN/8, x4, x1, x2)

inst_64769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffffffc; valaddr_reg:x3; val_offset:194307*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194307*0 + 3*257*FLEN/8, x4, x1, x2)

inst_64770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79ffffffffffffe; valaddr_reg:x3; val_offset:194310*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194310*0 + 3*258*FLEN/8, x4, x1, x2)

inst_64771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x379 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xb79fffffffffffff; valaddr_reg:x3; val_offset:194313*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194313*0 + 3*259*FLEN/8, x4, x1, x2)

inst_64772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:194316*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194316*0 + 3*260*FLEN/8, x4, x1, x2)

inst_64773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:194319*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194319*0 + 3*261*FLEN/8, x4, x1, x2)

inst_64774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:194322*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194322*0 + 3*262*FLEN/8, x4, x1, x2)

inst_64775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:194325*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194325*0 + 3*263*FLEN/8, x4, x1, x2)

inst_64776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:194328*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194328*0 + 3*264*FLEN/8, x4, x1, x2)

inst_64777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:194331*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194331*0 + 3*265*FLEN/8, x4, x1, x2)

inst_64778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:194334*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194334*0 + 3*266*FLEN/8, x4, x1, x2)

inst_64779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:194337*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194337*0 + 3*267*FLEN/8, x4, x1, x2)

inst_64780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:194340*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194340*0 + 3*268*FLEN/8, x4, x1, x2)

inst_64781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:194343*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194343*0 + 3*269*FLEN/8, x4, x1, x2)

inst_64782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:194346*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194346*0 + 3*270*FLEN/8, x4, x1, x2)

inst_64783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:194349*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194349*0 + 3*271*FLEN/8, x4, x1, x2)

inst_64784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:194352*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194352*0 + 3*272*FLEN/8, x4, x1, x2)

inst_64785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:194355*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194355*0 + 3*273*FLEN/8, x4, x1, x2)

inst_64786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:194358*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194358*0 + 3*274*FLEN/8, x4, x1, x2)

inst_64787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:194361*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194361*0 + 3*275*FLEN/8, x4, x1, x2)

inst_64788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:194364*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194364*0 + 3*276*FLEN/8, x4, x1, x2)

inst_64789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:194367*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194367*0 + 3*277*FLEN/8, x4, x1, x2)

inst_64790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:194370*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194370*0 + 3*278*FLEN/8, x4, x1, x2)

inst_64791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:194373*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194373*0 + 3*279*FLEN/8, x4, x1, x2)

inst_64792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:194376*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194376*0 + 3*280*FLEN/8, x4, x1, x2)

inst_64793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ef03938bd059 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9af6a1bfe3949 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3ef03938bd059; op2val:0x9fc9af6a1bfe3949;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:194379*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194379*0 + 3*281*FLEN/8, x4, x1, x2)

inst_64794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:194382*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194382*0 + 3*282*FLEN/8, x4, x1, x2)

inst_64795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:194385*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194385*0 + 3*283*FLEN/8, x4, x1, x2)

inst_64796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:194388*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194388*0 + 3*284*FLEN/8, x4, x1, x2)

inst_64797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:194391*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194391*0 + 3*285*FLEN/8, x4, x1, x2)

inst_64798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:194394*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194394*0 + 3*286*FLEN/8, x4, x1, x2)

inst_64799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:194397*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194397*0 + 3*287*FLEN/8, x4, x1, x2)

inst_64800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:194400*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194400*0 + 3*288*FLEN/8, x4, x1, x2)

inst_64801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:194403*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194403*0 + 3*289*FLEN/8, x4, x1, x2)

inst_64802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:194406*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194406*0 + 3*290*FLEN/8, x4, x1, x2)

inst_64803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:194409*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194409*0 + 3*291*FLEN/8, x4, x1, x2)

inst_64804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:194412*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194412*0 + 3*292*FLEN/8, x4, x1, x2)

inst_64805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:194415*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194415*0 + 3*293*FLEN/8, x4, x1, x2)

inst_64806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:194418*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194418*0 + 3*294*FLEN/8, x4, x1, x2)

inst_64807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:194421*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194421*0 + 3*295*FLEN/8, x4, x1, x2)

inst_64808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:194424*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194424*0 + 3*296*FLEN/8, x4, x1, x2)

inst_64809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:194427*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194427*0 + 3*297*FLEN/8, x4, x1, x2)

inst_64810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:194430*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194430*0 + 3*298*FLEN/8, x4, x1, x2)

inst_64811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:194433*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194433*0 + 3*299*FLEN/8, x4, x1, x2)

inst_64812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:194436*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194436*0 + 3*300*FLEN/8, x4, x1, x2)

inst_64813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:194439*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194439*0 + 3*301*FLEN/8, x4, x1, x2)

inst_64814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:194442*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194442*0 + 3*302*FLEN/8, x4, x1, x2)

inst_64815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:194445*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194445*0 + 3*303*FLEN/8, x4, x1, x2)

inst_64816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000000000000; valaddr_reg:x3; val_offset:194448*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194448*0 + 3*304*FLEN/8, x4, x1, x2)

inst_64817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000000000001; valaddr_reg:x3; val_offset:194451*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194451*0 + 3*305*FLEN/8, x4, x1, x2)

inst_64818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000000000003; valaddr_reg:x3; val_offset:194454*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194454*0 + 3*306*FLEN/8, x4, x1, x2)

inst_64819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000000000007; valaddr_reg:x3; val_offset:194457*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194457*0 + 3*307*FLEN/8, x4, x1, x2)

inst_64820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000000000000f; valaddr_reg:x3; val_offset:194460*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194460*0 + 3*308*FLEN/8, x4, x1, x2)

inst_64821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000000000001f; valaddr_reg:x3; val_offset:194463*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194463*0 + 3*309*FLEN/8, x4, x1, x2)

inst_64822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000000000003f; valaddr_reg:x3; val_offset:194466*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194466*0 + 3*310*FLEN/8, x4, x1, x2)

inst_64823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000000000007f; valaddr_reg:x3; val_offset:194469*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194469*0 + 3*311*FLEN/8, x4, x1, x2)

inst_64824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00000000000ff; valaddr_reg:x3; val_offset:194472*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194472*0 + 3*312*FLEN/8, x4, x1, x2)

inst_64825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00000000001ff; valaddr_reg:x3; val_offset:194475*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194475*0 + 3*313*FLEN/8, x4, x1, x2)

inst_64826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00000000003ff; valaddr_reg:x3; val_offset:194478*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194478*0 + 3*314*FLEN/8, x4, x1, x2)

inst_64827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00000000007ff; valaddr_reg:x3; val_offset:194481*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194481*0 + 3*315*FLEN/8, x4, x1, x2)

inst_64828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000000000fff; valaddr_reg:x3; val_offset:194484*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194484*0 + 3*316*FLEN/8, x4, x1, x2)

inst_64829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000000001fff; valaddr_reg:x3; val_offset:194487*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194487*0 + 3*317*FLEN/8, x4, x1, x2)

inst_64830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000000003fff; valaddr_reg:x3; val_offset:194490*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194490*0 + 3*318*FLEN/8, x4, x1, x2)

inst_64831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000000007fff; valaddr_reg:x3; val_offset:194493*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194493*0 + 3*319*FLEN/8, x4, x1, x2)

inst_64832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000000000ffff; valaddr_reg:x3; val_offset:194496*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194496*0 + 3*320*FLEN/8, x4, x1, x2)

inst_64833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000000001ffff; valaddr_reg:x3; val_offset:194499*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194499*0 + 3*321*FLEN/8, x4, x1, x2)

inst_64834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000000003ffff; valaddr_reg:x3; val_offset:194502*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194502*0 + 3*322*FLEN/8, x4, x1, x2)

inst_64835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000000007ffff; valaddr_reg:x3; val_offset:194505*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194505*0 + 3*323*FLEN/8, x4, x1, x2)

inst_64836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00000000fffff; valaddr_reg:x3; val_offset:194508*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194508*0 + 3*324*FLEN/8, x4, x1, x2)

inst_64837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00000001fffff; valaddr_reg:x3; val_offset:194511*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194511*0 + 3*325*FLEN/8, x4, x1, x2)

inst_64838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00000003fffff; valaddr_reg:x3; val_offset:194514*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194514*0 + 3*326*FLEN/8, x4, x1, x2)

inst_64839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00000007fffff; valaddr_reg:x3; val_offset:194517*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194517*0 + 3*327*FLEN/8, x4, x1, x2)

inst_64840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000000ffffff; valaddr_reg:x3; val_offset:194520*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194520*0 + 3*328*FLEN/8, x4, x1, x2)

inst_64841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000001ffffff; valaddr_reg:x3; val_offset:194523*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194523*0 + 3*329*FLEN/8, x4, x1, x2)

inst_64842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000003ffffff; valaddr_reg:x3; val_offset:194526*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194526*0 + 3*330*FLEN/8, x4, x1, x2)

inst_64843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000007ffffff; valaddr_reg:x3; val_offset:194529*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194529*0 + 3*331*FLEN/8, x4, x1, x2)

inst_64844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000000fffffff; valaddr_reg:x3; val_offset:194532*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194532*0 + 3*332*FLEN/8, x4, x1, x2)

inst_64845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000001fffffff; valaddr_reg:x3; val_offset:194535*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194535*0 + 3*333*FLEN/8, x4, x1, x2)

inst_64846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000003fffffff; valaddr_reg:x3; val_offset:194538*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194538*0 + 3*334*FLEN/8, x4, x1, x2)

inst_64847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000007fffffff; valaddr_reg:x3; val_offset:194541*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194541*0 + 3*335*FLEN/8, x4, x1, x2)

inst_64848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00000ffffffff; valaddr_reg:x3; val_offset:194544*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194544*0 + 3*336*FLEN/8, x4, x1, x2)

inst_64849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00001ffffffff; valaddr_reg:x3; val_offset:194547*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194547*0 + 3*337*FLEN/8, x4, x1, x2)

inst_64850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00003ffffffff; valaddr_reg:x3; val_offset:194550*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194550*0 + 3*338*FLEN/8, x4, x1, x2)

inst_64851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00007ffffffff; valaddr_reg:x3; val_offset:194553*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194553*0 + 3*339*FLEN/8, x4, x1, x2)

inst_64852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0000fffffffff; valaddr_reg:x3; val_offset:194556*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194556*0 + 3*340*FLEN/8, x4, x1, x2)

inst_64853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0001fffffffff; valaddr_reg:x3; val_offset:194559*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194559*0 + 3*341*FLEN/8, x4, x1, x2)

inst_64854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0003fffffffff; valaddr_reg:x3; val_offset:194562*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194562*0 + 3*342*FLEN/8, x4, x1, x2)

inst_64855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0007fffffffff; valaddr_reg:x3; val_offset:194565*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194565*0 + 3*343*FLEN/8, x4, x1, x2)

inst_64856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f000ffffffffff; valaddr_reg:x3; val_offset:194568*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194568*0 + 3*344*FLEN/8, x4, x1, x2)

inst_64857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f001ffffffffff; valaddr_reg:x3; val_offset:194571*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194571*0 + 3*345*FLEN/8, x4, x1, x2)

inst_64858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f003ffffffffff; valaddr_reg:x3; val_offset:194574*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194574*0 + 3*346*FLEN/8, x4, x1, x2)

inst_64859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f007ffffffffff; valaddr_reg:x3; val_offset:194577*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194577*0 + 3*347*FLEN/8, x4, x1, x2)

inst_64860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f00fffffffffff; valaddr_reg:x3; val_offset:194580*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194580*0 + 3*348*FLEN/8, x4, x1, x2)

inst_64861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f01fffffffffff; valaddr_reg:x3; val_offset:194583*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194583*0 + 3*349*FLEN/8, x4, x1, x2)

inst_64862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f03fffffffffff; valaddr_reg:x3; val_offset:194586*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194586*0 + 3*350*FLEN/8, x4, x1, x2)

inst_64863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f07fffffffffff; valaddr_reg:x3; val_offset:194589*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194589*0 + 3*351*FLEN/8, x4, x1, x2)

inst_64864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f0ffffffffffff; valaddr_reg:x3; val_offset:194592*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194592*0 + 3*352*FLEN/8, x4, x1, x2)

inst_64865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f1ffffffffffff; valaddr_reg:x3; val_offset:194595*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194595*0 + 3*353*FLEN/8, x4, x1, x2)

inst_64866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f3ffffffffffff; valaddr_reg:x3; val_offset:194598*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194598*0 + 3*354*FLEN/8, x4, x1, x2)

inst_64867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f7ffffffffffff; valaddr_reg:x3; val_offset:194601*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194601*0 + 3*355*FLEN/8, x4, x1, x2)

inst_64868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81f8000000000000; valaddr_reg:x3; val_offset:194604*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194604*0 + 3*356*FLEN/8, x4, x1, x2)

inst_64869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fc000000000000; valaddr_reg:x3; val_offset:194607*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194607*0 + 3*357*FLEN/8, x4, x1, x2)

inst_64870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fe000000000000; valaddr_reg:x3; val_offset:194610*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194610*0 + 3*358*FLEN/8, x4, x1, x2)

inst_64871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ff000000000000; valaddr_reg:x3; val_offset:194613*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194613*0 + 3*359*FLEN/8, x4, x1, x2)

inst_64872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ff800000000000; valaddr_reg:x3; val_offset:194616*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194616*0 + 3*360*FLEN/8, x4, x1, x2)

inst_64873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffc00000000000; valaddr_reg:x3; val_offset:194619*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194619*0 + 3*361*FLEN/8, x4, x1, x2)

inst_64874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffe00000000000; valaddr_reg:x3; val_offset:194622*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194622*0 + 3*362*FLEN/8, x4, x1, x2)

inst_64875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fff00000000000; valaddr_reg:x3; val_offset:194625*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194625*0 + 3*363*FLEN/8, x4, x1, x2)

inst_64876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fff80000000000; valaddr_reg:x3; val_offset:194628*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194628*0 + 3*364*FLEN/8, x4, x1, x2)

inst_64877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffc0000000000; valaddr_reg:x3; val_offset:194631*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194631*0 + 3*365*FLEN/8, x4, x1, x2)

inst_64878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffe0000000000; valaddr_reg:x3; val_offset:194634*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194634*0 + 3*366*FLEN/8, x4, x1, x2)

inst_64879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffff0000000000; valaddr_reg:x3; val_offset:194637*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194637*0 + 3*367*FLEN/8, x4, x1, x2)

inst_64880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffff8000000000; valaddr_reg:x3; val_offset:194640*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194640*0 + 3*368*FLEN/8, x4, x1, x2)

inst_64881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffc000000000; valaddr_reg:x3; val_offset:194643*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194643*0 + 3*369*FLEN/8, x4, x1, x2)

inst_64882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffe000000000; valaddr_reg:x3; val_offset:194646*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194646*0 + 3*370*FLEN/8, x4, x1, x2)

inst_64883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffff000000000; valaddr_reg:x3; val_offset:194649*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194649*0 + 3*371*FLEN/8, x4, x1, x2)

inst_64884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffff800000000; valaddr_reg:x3; val_offset:194652*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194652*0 + 3*372*FLEN/8, x4, x1, x2)

inst_64885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffc00000000; valaddr_reg:x3; val_offset:194655*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194655*0 + 3*373*FLEN/8, x4, x1, x2)

inst_64886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffe00000000; valaddr_reg:x3; val_offset:194658*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194658*0 + 3*374*FLEN/8, x4, x1, x2)

inst_64887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffff00000000; valaddr_reg:x3; val_offset:194661*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194661*0 + 3*375*FLEN/8, x4, x1, x2)

inst_64888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffff80000000; valaddr_reg:x3; val_offset:194664*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194664*0 + 3*376*FLEN/8, x4, x1, x2)

inst_64889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffc0000000; valaddr_reg:x3; val_offset:194667*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194667*0 + 3*377*FLEN/8, x4, x1, x2)

inst_64890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffe0000000; valaddr_reg:x3; val_offset:194670*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194670*0 + 3*378*FLEN/8, x4, x1, x2)

inst_64891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffff0000000; valaddr_reg:x3; val_offset:194673*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194673*0 + 3*379*FLEN/8, x4, x1, x2)

inst_64892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffff8000000; valaddr_reg:x3; val_offset:194676*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194676*0 + 3*380*FLEN/8, x4, x1, x2)

inst_64893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffc000000; valaddr_reg:x3; val_offset:194679*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194679*0 + 3*381*FLEN/8, x4, x1, x2)

inst_64894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffe000000; valaddr_reg:x3; val_offset:194682*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194682*0 + 3*382*FLEN/8, x4, x1, x2)

inst_64895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffff000000; valaddr_reg:x3; val_offset:194685*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194685*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_64896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffff800000; valaddr_reg:x3; val_offset:194688*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194688*0 + 3*384*FLEN/8, x4, x1, x2)

inst_64897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffc00000; valaddr_reg:x3; val_offset:194691*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194691*0 + 3*385*FLEN/8, x4, x1, x2)

inst_64898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffe00000; valaddr_reg:x3; val_offset:194694*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194694*0 + 3*386*FLEN/8, x4, x1, x2)

inst_64899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffff00000; valaddr_reg:x3; val_offset:194697*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194697*0 + 3*387*FLEN/8, x4, x1, x2)

inst_64900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffff80000; valaddr_reg:x3; val_offset:194700*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194700*0 + 3*388*FLEN/8, x4, x1, x2)

inst_64901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffc0000; valaddr_reg:x3; val_offset:194703*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194703*0 + 3*389*FLEN/8, x4, x1, x2)

inst_64902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffe0000; valaddr_reg:x3; val_offset:194706*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194706*0 + 3*390*FLEN/8, x4, x1, x2)

inst_64903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffff0000; valaddr_reg:x3; val_offset:194709*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194709*0 + 3*391*FLEN/8, x4, x1, x2)

inst_64904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffff8000; valaddr_reg:x3; val_offset:194712*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194712*0 + 3*392*FLEN/8, x4, x1, x2)

inst_64905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffffc000; valaddr_reg:x3; val_offset:194715*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194715*0 + 3*393*FLEN/8, x4, x1, x2)

inst_64906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffffe000; valaddr_reg:x3; val_offset:194718*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194718*0 + 3*394*FLEN/8, x4, x1, x2)

inst_64907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffff000; valaddr_reg:x3; val_offset:194721*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194721*0 + 3*395*FLEN/8, x4, x1, x2)

inst_64908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffff800; valaddr_reg:x3; val_offset:194724*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194724*0 + 3*396*FLEN/8, x4, x1, x2)

inst_64909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffffc00; valaddr_reg:x3; val_offset:194727*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194727*0 + 3*397*FLEN/8, x4, x1, x2)

inst_64910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffffe00; valaddr_reg:x3; val_offset:194730*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194730*0 + 3*398*FLEN/8, x4, x1, x2)

inst_64911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffffff00; valaddr_reg:x3; val_offset:194733*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194733*0 + 3*399*FLEN/8, x4, x1, x2)

inst_64912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffffff80; valaddr_reg:x3; val_offset:194736*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194736*0 + 3*400*FLEN/8, x4, x1, x2)

inst_64913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffffffc0; valaddr_reg:x3; val_offset:194739*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194739*0 + 3*401*FLEN/8, x4, x1, x2)

inst_64914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffffffe0; valaddr_reg:x3; val_offset:194742*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194742*0 + 3*402*FLEN/8, x4, x1, x2)

inst_64915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffffff0; valaddr_reg:x3; val_offset:194745*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194745*0 + 3*403*FLEN/8, x4, x1, x2)

inst_64916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffffff8; valaddr_reg:x3; val_offset:194748*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194748*0 + 3*404*FLEN/8, x4, x1, x2)

inst_64917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffffffc; valaddr_reg:x3; val_offset:194751*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194751*0 + 3*405*FLEN/8, x4, x1, x2)

inst_64918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81fffffffffffffe; valaddr_reg:x3; val_offset:194754*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194754*0 + 3*406*FLEN/8, x4, x1, x2)

inst_64919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3f5eeefcc6503 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3f5eeefcc6503; op2val:0x8000;
op3val:0x81ffffffffffffff; valaddr_reg:x3; val_offset:194757*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194757*0 + 3*407*FLEN/8, x4, x1, x2)

inst_64920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:194760*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194760*0 + 3*408*FLEN/8, x4, x1, x2)

inst_64921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:194763*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194763*0 + 3*409*FLEN/8, x4, x1, x2)

inst_64922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:194766*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194766*0 + 3*410*FLEN/8, x4, x1, x2)

inst_64923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:194769*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194769*0 + 3*411*FLEN/8, x4, x1, x2)

inst_64924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:194772*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194772*0 + 3*412*FLEN/8, x4, x1, x2)

inst_64925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:194775*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194775*0 + 3*413*FLEN/8, x4, x1, x2)

inst_64926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:194778*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194778*0 + 3*414*FLEN/8, x4, x1, x2)

inst_64927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:194781*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194781*0 + 3*415*FLEN/8, x4, x1, x2)

inst_64928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:194784*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194784*0 + 3*416*FLEN/8, x4, x1, x2)

inst_64929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:194787*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194787*0 + 3*417*FLEN/8, x4, x1, x2)

inst_64930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:194790*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194790*0 + 3*418*FLEN/8, x4, x1, x2)

inst_64931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:194793*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194793*0 + 3*419*FLEN/8, x4, x1, x2)

inst_64932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:194796*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194796*0 + 3*420*FLEN/8, x4, x1, x2)

inst_64933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:194799*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194799*0 + 3*421*FLEN/8, x4, x1, x2)

inst_64934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:194802*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194802*0 + 3*422*FLEN/8, x4, x1, x2)

inst_64935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:194805*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194805*0 + 3*423*FLEN/8, x4, x1, x2)

inst_64936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:194808*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194808*0 + 3*424*FLEN/8, x4, x1, x2)

inst_64937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:194811*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194811*0 + 3*425*FLEN/8, x4, x1, x2)

inst_64938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:194814*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194814*0 + 3*426*FLEN/8, x4, x1, x2)

inst_64939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:194817*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194817*0 + 3*427*FLEN/8, x4, x1, x2)

inst_64940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:194820*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194820*0 + 3*428*FLEN/8, x4, x1, x2)

inst_64941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:194823*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194823*0 + 3*429*FLEN/8, x4, x1, x2)

inst_64942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000000000000; valaddr_reg:x3; val_offset:194826*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194826*0 + 3*430*FLEN/8, x4, x1, x2)

inst_64943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000000000001; valaddr_reg:x3; val_offset:194829*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194829*0 + 3*431*FLEN/8, x4, x1, x2)

inst_64944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000000000003; valaddr_reg:x3; val_offset:194832*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194832*0 + 3*432*FLEN/8, x4, x1, x2)

inst_64945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000000000007; valaddr_reg:x3; val_offset:194835*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194835*0 + 3*433*FLEN/8, x4, x1, x2)

inst_64946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000000000000f; valaddr_reg:x3; val_offset:194838*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194838*0 + 3*434*FLEN/8, x4, x1, x2)

inst_64947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000000000001f; valaddr_reg:x3; val_offset:194841*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194841*0 + 3*435*FLEN/8, x4, x1, x2)

inst_64948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000000000003f; valaddr_reg:x3; val_offset:194844*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194844*0 + 3*436*FLEN/8, x4, x1, x2)

inst_64949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000000000007f; valaddr_reg:x3; val_offset:194847*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194847*0 + 3*437*FLEN/8, x4, x1, x2)

inst_64950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200000000000ff; valaddr_reg:x3; val_offset:194850*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194850*0 + 3*438*FLEN/8, x4, x1, x2)

inst_64951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200000000001ff; valaddr_reg:x3; val_offset:194853*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194853*0 + 3*439*FLEN/8, x4, x1, x2)

inst_64952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200000000003ff; valaddr_reg:x3; val_offset:194856*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194856*0 + 3*440*FLEN/8, x4, x1, x2)

inst_64953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200000000007ff; valaddr_reg:x3; val_offset:194859*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194859*0 + 3*441*FLEN/8, x4, x1, x2)

inst_64954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000000000fff; valaddr_reg:x3; val_offset:194862*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194862*0 + 3*442*FLEN/8, x4, x1, x2)

inst_64955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000000001fff; valaddr_reg:x3; val_offset:194865*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194865*0 + 3*443*FLEN/8, x4, x1, x2)

inst_64956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000000003fff; valaddr_reg:x3; val_offset:194868*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194868*0 + 3*444*FLEN/8, x4, x1, x2)

inst_64957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000000007fff; valaddr_reg:x3; val_offset:194871*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194871*0 + 3*445*FLEN/8, x4, x1, x2)

inst_64958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000000000ffff; valaddr_reg:x3; val_offset:194874*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194874*0 + 3*446*FLEN/8, x4, x1, x2)

inst_64959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000000001ffff; valaddr_reg:x3; val_offset:194877*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194877*0 + 3*447*FLEN/8, x4, x1, x2)

inst_64960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000000003ffff; valaddr_reg:x3; val_offset:194880*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194880*0 + 3*448*FLEN/8, x4, x1, x2)

inst_64961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000000007ffff; valaddr_reg:x3; val_offset:194883*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194883*0 + 3*449*FLEN/8, x4, x1, x2)

inst_64962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200000000fffff; valaddr_reg:x3; val_offset:194886*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194886*0 + 3*450*FLEN/8, x4, x1, x2)

inst_64963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200000001fffff; valaddr_reg:x3; val_offset:194889*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194889*0 + 3*451*FLEN/8, x4, x1, x2)

inst_64964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200000003fffff; valaddr_reg:x3; val_offset:194892*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194892*0 + 3*452*FLEN/8, x4, x1, x2)

inst_64965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200000007fffff; valaddr_reg:x3; val_offset:194895*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194895*0 + 3*453*FLEN/8, x4, x1, x2)

inst_64966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000000ffffff; valaddr_reg:x3; val_offset:194898*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194898*0 + 3*454*FLEN/8, x4, x1, x2)

inst_64967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000001ffffff; valaddr_reg:x3; val_offset:194901*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194901*0 + 3*455*FLEN/8, x4, x1, x2)

inst_64968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000003ffffff; valaddr_reg:x3; val_offset:194904*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194904*0 + 3*456*FLEN/8, x4, x1, x2)

inst_64969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000007ffffff; valaddr_reg:x3; val_offset:194907*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194907*0 + 3*457*FLEN/8, x4, x1, x2)

inst_64970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000000fffffff; valaddr_reg:x3; val_offset:194910*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194910*0 + 3*458*FLEN/8, x4, x1, x2)

inst_64971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000001fffffff; valaddr_reg:x3; val_offset:194913*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194913*0 + 3*459*FLEN/8, x4, x1, x2)

inst_64972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000003fffffff; valaddr_reg:x3; val_offset:194916*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194916*0 + 3*460*FLEN/8, x4, x1, x2)

inst_64973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000007fffffff; valaddr_reg:x3; val_offset:194919*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194919*0 + 3*461*FLEN/8, x4, x1, x2)

inst_64974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200000ffffffff; valaddr_reg:x3; val_offset:194922*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194922*0 + 3*462*FLEN/8, x4, x1, x2)

inst_64975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200001ffffffff; valaddr_reg:x3; val_offset:194925*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194925*0 + 3*463*FLEN/8, x4, x1, x2)

inst_64976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200003ffffffff; valaddr_reg:x3; val_offset:194928*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194928*0 + 3*464*FLEN/8, x4, x1, x2)

inst_64977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200007ffffffff; valaddr_reg:x3; val_offset:194931*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194931*0 + 3*465*FLEN/8, x4, x1, x2)

inst_64978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320000fffffffff; valaddr_reg:x3; val_offset:194934*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194934*0 + 3*466*FLEN/8, x4, x1, x2)

inst_64979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320001fffffffff; valaddr_reg:x3; val_offset:194937*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194937*0 + 3*467*FLEN/8, x4, x1, x2)

inst_64980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320003fffffffff; valaddr_reg:x3; val_offset:194940*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194940*0 + 3*468*FLEN/8, x4, x1, x2)

inst_64981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320007fffffffff; valaddr_reg:x3; val_offset:194943*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194943*0 + 3*469*FLEN/8, x4, x1, x2)

inst_64982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832000ffffffffff; valaddr_reg:x3; val_offset:194946*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194946*0 + 3*470*FLEN/8, x4, x1, x2)

inst_64983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832001ffffffffff; valaddr_reg:x3; val_offset:194949*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194949*0 + 3*471*FLEN/8, x4, x1, x2)

inst_64984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832003ffffffffff; valaddr_reg:x3; val_offset:194952*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194952*0 + 3*472*FLEN/8, x4, x1, x2)

inst_64985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832007ffffffffff; valaddr_reg:x3; val_offset:194955*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194955*0 + 3*473*FLEN/8, x4, x1, x2)

inst_64986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83200fffffffffff; valaddr_reg:x3; val_offset:194958*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194958*0 + 3*474*FLEN/8, x4, x1, x2)

inst_64987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83201fffffffffff; valaddr_reg:x3; val_offset:194961*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194961*0 + 3*475*FLEN/8, x4, x1, x2)

inst_64988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83203fffffffffff; valaddr_reg:x3; val_offset:194964*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194964*0 + 3*476*FLEN/8, x4, x1, x2)

inst_64989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x83207fffffffffff; valaddr_reg:x3; val_offset:194967*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194967*0 + 3*477*FLEN/8, x4, x1, x2)

inst_64990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8320ffffffffffff; valaddr_reg:x3; val_offset:194970*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194970*0 + 3*478*FLEN/8, x4, x1, x2)

inst_64991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8321ffffffffffff; valaddr_reg:x3; val_offset:194973*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194973*0 + 3*479*FLEN/8, x4, x1, x2)

inst_64992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8323ffffffffffff; valaddr_reg:x3; val_offset:194976*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194976*0 + 3*480*FLEN/8, x4, x1, x2)

inst_64993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8327ffffffffffff; valaddr_reg:x3; val_offset:194979*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194979*0 + 3*481*FLEN/8, x4, x1, x2)

inst_64994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x8328000000000000; valaddr_reg:x3; val_offset:194982*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194982*0 + 3*482*FLEN/8, x4, x1, x2)

inst_64995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832c000000000000; valaddr_reg:x3; val_offset:194985*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194985*0 + 3*483*FLEN/8, x4, x1, x2)

inst_64996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832e000000000000; valaddr_reg:x3; val_offset:194988*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194988*0 + 3*484*FLEN/8, x4, x1, x2)

inst_64997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832f000000000000; valaddr_reg:x3; val_offset:194991*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194991*0 + 3*485*FLEN/8, x4, x1, x2)

inst_64998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832f800000000000; valaddr_reg:x3; val_offset:194994*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194994*0 + 3*486*FLEN/8, x4, x1, x2)

inst_64999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fc00000000000; valaddr_reg:x3; val_offset:194997*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 194997*0 + 3*487*FLEN/8, x4, x1, x2)

inst_65000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fe00000000000; valaddr_reg:x3; val_offset:195000*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195000*0 + 3*488*FLEN/8, x4, x1, x2)

inst_65001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ff00000000000; valaddr_reg:x3; val_offset:195003*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195003*0 + 3*489*FLEN/8, x4, x1, x2)

inst_65002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ff80000000000; valaddr_reg:x3; val_offset:195006*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195006*0 + 3*490*FLEN/8, x4, x1, x2)

inst_65003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffc0000000000; valaddr_reg:x3; val_offset:195009*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195009*0 + 3*491*FLEN/8, x4, x1, x2)

inst_65004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffe0000000000; valaddr_reg:x3; val_offset:195012*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195012*0 + 3*492*FLEN/8, x4, x1, x2)

inst_65005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fff0000000000; valaddr_reg:x3; val_offset:195015*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195015*0 + 3*493*FLEN/8, x4, x1, x2)

inst_65006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fff8000000000; valaddr_reg:x3; val_offset:195018*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195018*0 + 3*494*FLEN/8, x4, x1, x2)

inst_65007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffc000000000; valaddr_reg:x3; val_offset:195021*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195021*0 + 3*495*FLEN/8, x4, x1, x2)

inst_65008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffe000000000; valaddr_reg:x3; val_offset:195024*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195024*0 + 3*496*FLEN/8, x4, x1, x2)

inst_65009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffff000000000; valaddr_reg:x3; val_offset:195027*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195027*0 + 3*497*FLEN/8, x4, x1, x2)

inst_65010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffff800000000; valaddr_reg:x3; val_offset:195030*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195030*0 + 3*498*FLEN/8, x4, x1, x2)

inst_65011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffc00000000; valaddr_reg:x3; val_offset:195033*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195033*0 + 3*499*FLEN/8, x4, x1, x2)

inst_65012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffe00000000; valaddr_reg:x3; val_offset:195036*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195036*0 + 3*500*FLEN/8, x4, x1, x2)

inst_65013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffff00000000; valaddr_reg:x3; val_offset:195039*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195039*0 + 3*501*FLEN/8, x4, x1, x2)

inst_65014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffff80000000; valaddr_reg:x3; val_offset:195042*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195042*0 + 3*502*FLEN/8, x4, x1, x2)

inst_65015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffc0000000; valaddr_reg:x3; val_offset:195045*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195045*0 + 3*503*FLEN/8, x4, x1, x2)

inst_65016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffe0000000; valaddr_reg:x3; val_offset:195048*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195048*0 + 3*504*FLEN/8, x4, x1, x2)

inst_65017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffff0000000; valaddr_reg:x3; val_offset:195051*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195051*0 + 3*505*FLEN/8, x4, x1, x2)

inst_65018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffff8000000; valaddr_reg:x3; val_offset:195054*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195054*0 + 3*506*FLEN/8, x4, x1, x2)

inst_65019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffc000000; valaddr_reg:x3; val_offset:195057*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195057*0 + 3*507*FLEN/8, x4, x1, x2)

inst_65020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffe000000; valaddr_reg:x3; val_offset:195060*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195060*0 + 3*508*FLEN/8, x4, x1, x2)

inst_65021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffff000000; valaddr_reg:x3; val_offset:195063*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195063*0 + 3*509*FLEN/8, x4, x1, x2)

inst_65022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffff800000; valaddr_reg:x3; val_offset:195066*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195066*0 + 3*510*FLEN/8, x4, x1, x2)

inst_65023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffc00000; valaddr_reg:x3; val_offset:195069*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195069*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_65024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffe00000; valaddr_reg:x3; val_offset:195072*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195072*0 + 3*512*FLEN/8, x4, x1, x2)

inst_65025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffff00000; valaddr_reg:x3; val_offset:195075*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195075*0 + 3*513*FLEN/8, x4, x1, x2)

inst_65026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffff80000; valaddr_reg:x3; val_offset:195078*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195078*0 + 3*514*FLEN/8, x4, x1, x2)

inst_65027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffc0000; valaddr_reg:x3; val_offset:195081*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195081*0 + 3*515*FLEN/8, x4, x1, x2)

inst_65028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffe0000; valaddr_reg:x3; val_offset:195084*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195084*0 + 3*516*FLEN/8, x4, x1, x2)

inst_65029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffff0000; valaddr_reg:x3; val_offset:195087*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195087*0 + 3*517*FLEN/8, x4, x1, x2)

inst_65030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffff8000; valaddr_reg:x3; val_offset:195090*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195090*0 + 3*518*FLEN/8, x4, x1, x2)

inst_65031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffffc000; valaddr_reg:x3; val_offset:195093*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195093*0 + 3*519*FLEN/8, x4, x1, x2)

inst_65032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffffe000; valaddr_reg:x3; val_offset:195096*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195096*0 + 3*520*FLEN/8, x4, x1, x2)

inst_65033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffff000; valaddr_reg:x3; val_offset:195099*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195099*0 + 3*521*FLEN/8, x4, x1, x2)

inst_65034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffff800; valaddr_reg:x3; val_offset:195102*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195102*0 + 3*522*FLEN/8, x4, x1, x2)

inst_65035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffffc00; valaddr_reg:x3; val_offset:195105*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195105*0 + 3*523*FLEN/8, x4, x1, x2)

inst_65036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffffe00; valaddr_reg:x3; val_offset:195108*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195108*0 + 3*524*FLEN/8, x4, x1, x2)

inst_65037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffffff00; valaddr_reg:x3; val_offset:195111*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195111*0 + 3*525*FLEN/8, x4, x1, x2)

inst_65038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffffff80; valaddr_reg:x3; val_offset:195114*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195114*0 + 3*526*FLEN/8, x4, x1, x2)

inst_65039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffffffc0; valaddr_reg:x3; val_offset:195117*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195117*0 + 3*527*FLEN/8, x4, x1, x2)

inst_65040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffffffe0; valaddr_reg:x3; val_offset:195120*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195120*0 + 3*528*FLEN/8, x4, x1, x2)

inst_65041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffffff0; valaddr_reg:x3; val_offset:195123*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195123*0 + 3*529*FLEN/8, x4, x1, x2)

inst_65042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffffff8; valaddr_reg:x3; val_offset:195126*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195126*0 + 3*530*FLEN/8, x4, x1, x2)

inst_65043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffffffc; valaddr_reg:x3; val_offset:195129*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195129*0 + 3*531*FLEN/8, x4, x1, x2)

inst_65044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832ffffffffffffe; valaddr_reg:x3; val_offset:195132*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195132*0 + 3*532*FLEN/8, x4, x1, x2)

inst_65045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4132da9546dfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4132da9546dfd; op2val:0x8000;
op3val:0x832fffffffffffff; valaddr_reg:x3; val_offset:195135*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195135*0 + 3*533*FLEN/8, x4, x1, x2)

inst_65046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:195138*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195138*0 + 3*534*FLEN/8, x4, x1, x2)

inst_65047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:195141*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195141*0 + 3*535*FLEN/8, x4, x1, x2)

inst_65048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:195144*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195144*0 + 3*536*FLEN/8, x4, x1, x2)

inst_65049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:195147*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195147*0 + 3*537*FLEN/8, x4, x1, x2)

inst_65050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:195150*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195150*0 + 3*538*FLEN/8, x4, x1, x2)

inst_65051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:195153*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195153*0 + 3*539*FLEN/8, x4, x1, x2)

inst_65052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:195156*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195156*0 + 3*540*FLEN/8, x4, x1, x2)

inst_65053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:195159*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195159*0 + 3*541*FLEN/8, x4, x1, x2)

inst_65054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:195162*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195162*0 + 3*542*FLEN/8, x4, x1, x2)

inst_65055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:195165*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195165*0 + 3*543*FLEN/8, x4, x1, x2)

inst_65056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:195168*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195168*0 + 3*544*FLEN/8, x4, x1, x2)

inst_65057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:195171*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195171*0 + 3*545*FLEN/8, x4, x1, x2)

inst_65058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:195174*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195174*0 + 3*546*FLEN/8, x4, x1, x2)

inst_65059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:195177*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195177*0 + 3*547*FLEN/8, x4, x1, x2)

inst_65060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:195180*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195180*0 + 3*548*FLEN/8, x4, x1, x2)

inst_65061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:195183*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195183*0 + 3*549*FLEN/8, x4, x1, x2)

inst_65062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:195186*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195186*0 + 3*550*FLEN/8, x4, x1, x2)

inst_65063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:195189*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195189*0 + 3*551*FLEN/8, x4, x1, x2)

inst_65064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:195192*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195192*0 + 3*552*FLEN/8, x4, x1, x2)

inst_65065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:195195*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195195*0 + 3*553*FLEN/8, x4, x1, x2)

inst_65066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:195198*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195198*0 + 3*554*FLEN/8, x4, x1, x2)

inst_65067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:195201*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195201*0 + 3*555*FLEN/8, x4, x1, x2)

inst_65068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000000000000; valaddr_reg:x3; val_offset:195204*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195204*0 + 3*556*FLEN/8, x4, x1, x2)

inst_65069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000000000001; valaddr_reg:x3; val_offset:195207*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195207*0 + 3*557*FLEN/8, x4, x1, x2)

inst_65070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000000000003; valaddr_reg:x3; val_offset:195210*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195210*0 + 3*558*FLEN/8, x4, x1, x2)

inst_65071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000000000007; valaddr_reg:x3; val_offset:195213*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195213*0 + 3*559*FLEN/8, x4, x1, x2)

inst_65072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000000000000f; valaddr_reg:x3; val_offset:195216*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195216*0 + 3*560*FLEN/8, x4, x1, x2)

inst_65073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000000000001f; valaddr_reg:x3; val_offset:195219*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195219*0 + 3*561*FLEN/8, x4, x1, x2)

inst_65074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000000000003f; valaddr_reg:x3; val_offset:195222*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195222*0 + 3*562*FLEN/8, x4, x1, x2)

inst_65075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000000000007f; valaddr_reg:x3; val_offset:195225*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195225*0 + 3*563*FLEN/8, x4, x1, x2)

inst_65076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700000000000ff; valaddr_reg:x3; val_offset:195228*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195228*0 + 3*564*FLEN/8, x4, x1, x2)

inst_65077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700000000001ff; valaddr_reg:x3; val_offset:195231*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195231*0 + 3*565*FLEN/8, x4, x1, x2)

inst_65078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700000000003ff; valaddr_reg:x3; val_offset:195234*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195234*0 + 3*566*FLEN/8, x4, x1, x2)

inst_65079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700000000007ff; valaddr_reg:x3; val_offset:195237*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195237*0 + 3*567*FLEN/8, x4, x1, x2)

inst_65080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000000000fff; valaddr_reg:x3; val_offset:195240*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195240*0 + 3*568*FLEN/8, x4, x1, x2)

inst_65081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000000001fff; valaddr_reg:x3; val_offset:195243*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195243*0 + 3*569*FLEN/8, x4, x1, x2)

inst_65082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000000003fff; valaddr_reg:x3; val_offset:195246*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195246*0 + 3*570*FLEN/8, x4, x1, x2)

inst_65083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000000007fff; valaddr_reg:x3; val_offset:195249*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195249*0 + 3*571*FLEN/8, x4, x1, x2)

inst_65084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000000000ffff; valaddr_reg:x3; val_offset:195252*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195252*0 + 3*572*FLEN/8, x4, x1, x2)

inst_65085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000000001ffff; valaddr_reg:x3; val_offset:195255*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195255*0 + 3*573*FLEN/8, x4, x1, x2)

inst_65086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000000003ffff; valaddr_reg:x3; val_offset:195258*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195258*0 + 3*574*FLEN/8, x4, x1, x2)

inst_65087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000000007ffff; valaddr_reg:x3; val_offset:195261*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195261*0 + 3*575*FLEN/8, x4, x1, x2)

inst_65088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700000000fffff; valaddr_reg:x3; val_offset:195264*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195264*0 + 3*576*FLEN/8, x4, x1, x2)

inst_65089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700000001fffff; valaddr_reg:x3; val_offset:195267*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195267*0 + 3*577*FLEN/8, x4, x1, x2)

inst_65090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700000003fffff; valaddr_reg:x3; val_offset:195270*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195270*0 + 3*578*FLEN/8, x4, x1, x2)

inst_65091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700000007fffff; valaddr_reg:x3; val_offset:195273*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195273*0 + 3*579*FLEN/8, x4, x1, x2)

inst_65092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000000ffffff; valaddr_reg:x3; val_offset:195276*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195276*0 + 3*580*FLEN/8, x4, x1, x2)

inst_65093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000001ffffff; valaddr_reg:x3; val_offset:195279*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195279*0 + 3*581*FLEN/8, x4, x1, x2)

inst_65094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000003ffffff; valaddr_reg:x3; val_offset:195282*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195282*0 + 3*582*FLEN/8, x4, x1, x2)

inst_65095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000007ffffff; valaddr_reg:x3; val_offset:195285*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195285*0 + 3*583*FLEN/8, x4, x1, x2)

inst_65096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000000fffffff; valaddr_reg:x3; val_offset:195288*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195288*0 + 3*584*FLEN/8, x4, x1, x2)

inst_65097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000001fffffff; valaddr_reg:x3; val_offset:195291*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195291*0 + 3*585*FLEN/8, x4, x1, x2)

inst_65098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000003fffffff; valaddr_reg:x3; val_offset:195294*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195294*0 + 3*586*FLEN/8, x4, x1, x2)

inst_65099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000007fffffff; valaddr_reg:x3; val_offset:195297*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195297*0 + 3*587*FLEN/8, x4, x1, x2)

inst_65100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700000ffffffff; valaddr_reg:x3; val_offset:195300*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195300*0 + 3*588*FLEN/8, x4, x1, x2)

inst_65101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700001ffffffff; valaddr_reg:x3; val_offset:195303*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195303*0 + 3*589*FLEN/8, x4, x1, x2)

inst_65102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700003ffffffff; valaddr_reg:x3; val_offset:195306*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195306*0 + 3*590*FLEN/8, x4, x1, x2)

inst_65103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700007ffffffff; valaddr_reg:x3; val_offset:195309*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195309*0 + 3*591*FLEN/8, x4, x1, x2)

inst_65104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170000fffffffff; valaddr_reg:x3; val_offset:195312*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195312*0 + 3*592*FLEN/8, x4, x1, x2)

inst_65105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170001fffffffff; valaddr_reg:x3; val_offset:195315*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195315*0 + 3*593*FLEN/8, x4, x1, x2)

inst_65106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170003fffffffff; valaddr_reg:x3; val_offset:195318*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195318*0 + 3*594*FLEN/8, x4, x1, x2)

inst_65107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170007fffffffff; valaddr_reg:x3; val_offset:195321*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195321*0 + 3*595*FLEN/8, x4, x1, x2)

inst_65108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817000ffffffffff; valaddr_reg:x3; val_offset:195324*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195324*0 + 3*596*FLEN/8, x4, x1, x2)

inst_65109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817001ffffffffff; valaddr_reg:x3; val_offset:195327*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195327*0 + 3*597*FLEN/8, x4, x1, x2)

inst_65110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817003ffffffffff; valaddr_reg:x3; val_offset:195330*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195330*0 + 3*598*FLEN/8, x4, x1, x2)

inst_65111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817007ffffffffff; valaddr_reg:x3; val_offset:195333*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195333*0 + 3*599*FLEN/8, x4, x1, x2)

inst_65112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81700fffffffffff; valaddr_reg:x3; val_offset:195336*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195336*0 + 3*600*FLEN/8, x4, x1, x2)

inst_65113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81701fffffffffff; valaddr_reg:x3; val_offset:195339*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195339*0 + 3*601*FLEN/8, x4, x1, x2)

inst_65114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81703fffffffffff; valaddr_reg:x3; val_offset:195342*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195342*0 + 3*602*FLEN/8, x4, x1, x2)

inst_65115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x81707fffffffffff; valaddr_reg:x3; val_offset:195345*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195345*0 + 3*603*FLEN/8, x4, x1, x2)

inst_65116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8170ffffffffffff; valaddr_reg:x3; val_offset:195348*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195348*0 + 3*604*FLEN/8, x4, x1, x2)

inst_65117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8171ffffffffffff; valaddr_reg:x3; val_offset:195351*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195351*0 + 3*605*FLEN/8, x4, x1, x2)

inst_65118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8173ffffffffffff; valaddr_reg:x3; val_offset:195354*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195354*0 + 3*606*FLEN/8, x4, x1, x2)

inst_65119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8177ffffffffffff; valaddr_reg:x3; val_offset:195357*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195357*0 + 3*607*FLEN/8, x4, x1, x2)

inst_65120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x8178000000000000; valaddr_reg:x3; val_offset:195360*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195360*0 + 3*608*FLEN/8, x4, x1, x2)

inst_65121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817c000000000000; valaddr_reg:x3; val_offset:195363*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195363*0 + 3*609*FLEN/8, x4, x1, x2)

inst_65122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817e000000000000; valaddr_reg:x3; val_offset:195366*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195366*0 + 3*610*FLEN/8, x4, x1, x2)

inst_65123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817f000000000000; valaddr_reg:x3; val_offset:195369*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195369*0 + 3*611*FLEN/8, x4, x1, x2)

inst_65124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817f800000000000; valaddr_reg:x3; val_offset:195372*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195372*0 + 3*612*FLEN/8, x4, x1, x2)

inst_65125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fc00000000000; valaddr_reg:x3; val_offset:195375*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195375*0 + 3*613*FLEN/8, x4, x1, x2)

inst_65126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fe00000000000; valaddr_reg:x3; val_offset:195378*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195378*0 + 3*614*FLEN/8, x4, x1, x2)

inst_65127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ff00000000000; valaddr_reg:x3; val_offset:195381*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195381*0 + 3*615*FLEN/8, x4, x1, x2)

inst_65128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ff80000000000; valaddr_reg:x3; val_offset:195384*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195384*0 + 3*616*FLEN/8, x4, x1, x2)

inst_65129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffc0000000000; valaddr_reg:x3; val_offset:195387*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195387*0 + 3*617*FLEN/8, x4, x1, x2)

inst_65130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffe0000000000; valaddr_reg:x3; val_offset:195390*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195390*0 + 3*618*FLEN/8, x4, x1, x2)

inst_65131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fff0000000000; valaddr_reg:x3; val_offset:195393*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195393*0 + 3*619*FLEN/8, x4, x1, x2)

inst_65132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fff8000000000; valaddr_reg:x3; val_offset:195396*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195396*0 + 3*620*FLEN/8, x4, x1, x2)

inst_65133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffc000000000; valaddr_reg:x3; val_offset:195399*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195399*0 + 3*621*FLEN/8, x4, x1, x2)

inst_65134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffe000000000; valaddr_reg:x3; val_offset:195402*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195402*0 + 3*622*FLEN/8, x4, x1, x2)

inst_65135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffff000000000; valaddr_reg:x3; val_offset:195405*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195405*0 + 3*623*FLEN/8, x4, x1, x2)

inst_65136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffff800000000; valaddr_reg:x3; val_offset:195408*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195408*0 + 3*624*FLEN/8, x4, x1, x2)

inst_65137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffc00000000; valaddr_reg:x3; val_offset:195411*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195411*0 + 3*625*FLEN/8, x4, x1, x2)

inst_65138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffe00000000; valaddr_reg:x3; val_offset:195414*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195414*0 + 3*626*FLEN/8, x4, x1, x2)

inst_65139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffff00000000; valaddr_reg:x3; val_offset:195417*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195417*0 + 3*627*FLEN/8, x4, x1, x2)

inst_65140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffff80000000; valaddr_reg:x3; val_offset:195420*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195420*0 + 3*628*FLEN/8, x4, x1, x2)

inst_65141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffc0000000; valaddr_reg:x3; val_offset:195423*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195423*0 + 3*629*FLEN/8, x4, x1, x2)

inst_65142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffe0000000; valaddr_reg:x3; val_offset:195426*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195426*0 + 3*630*FLEN/8, x4, x1, x2)

inst_65143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffff0000000; valaddr_reg:x3; val_offset:195429*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195429*0 + 3*631*FLEN/8, x4, x1, x2)

inst_65144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffff8000000; valaddr_reg:x3; val_offset:195432*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195432*0 + 3*632*FLEN/8, x4, x1, x2)

inst_65145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffc000000; valaddr_reg:x3; val_offset:195435*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195435*0 + 3*633*FLEN/8, x4, x1, x2)

inst_65146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffe000000; valaddr_reg:x3; val_offset:195438*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195438*0 + 3*634*FLEN/8, x4, x1, x2)

inst_65147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffff000000; valaddr_reg:x3; val_offset:195441*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195441*0 + 3*635*FLEN/8, x4, x1, x2)

inst_65148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffff800000; valaddr_reg:x3; val_offset:195444*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195444*0 + 3*636*FLEN/8, x4, x1, x2)

inst_65149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffc00000; valaddr_reg:x3; val_offset:195447*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195447*0 + 3*637*FLEN/8, x4, x1, x2)

inst_65150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffe00000; valaddr_reg:x3; val_offset:195450*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195450*0 + 3*638*FLEN/8, x4, x1, x2)

inst_65151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffff00000; valaddr_reg:x3; val_offset:195453*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195453*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_65152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffff80000; valaddr_reg:x3; val_offset:195456*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195456*0 + 3*640*FLEN/8, x4, x1, x2)

inst_65153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffc0000; valaddr_reg:x3; val_offset:195459*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195459*0 + 3*641*FLEN/8, x4, x1, x2)

inst_65154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffe0000; valaddr_reg:x3; val_offset:195462*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195462*0 + 3*642*FLEN/8, x4, x1, x2)

inst_65155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffff0000; valaddr_reg:x3; val_offset:195465*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195465*0 + 3*643*FLEN/8, x4, x1, x2)

inst_65156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffff8000; valaddr_reg:x3; val_offset:195468*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195468*0 + 3*644*FLEN/8, x4, x1, x2)

inst_65157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffffc000; valaddr_reg:x3; val_offset:195471*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195471*0 + 3*645*FLEN/8, x4, x1, x2)

inst_65158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffffe000; valaddr_reg:x3; val_offset:195474*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195474*0 + 3*646*FLEN/8, x4, x1, x2)

inst_65159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffff000; valaddr_reg:x3; val_offset:195477*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195477*0 + 3*647*FLEN/8, x4, x1, x2)

inst_65160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffff800; valaddr_reg:x3; val_offset:195480*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195480*0 + 3*648*FLEN/8, x4, x1, x2)

inst_65161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffffc00; valaddr_reg:x3; val_offset:195483*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195483*0 + 3*649*FLEN/8, x4, x1, x2)

inst_65162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffffe00; valaddr_reg:x3; val_offset:195486*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195486*0 + 3*650*FLEN/8, x4, x1, x2)

inst_65163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffffff00; valaddr_reg:x3; val_offset:195489*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195489*0 + 3*651*FLEN/8, x4, x1, x2)

inst_65164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffffff80; valaddr_reg:x3; val_offset:195492*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195492*0 + 3*652*FLEN/8, x4, x1, x2)

inst_65165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffffffc0; valaddr_reg:x3; val_offset:195495*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195495*0 + 3*653*FLEN/8, x4, x1, x2)

inst_65166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffffffe0; valaddr_reg:x3; val_offset:195498*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195498*0 + 3*654*FLEN/8, x4, x1, x2)

inst_65167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffffff0; valaddr_reg:x3; val_offset:195501*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195501*0 + 3*655*FLEN/8, x4, x1, x2)

inst_65168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffffff8; valaddr_reg:x3; val_offset:195504*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195504*0 + 3*656*FLEN/8, x4, x1, x2)

inst_65169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffffffc; valaddr_reg:x3; val_offset:195507*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195507*0 + 3*657*FLEN/8, x4, x1, x2)

inst_65170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817ffffffffffffe; valaddr_reg:x3; val_offset:195510*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195510*0 + 3*658*FLEN/8, x4, x1, x2)

inst_65171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4219ea3f8a062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4219ea3f8a062; op2val:0x8000;
op3val:0x817fffffffffffff; valaddr_reg:x3; val_offset:195513*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195513*0 + 3*659*FLEN/8, x4, x1, x2)

inst_65172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:195516*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195516*0 + 3*660*FLEN/8, x4, x1, x2)

inst_65173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:195519*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195519*0 + 3*661*FLEN/8, x4, x1, x2)

inst_65174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:195522*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195522*0 + 3*662*FLEN/8, x4, x1, x2)

inst_65175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:195525*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195525*0 + 3*663*FLEN/8, x4, x1, x2)

inst_65176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:195528*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195528*0 + 3*664*FLEN/8, x4, x1, x2)

inst_65177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:195531*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195531*0 + 3*665*FLEN/8, x4, x1, x2)

inst_65178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:195534*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195534*0 + 3*666*FLEN/8, x4, x1, x2)

inst_65179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:195537*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195537*0 + 3*667*FLEN/8, x4, x1, x2)

inst_65180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:195540*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195540*0 + 3*668*FLEN/8, x4, x1, x2)

inst_65181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:195543*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195543*0 + 3*669*FLEN/8, x4, x1, x2)

inst_65182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:195546*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195546*0 + 3*670*FLEN/8, x4, x1, x2)

inst_65183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:195549*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195549*0 + 3*671*FLEN/8, x4, x1, x2)

inst_65184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:195552*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195552*0 + 3*672*FLEN/8, x4, x1, x2)

inst_65185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:195555*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195555*0 + 3*673*FLEN/8, x4, x1, x2)

inst_65186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:195558*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195558*0 + 3*674*FLEN/8, x4, x1, x2)

inst_65187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:195561*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195561*0 + 3*675*FLEN/8, x4, x1, x2)

inst_65188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:195564*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195564*0 + 3*676*FLEN/8, x4, x1, x2)

inst_65189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:195567*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195567*0 + 3*677*FLEN/8, x4, x1, x2)

inst_65190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:195570*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195570*0 + 3*678*FLEN/8, x4, x1, x2)

inst_65191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:195573*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195573*0 + 3*679*FLEN/8, x4, x1, x2)

inst_65192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:195576*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195576*0 + 3*680*FLEN/8, x4, x1, x2)

inst_65193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:195579*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195579*0 + 3*681*FLEN/8, x4, x1, x2)

inst_65194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000000000000; valaddr_reg:x3; val_offset:195582*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195582*0 + 3*682*FLEN/8, x4, x1, x2)

inst_65195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000000000001; valaddr_reg:x3; val_offset:195585*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195585*0 + 3*683*FLEN/8, x4, x1, x2)

inst_65196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000000000003; valaddr_reg:x3; val_offset:195588*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195588*0 + 3*684*FLEN/8, x4, x1, x2)

inst_65197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000000000007; valaddr_reg:x3; val_offset:195591*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195591*0 + 3*685*FLEN/8, x4, x1, x2)

inst_65198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000000000000f; valaddr_reg:x3; val_offset:195594*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195594*0 + 3*686*FLEN/8, x4, x1, x2)

inst_65199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000000000001f; valaddr_reg:x3; val_offset:195597*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195597*0 + 3*687*FLEN/8, x4, x1, x2)

inst_65200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000000000003f; valaddr_reg:x3; val_offset:195600*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195600*0 + 3*688*FLEN/8, x4, x1, x2)

inst_65201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000000000007f; valaddr_reg:x3; val_offset:195603*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195603*0 + 3*689*FLEN/8, x4, x1, x2)

inst_65202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000000000000ff; valaddr_reg:x3; val_offset:195606*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195606*0 + 3*690*FLEN/8, x4, x1, x2)

inst_65203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000000000001ff; valaddr_reg:x3; val_offset:195609*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195609*0 + 3*691*FLEN/8, x4, x1, x2)

inst_65204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000000000003ff; valaddr_reg:x3; val_offset:195612*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195612*0 + 3*692*FLEN/8, x4, x1, x2)

inst_65205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000000000007ff; valaddr_reg:x3; val_offset:195615*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195615*0 + 3*693*FLEN/8, x4, x1, x2)

inst_65206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000000000fff; valaddr_reg:x3; val_offset:195618*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195618*0 + 3*694*FLEN/8, x4, x1, x2)

inst_65207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000000001fff; valaddr_reg:x3; val_offset:195621*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195621*0 + 3*695*FLEN/8, x4, x1, x2)

inst_65208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000000003fff; valaddr_reg:x3; val_offset:195624*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195624*0 + 3*696*FLEN/8, x4, x1, x2)

inst_65209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000000007fff; valaddr_reg:x3; val_offset:195627*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195627*0 + 3*697*FLEN/8, x4, x1, x2)

inst_65210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000000000ffff; valaddr_reg:x3; val_offset:195630*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195630*0 + 3*698*FLEN/8, x4, x1, x2)

inst_65211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000000001ffff; valaddr_reg:x3; val_offset:195633*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195633*0 + 3*699*FLEN/8, x4, x1, x2)

inst_65212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000000003ffff; valaddr_reg:x3; val_offset:195636*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195636*0 + 3*700*FLEN/8, x4, x1, x2)

inst_65213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000000007ffff; valaddr_reg:x3; val_offset:195639*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195639*0 + 3*701*FLEN/8, x4, x1, x2)

inst_65214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000000000fffff; valaddr_reg:x3; val_offset:195642*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195642*0 + 3*702*FLEN/8, x4, x1, x2)

inst_65215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000000001fffff; valaddr_reg:x3; val_offset:195645*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195645*0 + 3*703*FLEN/8, x4, x1, x2)

inst_65216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000000003fffff; valaddr_reg:x3; val_offset:195648*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195648*0 + 3*704*FLEN/8, x4, x1, x2)

inst_65217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000000007fffff; valaddr_reg:x3; val_offset:195651*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195651*0 + 3*705*FLEN/8, x4, x1, x2)

inst_65218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000000ffffff; valaddr_reg:x3; val_offset:195654*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195654*0 + 3*706*FLEN/8, x4, x1, x2)

inst_65219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000001ffffff; valaddr_reg:x3; val_offset:195657*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195657*0 + 3*707*FLEN/8, x4, x1, x2)

inst_65220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000003ffffff; valaddr_reg:x3; val_offset:195660*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195660*0 + 3*708*FLEN/8, x4, x1, x2)

inst_65221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000007ffffff; valaddr_reg:x3; val_offset:195663*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195663*0 + 3*709*FLEN/8, x4, x1, x2)

inst_65222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000000fffffff; valaddr_reg:x3; val_offset:195666*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195666*0 + 3*710*FLEN/8, x4, x1, x2)

inst_65223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000001fffffff; valaddr_reg:x3; val_offset:195669*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195669*0 + 3*711*FLEN/8, x4, x1, x2)

inst_65224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000003fffffff; valaddr_reg:x3; val_offset:195672*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195672*0 + 3*712*FLEN/8, x4, x1, x2)

inst_65225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000007fffffff; valaddr_reg:x3; val_offset:195675*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195675*0 + 3*713*FLEN/8, x4, x1, x2)

inst_65226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000000ffffffff; valaddr_reg:x3; val_offset:195678*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195678*0 + 3*714*FLEN/8, x4, x1, x2)

inst_65227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000001ffffffff; valaddr_reg:x3; val_offset:195681*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195681*0 + 3*715*FLEN/8, x4, x1, x2)

inst_65228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000003ffffffff; valaddr_reg:x3; val_offset:195684*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195684*0 + 3*716*FLEN/8, x4, x1, x2)

inst_65229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000007ffffffff; valaddr_reg:x3; val_offset:195687*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195687*0 + 3*717*FLEN/8, x4, x1, x2)

inst_65230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300000fffffffff; valaddr_reg:x3; val_offset:195690*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195690*0 + 3*718*FLEN/8, x4, x1, x2)

inst_65231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300001fffffffff; valaddr_reg:x3; val_offset:195693*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195693*0 + 3*719*FLEN/8, x4, x1, x2)

inst_65232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300003fffffffff; valaddr_reg:x3; val_offset:195696*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195696*0 + 3*720*FLEN/8, x4, x1, x2)

inst_65233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300007fffffffff; valaddr_reg:x3; val_offset:195699*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195699*0 + 3*721*FLEN/8, x4, x1, x2)

inst_65234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830000ffffffffff; valaddr_reg:x3; val_offset:195702*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195702*0 + 3*722*FLEN/8, x4, x1, x2)

inst_65235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830001ffffffffff; valaddr_reg:x3; val_offset:195705*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195705*0 + 3*723*FLEN/8, x4, x1, x2)

inst_65236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830003ffffffffff; valaddr_reg:x3; val_offset:195708*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195708*0 + 3*724*FLEN/8, x4, x1, x2)

inst_65237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830007ffffffffff; valaddr_reg:x3; val_offset:195711*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195711*0 + 3*725*FLEN/8, x4, x1, x2)

inst_65238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83000fffffffffff; valaddr_reg:x3; val_offset:195714*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195714*0 + 3*726*FLEN/8, x4, x1, x2)

inst_65239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83001fffffffffff; valaddr_reg:x3; val_offset:195717*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195717*0 + 3*727*FLEN/8, x4, x1, x2)

inst_65240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83003fffffffffff; valaddr_reg:x3; val_offset:195720*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195720*0 + 3*728*FLEN/8, x4, x1, x2)

inst_65241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x83007fffffffffff; valaddr_reg:x3; val_offset:195723*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195723*0 + 3*729*FLEN/8, x4, x1, x2)

inst_65242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8300ffffffffffff; valaddr_reg:x3; val_offset:195726*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195726*0 + 3*730*FLEN/8, x4, x1, x2)

inst_65243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8301ffffffffffff; valaddr_reg:x3; val_offset:195729*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195729*0 + 3*731*FLEN/8, x4, x1, x2)

inst_65244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8303ffffffffffff; valaddr_reg:x3; val_offset:195732*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195732*0 + 3*732*FLEN/8, x4, x1, x2)

inst_65245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8307ffffffffffff; valaddr_reg:x3; val_offset:195735*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195735*0 + 3*733*FLEN/8, x4, x1, x2)

inst_65246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x8308000000000000; valaddr_reg:x3; val_offset:195738*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195738*0 + 3*734*FLEN/8, x4, x1, x2)

inst_65247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830c000000000000; valaddr_reg:x3; val_offset:195741*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195741*0 + 3*735*FLEN/8, x4, x1, x2)

inst_65248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830e000000000000; valaddr_reg:x3; val_offset:195744*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195744*0 + 3*736*FLEN/8, x4, x1, x2)

inst_65249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830f000000000000; valaddr_reg:x3; val_offset:195747*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195747*0 + 3*737*FLEN/8, x4, x1, x2)

inst_65250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830f800000000000; valaddr_reg:x3; val_offset:195750*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195750*0 + 3*738*FLEN/8, x4, x1, x2)

inst_65251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fc00000000000; valaddr_reg:x3; val_offset:195753*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195753*0 + 3*739*FLEN/8, x4, x1, x2)

inst_65252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fe00000000000; valaddr_reg:x3; val_offset:195756*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195756*0 + 3*740*FLEN/8, x4, x1, x2)

inst_65253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ff00000000000; valaddr_reg:x3; val_offset:195759*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195759*0 + 3*741*FLEN/8, x4, x1, x2)

inst_65254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ff80000000000; valaddr_reg:x3; val_offset:195762*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195762*0 + 3*742*FLEN/8, x4, x1, x2)

inst_65255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffc0000000000; valaddr_reg:x3; val_offset:195765*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195765*0 + 3*743*FLEN/8, x4, x1, x2)

inst_65256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffe0000000000; valaddr_reg:x3; val_offset:195768*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195768*0 + 3*744*FLEN/8, x4, x1, x2)

inst_65257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fff0000000000; valaddr_reg:x3; val_offset:195771*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195771*0 + 3*745*FLEN/8, x4, x1, x2)

inst_65258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fff8000000000; valaddr_reg:x3; val_offset:195774*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195774*0 + 3*746*FLEN/8, x4, x1, x2)

inst_65259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffc000000000; valaddr_reg:x3; val_offset:195777*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195777*0 + 3*747*FLEN/8, x4, x1, x2)

inst_65260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffe000000000; valaddr_reg:x3; val_offset:195780*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195780*0 + 3*748*FLEN/8, x4, x1, x2)

inst_65261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffff000000000; valaddr_reg:x3; val_offset:195783*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195783*0 + 3*749*FLEN/8, x4, x1, x2)

inst_65262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffff800000000; valaddr_reg:x3; val_offset:195786*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195786*0 + 3*750*FLEN/8, x4, x1, x2)

inst_65263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffc00000000; valaddr_reg:x3; val_offset:195789*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195789*0 + 3*751*FLEN/8, x4, x1, x2)

inst_65264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffe00000000; valaddr_reg:x3; val_offset:195792*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195792*0 + 3*752*FLEN/8, x4, x1, x2)

inst_65265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffff00000000; valaddr_reg:x3; val_offset:195795*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195795*0 + 3*753*FLEN/8, x4, x1, x2)

inst_65266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffff80000000; valaddr_reg:x3; val_offset:195798*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195798*0 + 3*754*FLEN/8, x4, x1, x2)

inst_65267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffc0000000; valaddr_reg:x3; val_offset:195801*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195801*0 + 3*755*FLEN/8, x4, x1, x2)

inst_65268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffe0000000; valaddr_reg:x3; val_offset:195804*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195804*0 + 3*756*FLEN/8, x4, x1, x2)

inst_65269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffff0000000; valaddr_reg:x3; val_offset:195807*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195807*0 + 3*757*FLEN/8, x4, x1, x2)

inst_65270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffff8000000; valaddr_reg:x3; val_offset:195810*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195810*0 + 3*758*FLEN/8, x4, x1, x2)

inst_65271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffc000000; valaddr_reg:x3; val_offset:195813*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195813*0 + 3*759*FLEN/8, x4, x1, x2)

inst_65272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffe000000; valaddr_reg:x3; val_offset:195816*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195816*0 + 3*760*FLEN/8, x4, x1, x2)

inst_65273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffff000000; valaddr_reg:x3; val_offset:195819*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195819*0 + 3*761*FLEN/8, x4, x1, x2)

inst_65274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffff800000; valaddr_reg:x3; val_offset:195822*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195822*0 + 3*762*FLEN/8, x4, x1, x2)

inst_65275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffc00000; valaddr_reg:x3; val_offset:195825*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195825*0 + 3*763*FLEN/8, x4, x1, x2)

inst_65276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffe00000; valaddr_reg:x3; val_offset:195828*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195828*0 + 3*764*FLEN/8, x4, x1, x2)

inst_65277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffff00000; valaddr_reg:x3; val_offset:195831*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195831*0 + 3*765*FLEN/8, x4, x1, x2)

inst_65278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffff80000; valaddr_reg:x3; val_offset:195834*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195834*0 + 3*766*FLEN/8, x4, x1, x2)

inst_65279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffc0000; valaddr_reg:x3; val_offset:195837*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195837*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632218980352,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632487415808,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632621633536,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632688742400,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632722296832,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632739074048,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632747462656,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632751656960,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632753754112,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632754802688,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755326976,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755589120,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755720192,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755785728,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755818496,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755834880,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755843072,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755847168,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755849216,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850240,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755850752,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851008,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851136,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851200,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851232,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851248,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851256,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851260,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851262,64,FLEN)
NAN_BOXED(6891610376076980193,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851263,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610377728,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610377729,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610377731,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610377735,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610377743,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610377759,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610377791,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610377855,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610377983,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610378239,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610378751,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610379775,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610381823,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610385919,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610394111,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610410495,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610443263,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610508799,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610639871,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448610902015,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448611426303,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448612474879,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448614572031,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448618766335,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448627154943,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448643932159,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448677486591,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448744595455,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894448878813183,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894449147248639,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894449684119551,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894450757861375,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894452905345023,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894457200312319,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894465790246911,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894482970116095,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894517329854463,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894586049331199,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894723488284671,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246894998366191615,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246895548122005503,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246896647633633279,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246898846656888831,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246903244703399935,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246912040796422143,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246929632982466559,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4246964817354555391,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4247035186098733055,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4247175923587088383,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4247457398563799039,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4248020348517220351,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4249146248424062975,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4249146248424062976,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4250272148330905600,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4250835098284326912,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251116573261037568,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251257310749392896,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251327679493570560,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251362863865659392,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251380456051703808,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251389252144726016,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251393650191237120,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251395849214492672,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251396948726120448,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251397498481934336,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251397773359841280,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251397910798794752,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251397979518271488,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398013878009856,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398031057879040,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398039647813632,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398043942780928,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398046090264576,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398047164006400,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398047700877312,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398047969312768,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048103530496,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048170639360,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048204193792,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048220971008,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048229359616,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048233553920,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048235651072,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048236699648,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237223936,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237486080,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237617152,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237682688,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237715456,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237731840,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237740032,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237744128,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237746176,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237747200,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237747712,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237747968,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237748096,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237748160,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237748192,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237748208,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237748216,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237748220,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237748222,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4251398048237748223,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891612257263982973,64,FLEN)
NAN_BOXED(2322083042042352620,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587146752,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587146753,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587146755,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587146759,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587146767,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587146783,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587146815,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587146879,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587147007,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587147263,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587147775,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587148799,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587150847,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587154943,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587163135,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587179519,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587212287,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587277823,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587408895,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105587671039,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105588195327,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105589243903,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105591341055,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105595535359,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105603923967,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105620701183,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105654255615,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105721364479,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072105855582207,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072106124017663,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072106660888575,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072107734630399,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072109882114047,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072114177081343,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072122767015935,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072139946885119,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072174306623487,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072243026100223,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072380465053695,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227072655342960639,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227073205098774527,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227074304610402303,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227076503633657855,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227080901680168959,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227089697773191167,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227107289959235583,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227142474331324415,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227212843075502079,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227353580563857407,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13227635055540568063,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13228198005493989375,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13229323905400831999,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13229323905400832000,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13230449805307674624,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231012755261095936,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231294230237806592,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231434967726161920,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231505336470339584,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231540520842428416,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231558113028472832,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231566909121495040,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231571307168006144,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231573506191261696,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231574605702889472,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575155458703360,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575430336610304,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575567775563776,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575636495040512,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575670854778880,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575688034648064,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575696624582656,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575700919549952,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575703067033600,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575704140775424,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575704677646336,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575704946081792,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705080299520,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705147408384,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705180962816,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705197740032,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705206128640,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705210322944,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705212420096,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705213468672,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705213992960,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214255104,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214386176,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214451712,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214484480,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214500864,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214509056,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214513152,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214515200,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214516224,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214516736,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214516992,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214517120,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214517184,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214517216,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214517232,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214517240,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214517244,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214517246,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13231575705214517247,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891614653446344793,64,FLEN)
NAN_BOXED(11513926792620423497,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261184,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261185,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261187,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261191,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261199,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261215,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261247,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261311,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261439,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261695,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303262207,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303263231,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303265279,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303269375,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303277567,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303293951,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303326719,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303392255,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303523327,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303785471,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625304309759,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625305358335,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625307455487,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625311649791,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625320038399,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625336815615,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625370370047,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625437478911,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625571696639,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625840132095,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983626377003007,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983627450744831,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983629598228479,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983633893195775,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983642483130367,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983659662999551,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983694022737919,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983762742214655,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983900181168127,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984175059075071,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984724814888959,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362985824326516735,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362988023349772287,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362992421396283391,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363001217489305599,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363018809675350015,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363053994047438847,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363124362791616511,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363265100279971839,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363546575256682495,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9364109525210103807,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946431,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946432,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366361325023789056,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366924274977210368,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367205749953921024,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367346487442276352,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367416856186454016,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367452040558542848,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367469632744587264,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367478428837609472,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367482826884120576,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367485025907376128,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486125419003904,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486675174817792,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486950052724736,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487087491678208,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487156211154944,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487190570893312,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487207750762496,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487216340697088,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487220635664384,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487222783148032,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487223856889856,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224393760768,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224662196224,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224796413952,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224863522816,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224897077248,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224913854464,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224922243072,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224926437376,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224928534528,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224929583104,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930107392,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930369536,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930500608,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930566144,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930598912,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930615296,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930623488,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930627584,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930629632,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930630656,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631168,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631424,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631552,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631616,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631648,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631664,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631672,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631676,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631678,64,FLEN)
NAN_BOXED(6891622261381162243,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631679,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300608,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300609,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300611,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300615,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300623,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300639,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300671,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300735,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300863,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223301119,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223301631,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223302655,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223304703,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223308799,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223316991,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223333375,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223366143,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223431679,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223562751,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223824895,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018224349183,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018225397759,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018227494911,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018231689215,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018240077823,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018256855039,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018290409471,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018357518335,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018491736063,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018760171519,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552019297042431,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552020370784255,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552022518267903,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552026813235199,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552035403169791,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552052583038975,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552086942777343,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552155662254079,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552293101207551,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552567979114495,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448553117734928383,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448554217246556159,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448556416269811711,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448560814316322815,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448569610409345023,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448587202595389439,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448622386967478271,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448692755711655935,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448833493200011263,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9449114968176721919,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9449677918130143231,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9450803818036985855,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9450803818036985856,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9451929717943828480,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452492667897249792,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452774142873960448,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452914880362315776,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452985249106493440,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453020433478582272,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453038025664626688,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453046821757648896,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453051219804160000,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453053418827415552,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453054518339043328,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055068094857216,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055342972764160,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055480411717632,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055549131194368,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055583490932736,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055600670801920,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055609260736512,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055613555703808,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055615703187456,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055616776929280,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617313800192,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617582235648,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617716453376,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617783562240,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617817116672,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617833893888,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617842282496,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617846476800,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617848573952,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617849622528,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850146816,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850408960,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850540032,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850605568,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850638336,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850654720,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850662912,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850667008,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850669056,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670080,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670592,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670848,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670976,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671040,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671072,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671088,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671096,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671100,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671102,64,FLEN)
NAN_BOXED(6891654416619040253,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671103,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297216,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297217,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297219,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297223,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297231,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297247,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297279,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297343,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297471,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297727,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284298239,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284299263,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284301311,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284305407,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284313599,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284329983,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284362751,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284428287,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284559359,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284821503,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828285345791,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828286394367,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828288491519,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828292685823,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828301074431,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828317851647,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828351406079,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828418514943,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828552732671,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828821168127,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954829358039039,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954830431780863,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954832579264511,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954836874231807,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954845464166399,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954862644035583,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954897003773951,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954965723250687,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326955103162204159,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326955378040111103,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326955927795924991,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326957027307552767,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326959226330808319,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326963624377319423,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326972420470341631,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326990012656386047,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327025197028474879,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327095565772652543,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327236303261007871,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327517778237718527,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9328080728191139839,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9329206628097982463,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9329206628097982464,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9330332528004825088,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9330895477958246400,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331176952934957056,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331317690423312384,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331388059167490048,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331423243539578880,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331440835725623296,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331449631818645504,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331454029865156608,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331456228888412160,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331457328400039936,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331457878155853824,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458153033760768,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458290472714240,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458359192190976,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458393551929344,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458410731798528,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458419321733120,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458423616700416,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458425764184064,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458426837925888,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427374796800,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427643232256,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427777449984,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427844558848,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427878113280,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427894890496,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427903279104,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427907473408,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427909570560,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427910619136,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911143424,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911405568,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911536640,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911602176,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911634944,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911651328,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911659520,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911663616,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911665664,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911666688,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667200,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667456,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667584,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667648,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667680,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667696,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667704,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667708,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667710,64,FLEN)
NAN_BOXED(6891670295023231074,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667711,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559616,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559617,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559619,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559623,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559631,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559647,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559679,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559743,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559871,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560127,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560639,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968561663,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968563711,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968567807,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968575999,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968592383,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968625151,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968690687,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968821759,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969083903,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969608191,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818970656767,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818972753919,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818976948223,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818985336831,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819002114047,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819035668479,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819102777343,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819236995071,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819505430527,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544820042301439,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544821116043263,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544823263526911,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544827558494207,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544836148428799,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544853328297983,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544887688036351,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544956407513087,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545093846466559,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545368724373503,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545918480187391,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439547017991815167,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439549217015070719,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439553615061581823,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439562411154604031,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439580003340648447,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439615187712737279,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439685556456914943,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439826293945270271,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440107768921980927,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440670718875402239,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244863,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244864,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9442922518689087488,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443485468642508800,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443766943619219456,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443907681107574784,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443978049851752448,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444013234223841280,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444030826409885696,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444039622502907904,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444044020549419008,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444046219572674560,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444047319084302336,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444047868840116224,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048143718023168,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048281156976640,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048349876453376,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048384236191744,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048401416060928,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048410005995520,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048414300962816,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048416448446464,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048417522188288,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418059059200,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418327494656,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418461712384,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418528821248,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418562375680,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418579152896,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418587541504,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418591735808,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418593832960,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418594881536,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595405824,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595667968,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
