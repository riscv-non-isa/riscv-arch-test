
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_85248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:255744*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255744*0 + 3*0*FLEN/8, x4, x1, x2)

inst_85249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:255747*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255747*0 + 3*1*FLEN/8, x4, x1, x2)

inst_85250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:255750*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255750*0 + 3*2*FLEN/8, x4, x1, x2)

inst_85251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:255753*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255753*0 + 3*3*FLEN/8, x4, x1, x2)

inst_85252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:255756*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255756*0 + 3*4*FLEN/8, x4, x1, x2)

inst_85253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:255759*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255759*0 + 3*5*FLEN/8, x4, x1, x2)

inst_85254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:255762*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255762*0 + 3*6*FLEN/8, x4, x1, x2)

inst_85255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:255765*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255765*0 + 3*7*FLEN/8, x4, x1, x2)

inst_85256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:255768*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255768*0 + 3*8*FLEN/8, x4, x1, x2)

inst_85257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:255771*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255771*0 + 3*9*FLEN/8, x4, x1, x2)

inst_85258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:255774*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255774*0 + 3*10*FLEN/8, x4, x1, x2)

inst_85259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa398ea801da1f and fs2 == 0 and fe2 == 0x203 and fm2 == 0x38602c73b346f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa398ea801da1f; op2val:0x20338602c73b346f;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:255777*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255777*0 + 3*11*FLEN/8, x4, x1, x2)

inst_85260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:255780*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255780*0 + 3*12*FLEN/8, x4, x1, x2)

inst_85261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:255783*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255783*0 + 3*13*FLEN/8, x4, x1, x2)

inst_85262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:255786*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255786*0 + 3*14*FLEN/8, x4, x1, x2)

inst_85263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:255789*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255789*0 + 3*15*FLEN/8, x4, x1, x2)

inst_85264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:255792*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255792*0 + 3*16*FLEN/8, x4, x1, x2)

inst_85265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:255795*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255795*0 + 3*17*FLEN/8, x4, x1, x2)

inst_85266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:255798*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255798*0 + 3*18*FLEN/8, x4, x1, x2)

inst_85267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:255801*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255801*0 + 3*19*FLEN/8, x4, x1, x2)

inst_85268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:255804*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255804*0 + 3*20*FLEN/8, x4, x1, x2)

inst_85269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:255807*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255807*0 + 3*21*FLEN/8, x4, x1, x2)

inst_85270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:255810*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255810*0 + 3*22*FLEN/8, x4, x1, x2)

inst_85271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:255813*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255813*0 + 3*23*FLEN/8, x4, x1, x2)

inst_85272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:255816*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255816*0 + 3*24*FLEN/8, x4, x1, x2)

inst_85273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:255819*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255819*0 + 3*25*FLEN/8, x4, x1, x2)

inst_85274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:255822*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255822*0 + 3*26*FLEN/8, x4, x1, x2)

inst_85275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:255825*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255825*0 + 3*27*FLEN/8, x4, x1, x2)

inst_85276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:255828*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255828*0 + 3*28*FLEN/8, x4, x1, x2)

inst_85277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:255831*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255831*0 + 3*29*FLEN/8, x4, x1, x2)

inst_85278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:255834*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255834*0 + 3*30*FLEN/8, x4, x1, x2)

inst_85279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:255837*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255837*0 + 3*31*FLEN/8, x4, x1, x2)

inst_85280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:255840*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255840*0 + 3*32*FLEN/8, x4, x1, x2)

inst_85281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:255843*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255843*0 + 3*33*FLEN/8, x4, x1, x2)

inst_85282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000000000000; valaddr_reg:x3; val_offset:255846*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255846*0 + 3*34*FLEN/8, x4, x1, x2)

inst_85283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000000000001; valaddr_reg:x3; val_offset:255849*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255849*0 + 3*35*FLEN/8, x4, x1, x2)

inst_85284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000000000003; valaddr_reg:x3; val_offset:255852*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255852*0 + 3*36*FLEN/8, x4, x1, x2)

inst_85285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000000000007; valaddr_reg:x3; val_offset:255855*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255855*0 + 3*37*FLEN/8, x4, x1, x2)

inst_85286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000000000000f; valaddr_reg:x3; val_offset:255858*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255858*0 + 3*38*FLEN/8, x4, x1, x2)

inst_85287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000000000001f; valaddr_reg:x3; val_offset:255861*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255861*0 + 3*39*FLEN/8, x4, x1, x2)

inst_85288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000000000003f; valaddr_reg:x3; val_offset:255864*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255864*0 + 3*40*FLEN/8, x4, x1, x2)

inst_85289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000000000007f; valaddr_reg:x3; val_offset:255867*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255867*0 + 3*41*FLEN/8, x4, x1, x2)

inst_85290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500000000000ff; valaddr_reg:x3; val_offset:255870*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255870*0 + 3*42*FLEN/8, x4, x1, x2)

inst_85291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500000000001ff; valaddr_reg:x3; val_offset:255873*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255873*0 + 3*43*FLEN/8, x4, x1, x2)

inst_85292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500000000003ff; valaddr_reg:x3; val_offset:255876*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255876*0 + 3*44*FLEN/8, x4, x1, x2)

inst_85293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500000000007ff; valaddr_reg:x3; val_offset:255879*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255879*0 + 3*45*FLEN/8, x4, x1, x2)

inst_85294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000000000fff; valaddr_reg:x3; val_offset:255882*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255882*0 + 3*46*FLEN/8, x4, x1, x2)

inst_85295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000000001fff; valaddr_reg:x3; val_offset:255885*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255885*0 + 3*47*FLEN/8, x4, x1, x2)

inst_85296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000000003fff; valaddr_reg:x3; val_offset:255888*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255888*0 + 3*48*FLEN/8, x4, x1, x2)

inst_85297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000000007fff; valaddr_reg:x3; val_offset:255891*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255891*0 + 3*49*FLEN/8, x4, x1, x2)

inst_85298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000000000ffff; valaddr_reg:x3; val_offset:255894*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255894*0 + 3*50*FLEN/8, x4, x1, x2)

inst_85299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000000001ffff; valaddr_reg:x3; val_offset:255897*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255897*0 + 3*51*FLEN/8, x4, x1, x2)

inst_85300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000000003ffff; valaddr_reg:x3; val_offset:255900*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255900*0 + 3*52*FLEN/8, x4, x1, x2)

inst_85301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000000007ffff; valaddr_reg:x3; val_offset:255903*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255903*0 + 3*53*FLEN/8, x4, x1, x2)

inst_85302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500000000fffff; valaddr_reg:x3; val_offset:255906*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255906*0 + 3*54*FLEN/8, x4, x1, x2)

inst_85303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500000001fffff; valaddr_reg:x3; val_offset:255909*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255909*0 + 3*55*FLEN/8, x4, x1, x2)

inst_85304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500000003fffff; valaddr_reg:x3; val_offset:255912*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255912*0 + 3*56*FLEN/8, x4, x1, x2)

inst_85305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500000007fffff; valaddr_reg:x3; val_offset:255915*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255915*0 + 3*57*FLEN/8, x4, x1, x2)

inst_85306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000000ffffff; valaddr_reg:x3; val_offset:255918*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255918*0 + 3*58*FLEN/8, x4, x1, x2)

inst_85307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000001ffffff; valaddr_reg:x3; val_offset:255921*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255921*0 + 3*59*FLEN/8, x4, x1, x2)

inst_85308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000003ffffff; valaddr_reg:x3; val_offset:255924*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255924*0 + 3*60*FLEN/8, x4, x1, x2)

inst_85309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000007ffffff; valaddr_reg:x3; val_offset:255927*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255927*0 + 3*61*FLEN/8, x4, x1, x2)

inst_85310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000000fffffff; valaddr_reg:x3; val_offset:255930*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255930*0 + 3*62*FLEN/8, x4, x1, x2)

inst_85311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000001fffffff; valaddr_reg:x3; val_offset:255933*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255933*0 + 3*63*FLEN/8, x4, x1, x2)

inst_85312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000003fffffff; valaddr_reg:x3; val_offset:255936*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255936*0 + 3*64*FLEN/8, x4, x1, x2)

inst_85313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000007fffffff; valaddr_reg:x3; val_offset:255939*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255939*0 + 3*65*FLEN/8, x4, x1, x2)

inst_85314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500000ffffffff; valaddr_reg:x3; val_offset:255942*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255942*0 + 3*66*FLEN/8, x4, x1, x2)

inst_85315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500001ffffffff; valaddr_reg:x3; val_offset:255945*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255945*0 + 3*67*FLEN/8, x4, x1, x2)

inst_85316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500003ffffffff; valaddr_reg:x3; val_offset:255948*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255948*0 + 3*68*FLEN/8, x4, x1, x2)

inst_85317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500007ffffffff; valaddr_reg:x3; val_offset:255951*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255951*0 + 3*69*FLEN/8, x4, x1, x2)

inst_85318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550000fffffffff; valaddr_reg:x3; val_offset:255954*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255954*0 + 3*70*FLEN/8, x4, x1, x2)

inst_85319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550001fffffffff; valaddr_reg:x3; val_offset:255957*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255957*0 + 3*71*FLEN/8, x4, x1, x2)

inst_85320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550003fffffffff; valaddr_reg:x3; val_offset:255960*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255960*0 + 3*72*FLEN/8, x4, x1, x2)

inst_85321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550007fffffffff; valaddr_reg:x3; val_offset:255963*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255963*0 + 3*73*FLEN/8, x4, x1, x2)

inst_85322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155000ffffffffff; valaddr_reg:x3; val_offset:255966*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255966*0 + 3*74*FLEN/8, x4, x1, x2)

inst_85323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155001ffffffffff; valaddr_reg:x3; val_offset:255969*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255969*0 + 3*75*FLEN/8, x4, x1, x2)

inst_85324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155003ffffffffff; valaddr_reg:x3; val_offset:255972*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255972*0 + 3*76*FLEN/8, x4, x1, x2)

inst_85325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155007ffffffffff; valaddr_reg:x3; val_offset:255975*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255975*0 + 3*77*FLEN/8, x4, x1, x2)

inst_85326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15500fffffffffff; valaddr_reg:x3; val_offset:255978*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255978*0 + 3*78*FLEN/8, x4, x1, x2)

inst_85327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15501fffffffffff; valaddr_reg:x3; val_offset:255981*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255981*0 + 3*79*FLEN/8, x4, x1, x2)

inst_85328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15503fffffffffff; valaddr_reg:x3; val_offset:255984*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255984*0 + 3*80*FLEN/8, x4, x1, x2)

inst_85329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x15507fffffffffff; valaddr_reg:x3; val_offset:255987*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255987*0 + 3*81*FLEN/8, x4, x1, x2)

inst_85330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1550ffffffffffff; valaddr_reg:x3; val_offset:255990*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255990*0 + 3*82*FLEN/8, x4, x1, x2)

inst_85331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1551ffffffffffff; valaddr_reg:x3; val_offset:255993*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255993*0 + 3*83*FLEN/8, x4, x1, x2)

inst_85332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1553ffffffffffff; valaddr_reg:x3; val_offset:255996*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255996*0 + 3*84*FLEN/8, x4, x1, x2)

inst_85333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1557ffffffffffff; valaddr_reg:x3; val_offset:255999*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255999*0 + 3*85*FLEN/8, x4, x1, x2)

inst_85334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x1558000000000000; valaddr_reg:x3; val_offset:256002*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256002*0 + 3*86*FLEN/8, x4, x1, x2)

inst_85335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155c000000000000; valaddr_reg:x3; val_offset:256005*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256005*0 + 3*87*FLEN/8, x4, x1, x2)

inst_85336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155e000000000000; valaddr_reg:x3; val_offset:256008*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256008*0 + 3*88*FLEN/8, x4, x1, x2)

inst_85337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155f000000000000; valaddr_reg:x3; val_offset:256011*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256011*0 + 3*89*FLEN/8, x4, x1, x2)

inst_85338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155f800000000000; valaddr_reg:x3; val_offset:256014*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256014*0 + 3*90*FLEN/8, x4, x1, x2)

inst_85339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fc00000000000; valaddr_reg:x3; val_offset:256017*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256017*0 + 3*91*FLEN/8, x4, x1, x2)

inst_85340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fe00000000000; valaddr_reg:x3; val_offset:256020*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256020*0 + 3*92*FLEN/8, x4, x1, x2)

inst_85341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ff00000000000; valaddr_reg:x3; val_offset:256023*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256023*0 + 3*93*FLEN/8, x4, x1, x2)

inst_85342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ff80000000000; valaddr_reg:x3; val_offset:256026*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256026*0 + 3*94*FLEN/8, x4, x1, x2)

inst_85343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffc0000000000; valaddr_reg:x3; val_offset:256029*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256029*0 + 3*95*FLEN/8, x4, x1, x2)

inst_85344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffe0000000000; valaddr_reg:x3; val_offset:256032*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256032*0 + 3*96*FLEN/8, x4, x1, x2)

inst_85345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fff0000000000; valaddr_reg:x3; val_offset:256035*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256035*0 + 3*97*FLEN/8, x4, x1, x2)

inst_85346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fff8000000000; valaddr_reg:x3; val_offset:256038*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256038*0 + 3*98*FLEN/8, x4, x1, x2)

inst_85347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffc000000000; valaddr_reg:x3; val_offset:256041*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256041*0 + 3*99*FLEN/8, x4, x1, x2)

inst_85348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffe000000000; valaddr_reg:x3; val_offset:256044*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256044*0 + 3*100*FLEN/8, x4, x1, x2)

inst_85349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffff000000000; valaddr_reg:x3; val_offset:256047*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256047*0 + 3*101*FLEN/8, x4, x1, x2)

inst_85350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffff800000000; valaddr_reg:x3; val_offset:256050*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256050*0 + 3*102*FLEN/8, x4, x1, x2)

inst_85351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffc00000000; valaddr_reg:x3; val_offset:256053*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256053*0 + 3*103*FLEN/8, x4, x1, x2)

inst_85352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffe00000000; valaddr_reg:x3; val_offset:256056*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256056*0 + 3*104*FLEN/8, x4, x1, x2)

inst_85353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffff00000000; valaddr_reg:x3; val_offset:256059*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256059*0 + 3*105*FLEN/8, x4, x1, x2)

inst_85354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffff80000000; valaddr_reg:x3; val_offset:256062*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256062*0 + 3*106*FLEN/8, x4, x1, x2)

inst_85355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffc0000000; valaddr_reg:x3; val_offset:256065*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256065*0 + 3*107*FLEN/8, x4, x1, x2)

inst_85356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffe0000000; valaddr_reg:x3; val_offset:256068*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256068*0 + 3*108*FLEN/8, x4, x1, x2)

inst_85357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffff0000000; valaddr_reg:x3; val_offset:256071*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256071*0 + 3*109*FLEN/8, x4, x1, x2)

inst_85358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffff8000000; valaddr_reg:x3; val_offset:256074*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256074*0 + 3*110*FLEN/8, x4, x1, x2)

inst_85359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffc000000; valaddr_reg:x3; val_offset:256077*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256077*0 + 3*111*FLEN/8, x4, x1, x2)

inst_85360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffe000000; valaddr_reg:x3; val_offset:256080*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256080*0 + 3*112*FLEN/8, x4, x1, x2)

inst_85361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffff000000; valaddr_reg:x3; val_offset:256083*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256083*0 + 3*113*FLEN/8, x4, x1, x2)

inst_85362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffff800000; valaddr_reg:x3; val_offset:256086*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256086*0 + 3*114*FLEN/8, x4, x1, x2)

inst_85363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffc00000; valaddr_reg:x3; val_offset:256089*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256089*0 + 3*115*FLEN/8, x4, x1, x2)

inst_85364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffe00000; valaddr_reg:x3; val_offset:256092*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256092*0 + 3*116*FLEN/8, x4, x1, x2)

inst_85365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffff00000; valaddr_reg:x3; val_offset:256095*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256095*0 + 3*117*FLEN/8, x4, x1, x2)

inst_85366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffff80000; valaddr_reg:x3; val_offset:256098*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256098*0 + 3*118*FLEN/8, x4, x1, x2)

inst_85367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffc0000; valaddr_reg:x3; val_offset:256101*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256101*0 + 3*119*FLEN/8, x4, x1, x2)

inst_85368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffe0000; valaddr_reg:x3; val_offset:256104*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256104*0 + 3*120*FLEN/8, x4, x1, x2)

inst_85369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffff0000; valaddr_reg:x3; val_offset:256107*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256107*0 + 3*121*FLEN/8, x4, x1, x2)

inst_85370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffff8000; valaddr_reg:x3; val_offset:256110*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256110*0 + 3*122*FLEN/8, x4, x1, x2)

inst_85371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffffc000; valaddr_reg:x3; val_offset:256113*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256113*0 + 3*123*FLEN/8, x4, x1, x2)

inst_85372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffffe000; valaddr_reg:x3; val_offset:256116*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256116*0 + 3*124*FLEN/8, x4, x1, x2)

inst_85373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffff000; valaddr_reg:x3; val_offset:256119*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256119*0 + 3*125*FLEN/8, x4, x1, x2)

inst_85374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffff800; valaddr_reg:x3; val_offset:256122*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256122*0 + 3*126*FLEN/8, x4, x1, x2)

inst_85375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffffc00; valaddr_reg:x3; val_offset:256125*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256125*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_85376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffffe00; valaddr_reg:x3; val_offset:256128*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256128*0 + 3*128*FLEN/8, x4, x1, x2)

inst_85377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffffff00; valaddr_reg:x3; val_offset:256131*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256131*0 + 3*129*FLEN/8, x4, x1, x2)

inst_85378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffffff80; valaddr_reg:x3; val_offset:256134*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256134*0 + 3*130*FLEN/8, x4, x1, x2)

inst_85379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffffffc0; valaddr_reg:x3; val_offset:256137*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256137*0 + 3*131*FLEN/8, x4, x1, x2)

inst_85380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffffffe0; valaddr_reg:x3; val_offset:256140*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256140*0 + 3*132*FLEN/8, x4, x1, x2)

inst_85381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffffff0; valaddr_reg:x3; val_offset:256143*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256143*0 + 3*133*FLEN/8, x4, x1, x2)

inst_85382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffffff8; valaddr_reg:x3; val_offset:256146*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256146*0 + 3*134*FLEN/8, x4, x1, x2)

inst_85383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffffffc; valaddr_reg:x3; val_offset:256149*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256149*0 + 3*135*FLEN/8, x4, x1, x2)

inst_85384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155ffffffffffffe; valaddr_reg:x3; val_offset:256152*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256152*0 + 3*136*FLEN/8, x4, x1, x2)

inst_85385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa451124add124 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x155 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa451124add124; op2val:0x0;
op3val:0x155fffffffffffff; valaddr_reg:x3; val_offset:256155*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256155*0 + 3*137*FLEN/8, x4, x1, x2)

inst_85386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000000000000; valaddr_reg:x3; val_offset:256158*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256158*0 + 3*138*FLEN/8, x4, x1, x2)

inst_85387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000000000001; valaddr_reg:x3; val_offset:256161*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256161*0 + 3*139*FLEN/8, x4, x1, x2)

inst_85388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000000000003; valaddr_reg:x3; val_offset:256164*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256164*0 + 3*140*FLEN/8, x4, x1, x2)

inst_85389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000000000007; valaddr_reg:x3; val_offset:256167*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256167*0 + 3*141*FLEN/8, x4, x1, x2)

inst_85390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000000000000f; valaddr_reg:x3; val_offset:256170*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256170*0 + 3*142*FLEN/8, x4, x1, x2)

inst_85391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000000000001f; valaddr_reg:x3; val_offset:256173*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256173*0 + 3*143*FLEN/8, x4, x1, x2)

inst_85392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000000000003f; valaddr_reg:x3; val_offset:256176*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256176*0 + 3*144*FLEN/8, x4, x1, x2)

inst_85393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000000000007f; valaddr_reg:x3; val_offset:256179*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256179*0 + 3*145*FLEN/8, x4, x1, x2)

inst_85394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00000000000ff; valaddr_reg:x3; val_offset:256182*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256182*0 + 3*146*FLEN/8, x4, x1, x2)

inst_85395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00000000001ff; valaddr_reg:x3; val_offset:256185*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256185*0 + 3*147*FLEN/8, x4, x1, x2)

inst_85396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00000000003ff; valaddr_reg:x3; val_offset:256188*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256188*0 + 3*148*FLEN/8, x4, x1, x2)

inst_85397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00000000007ff; valaddr_reg:x3; val_offset:256191*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256191*0 + 3*149*FLEN/8, x4, x1, x2)

inst_85398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000000000fff; valaddr_reg:x3; val_offset:256194*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256194*0 + 3*150*FLEN/8, x4, x1, x2)

inst_85399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000000001fff; valaddr_reg:x3; val_offset:256197*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256197*0 + 3*151*FLEN/8, x4, x1, x2)

inst_85400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000000003fff; valaddr_reg:x3; val_offset:256200*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256200*0 + 3*152*FLEN/8, x4, x1, x2)

inst_85401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000000007fff; valaddr_reg:x3; val_offset:256203*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256203*0 + 3*153*FLEN/8, x4, x1, x2)

inst_85402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000000000ffff; valaddr_reg:x3; val_offset:256206*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256206*0 + 3*154*FLEN/8, x4, x1, x2)

inst_85403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000000001ffff; valaddr_reg:x3; val_offset:256209*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256209*0 + 3*155*FLEN/8, x4, x1, x2)

inst_85404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000000003ffff; valaddr_reg:x3; val_offset:256212*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256212*0 + 3*156*FLEN/8, x4, x1, x2)

inst_85405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000000007ffff; valaddr_reg:x3; val_offset:256215*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256215*0 + 3*157*FLEN/8, x4, x1, x2)

inst_85406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00000000fffff; valaddr_reg:x3; val_offset:256218*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256218*0 + 3*158*FLEN/8, x4, x1, x2)

inst_85407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00000001fffff; valaddr_reg:x3; val_offset:256221*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256221*0 + 3*159*FLEN/8, x4, x1, x2)

inst_85408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00000003fffff; valaddr_reg:x3; val_offset:256224*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256224*0 + 3*160*FLEN/8, x4, x1, x2)

inst_85409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00000007fffff; valaddr_reg:x3; val_offset:256227*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256227*0 + 3*161*FLEN/8, x4, x1, x2)

inst_85410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000000ffffff; valaddr_reg:x3; val_offset:256230*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256230*0 + 3*162*FLEN/8, x4, x1, x2)

inst_85411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000001ffffff; valaddr_reg:x3; val_offset:256233*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256233*0 + 3*163*FLEN/8, x4, x1, x2)

inst_85412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000003ffffff; valaddr_reg:x3; val_offset:256236*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256236*0 + 3*164*FLEN/8, x4, x1, x2)

inst_85413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000007ffffff; valaddr_reg:x3; val_offset:256239*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256239*0 + 3*165*FLEN/8, x4, x1, x2)

inst_85414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000000fffffff; valaddr_reg:x3; val_offset:256242*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256242*0 + 3*166*FLEN/8, x4, x1, x2)

inst_85415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000001fffffff; valaddr_reg:x3; val_offset:256245*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256245*0 + 3*167*FLEN/8, x4, x1, x2)

inst_85416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000003fffffff; valaddr_reg:x3; val_offset:256248*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256248*0 + 3*168*FLEN/8, x4, x1, x2)

inst_85417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000007fffffff; valaddr_reg:x3; val_offset:256251*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256251*0 + 3*169*FLEN/8, x4, x1, x2)

inst_85418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00000ffffffff; valaddr_reg:x3; val_offset:256254*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256254*0 + 3*170*FLEN/8, x4, x1, x2)

inst_85419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00001ffffffff; valaddr_reg:x3; val_offset:256257*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256257*0 + 3*171*FLEN/8, x4, x1, x2)

inst_85420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00003ffffffff; valaddr_reg:x3; val_offset:256260*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256260*0 + 3*172*FLEN/8, x4, x1, x2)

inst_85421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00007ffffffff; valaddr_reg:x3; val_offset:256263*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256263*0 + 3*173*FLEN/8, x4, x1, x2)

inst_85422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0000fffffffff; valaddr_reg:x3; val_offset:256266*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256266*0 + 3*174*FLEN/8, x4, x1, x2)

inst_85423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0001fffffffff; valaddr_reg:x3; val_offset:256269*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256269*0 + 3*175*FLEN/8, x4, x1, x2)

inst_85424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0003fffffffff; valaddr_reg:x3; val_offset:256272*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256272*0 + 3*176*FLEN/8, x4, x1, x2)

inst_85425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0007fffffffff; valaddr_reg:x3; val_offset:256275*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256275*0 + 3*177*FLEN/8, x4, x1, x2)

inst_85426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee000ffffffffff; valaddr_reg:x3; val_offset:256278*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256278*0 + 3*178*FLEN/8, x4, x1, x2)

inst_85427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee001ffffffffff; valaddr_reg:x3; val_offset:256281*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256281*0 + 3*179*FLEN/8, x4, x1, x2)

inst_85428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee003ffffffffff; valaddr_reg:x3; val_offset:256284*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256284*0 + 3*180*FLEN/8, x4, x1, x2)

inst_85429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee007ffffffffff; valaddr_reg:x3; val_offset:256287*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256287*0 + 3*181*FLEN/8, x4, x1, x2)

inst_85430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee00fffffffffff; valaddr_reg:x3; val_offset:256290*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256290*0 + 3*182*FLEN/8, x4, x1, x2)

inst_85431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee01fffffffffff; valaddr_reg:x3; val_offset:256293*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256293*0 + 3*183*FLEN/8, x4, x1, x2)

inst_85432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee03fffffffffff; valaddr_reg:x3; val_offset:256296*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256296*0 + 3*184*FLEN/8, x4, x1, x2)

inst_85433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee07fffffffffff; valaddr_reg:x3; val_offset:256299*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256299*0 + 3*185*FLEN/8, x4, x1, x2)

inst_85434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee0ffffffffffff; valaddr_reg:x3; val_offset:256302*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256302*0 + 3*186*FLEN/8, x4, x1, x2)

inst_85435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee1ffffffffffff; valaddr_reg:x3; val_offset:256305*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256305*0 + 3*187*FLEN/8, x4, x1, x2)

inst_85436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee3ffffffffffff; valaddr_reg:x3; val_offset:256308*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256308*0 + 3*188*FLEN/8, x4, x1, x2)

inst_85437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee7ffffffffffff; valaddr_reg:x3; val_offset:256311*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256311*0 + 3*189*FLEN/8, x4, x1, x2)

inst_85438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbee8000000000000; valaddr_reg:x3; val_offset:256314*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256314*0 + 3*190*FLEN/8, x4, x1, x2)

inst_85439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeec000000000000; valaddr_reg:x3; val_offset:256317*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256317*0 + 3*191*FLEN/8, x4, x1, x2)

inst_85440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeee000000000000; valaddr_reg:x3; val_offset:256320*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256320*0 + 3*192*FLEN/8, x4, x1, x2)

inst_85441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeef000000000000; valaddr_reg:x3; val_offset:256323*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256323*0 + 3*193*FLEN/8, x4, x1, x2)

inst_85442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeef800000000000; valaddr_reg:x3; val_offset:256326*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256326*0 + 3*194*FLEN/8, x4, x1, x2)

inst_85443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefc00000000000; valaddr_reg:x3; val_offset:256329*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256329*0 + 3*195*FLEN/8, x4, x1, x2)

inst_85444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefe00000000000; valaddr_reg:x3; val_offset:256332*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256332*0 + 3*196*FLEN/8, x4, x1, x2)

inst_85445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeff00000000000; valaddr_reg:x3; val_offset:256335*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256335*0 + 3*197*FLEN/8, x4, x1, x2)

inst_85446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeff80000000000; valaddr_reg:x3; val_offset:256338*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256338*0 + 3*198*FLEN/8, x4, x1, x2)

inst_85447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffc0000000000; valaddr_reg:x3; val_offset:256341*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256341*0 + 3*199*FLEN/8, x4, x1, x2)

inst_85448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffe0000000000; valaddr_reg:x3; val_offset:256344*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256344*0 + 3*200*FLEN/8, x4, x1, x2)

inst_85449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefff0000000000; valaddr_reg:x3; val_offset:256347*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256347*0 + 3*201*FLEN/8, x4, x1, x2)

inst_85450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefff8000000000; valaddr_reg:x3; val_offset:256350*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256350*0 + 3*202*FLEN/8, x4, x1, x2)

inst_85451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffc000000000; valaddr_reg:x3; val_offset:256353*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256353*0 + 3*203*FLEN/8, x4, x1, x2)

inst_85452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffe000000000; valaddr_reg:x3; val_offset:256356*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256356*0 + 3*204*FLEN/8, x4, x1, x2)

inst_85453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffff000000000; valaddr_reg:x3; val_offset:256359*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256359*0 + 3*205*FLEN/8, x4, x1, x2)

inst_85454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffff800000000; valaddr_reg:x3; val_offset:256362*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256362*0 + 3*206*FLEN/8, x4, x1, x2)

inst_85455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffc00000000; valaddr_reg:x3; val_offset:256365*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256365*0 + 3*207*FLEN/8, x4, x1, x2)

inst_85456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffe00000000; valaddr_reg:x3; val_offset:256368*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256368*0 + 3*208*FLEN/8, x4, x1, x2)

inst_85457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffff00000000; valaddr_reg:x3; val_offset:256371*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256371*0 + 3*209*FLEN/8, x4, x1, x2)

inst_85458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffff80000000; valaddr_reg:x3; val_offset:256374*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256374*0 + 3*210*FLEN/8, x4, x1, x2)

inst_85459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffc0000000; valaddr_reg:x3; val_offset:256377*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256377*0 + 3*211*FLEN/8, x4, x1, x2)

inst_85460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffe0000000; valaddr_reg:x3; val_offset:256380*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256380*0 + 3*212*FLEN/8, x4, x1, x2)

inst_85461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffff0000000; valaddr_reg:x3; val_offset:256383*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256383*0 + 3*213*FLEN/8, x4, x1, x2)

inst_85462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffff8000000; valaddr_reg:x3; val_offset:256386*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256386*0 + 3*214*FLEN/8, x4, x1, x2)

inst_85463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffc000000; valaddr_reg:x3; val_offset:256389*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256389*0 + 3*215*FLEN/8, x4, x1, x2)

inst_85464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffe000000; valaddr_reg:x3; val_offset:256392*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256392*0 + 3*216*FLEN/8, x4, x1, x2)

inst_85465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffff000000; valaddr_reg:x3; val_offset:256395*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256395*0 + 3*217*FLEN/8, x4, x1, x2)

inst_85466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffff800000; valaddr_reg:x3; val_offset:256398*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256398*0 + 3*218*FLEN/8, x4, x1, x2)

inst_85467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffc00000; valaddr_reg:x3; val_offset:256401*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256401*0 + 3*219*FLEN/8, x4, x1, x2)

inst_85468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffe00000; valaddr_reg:x3; val_offset:256404*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256404*0 + 3*220*FLEN/8, x4, x1, x2)

inst_85469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffff00000; valaddr_reg:x3; val_offset:256407*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256407*0 + 3*221*FLEN/8, x4, x1, x2)

inst_85470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffff80000; valaddr_reg:x3; val_offset:256410*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256410*0 + 3*222*FLEN/8, x4, x1, x2)

inst_85471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffc0000; valaddr_reg:x3; val_offset:256413*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256413*0 + 3*223*FLEN/8, x4, x1, x2)

inst_85472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffe0000; valaddr_reg:x3; val_offset:256416*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256416*0 + 3*224*FLEN/8, x4, x1, x2)

inst_85473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffff0000; valaddr_reg:x3; val_offset:256419*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256419*0 + 3*225*FLEN/8, x4, x1, x2)

inst_85474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffff8000; valaddr_reg:x3; val_offset:256422*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256422*0 + 3*226*FLEN/8, x4, x1, x2)

inst_85475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffffc000; valaddr_reg:x3; val_offset:256425*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256425*0 + 3*227*FLEN/8, x4, x1, x2)

inst_85476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffffe000; valaddr_reg:x3; val_offset:256428*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256428*0 + 3*228*FLEN/8, x4, x1, x2)

inst_85477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffff000; valaddr_reg:x3; val_offset:256431*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256431*0 + 3*229*FLEN/8, x4, x1, x2)

inst_85478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffff800; valaddr_reg:x3; val_offset:256434*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256434*0 + 3*230*FLEN/8, x4, x1, x2)

inst_85479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffffc00; valaddr_reg:x3; val_offset:256437*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256437*0 + 3*231*FLEN/8, x4, x1, x2)

inst_85480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffffe00; valaddr_reg:x3; val_offset:256440*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256440*0 + 3*232*FLEN/8, x4, x1, x2)

inst_85481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffffff00; valaddr_reg:x3; val_offset:256443*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256443*0 + 3*233*FLEN/8, x4, x1, x2)

inst_85482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffffff80; valaddr_reg:x3; val_offset:256446*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256446*0 + 3*234*FLEN/8, x4, x1, x2)

inst_85483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffffffc0; valaddr_reg:x3; val_offset:256449*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256449*0 + 3*235*FLEN/8, x4, x1, x2)

inst_85484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffffffe0; valaddr_reg:x3; val_offset:256452*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256452*0 + 3*236*FLEN/8, x4, x1, x2)

inst_85485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffffff0; valaddr_reg:x3; val_offset:256455*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256455*0 + 3*237*FLEN/8, x4, x1, x2)

inst_85486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffffff8; valaddr_reg:x3; val_offset:256458*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256458*0 + 3*238*FLEN/8, x4, x1, x2)

inst_85487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffffffc; valaddr_reg:x3; val_offset:256461*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256461*0 + 3*239*FLEN/8, x4, x1, x2)

inst_85488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeeffffffffffffe; valaddr_reg:x3; val_offset:256464*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256464*0 + 3*240*FLEN/8, x4, x1, x2)

inst_85489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3ee and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbeefffffffffffff; valaddr_reg:x3; val_offset:256467*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256467*0 + 3*241*FLEN/8, x4, x1, x2)

inst_85490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:256470*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256470*0 + 3*242*FLEN/8, x4, x1, x2)

inst_85491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:256473*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256473*0 + 3*243*FLEN/8, x4, x1, x2)

inst_85492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:256476*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256476*0 + 3*244*FLEN/8, x4, x1, x2)

inst_85493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:256479*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256479*0 + 3*245*FLEN/8, x4, x1, x2)

inst_85494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:256482*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256482*0 + 3*246*FLEN/8, x4, x1, x2)

inst_85495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:256485*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256485*0 + 3*247*FLEN/8, x4, x1, x2)

inst_85496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:256488*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256488*0 + 3*248*FLEN/8, x4, x1, x2)

inst_85497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:256491*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256491*0 + 3*249*FLEN/8, x4, x1, x2)

inst_85498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:256494*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256494*0 + 3*250*FLEN/8, x4, x1, x2)

inst_85499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:256497*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256497*0 + 3*251*FLEN/8, x4, x1, x2)

inst_85500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:256500*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256500*0 + 3*252*FLEN/8, x4, x1, x2)

inst_85501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:256503*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256503*0 + 3*253*FLEN/8, x4, x1, x2)

inst_85502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:256506*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256506*0 + 3*254*FLEN/8, x4, x1, x2)

inst_85503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:256509*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256509*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_85504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:256512*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256512*0 + 3*256*FLEN/8, x4, x1, x2)

inst_85505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:256515*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256515*0 + 3*257*FLEN/8, x4, x1, x2)

inst_85506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:256518*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256518*0 + 3*258*FLEN/8, x4, x1, x2)

inst_85507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:256521*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256521*0 + 3*259*FLEN/8, x4, x1, x2)

inst_85508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:256524*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256524*0 + 3*260*FLEN/8, x4, x1, x2)

inst_85509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:256527*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256527*0 + 3*261*FLEN/8, x4, x1, x2)

inst_85510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:256530*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256530*0 + 3*262*FLEN/8, x4, x1, x2)

inst_85511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4aabca9c0dd9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x3794d77cf1d91 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4aabca9c0dd9; op2val:0x9fc3794d77cf1d91;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:256533*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256533*0 + 3*263*FLEN/8, x4, x1, x2)

inst_85512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:256536*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256536*0 + 3*264*FLEN/8, x4, x1, x2)

inst_85513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:256539*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256539*0 + 3*265*FLEN/8, x4, x1, x2)

inst_85514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:256542*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256542*0 + 3*266*FLEN/8, x4, x1, x2)

inst_85515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:256545*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256545*0 + 3*267*FLEN/8, x4, x1, x2)

inst_85516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:256548*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256548*0 + 3*268*FLEN/8, x4, x1, x2)

inst_85517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:256551*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256551*0 + 3*269*FLEN/8, x4, x1, x2)

inst_85518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:256554*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256554*0 + 3*270*FLEN/8, x4, x1, x2)

inst_85519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:256557*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256557*0 + 3*271*FLEN/8, x4, x1, x2)

inst_85520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:256560*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256560*0 + 3*272*FLEN/8, x4, x1, x2)

inst_85521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:256563*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256563*0 + 3*273*FLEN/8, x4, x1, x2)

inst_85522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:256566*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256566*0 + 3*274*FLEN/8, x4, x1, x2)

inst_85523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:256569*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256569*0 + 3*275*FLEN/8, x4, x1, x2)

inst_85524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:256572*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256572*0 + 3*276*FLEN/8, x4, x1, x2)

inst_85525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:256575*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256575*0 + 3*277*FLEN/8, x4, x1, x2)

inst_85526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:256578*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256578*0 + 3*278*FLEN/8, x4, x1, x2)

inst_85527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:256581*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256581*0 + 3*279*FLEN/8, x4, x1, x2)

inst_85528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:256584*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256584*0 + 3*280*FLEN/8, x4, x1, x2)

inst_85529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:256587*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256587*0 + 3*281*FLEN/8, x4, x1, x2)

inst_85530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:256590*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256590*0 + 3*282*FLEN/8, x4, x1, x2)

inst_85531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:256593*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256593*0 + 3*283*FLEN/8, x4, x1, x2)

inst_85532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:256596*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256596*0 + 3*284*FLEN/8, x4, x1, x2)

inst_85533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:256599*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256599*0 + 3*285*FLEN/8, x4, x1, x2)

inst_85534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000000000000; valaddr_reg:x3; val_offset:256602*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256602*0 + 3*286*FLEN/8, x4, x1, x2)

inst_85535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000000000001; valaddr_reg:x3; val_offset:256605*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256605*0 + 3*287*FLEN/8, x4, x1, x2)

inst_85536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000000000003; valaddr_reg:x3; val_offset:256608*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256608*0 + 3*288*FLEN/8, x4, x1, x2)

inst_85537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000000000007; valaddr_reg:x3; val_offset:256611*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256611*0 + 3*289*FLEN/8, x4, x1, x2)

inst_85538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000000000000f; valaddr_reg:x3; val_offset:256614*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256614*0 + 3*290*FLEN/8, x4, x1, x2)

inst_85539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000000000001f; valaddr_reg:x3; val_offset:256617*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256617*0 + 3*291*FLEN/8, x4, x1, x2)

inst_85540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000000000003f; valaddr_reg:x3; val_offset:256620*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256620*0 + 3*292*FLEN/8, x4, x1, x2)

inst_85541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000000000007f; valaddr_reg:x3; val_offset:256623*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256623*0 + 3*293*FLEN/8, x4, x1, x2)

inst_85542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00000000000ff; valaddr_reg:x3; val_offset:256626*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256626*0 + 3*294*FLEN/8, x4, x1, x2)

inst_85543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00000000001ff; valaddr_reg:x3; val_offset:256629*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256629*0 + 3*295*FLEN/8, x4, x1, x2)

inst_85544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00000000003ff; valaddr_reg:x3; val_offset:256632*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256632*0 + 3*296*FLEN/8, x4, x1, x2)

inst_85545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00000000007ff; valaddr_reg:x3; val_offset:256635*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256635*0 + 3*297*FLEN/8, x4, x1, x2)

inst_85546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000000000fff; valaddr_reg:x3; val_offset:256638*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256638*0 + 3*298*FLEN/8, x4, x1, x2)

inst_85547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000000001fff; valaddr_reg:x3; val_offset:256641*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256641*0 + 3*299*FLEN/8, x4, x1, x2)

inst_85548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000000003fff; valaddr_reg:x3; val_offset:256644*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256644*0 + 3*300*FLEN/8, x4, x1, x2)

inst_85549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000000007fff; valaddr_reg:x3; val_offset:256647*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256647*0 + 3*301*FLEN/8, x4, x1, x2)

inst_85550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000000000ffff; valaddr_reg:x3; val_offset:256650*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256650*0 + 3*302*FLEN/8, x4, x1, x2)

inst_85551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000000001ffff; valaddr_reg:x3; val_offset:256653*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256653*0 + 3*303*FLEN/8, x4, x1, x2)

inst_85552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000000003ffff; valaddr_reg:x3; val_offset:256656*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256656*0 + 3*304*FLEN/8, x4, x1, x2)

inst_85553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000000007ffff; valaddr_reg:x3; val_offset:256659*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256659*0 + 3*305*FLEN/8, x4, x1, x2)

inst_85554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00000000fffff; valaddr_reg:x3; val_offset:256662*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256662*0 + 3*306*FLEN/8, x4, x1, x2)

inst_85555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00000001fffff; valaddr_reg:x3; val_offset:256665*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256665*0 + 3*307*FLEN/8, x4, x1, x2)

inst_85556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00000003fffff; valaddr_reg:x3; val_offset:256668*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256668*0 + 3*308*FLEN/8, x4, x1, x2)

inst_85557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00000007fffff; valaddr_reg:x3; val_offset:256671*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256671*0 + 3*309*FLEN/8, x4, x1, x2)

inst_85558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000000ffffff; valaddr_reg:x3; val_offset:256674*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256674*0 + 3*310*FLEN/8, x4, x1, x2)

inst_85559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000001ffffff; valaddr_reg:x3; val_offset:256677*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256677*0 + 3*311*FLEN/8, x4, x1, x2)

inst_85560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000003ffffff; valaddr_reg:x3; val_offset:256680*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256680*0 + 3*312*FLEN/8, x4, x1, x2)

inst_85561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000007ffffff; valaddr_reg:x3; val_offset:256683*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256683*0 + 3*313*FLEN/8, x4, x1, x2)

inst_85562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000000fffffff; valaddr_reg:x3; val_offset:256686*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256686*0 + 3*314*FLEN/8, x4, x1, x2)

inst_85563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000001fffffff; valaddr_reg:x3; val_offset:256689*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256689*0 + 3*315*FLEN/8, x4, x1, x2)

inst_85564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000003fffffff; valaddr_reg:x3; val_offset:256692*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256692*0 + 3*316*FLEN/8, x4, x1, x2)

inst_85565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000007fffffff; valaddr_reg:x3; val_offset:256695*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256695*0 + 3*317*FLEN/8, x4, x1, x2)

inst_85566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00000ffffffff; valaddr_reg:x3; val_offset:256698*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256698*0 + 3*318*FLEN/8, x4, x1, x2)

inst_85567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00001ffffffff; valaddr_reg:x3; val_offset:256701*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256701*0 + 3*319*FLEN/8, x4, x1, x2)

inst_85568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00003ffffffff; valaddr_reg:x3; val_offset:256704*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256704*0 + 3*320*FLEN/8, x4, x1, x2)

inst_85569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00007ffffffff; valaddr_reg:x3; val_offset:256707*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256707*0 + 3*321*FLEN/8, x4, x1, x2)

inst_85570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0000fffffffff; valaddr_reg:x3; val_offset:256710*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256710*0 + 3*322*FLEN/8, x4, x1, x2)

inst_85571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0001fffffffff; valaddr_reg:x3; val_offset:256713*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256713*0 + 3*323*FLEN/8, x4, x1, x2)

inst_85572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0003fffffffff; valaddr_reg:x3; val_offset:256716*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256716*0 + 3*324*FLEN/8, x4, x1, x2)

inst_85573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0007fffffffff; valaddr_reg:x3; val_offset:256719*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256719*0 + 3*325*FLEN/8, x4, x1, x2)

inst_85574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d000ffffffffff; valaddr_reg:x3; val_offset:256722*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256722*0 + 3*326*FLEN/8, x4, x1, x2)

inst_85575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d001ffffffffff; valaddr_reg:x3; val_offset:256725*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256725*0 + 3*327*FLEN/8, x4, x1, x2)

inst_85576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d003ffffffffff; valaddr_reg:x3; val_offset:256728*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256728*0 + 3*328*FLEN/8, x4, x1, x2)

inst_85577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d007ffffffffff; valaddr_reg:x3; val_offset:256731*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256731*0 + 3*329*FLEN/8, x4, x1, x2)

inst_85578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d00fffffffffff; valaddr_reg:x3; val_offset:256734*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256734*0 + 3*330*FLEN/8, x4, x1, x2)

inst_85579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d01fffffffffff; valaddr_reg:x3; val_offset:256737*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256737*0 + 3*331*FLEN/8, x4, x1, x2)

inst_85580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d03fffffffffff; valaddr_reg:x3; val_offset:256740*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256740*0 + 3*332*FLEN/8, x4, x1, x2)

inst_85581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d07fffffffffff; valaddr_reg:x3; val_offset:256743*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256743*0 + 3*333*FLEN/8, x4, x1, x2)

inst_85582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d0ffffffffffff; valaddr_reg:x3; val_offset:256746*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256746*0 + 3*334*FLEN/8, x4, x1, x2)

inst_85583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d1ffffffffffff; valaddr_reg:x3; val_offset:256749*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256749*0 + 3*335*FLEN/8, x4, x1, x2)

inst_85584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d3ffffffffffff; valaddr_reg:x3; val_offset:256752*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256752*0 + 3*336*FLEN/8, x4, x1, x2)

inst_85585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d7ffffffffffff; valaddr_reg:x3; val_offset:256755*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256755*0 + 3*337*FLEN/8, x4, x1, x2)

inst_85586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1d8000000000000; valaddr_reg:x3; val_offset:256758*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256758*0 + 3*338*FLEN/8, x4, x1, x2)

inst_85587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dc000000000000; valaddr_reg:x3; val_offset:256761*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256761*0 + 3*339*FLEN/8, x4, x1, x2)

inst_85588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1de000000000000; valaddr_reg:x3; val_offset:256764*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256764*0 + 3*340*FLEN/8, x4, x1, x2)

inst_85589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1df000000000000; valaddr_reg:x3; val_offset:256767*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256767*0 + 3*341*FLEN/8, x4, x1, x2)

inst_85590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1df800000000000; valaddr_reg:x3; val_offset:256770*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256770*0 + 3*342*FLEN/8, x4, x1, x2)

inst_85591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfc00000000000; valaddr_reg:x3; val_offset:256773*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256773*0 + 3*343*FLEN/8, x4, x1, x2)

inst_85592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfe00000000000; valaddr_reg:x3; val_offset:256776*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256776*0 + 3*344*FLEN/8, x4, x1, x2)

inst_85593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dff00000000000; valaddr_reg:x3; val_offset:256779*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256779*0 + 3*345*FLEN/8, x4, x1, x2)

inst_85594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dff80000000000; valaddr_reg:x3; val_offset:256782*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256782*0 + 3*346*FLEN/8, x4, x1, x2)

inst_85595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffc0000000000; valaddr_reg:x3; val_offset:256785*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256785*0 + 3*347*FLEN/8, x4, x1, x2)

inst_85596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffe0000000000; valaddr_reg:x3; val_offset:256788*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256788*0 + 3*348*FLEN/8, x4, x1, x2)

inst_85597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfff0000000000; valaddr_reg:x3; val_offset:256791*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256791*0 + 3*349*FLEN/8, x4, x1, x2)

inst_85598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfff8000000000; valaddr_reg:x3; val_offset:256794*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256794*0 + 3*350*FLEN/8, x4, x1, x2)

inst_85599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffc000000000; valaddr_reg:x3; val_offset:256797*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256797*0 + 3*351*FLEN/8, x4, x1, x2)

inst_85600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffe000000000; valaddr_reg:x3; val_offset:256800*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256800*0 + 3*352*FLEN/8, x4, x1, x2)

inst_85601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffff000000000; valaddr_reg:x3; val_offset:256803*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256803*0 + 3*353*FLEN/8, x4, x1, x2)

inst_85602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffff800000000; valaddr_reg:x3; val_offset:256806*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256806*0 + 3*354*FLEN/8, x4, x1, x2)

inst_85603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffc00000000; valaddr_reg:x3; val_offset:256809*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256809*0 + 3*355*FLEN/8, x4, x1, x2)

inst_85604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffe00000000; valaddr_reg:x3; val_offset:256812*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256812*0 + 3*356*FLEN/8, x4, x1, x2)

inst_85605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffff00000000; valaddr_reg:x3; val_offset:256815*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256815*0 + 3*357*FLEN/8, x4, x1, x2)

inst_85606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffff80000000; valaddr_reg:x3; val_offset:256818*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256818*0 + 3*358*FLEN/8, x4, x1, x2)

inst_85607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffc0000000; valaddr_reg:x3; val_offset:256821*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256821*0 + 3*359*FLEN/8, x4, x1, x2)

inst_85608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffe0000000; valaddr_reg:x3; val_offset:256824*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256824*0 + 3*360*FLEN/8, x4, x1, x2)

inst_85609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffff0000000; valaddr_reg:x3; val_offset:256827*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256827*0 + 3*361*FLEN/8, x4, x1, x2)

inst_85610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffff8000000; valaddr_reg:x3; val_offset:256830*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256830*0 + 3*362*FLEN/8, x4, x1, x2)

inst_85611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffc000000; valaddr_reg:x3; val_offset:256833*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256833*0 + 3*363*FLEN/8, x4, x1, x2)

inst_85612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffe000000; valaddr_reg:x3; val_offset:256836*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256836*0 + 3*364*FLEN/8, x4, x1, x2)

inst_85613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffff000000; valaddr_reg:x3; val_offset:256839*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256839*0 + 3*365*FLEN/8, x4, x1, x2)

inst_85614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffff800000; valaddr_reg:x3; val_offset:256842*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256842*0 + 3*366*FLEN/8, x4, x1, x2)

inst_85615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffc00000; valaddr_reg:x3; val_offset:256845*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256845*0 + 3*367*FLEN/8, x4, x1, x2)

inst_85616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffe00000; valaddr_reg:x3; val_offset:256848*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256848*0 + 3*368*FLEN/8, x4, x1, x2)

inst_85617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffff00000; valaddr_reg:x3; val_offset:256851*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256851*0 + 3*369*FLEN/8, x4, x1, x2)

inst_85618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffff80000; valaddr_reg:x3; val_offset:256854*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256854*0 + 3*370*FLEN/8, x4, x1, x2)

inst_85619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffc0000; valaddr_reg:x3; val_offset:256857*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256857*0 + 3*371*FLEN/8, x4, x1, x2)

inst_85620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffe0000; valaddr_reg:x3; val_offset:256860*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256860*0 + 3*372*FLEN/8, x4, x1, x2)

inst_85621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffff0000; valaddr_reg:x3; val_offset:256863*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256863*0 + 3*373*FLEN/8, x4, x1, x2)

inst_85622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffff8000; valaddr_reg:x3; val_offset:256866*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256866*0 + 3*374*FLEN/8, x4, x1, x2)

inst_85623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffffc000; valaddr_reg:x3; val_offset:256869*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256869*0 + 3*375*FLEN/8, x4, x1, x2)

inst_85624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffffe000; valaddr_reg:x3; val_offset:256872*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256872*0 + 3*376*FLEN/8, x4, x1, x2)

inst_85625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffff000; valaddr_reg:x3; val_offset:256875*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256875*0 + 3*377*FLEN/8, x4, x1, x2)

inst_85626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffff800; valaddr_reg:x3; val_offset:256878*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256878*0 + 3*378*FLEN/8, x4, x1, x2)

inst_85627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffffc00; valaddr_reg:x3; val_offset:256881*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256881*0 + 3*379*FLEN/8, x4, x1, x2)

inst_85628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffffe00; valaddr_reg:x3; val_offset:256884*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256884*0 + 3*380*FLEN/8, x4, x1, x2)

inst_85629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffffff00; valaddr_reg:x3; val_offset:256887*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256887*0 + 3*381*FLEN/8, x4, x1, x2)

inst_85630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffffff80; valaddr_reg:x3; val_offset:256890*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256890*0 + 3*382*FLEN/8, x4, x1, x2)

inst_85631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffffffc0; valaddr_reg:x3; val_offset:256893*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256893*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_85632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffffffe0; valaddr_reg:x3; val_offset:256896*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256896*0 + 3*384*FLEN/8, x4, x1, x2)

inst_85633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffffff0; valaddr_reg:x3; val_offset:256899*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256899*0 + 3*385*FLEN/8, x4, x1, x2)

inst_85634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffffff8; valaddr_reg:x3; val_offset:256902*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256902*0 + 3*386*FLEN/8, x4, x1, x2)

inst_85635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffffffc; valaddr_reg:x3; val_offset:256905*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256905*0 + 3*387*FLEN/8, x4, x1, x2)

inst_85636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dffffffffffffe; valaddr_reg:x3; val_offset:256908*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256908*0 + 3*388*FLEN/8, x4, x1, x2)

inst_85637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa4d3fe298b7df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa4d3fe298b7df; op2val:0x0;
op3val:0x1dfffffffffffff; valaddr_reg:x3; val_offset:256911*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256911*0 + 3*389*FLEN/8, x4, x1, x2)

inst_85638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:256914*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256914*0 + 3*390*FLEN/8, x4, x1, x2)

inst_85639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:256917*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256917*0 + 3*391*FLEN/8, x4, x1, x2)

inst_85640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:256920*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256920*0 + 3*392*FLEN/8, x4, x1, x2)

inst_85641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:256923*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256923*0 + 3*393*FLEN/8, x4, x1, x2)

inst_85642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:256926*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256926*0 + 3*394*FLEN/8, x4, x1, x2)

inst_85643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:256929*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256929*0 + 3*395*FLEN/8, x4, x1, x2)

inst_85644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:256932*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256932*0 + 3*396*FLEN/8, x4, x1, x2)

inst_85645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:256935*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256935*0 + 3*397*FLEN/8, x4, x1, x2)

inst_85646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:256938*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256938*0 + 3*398*FLEN/8, x4, x1, x2)

inst_85647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:256941*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256941*0 + 3*399*FLEN/8, x4, x1, x2)

inst_85648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:256944*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256944*0 + 3*400*FLEN/8, x4, x1, x2)

inst_85649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:256947*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256947*0 + 3*401*FLEN/8, x4, x1, x2)

inst_85650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:256950*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256950*0 + 3*402*FLEN/8, x4, x1, x2)

inst_85651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:256953*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256953*0 + 3*403*FLEN/8, x4, x1, x2)

inst_85652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:256956*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256956*0 + 3*404*FLEN/8, x4, x1, x2)

inst_85653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:256959*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256959*0 + 3*405*FLEN/8, x4, x1, x2)

inst_85654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:256962*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256962*0 + 3*406*FLEN/8, x4, x1, x2)

inst_85655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:256965*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256965*0 + 3*407*FLEN/8, x4, x1, x2)

inst_85656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:256968*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256968*0 + 3*408*FLEN/8, x4, x1, x2)

inst_85657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:256971*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256971*0 + 3*409*FLEN/8, x4, x1, x2)

inst_85658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:256974*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256974*0 + 3*410*FLEN/8, x4, x1, x2)

inst_85659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:256977*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256977*0 + 3*411*FLEN/8, x4, x1, x2)

inst_85660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000000000000; valaddr_reg:x3; val_offset:256980*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256980*0 + 3*412*FLEN/8, x4, x1, x2)

inst_85661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000000000001; valaddr_reg:x3; val_offset:256983*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256983*0 + 3*413*FLEN/8, x4, x1, x2)

inst_85662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000000000003; valaddr_reg:x3; val_offset:256986*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256986*0 + 3*414*FLEN/8, x4, x1, x2)

inst_85663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000000000007; valaddr_reg:x3; val_offset:256989*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256989*0 + 3*415*FLEN/8, x4, x1, x2)

inst_85664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000000000000f; valaddr_reg:x3; val_offset:256992*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256992*0 + 3*416*FLEN/8, x4, x1, x2)

inst_85665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000000000001f; valaddr_reg:x3; val_offset:256995*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256995*0 + 3*417*FLEN/8, x4, x1, x2)

inst_85666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000000000003f; valaddr_reg:x3; val_offset:256998*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 256998*0 + 3*418*FLEN/8, x4, x1, x2)

inst_85667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000000000007f; valaddr_reg:x3; val_offset:257001*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257001*0 + 3*419*FLEN/8, x4, x1, x2)

inst_85668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800000000000ff; valaddr_reg:x3; val_offset:257004*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257004*0 + 3*420*FLEN/8, x4, x1, x2)

inst_85669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800000000001ff; valaddr_reg:x3; val_offset:257007*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257007*0 + 3*421*FLEN/8, x4, x1, x2)

inst_85670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800000000003ff; valaddr_reg:x3; val_offset:257010*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257010*0 + 3*422*FLEN/8, x4, x1, x2)

inst_85671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800000000007ff; valaddr_reg:x3; val_offset:257013*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257013*0 + 3*423*FLEN/8, x4, x1, x2)

inst_85672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000000000fff; valaddr_reg:x3; val_offset:257016*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257016*0 + 3*424*FLEN/8, x4, x1, x2)

inst_85673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000000001fff; valaddr_reg:x3; val_offset:257019*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257019*0 + 3*425*FLEN/8, x4, x1, x2)

inst_85674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000000003fff; valaddr_reg:x3; val_offset:257022*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257022*0 + 3*426*FLEN/8, x4, x1, x2)

inst_85675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000000007fff; valaddr_reg:x3; val_offset:257025*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257025*0 + 3*427*FLEN/8, x4, x1, x2)

inst_85676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000000000ffff; valaddr_reg:x3; val_offset:257028*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257028*0 + 3*428*FLEN/8, x4, x1, x2)

inst_85677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000000001ffff; valaddr_reg:x3; val_offset:257031*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257031*0 + 3*429*FLEN/8, x4, x1, x2)

inst_85678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000000003ffff; valaddr_reg:x3; val_offset:257034*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257034*0 + 3*430*FLEN/8, x4, x1, x2)

inst_85679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000000007ffff; valaddr_reg:x3; val_offset:257037*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257037*0 + 3*431*FLEN/8, x4, x1, x2)

inst_85680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800000000fffff; valaddr_reg:x3; val_offset:257040*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257040*0 + 3*432*FLEN/8, x4, x1, x2)

inst_85681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800000001fffff; valaddr_reg:x3; val_offset:257043*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257043*0 + 3*433*FLEN/8, x4, x1, x2)

inst_85682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800000003fffff; valaddr_reg:x3; val_offset:257046*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257046*0 + 3*434*FLEN/8, x4, x1, x2)

inst_85683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800000007fffff; valaddr_reg:x3; val_offset:257049*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257049*0 + 3*435*FLEN/8, x4, x1, x2)

inst_85684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000000ffffff; valaddr_reg:x3; val_offset:257052*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257052*0 + 3*436*FLEN/8, x4, x1, x2)

inst_85685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000001ffffff; valaddr_reg:x3; val_offset:257055*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257055*0 + 3*437*FLEN/8, x4, x1, x2)

inst_85686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000003ffffff; valaddr_reg:x3; val_offset:257058*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257058*0 + 3*438*FLEN/8, x4, x1, x2)

inst_85687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000007ffffff; valaddr_reg:x3; val_offset:257061*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257061*0 + 3*439*FLEN/8, x4, x1, x2)

inst_85688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000000fffffff; valaddr_reg:x3; val_offset:257064*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257064*0 + 3*440*FLEN/8, x4, x1, x2)

inst_85689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000001fffffff; valaddr_reg:x3; val_offset:257067*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257067*0 + 3*441*FLEN/8, x4, x1, x2)

inst_85690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000003fffffff; valaddr_reg:x3; val_offset:257070*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257070*0 + 3*442*FLEN/8, x4, x1, x2)

inst_85691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000007fffffff; valaddr_reg:x3; val_offset:257073*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257073*0 + 3*443*FLEN/8, x4, x1, x2)

inst_85692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800000ffffffff; valaddr_reg:x3; val_offset:257076*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257076*0 + 3*444*FLEN/8, x4, x1, x2)

inst_85693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800001ffffffff; valaddr_reg:x3; val_offset:257079*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257079*0 + 3*445*FLEN/8, x4, x1, x2)

inst_85694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800003ffffffff; valaddr_reg:x3; val_offset:257082*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257082*0 + 3*446*FLEN/8, x4, x1, x2)

inst_85695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800007ffffffff; valaddr_reg:x3; val_offset:257085*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257085*0 + 3*447*FLEN/8, x4, x1, x2)

inst_85696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80000fffffffff; valaddr_reg:x3; val_offset:257088*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257088*0 + 3*448*FLEN/8, x4, x1, x2)

inst_85697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80001fffffffff; valaddr_reg:x3; val_offset:257091*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257091*0 + 3*449*FLEN/8, x4, x1, x2)

inst_85698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80003fffffffff; valaddr_reg:x3; val_offset:257094*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257094*0 + 3*450*FLEN/8, x4, x1, x2)

inst_85699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80007fffffffff; valaddr_reg:x3; val_offset:257097*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257097*0 + 3*451*FLEN/8, x4, x1, x2)

inst_85700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8000ffffffffff; valaddr_reg:x3; val_offset:257100*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257100*0 + 3*452*FLEN/8, x4, x1, x2)

inst_85701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8001ffffffffff; valaddr_reg:x3; val_offset:257103*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257103*0 + 3*453*FLEN/8, x4, x1, x2)

inst_85702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8003ffffffffff; valaddr_reg:x3; val_offset:257106*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257106*0 + 3*454*FLEN/8, x4, x1, x2)

inst_85703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8007ffffffffff; valaddr_reg:x3; val_offset:257109*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257109*0 + 3*455*FLEN/8, x4, x1, x2)

inst_85704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x800fffffffffff; valaddr_reg:x3; val_offset:257112*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257112*0 + 3*456*FLEN/8, x4, x1, x2)

inst_85705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x801fffffffffff; valaddr_reg:x3; val_offset:257115*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257115*0 + 3*457*FLEN/8, x4, x1, x2)

inst_85706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x803fffffffffff; valaddr_reg:x3; val_offset:257118*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257118*0 + 3*458*FLEN/8, x4, x1, x2)

inst_85707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x807fffffffffff; valaddr_reg:x3; val_offset:257121*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257121*0 + 3*459*FLEN/8, x4, x1, x2)

inst_85708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x80ffffffffffff; valaddr_reg:x3; val_offset:257124*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257124*0 + 3*460*FLEN/8, x4, x1, x2)

inst_85709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x81ffffffffffff; valaddr_reg:x3; val_offset:257127*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257127*0 + 3*461*FLEN/8, x4, x1, x2)

inst_85710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x83ffffffffffff; valaddr_reg:x3; val_offset:257130*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257130*0 + 3*462*FLEN/8, x4, x1, x2)

inst_85711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x87ffffffffffff; valaddr_reg:x3; val_offset:257133*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257133*0 + 3*463*FLEN/8, x4, x1, x2)

inst_85712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x88000000000000; valaddr_reg:x3; val_offset:257136*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257136*0 + 3*464*FLEN/8, x4, x1, x2)

inst_85713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8c000000000000; valaddr_reg:x3; val_offset:257139*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257139*0 + 3*465*FLEN/8, x4, x1, x2)

inst_85714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8e000000000000; valaddr_reg:x3; val_offset:257142*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257142*0 + 3*466*FLEN/8, x4, x1, x2)

inst_85715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8f000000000000; valaddr_reg:x3; val_offset:257145*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257145*0 + 3*467*FLEN/8, x4, x1, x2)

inst_85716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8f800000000000; valaddr_reg:x3; val_offset:257148*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257148*0 + 3*468*FLEN/8, x4, x1, x2)

inst_85717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fc00000000000; valaddr_reg:x3; val_offset:257151*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257151*0 + 3*469*FLEN/8, x4, x1, x2)

inst_85718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fe00000000000; valaddr_reg:x3; val_offset:257154*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257154*0 + 3*470*FLEN/8, x4, x1, x2)

inst_85719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ff00000000000; valaddr_reg:x3; val_offset:257157*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257157*0 + 3*471*FLEN/8, x4, x1, x2)

inst_85720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ff80000000000; valaddr_reg:x3; val_offset:257160*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257160*0 + 3*472*FLEN/8, x4, x1, x2)

inst_85721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffc0000000000; valaddr_reg:x3; val_offset:257163*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257163*0 + 3*473*FLEN/8, x4, x1, x2)

inst_85722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffe0000000000; valaddr_reg:x3; val_offset:257166*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257166*0 + 3*474*FLEN/8, x4, x1, x2)

inst_85723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fff0000000000; valaddr_reg:x3; val_offset:257169*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257169*0 + 3*475*FLEN/8, x4, x1, x2)

inst_85724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fff8000000000; valaddr_reg:x3; val_offset:257172*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257172*0 + 3*476*FLEN/8, x4, x1, x2)

inst_85725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffc000000000; valaddr_reg:x3; val_offset:257175*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257175*0 + 3*477*FLEN/8, x4, x1, x2)

inst_85726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffe000000000; valaddr_reg:x3; val_offset:257178*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257178*0 + 3*478*FLEN/8, x4, x1, x2)

inst_85727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffff000000000; valaddr_reg:x3; val_offset:257181*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257181*0 + 3*479*FLEN/8, x4, x1, x2)

inst_85728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffff800000000; valaddr_reg:x3; val_offset:257184*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257184*0 + 3*480*FLEN/8, x4, x1, x2)

inst_85729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffc00000000; valaddr_reg:x3; val_offset:257187*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257187*0 + 3*481*FLEN/8, x4, x1, x2)

inst_85730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffe00000000; valaddr_reg:x3; val_offset:257190*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257190*0 + 3*482*FLEN/8, x4, x1, x2)

inst_85731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffff00000000; valaddr_reg:x3; val_offset:257193*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257193*0 + 3*483*FLEN/8, x4, x1, x2)

inst_85732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffff80000000; valaddr_reg:x3; val_offset:257196*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257196*0 + 3*484*FLEN/8, x4, x1, x2)

inst_85733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffc0000000; valaddr_reg:x3; val_offset:257199*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257199*0 + 3*485*FLEN/8, x4, x1, x2)

inst_85734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffe0000000; valaddr_reg:x3; val_offset:257202*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257202*0 + 3*486*FLEN/8, x4, x1, x2)

inst_85735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffff0000000; valaddr_reg:x3; val_offset:257205*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257205*0 + 3*487*FLEN/8, x4, x1, x2)

inst_85736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffff8000000; valaddr_reg:x3; val_offset:257208*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257208*0 + 3*488*FLEN/8, x4, x1, x2)

inst_85737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffc000000; valaddr_reg:x3; val_offset:257211*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257211*0 + 3*489*FLEN/8, x4, x1, x2)

inst_85738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffe000000; valaddr_reg:x3; val_offset:257214*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257214*0 + 3*490*FLEN/8, x4, x1, x2)

inst_85739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffff000000; valaddr_reg:x3; val_offset:257217*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257217*0 + 3*491*FLEN/8, x4, x1, x2)

inst_85740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffff800000; valaddr_reg:x3; val_offset:257220*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257220*0 + 3*492*FLEN/8, x4, x1, x2)

inst_85741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffc00000; valaddr_reg:x3; val_offset:257223*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257223*0 + 3*493*FLEN/8, x4, x1, x2)

inst_85742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffe00000; valaddr_reg:x3; val_offset:257226*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257226*0 + 3*494*FLEN/8, x4, x1, x2)

inst_85743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffff00000; valaddr_reg:x3; val_offset:257229*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257229*0 + 3*495*FLEN/8, x4, x1, x2)

inst_85744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffff80000; valaddr_reg:x3; val_offset:257232*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257232*0 + 3*496*FLEN/8, x4, x1, x2)

inst_85745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffc0000; valaddr_reg:x3; val_offset:257235*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257235*0 + 3*497*FLEN/8, x4, x1, x2)

inst_85746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffe0000; valaddr_reg:x3; val_offset:257238*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257238*0 + 3*498*FLEN/8, x4, x1, x2)

inst_85747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffff0000; valaddr_reg:x3; val_offset:257241*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257241*0 + 3*499*FLEN/8, x4, x1, x2)

inst_85748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffff8000; valaddr_reg:x3; val_offset:257244*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257244*0 + 3*500*FLEN/8, x4, x1, x2)

inst_85749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffffc000; valaddr_reg:x3; val_offset:257247*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257247*0 + 3*501*FLEN/8, x4, x1, x2)

inst_85750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffffe000; valaddr_reg:x3; val_offset:257250*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257250*0 + 3*502*FLEN/8, x4, x1, x2)

inst_85751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffff000; valaddr_reg:x3; val_offset:257253*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257253*0 + 3*503*FLEN/8, x4, x1, x2)

inst_85752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffff800; valaddr_reg:x3; val_offset:257256*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257256*0 + 3*504*FLEN/8, x4, x1, x2)

inst_85753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffffc00; valaddr_reg:x3; val_offset:257259*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257259*0 + 3*505*FLEN/8, x4, x1, x2)

inst_85754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffffe00; valaddr_reg:x3; val_offset:257262*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257262*0 + 3*506*FLEN/8, x4, x1, x2)

inst_85755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffffff00; valaddr_reg:x3; val_offset:257265*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257265*0 + 3*507*FLEN/8, x4, x1, x2)

inst_85756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffffff80; valaddr_reg:x3; val_offset:257268*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257268*0 + 3*508*FLEN/8, x4, x1, x2)

inst_85757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffffffc0; valaddr_reg:x3; val_offset:257271*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257271*0 + 3*509*FLEN/8, x4, x1, x2)

inst_85758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffffffe0; valaddr_reg:x3; val_offset:257274*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257274*0 + 3*510*FLEN/8, x4, x1, x2)

inst_85759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffffff0; valaddr_reg:x3; val_offset:257277*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257277*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_85760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffffff8; valaddr_reg:x3; val_offset:257280*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257280*0 + 3*512*FLEN/8, x4, x1, x2)

inst_85761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffffffc; valaddr_reg:x3; val_offset:257283*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257283*0 + 3*513*FLEN/8, x4, x1, x2)

inst_85762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8ffffffffffffe; valaddr_reg:x3; val_offset:257286*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257286*0 + 3*514*FLEN/8, x4, x1, x2)

inst_85763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5458c9de225f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5458c9de225f; op2val:0x0;
op3val:0x8fffffffffffff; valaddr_reg:x3; val_offset:257289*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257289*0 + 3*515*FLEN/8, x4, x1, x2)

inst_85764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:257292*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257292*0 + 3*516*FLEN/8, x4, x1, x2)

inst_85765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:257295*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257295*0 + 3*517*FLEN/8, x4, x1, x2)

inst_85766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:257298*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257298*0 + 3*518*FLEN/8, x4, x1, x2)

inst_85767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:257301*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257301*0 + 3*519*FLEN/8, x4, x1, x2)

inst_85768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:257304*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257304*0 + 3*520*FLEN/8, x4, x1, x2)

inst_85769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:257307*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257307*0 + 3*521*FLEN/8, x4, x1, x2)

inst_85770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:257310*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257310*0 + 3*522*FLEN/8, x4, x1, x2)

inst_85771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:257313*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257313*0 + 3*523*FLEN/8, x4, x1, x2)

inst_85772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:257316*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257316*0 + 3*524*FLEN/8, x4, x1, x2)

inst_85773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:257319*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257319*0 + 3*525*FLEN/8, x4, x1, x2)

inst_85774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:257322*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257322*0 + 3*526*FLEN/8, x4, x1, x2)

inst_85775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:257325*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257325*0 + 3*527*FLEN/8, x4, x1, x2)

inst_85776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:257328*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257328*0 + 3*528*FLEN/8, x4, x1, x2)

inst_85777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:257331*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257331*0 + 3*529*FLEN/8, x4, x1, x2)

inst_85778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:257334*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257334*0 + 3*530*FLEN/8, x4, x1, x2)

inst_85779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:257337*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257337*0 + 3*531*FLEN/8, x4, x1, x2)

inst_85780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:257340*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257340*0 + 3*532*FLEN/8, x4, x1, x2)

inst_85781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:257343*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257343*0 + 3*533*FLEN/8, x4, x1, x2)

inst_85782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:257346*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257346*0 + 3*534*FLEN/8, x4, x1, x2)

inst_85783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:257349*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257349*0 + 3*535*FLEN/8, x4, x1, x2)

inst_85784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:257352*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257352*0 + 3*536*FLEN/8, x4, x1, x2)

inst_85785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:257355*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257355*0 + 3*537*FLEN/8, x4, x1, x2)

inst_85786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000000000000; valaddr_reg:x3; val_offset:257358*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257358*0 + 3*538*FLEN/8, x4, x1, x2)

inst_85787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000000000001; valaddr_reg:x3; val_offset:257361*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257361*0 + 3*539*FLEN/8, x4, x1, x2)

inst_85788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000000000003; valaddr_reg:x3; val_offset:257364*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257364*0 + 3*540*FLEN/8, x4, x1, x2)

inst_85789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000000000007; valaddr_reg:x3; val_offset:257367*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257367*0 + 3*541*FLEN/8, x4, x1, x2)

inst_85790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000000000000f; valaddr_reg:x3; val_offset:257370*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257370*0 + 3*542*FLEN/8, x4, x1, x2)

inst_85791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000000000001f; valaddr_reg:x3; val_offset:257373*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257373*0 + 3*543*FLEN/8, x4, x1, x2)

inst_85792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000000000003f; valaddr_reg:x3; val_offset:257376*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257376*0 + 3*544*FLEN/8, x4, x1, x2)

inst_85793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000000000007f; valaddr_reg:x3; val_offset:257379*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257379*0 + 3*545*FLEN/8, x4, x1, x2)

inst_85794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700000000000ff; valaddr_reg:x3; val_offset:257382*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257382*0 + 3*546*FLEN/8, x4, x1, x2)

inst_85795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700000000001ff; valaddr_reg:x3; val_offset:257385*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257385*0 + 3*547*FLEN/8, x4, x1, x2)

inst_85796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700000000003ff; valaddr_reg:x3; val_offset:257388*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257388*0 + 3*548*FLEN/8, x4, x1, x2)

inst_85797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700000000007ff; valaddr_reg:x3; val_offset:257391*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257391*0 + 3*549*FLEN/8, x4, x1, x2)

inst_85798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000000000fff; valaddr_reg:x3; val_offset:257394*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257394*0 + 3*550*FLEN/8, x4, x1, x2)

inst_85799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000000001fff; valaddr_reg:x3; val_offset:257397*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257397*0 + 3*551*FLEN/8, x4, x1, x2)

inst_85800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000000003fff; valaddr_reg:x3; val_offset:257400*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257400*0 + 3*552*FLEN/8, x4, x1, x2)

inst_85801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000000007fff; valaddr_reg:x3; val_offset:257403*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257403*0 + 3*553*FLEN/8, x4, x1, x2)

inst_85802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000000000ffff; valaddr_reg:x3; val_offset:257406*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257406*0 + 3*554*FLEN/8, x4, x1, x2)

inst_85803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000000001ffff; valaddr_reg:x3; val_offset:257409*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257409*0 + 3*555*FLEN/8, x4, x1, x2)

inst_85804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000000003ffff; valaddr_reg:x3; val_offset:257412*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257412*0 + 3*556*FLEN/8, x4, x1, x2)

inst_85805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000000007ffff; valaddr_reg:x3; val_offset:257415*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257415*0 + 3*557*FLEN/8, x4, x1, x2)

inst_85806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700000000fffff; valaddr_reg:x3; val_offset:257418*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257418*0 + 3*558*FLEN/8, x4, x1, x2)

inst_85807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700000001fffff; valaddr_reg:x3; val_offset:257421*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257421*0 + 3*559*FLEN/8, x4, x1, x2)

inst_85808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700000003fffff; valaddr_reg:x3; val_offset:257424*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257424*0 + 3*560*FLEN/8, x4, x1, x2)

inst_85809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700000007fffff; valaddr_reg:x3; val_offset:257427*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257427*0 + 3*561*FLEN/8, x4, x1, x2)

inst_85810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000000ffffff; valaddr_reg:x3; val_offset:257430*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257430*0 + 3*562*FLEN/8, x4, x1, x2)

inst_85811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000001ffffff; valaddr_reg:x3; val_offset:257433*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257433*0 + 3*563*FLEN/8, x4, x1, x2)

inst_85812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000003ffffff; valaddr_reg:x3; val_offset:257436*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257436*0 + 3*564*FLEN/8, x4, x1, x2)

inst_85813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000007ffffff; valaddr_reg:x3; val_offset:257439*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257439*0 + 3*565*FLEN/8, x4, x1, x2)

inst_85814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000000fffffff; valaddr_reg:x3; val_offset:257442*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257442*0 + 3*566*FLEN/8, x4, x1, x2)

inst_85815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000001fffffff; valaddr_reg:x3; val_offset:257445*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257445*0 + 3*567*FLEN/8, x4, x1, x2)

inst_85816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000003fffffff; valaddr_reg:x3; val_offset:257448*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257448*0 + 3*568*FLEN/8, x4, x1, x2)

inst_85817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000007fffffff; valaddr_reg:x3; val_offset:257451*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257451*0 + 3*569*FLEN/8, x4, x1, x2)

inst_85818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700000ffffffff; valaddr_reg:x3; val_offset:257454*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257454*0 + 3*570*FLEN/8, x4, x1, x2)

inst_85819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700001ffffffff; valaddr_reg:x3; val_offset:257457*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257457*0 + 3*571*FLEN/8, x4, x1, x2)

inst_85820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700003ffffffff; valaddr_reg:x3; val_offset:257460*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257460*0 + 3*572*FLEN/8, x4, x1, x2)

inst_85821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700007ffffffff; valaddr_reg:x3; val_offset:257463*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257463*0 + 3*573*FLEN/8, x4, x1, x2)

inst_85822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170000fffffffff; valaddr_reg:x3; val_offset:257466*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257466*0 + 3*574*FLEN/8, x4, x1, x2)

inst_85823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170001fffffffff; valaddr_reg:x3; val_offset:257469*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257469*0 + 3*575*FLEN/8, x4, x1, x2)

inst_85824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170003fffffffff; valaddr_reg:x3; val_offset:257472*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257472*0 + 3*576*FLEN/8, x4, x1, x2)

inst_85825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170007fffffffff; valaddr_reg:x3; val_offset:257475*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257475*0 + 3*577*FLEN/8, x4, x1, x2)

inst_85826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17000ffffffffff; valaddr_reg:x3; val_offset:257478*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257478*0 + 3*578*FLEN/8, x4, x1, x2)

inst_85827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17001ffffffffff; valaddr_reg:x3; val_offset:257481*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257481*0 + 3*579*FLEN/8, x4, x1, x2)

inst_85828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17003ffffffffff; valaddr_reg:x3; val_offset:257484*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257484*0 + 3*580*FLEN/8, x4, x1, x2)

inst_85829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17007ffffffffff; valaddr_reg:x3; val_offset:257487*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257487*0 + 3*581*FLEN/8, x4, x1, x2)

inst_85830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1700fffffffffff; valaddr_reg:x3; val_offset:257490*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257490*0 + 3*582*FLEN/8, x4, x1, x2)

inst_85831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1701fffffffffff; valaddr_reg:x3; val_offset:257493*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257493*0 + 3*583*FLEN/8, x4, x1, x2)

inst_85832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1703fffffffffff; valaddr_reg:x3; val_offset:257496*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257496*0 + 3*584*FLEN/8, x4, x1, x2)

inst_85833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x1707fffffffffff; valaddr_reg:x3; val_offset:257499*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257499*0 + 3*585*FLEN/8, x4, x1, x2)

inst_85834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x170ffffffffffff; valaddr_reg:x3; val_offset:257502*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257502*0 + 3*586*FLEN/8, x4, x1, x2)

inst_85835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x171ffffffffffff; valaddr_reg:x3; val_offset:257505*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257505*0 + 3*587*FLEN/8, x4, x1, x2)

inst_85836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x173ffffffffffff; valaddr_reg:x3; val_offset:257508*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257508*0 + 3*588*FLEN/8, x4, x1, x2)

inst_85837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x177ffffffffffff; valaddr_reg:x3; val_offset:257511*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257511*0 + 3*589*FLEN/8, x4, x1, x2)

inst_85838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x178000000000000; valaddr_reg:x3; val_offset:257514*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257514*0 + 3*590*FLEN/8, x4, x1, x2)

inst_85839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17c000000000000; valaddr_reg:x3; val_offset:257517*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257517*0 + 3*591*FLEN/8, x4, x1, x2)

inst_85840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17e000000000000; valaddr_reg:x3; val_offset:257520*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257520*0 + 3*592*FLEN/8, x4, x1, x2)

inst_85841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17f000000000000; valaddr_reg:x3; val_offset:257523*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257523*0 + 3*593*FLEN/8, x4, x1, x2)

inst_85842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17f800000000000; valaddr_reg:x3; val_offset:257526*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257526*0 + 3*594*FLEN/8, x4, x1, x2)

inst_85843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fc00000000000; valaddr_reg:x3; val_offset:257529*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257529*0 + 3*595*FLEN/8, x4, x1, x2)

inst_85844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fe00000000000; valaddr_reg:x3; val_offset:257532*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257532*0 + 3*596*FLEN/8, x4, x1, x2)

inst_85845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ff00000000000; valaddr_reg:x3; val_offset:257535*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257535*0 + 3*597*FLEN/8, x4, x1, x2)

inst_85846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ff80000000000; valaddr_reg:x3; val_offset:257538*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257538*0 + 3*598*FLEN/8, x4, x1, x2)

inst_85847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffc0000000000; valaddr_reg:x3; val_offset:257541*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257541*0 + 3*599*FLEN/8, x4, x1, x2)

inst_85848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffe0000000000; valaddr_reg:x3; val_offset:257544*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257544*0 + 3*600*FLEN/8, x4, x1, x2)

inst_85849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fff0000000000; valaddr_reg:x3; val_offset:257547*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257547*0 + 3*601*FLEN/8, x4, x1, x2)

inst_85850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fff8000000000; valaddr_reg:x3; val_offset:257550*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257550*0 + 3*602*FLEN/8, x4, x1, x2)

inst_85851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffc000000000; valaddr_reg:x3; val_offset:257553*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257553*0 + 3*603*FLEN/8, x4, x1, x2)

inst_85852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffe000000000; valaddr_reg:x3; val_offset:257556*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257556*0 + 3*604*FLEN/8, x4, x1, x2)

inst_85853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffff000000000; valaddr_reg:x3; val_offset:257559*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257559*0 + 3*605*FLEN/8, x4, x1, x2)

inst_85854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffff800000000; valaddr_reg:x3; val_offset:257562*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257562*0 + 3*606*FLEN/8, x4, x1, x2)

inst_85855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffc00000000; valaddr_reg:x3; val_offset:257565*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257565*0 + 3*607*FLEN/8, x4, x1, x2)

inst_85856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffe00000000; valaddr_reg:x3; val_offset:257568*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257568*0 + 3*608*FLEN/8, x4, x1, x2)

inst_85857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffff00000000; valaddr_reg:x3; val_offset:257571*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257571*0 + 3*609*FLEN/8, x4, x1, x2)

inst_85858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffff80000000; valaddr_reg:x3; val_offset:257574*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257574*0 + 3*610*FLEN/8, x4, x1, x2)

inst_85859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffc0000000; valaddr_reg:x3; val_offset:257577*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257577*0 + 3*611*FLEN/8, x4, x1, x2)

inst_85860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffe0000000; valaddr_reg:x3; val_offset:257580*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257580*0 + 3*612*FLEN/8, x4, x1, x2)

inst_85861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffff0000000; valaddr_reg:x3; val_offset:257583*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257583*0 + 3*613*FLEN/8, x4, x1, x2)

inst_85862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffff8000000; valaddr_reg:x3; val_offset:257586*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257586*0 + 3*614*FLEN/8, x4, x1, x2)

inst_85863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffc000000; valaddr_reg:x3; val_offset:257589*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257589*0 + 3*615*FLEN/8, x4, x1, x2)

inst_85864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffe000000; valaddr_reg:x3; val_offset:257592*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257592*0 + 3*616*FLEN/8, x4, x1, x2)

inst_85865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffff000000; valaddr_reg:x3; val_offset:257595*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257595*0 + 3*617*FLEN/8, x4, x1, x2)

inst_85866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffff800000; valaddr_reg:x3; val_offset:257598*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257598*0 + 3*618*FLEN/8, x4, x1, x2)

inst_85867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffc00000; valaddr_reg:x3; val_offset:257601*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257601*0 + 3*619*FLEN/8, x4, x1, x2)

inst_85868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffe00000; valaddr_reg:x3; val_offset:257604*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257604*0 + 3*620*FLEN/8, x4, x1, x2)

inst_85869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffff00000; valaddr_reg:x3; val_offset:257607*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257607*0 + 3*621*FLEN/8, x4, x1, x2)

inst_85870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffff80000; valaddr_reg:x3; val_offset:257610*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257610*0 + 3*622*FLEN/8, x4, x1, x2)

inst_85871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffc0000; valaddr_reg:x3; val_offset:257613*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257613*0 + 3*623*FLEN/8, x4, x1, x2)

inst_85872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffe0000; valaddr_reg:x3; val_offset:257616*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257616*0 + 3*624*FLEN/8, x4, x1, x2)

inst_85873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffff0000; valaddr_reg:x3; val_offset:257619*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257619*0 + 3*625*FLEN/8, x4, x1, x2)

inst_85874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffff8000; valaddr_reg:x3; val_offset:257622*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257622*0 + 3*626*FLEN/8, x4, x1, x2)

inst_85875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffffc000; valaddr_reg:x3; val_offset:257625*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257625*0 + 3*627*FLEN/8, x4, x1, x2)

inst_85876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffffe000; valaddr_reg:x3; val_offset:257628*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257628*0 + 3*628*FLEN/8, x4, x1, x2)

inst_85877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffff000; valaddr_reg:x3; val_offset:257631*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257631*0 + 3*629*FLEN/8, x4, x1, x2)

inst_85878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffff800; valaddr_reg:x3; val_offset:257634*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257634*0 + 3*630*FLEN/8, x4, x1, x2)

inst_85879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffffc00; valaddr_reg:x3; val_offset:257637*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257637*0 + 3*631*FLEN/8, x4, x1, x2)

inst_85880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffffe00; valaddr_reg:x3; val_offset:257640*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257640*0 + 3*632*FLEN/8, x4, x1, x2)

inst_85881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffffff00; valaddr_reg:x3; val_offset:257643*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257643*0 + 3*633*FLEN/8, x4, x1, x2)

inst_85882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffffff80; valaddr_reg:x3; val_offset:257646*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257646*0 + 3*634*FLEN/8, x4, x1, x2)

inst_85883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffffffc0; valaddr_reg:x3; val_offset:257649*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257649*0 + 3*635*FLEN/8, x4, x1, x2)

inst_85884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffffffe0; valaddr_reg:x3; val_offset:257652*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257652*0 + 3*636*FLEN/8, x4, x1, x2)

inst_85885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffffff0; valaddr_reg:x3; val_offset:257655*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257655*0 + 3*637*FLEN/8, x4, x1, x2)

inst_85886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffffff8; valaddr_reg:x3; val_offset:257658*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257658*0 + 3*638*FLEN/8, x4, x1, x2)

inst_85887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffffffc; valaddr_reg:x3; val_offset:257661*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257661*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_85888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17ffffffffffffe; valaddr_reg:x3; val_offset:257664*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257664*0 + 3*640*FLEN/8, x4, x1, x2)

inst_85889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa5ab08b764cc4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa5ab08b764cc4; op2val:0x0;
op3val:0x17fffffffffffff; valaddr_reg:x3; val_offset:257667*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257667*0 + 3*641*FLEN/8, x4, x1, x2)

inst_85890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:257670*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257670*0 + 3*642*FLEN/8, x4, x1, x2)

inst_85891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:257673*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257673*0 + 3*643*FLEN/8, x4, x1, x2)

inst_85892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:257676*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257676*0 + 3*644*FLEN/8, x4, x1, x2)

inst_85893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:257679*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257679*0 + 3*645*FLEN/8, x4, x1, x2)

inst_85894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:257682*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257682*0 + 3*646*FLEN/8, x4, x1, x2)

inst_85895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:257685*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257685*0 + 3*647*FLEN/8, x4, x1, x2)

inst_85896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:257688*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257688*0 + 3*648*FLEN/8, x4, x1, x2)

inst_85897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:257691*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257691*0 + 3*649*FLEN/8, x4, x1, x2)

inst_85898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:257694*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257694*0 + 3*650*FLEN/8, x4, x1, x2)

inst_85899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:257697*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257697*0 + 3*651*FLEN/8, x4, x1, x2)

inst_85900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:257700*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257700*0 + 3*652*FLEN/8, x4, x1, x2)

inst_85901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:257703*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257703*0 + 3*653*FLEN/8, x4, x1, x2)

inst_85902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:257706*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257706*0 + 3*654*FLEN/8, x4, x1, x2)

inst_85903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:257709*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257709*0 + 3*655*FLEN/8, x4, x1, x2)

inst_85904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:257712*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257712*0 + 3*656*FLEN/8, x4, x1, x2)

inst_85905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:257715*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257715*0 + 3*657*FLEN/8, x4, x1, x2)

inst_85906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:257718*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257718*0 + 3*658*FLEN/8, x4, x1, x2)

inst_85907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:257721*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257721*0 + 3*659*FLEN/8, x4, x1, x2)

inst_85908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:257724*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257724*0 + 3*660*FLEN/8, x4, x1, x2)

inst_85909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:257727*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257727*0 + 3*661*FLEN/8, x4, x1, x2)

inst_85910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:257730*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257730*0 + 3*662*FLEN/8, x4, x1, x2)

inst_85911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:257733*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257733*0 + 3*663*FLEN/8, x4, x1, x2)

inst_85912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000000000000; valaddr_reg:x3; val_offset:257736*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257736*0 + 3*664*FLEN/8, x4, x1, x2)

inst_85913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000000000001; valaddr_reg:x3; val_offset:257739*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257739*0 + 3*665*FLEN/8, x4, x1, x2)

inst_85914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000000000003; valaddr_reg:x3; val_offset:257742*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257742*0 + 3*666*FLEN/8, x4, x1, x2)

inst_85915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000000000007; valaddr_reg:x3; val_offset:257745*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257745*0 + 3*667*FLEN/8, x4, x1, x2)

inst_85916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000000000000f; valaddr_reg:x3; val_offset:257748*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257748*0 + 3*668*FLEN/8, x4, x1, x2)

inst_85917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000000000001f; valaddr_reg:x3; val_offset:257751*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257751*0 + 3*669*FLEN/8, x4, x1, x2)

inst_85918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000000000003f; valaddr_reg:x3; val_offset:257754*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257754*0 + 3*670*FLEN/8, x4, x1, x2)

inst_85919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000000000007f; valaddr_reg:x3; val_offset:257757*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257757*0 + 3*671*FLEN/8, x4, x1, x2)

inst_85920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900000000000ff; valaddr_reg:x3; val_offset:257760*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257760*0 + 3*672*FLEN/8, x4, x1, x2)

inst_85921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900000000001ff; valaddr_reg:x3; val_offset:257763*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257763*0 + 3*673*FLEN/8, x4, x1, x2)

inst_85922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900000000003ff; valaddr_reg:x3; val_offset:257766*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257766*0 + 3*674*FLEN/8, x4, x1, x2)

inst_85923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900000000007ff; valaddr_reg:x3; val_offset:257769*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257769*0 + 3*675*FLEN/8, x4, x1, x2)

inst_85924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000000000fff; valaddr_reg:x3; val_offset:257772*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257772*0 + 3*676*FLEN/8, x4, x1, x2)

inst_85925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000000001fff; valaddr_reg:x3; val_offset:257775*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257775*0 + 3*677*FLEN/8, x4, x1, x2)

inst_85926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000000003fff; valaddr_reg:x3; val_offset:257778*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257778*0 + 3*678*FLEN/8, x4, x1, x2)

inst_85927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000000007fff; valaddr_reg:x3; val_offset:257781*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257781*0 + 3*679*FLEN/8, x4, x1, x2)

inst_85928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000000000ffff; valaddr_reg:x3; val_offset:257784*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257784*0 + 3*680*FLEN/8, x4, x1, x2)

inst_85929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000000001ffff; valaddr_reg:x3; val_offset:257787*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257787*0 + 3*681*FLEN/8, x4, x1, x2)

inst_85930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000000003ffff; valaddr_reg:x3; val_offset:257790*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257790*0 + 3*682*FLEN/8, x4, x1, x2)

inst_85931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000000007ffff; valaddr_reg:x3; val_offset:257793*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257793*0 + 3*683*FLEN/8, x4, x1, x2)

inst_85932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900000000fffff; valaddr_reg:x3; val_offset:257796*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257796*0 + 3*684*FLEN/8, x4, x1, x2)

inst_85933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900000001fffff; valaddr_reg:x3; val_offset:257799*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257799*0 + 3*685*FLEN/8, x4, x1, x2)

inst_85934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900000003fffff; valaddr_reg:x3; val_offset:257802*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257802*0 + 3*686*FLEN/8, x4, x1, x2)

inst_85935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900000007fffff; valaddr_reg:x3; val_offset:257805*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257805*0 + 3*687*FLEN/8, x4, x1, x2)

inst_85936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000000ffffff; valaddr_reg:x3; val_offset:257808*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257808*0 + 3*688*FLEN/8, x4, x1, x2)

inst_85937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000001ffffff; valaddr_reg:x3; val_offset:257811*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257811*0 + 3*689*FLEN/8, x4, x1, x2)

inst_85938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000003ffffff; valaddr_reg:x3; val_offset:257814*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257814*0 + 3*690*FLEN/8, x4, x1, x2)

inst_85939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000007ffffff; valaddr_reg:x3; val_offset:257817*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257817*0 + 3*691*FLEN/8, x4, x1, x2)

inst_85940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000000fffffff; valaddr_reg:x3; val_offset:257820*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257820*0 + 3*692*FLEN/8, x4, x1, x2)

inst_85941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000001fffffff; valaddr_reg:x3; val_offset:257823*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257823*0 + 3*693*FLEN/8, x4, x1, x2)

inst_85942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000003fffffff; valaddr_reg:x3; val_offset:257826*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257826*0 + 3*694*FLEN/8, x4, x1, x2)

inst_85943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000007fffffff; valaddr_reg:x3; val_offset:257829*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257829*0 + 3*695*FLEN/8, x4, x1, x2)

inst_85944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900000ffffffff; valaddr_reg:x3; val_offset:257832*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257832*0 + 3*696*FLEN/8, x4, x1, x2)

inst_85945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900001ffffffff; valaddr_reg:x3; val_offset:257835*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257835*0 + 3*697*FLEN/8, x4, x1, x2)

inst_85946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900003ffffffff; valaddr_reg:x3; val_offset:257838*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257838*0 + 3*698*FLEN/8, x4, x1, x2)

inst_85947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900007ffffffff; valaddr_reg:x3; val_offset:257841*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257841*0 + 3*699*FLEN/8, x4, x1, x2)

inst_85948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390000fffffffff; valaddr_reg:x3; val_offset:257844*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257844*0 + 3*700*FLEN/8, x4, x1, x2)

inst_85949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390001fffffffff; valaddr_reg:x3; val_offset:257847*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257847*0 + 3*701*FLEN/8, x4, x1, x2)

inst_85950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390003fffffffff; valaddr_reg:x3; val_offset:257850*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257850*0 + 3*702*FLEN/8, x4, x1, x2)

inst_85951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390007fffffffff; valaddr_reg:x3; val_offset:257853*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257853*0 + 3*703*FLEN/8, x4, x1, x2)

inst_85952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39000ffffffffff; valaddr_reg:x3; val_offset:257856*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257856*0 + 3*704*FLEN/8, x4, x1, x2)

inst_85953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39001ffffffffff; valaddr_reg:x3; val_offset:257859*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257859*0 + 3*705*FLEN/8, x4, x1, x2)

inst_85954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39003ffffffffff; valaddr_reg:x3; val_offset:257862*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257862*0 + 3*706*FLEN/8, x4, x1, x2)

inst_85955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39007ffffffffff; valaddr_reg:x3; val_offset:257865*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257865*0 + 3*707*FLEN/8, x4, x1, x2)

inst_85956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3900fffffffffff; valaddr_reg:x3; val_offset:257868*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257868*0 + 3*708*FLEN/8, x4, x1, x2)

inst_85957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3901fffffffffff; valaddr_reg:x3; val_offset:257871*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257871*0 + 3*709*FLEN/8, x4, x1, x2)

inst_85958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3903fffffffffff; valaddr_reg:x3; val_offset:257874*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257874*0 + 3*710*FLEN/8, x4, x1, x2)

inst_85959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x3907fffffffffff; valaddr_reg:x3; val_offset:257877*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257877*0 + 3*711*FLEN/8, x4, x1, x2)

inst_85960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x390ffffffffffff; valaddr_reg:x3; val_offset:257880*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257880*0 + 3*712*FLEN/8, x4, x1, x2)

inst_85961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x391ffffffffffff; valaddr_reg:x3; val_offset:257883*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257883*0 + 3*713*FLEN/8, x4, x1, x2)

inst_85962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x393ffffffffffff; valaddr_reg:x3; val_offset:257886*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257886*0 + 3*714*FLEN/8, x4, x1, x2)

inst_85963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x397ffffffffffff; valaddr_reg:x3; val_offset:257889*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257889*0 + 3*715*FLEN/8, x4, x1, x2)

inst_85964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x398000000000000; valaddr_reg:x3; val_offset:257892*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257892*0 + 3*716*FLEN/8, x4, x1, x2)

inst_85965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39c000000000000; valaddr_reg:x3; val_offset:257895*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257895*0 + 3*717*FLEN/8, x4, x1, x2)

inst_85966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39e000000000000; valaddr_reg:x3; val_offset:257898*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257898*0 + 3*718*FLEN/8, x4, x1, x2)

inst_85967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39f000000000000; valaddr_reg:x3; val_offset:257901*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257901*0 + 3*719*FLEN/8, x4, x1, x2)

inst_85968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39f800000000000; valaddr_reg:x3; val_offset:257904*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257904*0 + 3*720*FLEN/8, x4, x1, x2)

inst_85969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fc00000000000; valaddr_reg:x3; val_offset:257907*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257907*0 + 3*721*FLEN/8, x4, x1, x2)

inst_85970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fe00000000000; valaddr_reg:x3; val_offset:257910*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257910*0 + 3*722*FLEN/8, x4, x1, x2)

inst_85971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ff00000000000; valaddr_reg:x3; val_offset:257913*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257913*0 + 3*723*FLEN/8, x4, x1, x2)

inst_85972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ff80000000000; valaddr_reg:x3; val_offset:257916*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257916*0 + 3*724*FLEN/8, x4, x1, x2)

inst_85973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffc0000000000; valaddr_reg:x3; val_offset:257919*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257919*0 + 3*725*FLEN/8, x4, x1, x2)

inst_85974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffe0000000000; valaddr_reg:x3; val_offset:257922*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257922*0 + 3*726*FLEN/8, x4, x1, x2)

inst_85975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fff0000000000; valaddr_reg:x3; val_offset:257925*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257925*0 + 3*727*FLEN/8, x4, x1, x2)

inst_85976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fff8000000000; valaddr_reg:x3; val_offset:257928*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257928*0 + 3*728*FLEN/8, x4, x1, x2)

inst_85977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffc000000000; valaddr_reg:x3; val_offset:257931*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257931*0 + 3*729*FLEN/8, x4, x1, x2)

inst_85978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffe000000000; valaddr_reg:x3; val_offset:257934*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257934*0 + 3*730*FLEN/8, x4, x1, x2)

inst_85979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffff000000000; valaddr_reg:x3; val_offset:257937*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257937*0 + 3*731*FLEN/8, x4, x1, x2)

inst_85980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffff800000000; valaddr_reg:x3; val_offset:257940*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257940*0 + 3*732*FLEN/8, x4, x1, x2)

inst_85981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffc00000000; valaddr_reg:x3; val_offset:257943*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257943*0 + 3*733*FLEN/8, x4, x1, x2)

inst_85982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffe00000000; valaddr_reg:x3; val_offset:257946*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257946*0 + 3*734*FLEN/8, x4, x1, x2)

inst_85983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffff00000000; valaddr_reg:x3; val_offset:257949*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257949*0 + 3*735*FLEN/8, x4, x1, x2)

inst_85984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffff80000000; valaddr_reg:x3; val_offset:257952*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257952*0 + 3*736*FLEN/8, x4, x1, x2)

inst_85985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffc0000000; valaddr_reg:x3; val_offset:257955*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257955*0 + 3*737*FLEN/8, x4, x1, x2)

inst_85986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffe0000000; valaddr_reg:x3; val_offset:257958*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257958*0 + 3*738*FLEN/8, x4, x1, x2)

inst_85987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffff0000000; valaddr_reg:x3; val_offset:257961*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257961*0 + 3*739*FLEN/8, x4, x1, x2)

inst_85988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffff8000000; valaddr_reg:x3; val_offset:257964*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257964*0 + 3*740*FLEN/8, x4, x1, x2)

inst_85989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffc000000; valaddr_reg:x3; val_offset:257967*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257967*0 + 3*741*FLEN/8, x4, x1, x2)

inst_85990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffe000000; valaddr_reg:x3; val_offset:257970*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257970*0 + 3*742*FLEN/8, x4, x1, x2)

inst_85991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffff000000; valaddr_reg:x3; val_offset:257973*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257973*0 + 3*743*FLEN/8, x4, x1, x2)

inst_85992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffff800000; valaddr_reg:x3; val_offset:257976*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257976*0 + 3*744*FLEN/8, x4, x1, x2)

inst_85993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffc00000; valaddr_reg:x3; val_offset:257979*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257979*0 + 3*745*FLEN/8, x4, x1, x2)

inst_85994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffe00000; valaddr_reg:x3; val_offset:257982*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257982*0 + 3*746*FLEN/8, x4, x1, x2)

inst_85995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffff00000; valaddr_reg:x3; val_offset:257985*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257985*0 + 3*747*FLEN/8, x4, x1, x2)

inst_85996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffff80000; valaddr_reg:x3; val_offset:257988*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257988*0 + 3*748*FLEN/8, x4, x1, x2)

inst_85997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffc0000; valaddr_reg:x3; val_offset:257991*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257991*0 + 3*749*FLEN/8, x4, x1, x2)

inst_85998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffe0000; valaddr_reg:x3; val_offset:257994*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257994*0 + 3*750*FLEN/8, x4, x1, x2)

inst_85999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffff0000; valaddr_reg:x3; val_offset:257997*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 257997*0 + 3*751*FLEN/8, x4, x1, x2)

inst_86000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffff8000; valaddr_reg:x3; val_offset:258000*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258000*0 + 3*752*FLEN/8, x4, x1, x2)

inst_86001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffffc000; valaddr_reg:x3; val_offset:258003*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258003*0 + 3*753*FLEN/8, x4, x1, x2)

inst_86002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffffe000; valaddr_reg:x3; val_offset:258006*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258006*0 + 3*754*FLEN/8, x4, x1, x2)

inst_86003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffff000; valaddr_reg:x3; val_offset:258009*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258009*0 + 3*755*FLEN/8, x4, x1, x2)

inst_86004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffff800; valaddr_reg:x3; val_offset:258012*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258012*0 + 3*756*FLEN/8, x4, x1, x2)

inst_86005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffffc00; valaddr_reg:x3; val_offset:258015*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258015*0 + 3*757*FLEN/8, x4, x1, x2)

inst_86006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffffe00; valaddr_reg:x3; val_offset:258018*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258018*0 + 3*758*FLEN/8, x4, x1, x2)

inst_86007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffffff00; valaddr_reg:x3; val_offset:258021*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258021*0 + 3*759*FLEN/8, x4, x1, x2)

inst_86008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffffff80; valaddr_reg:x3; val_offset:258024*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258024*0 + 3*760*FLEN/8, x4, x1, x2)

inst_86009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffffffc0; valaddr_reg:x3; val_offset:258027*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258027*0 + 3*761*FLEN/8, x4, x1, x2)

inst_86010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffffffe0; valaddr_reg:x3; val_offset:258030*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258030*0 + 3*762*FLEN/8, x4, x1, x2)

inst_86011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffffff0; valaddr_reg:x3; val_offset:258033*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258033*0 + 3*763*FLEN/8, x4, x1, x2)

inst_86012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffffff8; valaddr_reg:x3; val_offset:258036*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258036*0 + 3*764*FLEN/8, x4, x1, x2)

inst_86013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffffffc; valaddr_reg:x3; val_offset:258039*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258039*0 + 3*765*FLEN/8, x4, x1, x2)

inst_86014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39ffffffffffffe; valaddr_reg:x3; val_offset:258042*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258042*0 + 3*766*FLEN/8, x4, x1, x2)

inst_86015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa6a2bcb516111 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa6a2bcb516111; op2val:0x0;
op3val:0x39fffffffffffff; valaddr_reg:x3; val_offset:258045*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258045*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893385464510798367,64,FLEN)
NAN_BOXED(2320345579516540015,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339136,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339137,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339139,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339143,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339151,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339167,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339199,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339263,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339391,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933339647,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933340159,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933341183,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933343231,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933347327,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933355519,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933371903,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933404671,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933470207,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933601279,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472933863423,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472934387711,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472935436287,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472937533439,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472941727743,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472950116351,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727472966893567,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727473000447999,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727473067556863,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727473201774591,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727473470210047,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727474007080959,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727475080822783,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727477228306431,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727481523273727,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727490113208319,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727507293077503,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727541652815871,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727610372292607,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535727747811246079,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535728022689153023,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535728572444966911,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535729671956594687,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535731870979850239,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535736269026361343,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535745065119383551,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535762657305427967,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535797841677516799,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1535868210421694463,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1536008947910049791,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1536290422886760447,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1536853372840181759,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1537979272747024383,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1537979272747024384,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1539105172653867008,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1539668122607288320,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1539949597583998976,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540090335072354304,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540160703816531968,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540195888188620800,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540213480374665216,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540222276467687424,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540226674514198528,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540228873537454080,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540229973049081856,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540230522804895744,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540230797682802688,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540230935121756160,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231003841232896,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231038200971264,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231055380840448,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231063970775040,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231068265742336,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231070413225984,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231071486967808,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072023838720,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072292274176,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072426491904,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072493600768,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072527155200,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072543932416,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072552321024,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072556515328,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072558612480,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072559661056,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560185344,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560447488,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560578560,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560644096,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560676864,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560693248,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560701440,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560705536,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560707584,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560708608,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709120,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709376,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709504,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709568,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709600,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709616,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709624,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709628,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709630,64,FLEN)
NAN_BOXED(6893398119576097060,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1540231072560709631,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989494784,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989494785,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989494787,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989494791,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989494799,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989494815,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989494847,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989494911,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989495039,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989495295,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989495807,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989496831,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989498879,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989502975,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989511167,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989527551,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989560319,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989625855,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261989756927,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261990019071,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261990543359,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261991591935,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261993689087,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993261997883391,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993262006271999,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993262023049215,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993262056603647,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993262123712511,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993262257930239,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993262526365695,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993263063236607,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993264136978431,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993266284462079,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993270579429375,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993279169363967,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993296349233151,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993330708971519,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993399428448255,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993536867401727,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753993811745308671,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753994361501122559,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753995461012750335,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13753997660036005887,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13754002058082516991,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13754010854175539199,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13754028446361583615,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13754063630733672447,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13754133999477850111,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13754274736966205439,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13754556211942916095,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13755119161896337407,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13756245061803180031,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13756245061803180032,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13757370961710022656,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13757933911663443968,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758215386640154624,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758356124128509952,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758426492872687616,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758461677244776448,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758479269430820864,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758488065523843072,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758492463570354176,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758494662593609728,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758495762105237504,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496311861051392,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496586738958336,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496724177911808,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496792897388544,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496827257126912,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496844436996096,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496853026930688,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496857321897984,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496859469381632,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496860543123456,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861079994368,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861348429824,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861482647552,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861549756416,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861583310848,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861600088064,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861608476672,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861612670976,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861614768128,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861615816704,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616340992,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616603136,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616734208,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616799744,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616832512,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616848896,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616857088,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616861184,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616863232,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616864256,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616864768,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616865024,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616865152,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616865216,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616865248,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616865264,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616865272,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616865276,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616865278,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13758496861616865279,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893404281343053273,64,FLEN)
NAN_BOXED(11512178446118624657,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744384,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744385,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744387,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744391,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744399,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744415,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744447,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744511,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744639,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744895,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193745407,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193746431,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193748479,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193752575,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193760767,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193777151,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193809919,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193875455,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389194006527,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389194268671,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389194792959,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389195841535,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389197938687,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389202132991,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389210521599,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389227298815,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389260853247,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389327962111,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389462179839,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389730615295,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604390267486207,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604391341228031,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604393488711679,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604397783678975,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604406373613567,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604423553482751,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604457913221119,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604526632697855,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604664071651327,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604938949558271,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130605488705372159,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130606588216999935,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130608787240255487,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130613185286766591,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130621981379788799,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130639573565833215,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130674757937922047,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130745126682099711,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130885864170455039,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131167339147165695,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131730289100587007,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(132856189007429631,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(132856189007429632,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(133982088914272256,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134545038867693568,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134826513844404224,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134967251332759552,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135037620076937216,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135072804449026048,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135090396635070464,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135099192728092672,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135103590774603776,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135105789797859328,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135106889309487104,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107439065300992,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107713943207936,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107851382161408,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107920101638144,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107954461376512,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107971641245696,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107980231180288,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107984526147584,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107986673631232,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107987747373056,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988284243968,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988552679424,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988686897152,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988754006016,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988787560448,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988804337664,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988812726272,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988816920576,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988819017728,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988820066304,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988820590592,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988820852736,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988820983808,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821049344,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821082112,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821098496,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821106688,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821110784,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821112832,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821113856,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114368,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114624,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114752,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114816,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114848,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114864,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114872,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114876,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114878,64,FLEN)
NAN_BOXED(6893407116423903199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114879,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963968,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963969,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963971,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963975,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963983,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963999,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964031,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964095,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964223,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964479,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964991,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018966015,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018968063,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018972159,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018980351,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018996735,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019029503,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019095039,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019226111,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019488255,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797020012543,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797021061119,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797023158271,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797027352575,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797035741183,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797052518399,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797086072831,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797153181695,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797287399423,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797555834879,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028798092705791,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028799166447615,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028801313931263,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028805608898559,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028814198833151,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028831378702335,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028865738440703,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028934457917439,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029071896870911,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029346774777855,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029896530591743,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36030996042219519,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36033195065475071,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36037593111986175,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36046389205008383,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36063981391052799,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36099165763141631,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36169534507319295,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36310271995674623,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36591746972385279,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(37154696925806591,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649215,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649216,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39406496739491840,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39969446692913152,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40250921669623808,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40391659157979136,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40462027902156800,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40497212274245632,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40514804460290048,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40523600553312256,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40527998599823360,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40530197623078912,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531297134706688,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531846890520576,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532121768427520,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532259207380992,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532327926857728,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532362286596096,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532379466465280,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532388056399872,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532392351367168,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532394498850816,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532395572592640,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396109463552,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396377899008,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396512116736,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396579225600,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396612780032,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396629557248,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396637945856,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396642140160,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396644237312,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645285888,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645810176,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646072320,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646203392,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646268928,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646301696,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646318080,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646326272,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646330368,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646332416,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333440,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333952,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334208,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334336,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334400,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334432,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334448,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334456,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334460,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334462,64,FLEN)
NAN_BOXED(6893414919964598879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334463,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521408,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521409,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521411,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521415,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521423,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521439,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521471,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521535,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521663,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521919,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429522431,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429523455,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429525503,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429529599,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429537791,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429554175,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429586943,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429652479,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429783551,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791430045695,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791430569983,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791431618559,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791433715711,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791437910015,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791446298623,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791463075839,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791496630271,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791563739135,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791697956863,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791966392319,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582792503263231,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582793577005055,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582795724488703,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582800019455999,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582808609390591,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582825789259775,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582860148998143,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582928868474879,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583066307428351,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583341185335295,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583890941149183,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103584990452776959,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103587189476032511,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103591587522543615,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103600383615565823,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103617975801610239,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103653160173699071,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103723528917876735,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103864266406232063,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(104145741382942719,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(104708691336364031,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206655,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206656,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(106960491150049280,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107523441103470592,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107804916080181248,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107945653568536576,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108016022312714240,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108051206684803072,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108068798870847488,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108077594963869696,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108081993010380800,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108084192033636352,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085291545264128,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085841301078016,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086116178984960,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086253617938432,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086322337415168,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086356697153536,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086373877022720,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086382466957312,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086386761924608,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086388909408256,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086389983150080,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390520020992,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390788456448,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390922674176,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390989783040,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391023337472,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391040114688,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391048503296,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391052697600,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391054794752,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391055843328,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056367616,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056629760,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056760832,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056826368,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056859136,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056875520,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056883712,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056887808,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056889856,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056890880,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891392,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891648,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891776,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891840,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891872,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891888,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891896,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891900,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891902,64,FLEN)
NAN_BOXED(6893421893944495300,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891903,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118272,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118273,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118275,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118279,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118287,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118303,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118335,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118399,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118527,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118783,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760119295,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760120319,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760122367,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760126463,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760134655,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760151039,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760183807,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760249343,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760380415,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760642559,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178761166847,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178762215423,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178764312575,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178768506879,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178776895487,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178793672703,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178827227135,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178894335999,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179028553727,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179296989183,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179833860095,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705180907601919,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705183055085567,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705187350052863,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705195939987455,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705213119856639,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705247479595007,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705316199071743,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705453638025215,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705728515932159,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256706278271746047,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256707377783373823,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256709576806629375,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256713974853140479,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256722770946162687,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256740363132207103,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256775547504295935,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256845916248473599,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256986653736828927,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257268128713539583,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257831078666960895,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803519,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803520,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260082878480646144,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260645828434067456,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260927303410778112,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261068040899133440,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261138409643311104,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261173594015399936,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261191186201444352,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261199982294466560,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261204380340977664,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261206579364233216,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261207678875860992,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208228631674880,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208503509581824,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208640948535296,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208709668012032,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208744027750400,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208761207619584,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208769797554176,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208774092521472,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208776240005120,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777313746944,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777850617856,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778119053312,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778253271040,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778320379904,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778353934336,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778370711552,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778379100160,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778383294464,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778385391616,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386440192,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386964480,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387226624,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387357696,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387423232,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387456000,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387472384,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387480576,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387484672,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387486720,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387487744,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488256,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488512,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488640,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488704,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488736,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488752,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488760,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488764,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488766,64,FLEN)
NAN_BOXED(6893438915971211537,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488767,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
