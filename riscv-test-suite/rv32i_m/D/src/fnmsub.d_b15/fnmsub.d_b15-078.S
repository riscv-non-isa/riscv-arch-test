
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_59136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0000000000fff; valaddr_reg:x3; val_offset:177408*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177408*0 + 3*0*FLEN/8, x4, x1, x2)

inst_59137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0000000001fff; valaddr_reg:x3; val_offset:177411*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177411*0 + 3*1*FLEN/8, x4, x1, x2)

inst_59138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0000000003fff; valaddr_reg:x3; val_offset:177414*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177414*0 + 3*2*FLEN/8, x4, x1, x2)

inst_59139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0000000007fff; valaddr_reg:x3; val_offset:177417*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177417*0 + 3*3*FLEN/8, x4, x1, x2)

inst_59140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df000000000ffff; valaddr_reg:x3; val_offset:177420*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177420*0 + 3*4*FLEN/8, x4, x1, x2)

inst_59141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df000000001ffff; valaddr_reg:x3; val_offset:177423*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177423*0 + 3*5*FLEN/8, x4, x1, x2)

inst_59142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df000000003ffff; valaddr_reg:x3; val_offset:177426*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177426*0 + 3*6*FLEN/8, x4, x1, x2)

inst_59143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df000000007ffff; valaddr_reg:x3; val_offset:177429*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177429*0 + 3*7*FLEN/8, x4, x1, x2)

inst_59144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df00000000fffff; valaddr_reg:x3; val_offset:177432*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177432*0 + 3*8*FLEN/8, x4, x1, x2)

inst_59145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df00000001fffff; valaddr_reg:x3; val_offset:177435*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177435*0 + 3*9*FLEN/8, x4, x1, x2)

inst_59146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df00000003fffff; valaddr_reg:x3; val_offset:177438*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177438*0 + 3*10*FLEN/8, x4, x1, x2)

inst_59147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df00000007fffff; valaddr_reg:x3; val_offset:177441*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177441*0 + 3*11*FLEN/8, x4, x1, x2)

inst_59148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0000000ffffff; valaddr_reg:x3; val_offset:177444*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177444*0 + 3*12*FLEN/8, x4, x1, x2)

inst_59149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0000001ffffff; valaddr_reg:x3; val_offset:177447*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177447*0 + 3*13*FLEN/8, x4, x1, x2)

inst_59150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0000003ffffff; valaddr_reg:x3; val_offset:177450*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177450*0 + 3*14*FLEN/8, x4, x1, x2)

inst_59151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0000007ffffff; valaddr_reg:x3; val_offset:177453*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177453*0 + 3*15*FLEN/8, x4, x1, x2)

inst_59152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df000000fffffff; valaddr_reg:x3; val_offset:177456*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177456*0 + 3*16*FLEN/8, x4, x1, x2)

inst_59153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df000001fffffff; valaddr_reg:x3; val_offset:177459*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177459*0 + 3*17*FLEN/8, x4, x1, x2)

inst_59154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df000003fffffff; valaddr_reg:x3; val_offset:177462*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177462*0 + 3*18*FLEN/8, x4, x1, x2)

inst_59155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df000007fffffff; valaddr_reg:x3; val_offset:177465*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177465*0 + 3*19*FLEN/8, x4, x1, x2)

inst_59156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df00000ffffffff; valaddr_reg:x3; val_offset:177468*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177468*0 + 3*20*FLEN/8, x4, x1, x2)

inst_59157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df00001ffffffff; valaddr_reg:x3; val_offset:177471*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177471*0 + 3*21*FLEN/8, x4, x1, x2)

inst_59158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df00003ffffffff; valaddr_reg:x3; val_offset:177474*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177474*0 + 3*22*FLEN/8, x4, x1, x2)

inst_59159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df00007ffffffff; valaddr_reg:x3; val_offset:177477*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177477*0 + 3*23*FLEN/8, x4, x1, x2)

inst_59160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0000fffffffff; valaddr_reg:x3; val_offset:177480*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177480*0 + 3*24*FLEN/8, x4, x1, x2)

inst_59161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0001fffffffff; valaddr_reg:x3; val_offset:177483*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177483*0 + 3*25*FLEN/8, x4, x1, x2)

inst_59162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0003fffffffff; valaddr_reg:x3; val_offset:177486*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177486*0 + 3*26*FLEN/8, x4, x1, x2)

inst_59163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0007fffffffff; valaddr_reg:x3; val_offset:177489*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177489*0 + 3*27*FLEN/8, x4, x1, x2)

inst_59164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df000ffffffffff; valaddr_reg:x3; val_offset:177492*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177492*0 + 3*28*FLEN/8, x4, x1, x2)

inst_59165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df001ffffffffff; valaddr_reg:x3; val_offset:177495*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177495*0 + 3*29*FLEN/8, x4, x1, x2)

inst_59166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df003ffffffffff; valaddr_reg:x3; val_offset:177498*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177498*0 + 3*30*FLEN/8, x4, x1, x2)

inst_59167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df007ffffffffff; valaddr_reg:x3; val_offset:177501*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177501*0 + 3*31*FLEN/8, x4, x1, x2)

inst_59168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df00fffffffffff; valaddr_reg:x3; val_offset:177504*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177504*0 + 3*32*FLEN/8, x4, x1, x2)

inst_59169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df01fffffffffff; valaddr_reg:x3; val_offset:177507*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177507*0 + 3*33*FLEN/8, x4, x1, x2)

inst_59170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df03fffffffffff; valaddr_reg:x3; val_offset:177510*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177510*0 + 3*34*FLEN/8, x4, x1, x2)

inst_59171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df07fffffffffff; valaddr_reg:x3; val_offset:177513*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177513*0 + 3*35*FLEN/8, x4, x1, x2)

inst_59172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df0ffffffffffff; valaddr_reg:x3; val_offset:177516*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177516*0 + 3*36*FLEN/8, x4, x1, x2)

inst_59173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df1ffffffffffff; valaddr_reg:x3; val_offset:177519*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177519*0 + 3*37*FLEN/8, x4, x1, x2)

inst_59174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df3ffffffffffff; valaddr_reg:x3; val_offset:177522*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177522*0 + 3*38*FLEN/8, x4, x1, x2)

inst_59175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df7ffffffffffff; valaddr_reg:x3; val_offset:177525*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177525*0 + 3*39*FLEN/8, x4, x1, x2)

inst_59176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3df8000000000000; valaddr_reg:x3; val_offset:177528*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177528*0 + 3*40*FLEN/8, x4, x1, x2)

inst_59177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfc000000000000; valaddr_reg:x3; val_offset:177531*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177531*0 + 3*41*FLEN/8, x4, x1, x2)

inst_59178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfe000000000000; valaddr_reg:x3; val_offset:177534*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177534*0 + 3*42*FLEN/8, x4, x1, x2)

inst_59179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dff000000000000; valaddr_reg:x3; val_offset:177537*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177537*0 + 3*43*FLEN/8, x4, x1, x2)

inst_59180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dff800000000000; valaddr_reg:x3; val_offset:177540*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177540*0 + 3*44*FLEN/8, x4, x1, x2)

inst_59181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffc00000000000; valaddr_reg:x3; val_offset:177543*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177543*0 + 3*45*FLEN/8, x4, x1, x2)

inst_59182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffe00000000000; valaddr_reg:x3; val_offset:177546*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177546*0 + 3*46*FLEN/8, x4, x1, x2)

inst_59183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfff00000000000; valaddr_reg:x3; val_offset:177549*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177549*0 + 3*47*FLEN/8, x4, x1, x2)

inst_59184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfff80000000000; valaddr_reg:x3; val_offset:177552*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177552*0 + 3*48*FLEN/8, x4, x1, x2)

inst_59185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffc0000000000; valaddr_reg:x3; val_offset:177555*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177555*0 + 3*49*FLEN/8, x4, x1, x2)

inst_59186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffe0000000000; valaddr_reg:x3; val_offset:177558*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177558*0 + 3*50*FLEN/8, x4, x1, x2)

inst_59187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffff0000000000; valaddr_reg:x3; val_offset:177561*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177561*0 + 3*51*FLEN/8, x4, x1, x2)

inst_59188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffff8000000000; valaddr_reg:x3; val_offset:177564*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177564*0 + 3*52*FLEN/8, x4, x1, x2)

inst_59189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffc000000000; valaddr_reg:x3; val_offset:177567*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177567*0 + 3*53*FLEN/8, x4, x1, x2)

inst_59190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffe000000000; valaddr_reg:x3; val_offset:177570*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177570*0 + 3*54*FLEN/8, x4, x1, x2)

inst_59191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffff000000000; valaddr_reg:x3; val_offset:177573*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177573*0 + 3*55*FLEN/8, x4, x1, x2)

inst_59192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffff800000000; valaddr_reg:x3; val_offset:177576*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177576*0 + 3*56*FLEN/8, x4, x1, x2)

inst_59193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffc00000000; valaddr_reg:x3; val_offset:177579*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177579*0 + 3*57*FLEN/8, x4, x1, x2)

inst_59194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffe00000000; valaddr_reg:x3; val_offset:177582*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177582*0 + 3*58*FLEN/8, x4, x1, x2)

inst_59195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffff00000000; valaddr_reg:x3; val_offset:177585*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177585*0 + 3*59*FLEN/8, x4, x1, x2)

inst_59196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffff80000000; valaddr_reg:x3; val_offset:177588*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177588*0 + 3*60*FLEN/8, x4, x1, x2)

inst_59197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffc0000000; valaddr_reg:x3; val_offset:177591*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177591*0 + 3*61*FLEN/8, x4, x1, x2)

inst_59198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffe0000000; valaddr_reg:x3; val_offset:177594*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177594*0 + 3*62*FLEN/8, x4, x1, x2)

inst_59199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffff0000000; valaddr_reg:x3; val_offset:177597*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177597*0 + 3*63*FLEN/8, x4, x1, x2)

inst_59200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffff8000000; valaddr_reg:x3; val_offset:177600*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177600*0 + 3*64*FLEN/8, x4, x1, x2)

inst_59201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffc000000; valaddr_reg:x3; val_offset:177603*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177603*0 + 3*65*FLEN/8, x4, x1, x2)

inst_59202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffe000000; valaddr_reg:x3; val_offset:177606*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177606*0 + 3*66*FLEN/8, x4, x1, x2)

inst_59203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffff000000; valaddr_reg:x3; val_offset:177609*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177609*0 + 3*67*FLEN/8, x4, x1, x2)

inst_59204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffff800000; valaddr_reg:x3; val_offset:177612*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177612*0 + 3*68*FLEN/8, x4, x1, x2)

inst_59205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffc00000; valaddr_reg:x3; val_offset:177615*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177615*0 + 3*69*FLEN/8, x4, x1, x2)

inst_59206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffe00000; valaddr_reg:x3; val_offset:177618*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177618*0 + 3*70*FLEN/8, x4, x1, x2)

inst_59207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffff00000; valaddr_reg:x3; val_offset:177621*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177621*0 + 3*71*FLEN/8, x4, x1, x2)

inst_59208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffff80000; valaddr_reg:x3; val_offset:177624*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177624*0 + 3*72*FLEN/8, x4, x1, x2)

inst_59209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffc0000; valaddr_reg:x3; val_offset:177627*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177627*0 + 3*73*FLEN/8, x4, x1, x2)

inst_59210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffe0000; valaddr_reg:x3; val_offset:177630*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177630*0 + 3*74*FLEN/8, x4, x1, x2)

inst_59211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffff0000; valaddr_reg:x3; val_offset:177633*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177633*0 + 3*75*FLEN/8, x4, x1, x2)

inst_59212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffff8000; valaddr_reg:x3; val_offset:177636*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177636*0 + 3*76*FLEN/8, x4, x1, x2)

inst_59213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffffc000; valaddr_reg:x3; val_offset:177639*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177639*0 + 3*77*FLEN/8, x4, x1, x2)

inst_59214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffffe000; valaddr_reg:x3; val_offset:177642*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177642*0 + 3*78*FLEN/8, x4, x1, x2)

inst_59215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffff000; valaddr_reg:x3; val_offset:177645*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177645*0 + 3*79*FLEN/8, x4, x1, x2)

inst_59216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffff800; valaddr_reg:x3; val_offset:177648*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177648*0 + 3*80*FLEN/8, x4, x1, x2)

inst_59217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffffc00; valaddr_reg:x3; val_offset:177651*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177651*0 + 3*81*FLEN/8, x4, x1, x2)

inst_59218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffffe00; valaddr_reg:x3; val_offset:177654*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177654*0 + 3*82*FLEN/8, x4, x1, x2)

inst_59219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffffff00; valaddr_reg:x3; val_offset:177657*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177657*0 + 3*83*FLEN/8, x4, x1, x2)

inst_59220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffffff80; valaddr_reg:x3; val_offset:177660*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177660*0 + 3*84*FLEN/8, x4, x1, x2)

inst_59221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffffffc0; valaddr_reg:x3; val_offset:177663*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177663*0 + 3*85*FLEN/8, x4, x1, x2)

inst_59222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffffffe0; valaddr_reg:x3; val_offset:177666*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177666*0 + 3*86*FLEN/8, x4, x1, x2)

inst_59223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffffff0; valaddr_reg:x3; val_offset:177669*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177669*0 + 3*87*FLEN/8, x4, x1, x2)

inst_59224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffffff8; valaddr_reg:x3; val_offset:177672*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177672*0 + 3*88*FLEN/8, x4, x1, x2)

inst_59225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffffffc; valaddr_reg:x3; val_offset:177675*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177675*0 + 3*89*FLEN/8, x4, x1, x2)

inst_59226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dfffffffffffffe; valaddr_reg:x3; val_offset:177678*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177678*0 + 3*90*FLEN/8, x4, x1, x2)

inst_59227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3dffffffffffffff; valaddr_reg:x3; val_offset:177681*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177681*0 + 3*91*FLEN/8, x4, x1, x2)

inst_59228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:177684*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177684*0 + 3*92*FLEN/8, x4, x1, x2)

inst_59229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:177687*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177687*0 + 3*93*FLEN/8, x4, x1, x2)

inst_59230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:177690*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177690*0 + 3*94*FLEN/8, x4, x1, x2)

inst_59231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:177693*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177693*0 + 3*95*FLEN/8, x4, x1, x2)

inst_59232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:177696*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177696*0 + 3*96*FLEN/8, x4, x1, x2)

inst_59233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:177699*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177699*0 + 3*97*FLEN/8, x4, x1, x2)

inst_59234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:177702*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177702*0 + 3*98*FLEN/8, x4, x1, x2)

inst_59235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:177705*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177705*0 + 3*99*FLEN/8, x4, x1, x2)

inst_59236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:177708*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177708*0 + 3*100*FLEN/8, x4, x1, x2)

inst_59237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:177711*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177711*0 + 3*101*FLEN/8, x4, x1, x2)

inst_59238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:177714*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177714*0 + 3*102*FLEN/8, x4, x1, x2)

inst_59239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:177717*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177717*0 + 3*103*FLEN/8, x4, x1, x2)

inst_59240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:177720*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177720*0 + 3*104*FLEN/8, x4, x1, x2)

inst_59241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:177723*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177723*0 + 3*105*FLEN/8, x4, x1, x2)

inst_59242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:177726*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177726*0 + 3*106*FLEN/8, x4, x1, x2)

inst_59243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:177729*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177729*0 + 3*107*FLEN/8, x4, x1, x2)

inst_59244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:177732*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177732*0 + 3*108*FLEN/8, x4, x1, x2)

inst_59245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:177735*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177735*0 + 3*109*FLEN/8, x4, x1, x2)

inst_59246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:177738*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177738*0 + 3*110*FLEN/8, x4, x1, x2)

inst_59247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:177741*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177741*0 + 3*111*FLEN/8, x4, x1, x2)

inst_59248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:177744*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177744*0 + 3*112*FLEN/8, x4, x1, x2)

inst_59249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x244c63b734180 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xc06b20e75cb8b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa244c63b734180; op2val:0x203c06b20e75cb8b;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:177747*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177747*0 + 3*113*FLEN/8, x4, x1, x2)

inst_59250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:177750*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177750*0 + 3*114*FLEN/8, x4, x1, x2)

inst_59251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:177753*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177753*0 + 3*115*FLEN/8, x4, x1, x2)

inst_59252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:177756*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177756*0 + 3*116*FLEN/8, x4, x1, x2)

inst_59253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:177759*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177759*0 + 3*117*FLEN/8, x4, x1, x2)

inst_59254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:177762*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177762*0 + 3*118*FLEN/8, x4, x1, x2)

inst_59255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:177765*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177765*0 + 3*119*FLEN/8, x4, x1, x2)

inst_59256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:177768*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177768*0 + 3*120*FLEN/8, x4, x1, x2)

inst_59257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:177771*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177771*0 + 3*121*FLEN/8, x4, x1, x2)

inst_59258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:177774*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177774*0 + 3*122*FLEN/8, x4, x1, x2)

inst_59259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:177777*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177777*0 + 3*123*FLEN/8, x4, x1, x2)

inst_59260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:177780*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177780*0 + 3*124*FLEN/8, x4, x1, x2)

inst_59261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:177783*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177783*0 + 3*125*FLEN/8, x4, x1, x2)

inst_59262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:177786*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177786*0 + 3*126*FLEN/8, x4, x1, x2)

inst_59263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:177789*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177789*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_59264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:177792*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177792*0 + 3*128*FLEN/8, x4, x1, x2)

inst_59265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:177795*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177795*0 + 3*129*FLEN/8, x4, x1, x2)

inst_59266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:177798*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177798*0 + 3*130*FLEN/8, x4, x1, x2)

inst_59267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:177801*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177801*0 + 3*131*FLEN/8, x4, x1, x2)

inst_59268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:177804*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177804*0 + 3*132*FLEN/8, x4, x1, x2)

inst_59269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:177807*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177807*0 + 3*133*FLEN/8, x4, x1, x2)

inst_59270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:177810*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177810*0 + 3*134*FLEN/8, x4, x1, x2)

inst_59271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:177813*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177813*0 + 3*135*FLEN/8, x4, x1, x2)

inst_59272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000000000000; valaddr_reg:x3; val_offset:177816*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177816*0 + 3*136*FLEN/8, x4, x1, x2)

inst_59273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000000000001; valaddr_reg:x3; val_offset:177819*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177819*0 + 3*137*FLEN/8, x4, x1, x2)

inst_59274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000000000003; valaddr_reg:x3; val_offset:177822*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177822*0 + 3*138*FLEN/8, x4, x1, x2)

inst_59275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000000000007; valaddr_reg:x3; val_offset:177825*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177825*0 + 3*139*FLEN/8, x4, x1, x2)

inst_59276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000000000000f; valaddr_reg:x3; val_offset:177828*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177828*0 + 3*140*FLEN/8, x4, x1, x2)

inst_59277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000000000001f; valaddr_reg:x3; val_offset:177831*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177831*0 + 3*141*FLEN/8, x4, x1, x2)

inst_59278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000000000003f; valaddr_reg:x3; val_offset:177834*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177834*0 + 3*142*FLEN/8, x4, x1, x2)

inst_59279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000000000007f; valaddr_reg:x3; val_offset:177837*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177837*0 + 3*143*FLEN/8, x4, x1, x2)

inst_59280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800000000000ff; valaddr_reg:x3; val_offset:177840*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177840*0 + 3*144*FLEN/8, x4, x1, x2)

inst_59281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800000000001ff; valaddr_reg:x3; val_offset:177843*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177843*0 + 3*145*FLEN/8, x4, x1, x2)

inst_59282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800000000003ff; valaddr_reg:x3; val_offset:177846*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177846*0 + 3*146*FLEN/8, x4, x1, x2)

inst_59283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800000000007ff; valaddr_reg:x3; val_offset:177849*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177849*0 + 3*147*FLEN/8, x4, x1, x2)

inst_59284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000000000fff; valaddr_reg:x3; val_offset:177852*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177852*0 + 3*148*FLEN/8, x4, x1, x2)

inst_59285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000000001fff; valaddr_reg:x3; val_offset:177855*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177855*0 + 3*149*FLEN/8, x4, x1, x2)

inst_59286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000000003fff; valaddr_reg:x3; val_offset:177858*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177858*0 + 3*150*FLEN/8, x4, x1, x2)

inst_59287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000000007fff; valaddr_reg:x3; val_offset:177861*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177861*0 + 3*151*FLEN/8, x4, x1, x2)

inst_59288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000000000ffff; valaddr_reg:x3; val_offset:177864*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177864*0 + 3*152*FLEN/8, x4, x1, x2)

inst_59289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000000001ffff; valaddr_reg:x3; val_offset:177867*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177867*0 + 3*153*FLEN/8, x4, x1, x2)

inst_59290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000000003ffff; valaddr_reg:x3; val_offset:177870*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177870*0 + 3*154*FLEN/8, x4, x1, x2)

inst_59291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000000007ffff; valaddr_reg:x3; val_offset:177873*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177873*0 + 3*155*FLEN/8, x4, x1, x2)

inst_59292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800000000fffff; valaddr_reg:x3; val_offset:177876*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177876*0 + 3*156*FLEN/8, x4, x1, x2)

inst_59293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800000001fffff; valaddr_reg:x3; val_offset:177879*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177879*0 + 3*157*FLEN/8, x4, x1, x2)

inst_59294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800000003fffff; valaddr_reg:x3; val_offset:177882*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177882*0 + 3*158*FLEN/8, x4, x1, x2)

inst_59295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800000007fffff; valaddr_reg:x3; val_offset:177885*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177885*0 + 3*159*FLEN/8, x4, x1, x2)

inst_59296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000000ffffff; valaddr_reg:x3; val_offset:177888*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177888*0 + 3*160*FLEN/8, x4, x1, x2)

inst_59297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000001ffffff; valaddr_reg:x3; val_offset:177891*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177891*0 + 3*161*FLEN/8, x4, x1, x2)

inst_59298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000003ffffff; valaddr_reg:x3; val_offset:177894*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177894*0 + 3*162*FLEN/8, x4, x1, x2)

inst_59299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000007ffffff; valaddr_reg:x3; val_offset:177897*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177897*0 + 3*163*FLEN/8, x4, x1, x2)

inst_59300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000000fffffff; valaddr_reg:x3; val_offset:177900*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177900*0 + 3*164*FLEN/8, x4, x1, x2)

inst_59301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000001fffffff; valaddr_reg:x3; val_offset:177903*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177903*0 + 3*165*FLEN/8, x4, x1, x2)

inst_59302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000003fffffff; valaddr_reg:x3; val_offset:177906*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177906*0 + 3*166*FLEN/8, x4, x1, x2)

inst_59303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000007fffffff; valaddr_reg:x3; val_offset:177909*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177909*0 + 3*167*FLEN/8, x4, x1, x2)

inst_59304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800000ffffffff; valaddr_reg:x3; val_offset:177912*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177912*0 + 3*168*FLEN/8, x4, x1, x2)

inst_59305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800001ffffffff; valaddr_reg:x3; val_offset:177915*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177915*0 + 3*169*FLEN/8, x4, x1, x2)

inst_59306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800003ffffffff; valaddr_reg:x3; val_offset:177918*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177918*0 + 3*170*FLEN/8, x4, x1, x2)

inst_59307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800007ffffffff; valaddr_reg:x3; val_offset:177921*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177921*0 + 3*171*FLEN/8, x4, x1, x2)

inst_59308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380000fffffffff; valaddr_reg:x3; val_offset:177924*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177924*0 + 3*172*FLEN/8, x4, x1, x2)

inst_59309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380001fffffffff; valaddr_reg:x3; val_offset:177927*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177927*0 + 3*173*FLEN/8, x4, x1, x2)

inst_59310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380003fffffffff; valaddr_reg:x3; val_offset:177930*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177930*0 + 3*174*FLEN/8, x4, x1, x2)

inst_59311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380007fffffffff; valaddr_reg:x3; val_offset:177933*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177933*0 + 3*175*FLEN/8, x4, x1, x2)

inst_59312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38000ffffffffff; valaddr_reg:x3; val_offset:177936*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177936*0 + 3*176*FLEN/8, x4, x1, x2)

inst_59313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38001ffffffffff; valaddr_reg:x3; val_offset:177939*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177939*0 + 3*177*FLEN/8, x4, x1, x2)

inst_59314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38003ffffffffff; valaddr_reg:x3; val_offset:177942*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177942*0 + 3*178*FLEN/8, x4, x1, x2)

inst_59315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38007ffffffffff; valaddr_reg:x3; val_offset:177945*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177945*0 + 3*179*FLEN/8, x4, x1, x2)

inst_59316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3800fffffffffff; valaddr_reg:x3; val_offset:177948*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177948*0 + 3*180*FLEN/8, x4, x1, x2)

inst_59317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3801fffffffffff; valaddr_reg:x3; val_offset:177951*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177951*0 + 3*181*FLEN/8, x4, x1, x2)

inst_59318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3803fffffffffff; valaddr_reg:x3; val_offset:177954*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177954*0 + 3*182*FLEN/8, x4, x1, x2)

inst_59319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x3807fffffffffff; valaddr_reg:x3; val_offset:177957*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177957*0 + 3*183*FLEN/8, x4, x1, x2)

inst_59320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x380ffffffffffff; valaddr_reg:x3; val_offset:177960*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177960*0 + 3*184*FLEN/8, x4, x1, x2)

inst_59321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x381ffffffffffff; valaddr_reg:x3; val_offset:177963*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177963*0 + 3*185*FLEN/8, x4, x1, x2)

inst_59322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x383ffffffffffff; valaddr_reg:x3; val_offset:177966*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177966*0 + 3*186*FLEN/8, x4, x1, x2)

inst_59323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x387ffffffffffff; valaddr_reg:x3; val_offset:177969*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177969*0 + 3*187*FLEN/8, x4, x1, x2)

inst_59324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x388000000000000; valaddr_reg:x3; val_offset:177972*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177972*0 + 3*188*FLEN/8, x4, x1, x2)

inst_59325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38c000000000000; valaddr_reg:x3; val_offset:177975*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177975*0 + 3*189*FLEN/8, x4, x1, x2)

inst_59326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38e000000000000; valaddr_reg:x3; val_offset:177978*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177978*0 + 3*190*FLEN/8, x4, x1, x2)

inst_59327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38f000000000000; valaddr_reg:x3; val_offset:177981*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177981*0 + 3*191*FLEN/8, x4, x1, x2)

inst_59328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38f800000000000; valaddr_reg:x3; val_offset:177984*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177984*0 + 3*192*FLEN/8, x4, x1, x2)

inst_59329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fc00000000000; valaddr_reg:x3; val_offset:177987*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177987*0 + 3*193*FLEN/8, x4, x1, x2)

inst_59330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fe00000000000; valaddr_reg:x3; val_offset:177990*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177990*0 + 3*194*FLEN/8, x4, x1, x2)

inst_59331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ff00000000000; valaddr_reg:x3; val_offset:177993*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177993*0 + 3*195*FLEN/8, x4, x1, x2)

inst_59332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ff80000000000; valaddr_reg:x3; val_offset:177996*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177996*0 + 3*196*FLEN/8, x4, x1, x2)

inst_59333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffc0000000000; valaddr_reg:x3; val_offset:177999*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177999*0 + 3*197*FLEN/8, x4, x1, x2)

inst_59334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffe0000000000; valaddr_reg:x3; val_offset:178002*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178002*0 + 3*198*FLEN/8, x4, x1, x2)

inst_59335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fff0000000000; valaddr_reg:x3; val_offset:178005*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178005*0 + 3*199*FLEN/8, x4, x1, x2)

inst_59336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fff8000000000; valaddr_reg:x3; val_offset:178008*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178008*0 + 3*200*FLEN/8, x4, x1, x2)

inst_59337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffc000000000; valaddr_reg:x3; val_offset:178011*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178011*0 + 3*201*FLEN/8, x4, x1, x2)

inst_59338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffe000000000; valaddr_reg:x3; val_offset:178014*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178014*0 + 3*202*FLEN/8, x4, x1, x2)

inst_59339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffff000000000; valaddr_reg:x3; val_offset:178017*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178017*0 + 3*203*FLEN/8, x4, x1, x2)

inst_59340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffff800000000; valaddr_reg:x3; val_offset:178020*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178020*0 + 3*204*FLEN/8, x4, x1, x2)

inst_59341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffc00000000; valaddr_reg:x3; val_offset:178023*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178023*0 + 3*205*FLEN/8, x4, x1, x2)

inst_59342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffe00000000; valaddr_reg:x3; val_offset:178026*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178026*0 + 3*206*FLEN/8, x4, x1, x2)

inst_59343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffff00000000; valaddr_reg:x3; val_offset:178029*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178029*0 + 3*207*FLEN/8, x4, x1, x2)

inst_59344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffff80000000; valaddr_reg:x3; val_offset:178032*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178032*0 + 3*208*FLEN/8, x4, x1, x2)

inst_59345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffc0000000; valaddr_reg:x3; val_offset:178035*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178035*0 + 3*209*FLEN/8, x4, x1, x2)

inst_59346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffe0000000; valaddr_reg:x3; val_offset:178038*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178038*0 + 3*210*FLEN/8, x4, x1, x2)

inst_59347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffff0000000; valaddr_reg:x3; val_offset:178041*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178041*0 + 3*211*FLEN/8, x4, x1, x2)

inst_59348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffff8000000; valaddr_reg:x3; val_offset:178044*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178044*0 + 3*212*FLEN/8, x4, x1, x2)

inst_59349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffc000000; valaddr_reg:x3; val_offset:178047*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178047*0 + 3*213*FLEN/8, x4, x1, x2)

inst_59350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffe000000; valaddr_reg:x3; val_offset:178050*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178050*0 + 3*214*FLEN/8, x4, x1, x2)

inst_59351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffff000000; valaddr_reg:x3; val_offset:178053*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178053*0 + 3*215*FLEN/8, x4, x1, x2)

inst_59352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffff800000; valaddr_reg:x3; val_offset:178056*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178056*0 + 3*216*FLEN/8, x4, x1, x2)

inst_59353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffc00000; valaddr_reg:x3; val_offset:178059*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178059*0 + 3*217*FLEN/8, x4, x1, x2)

inst_59354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffe00000; valaddr_reg:x3; val_offset:178062*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178062*0 + 3*218*FLEN/8, x4, x1, x2)

inst_59355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffff00000; valaddr_reg:x3; val_offset:178065*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178065*0 + 3*219*FLEN/8, x4, x1, x2)

inst_59356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffff80000; valaddr_reg:x3; val_offset:178068*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178068*0 + 3*220*FLEN/8, x4, x1, x2)

inst_59357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffc0000; valaddr_reg:x3; val_offset:178071*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178071*0 + 3*221*FLEN/8, x4, x1, x2)

inst_59358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffe0000; valaddr_reg:x3; val_offset:178074*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178074*0 + 3*222*FLEN/8, x4, x1, x2)

inst_59359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffff0000; valaddr_reg:x3; val_offset:178077*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178077*0 + 3*223*FLEN/8, x4, x1, x2)

inst_59360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffff8000; valaddr_reg:x3; val_offset:178080*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178080*0 + 3*224*FLEN/8, x4, x1, x2)

inst_59361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffffc000; valaddr_reg:x3; val_offset:178083*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178083*0 + 3*225*FLEN/8, x4, x1, x2)

inst_59362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffffe000; valaddr_reg:x3; val_offset:178086*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178086*0 + 3*226*FLEN/8, x4, x1, x2)

inst_59363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffff000; valaddr_reg:x3; val_offset:178089*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178089*0 + 3*227*FLEN/8, x4, x1, x2)

inst_59364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffff800; valaddr_reg:x3; val_offset:178092*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178092*0 + 3*228*FLEN/8, x4, x1, x2)

inst_59365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffffc00; valaddr_reg:x3; val_offset:178095*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178095*0 + 3*229*FLEN/8, x4, x1, x2)

inst_59366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffffe00; valaddr_reg:x3; val_offset:178098*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178098*0 + 3*230*FLEN/8, x4, x1, x2)

inst_59367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffffff00; valaddr_reg:x3; val_offset:178101*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178101*0 + 3*231*FLEN/8, x4, x1, x2)

inst_59368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffffff80; valaddr_reg:x3; val_offset:178104*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178104*0 + 3*232*FLEN/8, x4, x1, x2)

inst_59369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffffffc0; valaddr_reg:x3; val_offset:178107*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178107*0 + 3*233*FLEN/8, x4, x1, x2)

inst_59370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffffffe0; valaddr_reg:x3; val_offset:178110*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178110*0 + 3*234*FLEN/8, x4, x1, x2)

inst_59371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffffff0; valaddr_reg:x3; val_offset:178113*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178113*0 + 3*235*FLEN/8, x4, x1, x2)

inst_59372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffffff8; valaddr_reg:x3; val_offset:178116*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178116*0 + 3*236*FLEN/8, x4, x1, x2)

inst_59373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffffffc; valaddr_reg:x3; val_offset:178119*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178119*0 + 3*237*FLEN/8, x4, x1, x2)

inst_59374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38ffffffffffffe; valaddr_reg:x3; val_offset:178122*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178122*0 + 3*238*FLEN/8, x4, x1, x2)

inst_59375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x24d75d646c41d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa24d75d646c41d; op2val:0x0;
op3val:0x38fffffffffffff; valaddr_reg:x3; val_offset:178125*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178125*0 + 3*239*FLEN/8, x4, x1, x2)

inst_59376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:178128*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178128*0 + 3*240*FLEN/8, x4, x1, x2)

inst_59377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:178131*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178131*0 + 3*241*FLEN/8, x4, x1, x2)

inst_59378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:178134*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178134*0 + 3*242*FLEN/8, x4, x1, x2)

inst_59379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:178137*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178137*0 + 3*243*FLEN/8, x4, x1, x2)

inst_59380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:178140*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178140*0 + 3*244*FLEN/8, x4, x1, x2)

inst_59381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:178143*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178143*0 + 3*245*FLEN/8, x4, x1, x2)

inst_59382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:178146*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178146*0 + 3*246*FLEN/8, x4, x1, x2)

inst_59383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:178149*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178149*0 + 3*247*FLEN/8, x4, x1, x2)

inst_59384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:178152*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178152*0 + 3*248*FLEN/8, x4, x1, x2)

inst_59385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:178155*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178155*0 + 3*249*FLEN/8, x4, x1, x2)

inst_59386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:178158*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178158*0 + 3*250*FLEN/8, x4, x1, x2)

inst_59387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:178161*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178161*0 + 3*251*FLEN/8, x4, x1, x2)

inst_59388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:178164*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178164*0 + 3*252*FLEN/8, x4, x1, x2)

inst_59389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:178167*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178167*0 + 3*253*FLEN/8, x4, x1, x2)

inst_59390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:178170*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178170*0 + 3*254*FLEN/8, x4, x1, x2)

inst_59391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:178173*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178173*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_59392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:178176*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178176*0 + 3*256*FLEN/8, x4, x1, x2)

inst_59393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:178179*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178179*0 + 3*257*FLEN/8, x4, x1, x2)

inst_59394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:178182*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178182*0 + 3*258*FLEN/8, x4, x1, x2)

inst_59395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:178185*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178185*0 + 3*259*FLEN/8, x4, x1, x2)

inst_59396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:178188*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178188*0 + 3*260*FLEN/8, x4, x1, x2)

inst_59397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:178191*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178191*0 + 3*261*FLEN/8, x4, x1, x2)

inst_59398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000000000000; valaddr_reg:x3; val_offset:178194*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178194*0 + 3*262*FLEN/8, x4, x1, x2)

inst_59399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000000000001; valaddr_reg:x3; val_offset:178197*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178197*0 + 3*263*FLEN/8, x4, x1, x2)

inst_59400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000000000003; valaddr_reg:x3; val_offset:178200*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178200*0 + 3*264*FLEN/8, x4, x1, x2)

inst_59401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000000000007; valaddr_reg:x3; val_offset:178203*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178203*0 + 3*265*FLEN/8, x4, x1, x2)

inst_59402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000000000000f; valaddr_reg:x3; val_offset:178206*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178206*0 + 3*266*FLEN/8, x4, x1, x2)

inst_59403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000000000001f; valaddr_reg:x3; val_offset:178209*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178209*0 + 3*267*FLEN/8, x4, x1, x2)

inst_59404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000000000003f; valaddr_reg:x3; val_offset:178212*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178212*0 + 3*268*FLEN/8, x4, x1, x2)

inst_59405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000000000007f; valaddr_reg:x3; val_offset:178215*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178215*0 + 3*269*FLEN/8, x4, x1, x2)

inst_59406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00000000000ff; valaddr_reg:x3; val_offset:178218*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178218*0 + 3*270*FLEN/8, x4, x1, x2)

inst_59407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00000000001ff; valaddr_reg:x3; val_offset:178221*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178221*0 + 3*271*FLEN/8, x4, x1, x2)

inst_59408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00000000003ff; valaddr_reg:x3; val_offset:178224*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178224*0 + 3*272*FLEN/8, x4, x1, x2)

inst_59409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00000000007ff; valaddr_reg:x3; val_offset:178227*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178227*0 + 3*273*FLEN/8, x4, x1, x2)

inst_59410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000000000fff; valaddr_reg:x3; val_offset:178230*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178230*0 + 3*274*FLEN/8, x4, x1, x2)

inst_59411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000000001fff; valaddr_reg:x3; val_offset:178233*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178233*0 + 3*275*FLEN/8, x4, x1, x2)

inst_59412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000000003fff; valaddr_reg:x3; val_offset:178236*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178236*0 + 3*276*FLEN/8, x4, x1, x2)

inst_59413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000000007fff; valaddr_reg:x3; val_offset:178239*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178239*0 + 3*277*FLEN/8, x4, x1, x2)

inst_59414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000000000ffff; valaddr_reg:x3; val_offset:178242*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178242*0 + 3*278*FLEN/8, x4, x1, x2)

inst_59415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000000001ffff; valaddr_reg:x3; val_offset:178245*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178245*0 + 3*279*FLEN/8, x4, x1, x2)

inst_59416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000000003ffff; valaddr_reg:x3; val_offset:178248*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178248*0 + 3*280*FLEN/8, x4, x1, x2)

inst_59417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000000007ffff; valaddr_reg:x3; val_offset:178251*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178251*0 + 3*281*FLEN/8, x4, x1, x2)

inst_59418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00000000fffff; valaddr_reg:x3; val_offset:178254*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178254*0 + 3*282*FLEN/8, x4, x1, x2)

inst_59419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00000001fffff; valaddr_reg:x3; val_offset:178257*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178257*0 + 3*283*FLEN/8, x4, x1, x2)

inst_59420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00000003fffff; valaddr_reg:x3; val_offset:178260*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178260*0 + 3*284*FLEN/8, x4, x1, x2)

inst_59421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00000007fffff; valaddr_reg:x3; val_offset:178263*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178263*0 + 3*285*FLEN/8, x4, x1, x2)

inst_59422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000000ffffff; valaddr_reg:x3; val_offset:178266*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178266*0 + 3*286*FLEN/8, x4, x1, x2)

inst_59423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000001ffffff; valaddr_reg:x3; val_offset:178269*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178269*0 + 3*287*FLEN/8, x4, x1, x2)

inst_59424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000003ffffff; valaddr_reg:x3; val_offset:178272*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178272*0 + 3*288*FLEN/8, x4, x1, x2)

inst_59425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000007ffffff; valaddr_reg:x3; val_offset:178275*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178275*0 + 3*289*FLEN/8, x4, x1, x2)

inst_59426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000000fffffff; valaddr_reg:x3; val_offset:178278*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178278*0 + 3*290*FLEN/8, x4, x1, x2)

inst_59427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000001fffffff; valaddr_reg:x3; val_offset:178281*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178281*0 + 3*291*FLEN/8, x4, x1, x2)

inst_59428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000003fffffff; valaddr_reg:x3; val_offset:178284*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178284*0 + 3*292*FLEN/8, x4, x1, x2)

inst_59429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000007fffffff; valaddr_reg:x3; val_offset:178287*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178287*0 + 3*293*FLEN/8, x4, x1, x2)

inst_59430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00000ffffffff; valaddr_reg:x3; val_offset:178290*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178290*0 + 3*294*FLEN/8, x4, x1, x2)

inst_59431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00001ffffffff; valaddr_reg:x3; val_offset:178293*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178293*0 + 3*295*FLEN/8, x4, x1, x2)

inst_59432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00003ffffffff; valaddr_reg:x3; val_offset:178296*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178296*0 + 3*296*FLEN/8, x4, x1, x2)

inst_59433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00007ffffffff; valaddr_reg:x3; val_offset:178299*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178299*0 + 3*297*FLEN/8, x4, x1, x2)

inst_59434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0000fffffffff; valaddr_reg:x3; val_offset:178302*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178302*0 + 3*298*FLEN/8, x4, x1, x2)

inst_59435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0001fffffffff; valaddr_reg:x3; val_offset:178305*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178305*0 + 3*299*FLEN/8, x4, x1, x2)

inst_59436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0003fffffffff; valaddr_reg:x3; val_offset:178308*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178308*0 + 3*300*FLEN/8, x4, x1, x2)

inst_59437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0007fffffffff; valaddr_reg:x3; val_offset:178311*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178311*0 + 3*301*FLEN/8, x4, x1, x2)

inst_59438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b000ffffffffff; valaddr_reg:x3; val_offset:178314*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178314*0 + 3*302*FLEN/8, x4, x1, x2)

inst_59439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b001ffffffffff; valaddr_reg:x3; val_offset:178317*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178317*0 + 3*303*FLEN/8, x4, x1, x2)

inst_59440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b003ffffffffff; valaddr_reg:x3; val_offset:178320*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178320*0 + 3*304*FLEN/8, x4, x1, x2)

inst_59441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b007ffffffffff; valaddr_reg:x3; val_offset:178323*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178323*0 + 3*305*FLEN/8, x4, x1, x2)

inst_59442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b00fffffffffff; valaddr_reg:x3; val_offset:178326*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178326*0 + 3*306*FLEN/8, x4, x1, x2)

inst_59443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b01fffffffffff; valaddr_reg:x3; val_offset:178329*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178329*0 + 3*307*FLEN/8, x4, x1, x2)

inst_59444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b03fffffffffff; valaddr_reg:x3; val_offset:178332*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178332*0 + 3*308*FLEN/8, x4, x1, x2)

inst_59445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b07fffffffffff; valaddr_reg:x3; val_offset:178335*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178335*0 + 3*309*FLEN/8, x4, x1, x2)

inst_59446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b0ffffffffffff; valaddr_reg:x3; val_offset:178338*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178338*0 + 3*310*FLEN/8, x4, x1, x2)

inst_59447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b1ffffffffffff; valaddr_reg:x3; val_offset:178341*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178341*0 + 3*311*FLEN/8, x4, x1, x2)

inst_59448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b3ffffffffffff; valaddr_reg:x3; val_offset:178344*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178344*0 + 3*312*FLEN/8, x4, x1, x2)

inst_59449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b7ffffffffffff; valaddr_reg:x3; val_offset:178347*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178347*0 + 3*313*FLEN/8, x4, x1, x2)

inst_59450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2b8000000000000; valaddr_reg:x3; val_offset:178350*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178350*0 + 3*314*FLEN/8, x4, x1, x2)

inst_59451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bc000000000000; valaddr_reg:x3; val_offset:178353*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178353*0 + 3*315*FLEN/8, x4, x1, x2)

inst_59452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2be000000000000; valaddr_reg:x3; val_offset:178356*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178356*0 + 3*316*FLEN/8, x4, x1, x2)

inst_59453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bf000000000000; valaddr_reg:x3; val_offset:178359*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178359*0 + 3*317*FLEN/8, x4, x1, x2)

inst_59454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bf800000000000; valaddr_reg:x3; val_offset:178362*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178362*0 + 3*318*FLEN/8, x4, x1, x2)

inst_59455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfc00000000000; valaddr_reg:x3; val_offset:178365*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178365*0 + 3*319*FLEN/8, x4, x1, x2)

inst_59456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfe00000000000; valaddr_reg:x3; val_offset:178368*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178368*0 + 3*320*FLEN/8, x4, x1, x2)

inst_59457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bff00000000000; valaddr_reg:x3; val_offset:178371*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178371*0 + 3*321*FLEN/8, x4, x1, x2)

inst_59458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bff80000000000; valaddr_reg:x3; val_offset:178374*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178374*0 + 3*322*FLEN/8, x4, x1, x2)

inst_59459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffc0000000000; valaddr_reg:x3; val_offset:178377*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178377*0 + 3*323*FLEN/8, x4, x1, x2)

inst_59460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffe0000000000; valaddr_reg:x3; val_offset:178380*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178380*0 + 3*324*FLEN/8, x4, x1, x2)

inst_59461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfff0000000000; valaddr_reg:x3; val_offset:178383*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178383*0 + 3*325*FLEN/8, x4, x1, x2)

inst_59462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfff8000000000; valaddr_reg:x3; val_offset:178386*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178386*0 + 3*326*FLEN/8, x4, x1, x2)

inst_59463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffc000000000; valaddr_reg:x3; val_offset:178389*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178389*0 + 3*327*FLEN/8, x4, x1, x2)

inst_59464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffe000000000; valaddr_reg:x3; val_offset:178392*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178392*0 + 3*328*FLEN/8, x4, x1, x2)

inst_59465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffff000000000; valaddr_reg:x3; val_offset:178395*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178395*0 + 3*329*FLEN/8, x4, x1, x2)

inst_59466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffff800000000; valaddr_reg:x3; val_offset:178398*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178398*0 + 3*330*FLEN/8, x4, x1, x2)

inst_59467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffc00000000; valaddr_reg:x3; val_offset:178401*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178401*0 + 3*331*FLEN/8, x4, x1, x2)

inst_59468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffe00000000; valaddr_reg:x3; val_offset:178404*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178404*0 + 3*332*FLEN/8, x4, x1, x2)

inst_59469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffff00000000; valaddr_reg:x3; val_offset:178407*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178407*0 + 3*333*FLEN/8, x4, x1, x2)

inst_59470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffff80000000; valaddr_reg:x3; val_offset:178410*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178410*0 + 3*334*FLEN/8, x4, x1, x2)

inst_59471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffc0000000; valaddr_reg:x3; val_offset:178413*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178413*0 + 3*335*FLEN/8, x4, x1, x2)

inst_59472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffe0000000; valaddr_reg:x3; val_offset:178416*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178416*0 + 3*336*FLEN/8, x4, x1, x2)

inst_59473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffff0000000; valaddr_reg:x3; val_offset:178419*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178419*0 + 3*337*FLEN/8, x4, x1, x2)

inst_59474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffff8000000; valaddr_reg:x3; val_offset:178422*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178422*0 + 3*338*FLEN/8, x4, x1, x2)

inst_59475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffc000000; valaddr_reg:x3; val_offset:178425*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178425*0 + 3*339*FLEN/8, x4, x1, x2)

inst_59476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffe000000; valaddr_reg:x3; val_offset:178428*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178428*0 + 3*340*FLEN/8, x4, x1, x2)

inst_59477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffff000000; valaddr_reg:x3; val_offset:178431*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178431*0 + 3*341*FLEN/8, x4, x1, x2)

inst_59478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffff800000; valaddr_reg:x3; val_offset:178434*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178434*0 + 3*342*FLEN/8, x4, x1, x2)

inst_59479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffc00000; valaddr_reg:x3; val_offset:178437*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178437*0 + 3*343*FLEN/8, x4, x1, x2)

inst_59480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffe00000; valaddr_reg:x3; val_offset:178440*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178440*0 + 3*344*FLEN/8, x4, x1, x2)

inst_59481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffff00000; valaddr_reg:x3; val_offset:178443*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178443*0 + 3*345*FLEN/8, x4, x1, x2)

inst_59482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffff80000; valaddr_reg:x3; val_offset:178446*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178446*0 + 3*346*FLEN/8, x4, x1, x2)

inst_59483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffc0000; valaddr_reg:x3; val_offset:178449*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178449*0 + 3*347*FLEN/8, x4, x1, x2)

inst_59484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffe0000; valaddr_reg:x3; val_offset:178452*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178452*0 + 3*348*FLEN/8, x4, x1, x2)

inst_59485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffff0000; valaddr_reg:x3; val_offset:178455*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178455*0 + 3*349*FLEN/8, x4, x1, x2)

inst_59486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffff8000; valaddr_reg:x3; val_offset:178458*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178458*0 + 3*350*FLEN/8, x4, x1, x2)

inst_59487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffffc000; valaddr_reg:x3; val_offset:178461*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178461*0 + 3*351*FLEN/8, x4, x1, x2)

inst_59488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffffe000; valaddr_reg:x3; val_offset:178464*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178464*0 + 3*352*FLEN/8, x4, x1, x2)

inst_59489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffff000; valaddr_reg:x3; val_offset:178467*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178467*0 + 3*353*FLEN/8, x4, x1, x2)

inst_59490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffff800; valaddr_reg:x3; val_offset:178470*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178470*0 + 3*354*FLEN/8, x4, x1, x2)

inst_59491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffffc00; valaddr_reg:x3; val_offset:178473*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178473*0 + 3*355*FLEN/8, x4, x1, x2)

inst_59492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffffe00; valaddr_reg:x3; val_offset:178476*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178476*0 + 3*356*FLEN/8, x4, x1, x2)

inst_59493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffffff00; valaddr_reg:x3; val_offset:178479*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178479*0 + 3*357*FLEN/8, x4, x1, x2)

inst_59494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffffff80; valaddr_reg:x3; val_offset:178482*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178482*0 + 3*358*FLEN/8, x4, x1, x2)

inst_59495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffffffc0; valaddr_reg:x3; val_offset:178485*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178485*0 + 3*359*FLEN/8, x4, x1, x2)

inst_59496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffffffe0; valaddr_reg:x3; val_offset:178488*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178488*0 + 3*360*FLEN/8, x4, x1, x2)

inst_59497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffffff0; valaddr_reg:x3; val_offset:178491*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178491*0 + 3*361*FLEN/8, x4, x1, x2)

inst_59498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffffff8; valaddr_reg:x3; val_offset:178494*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178494*0 + 3*362*FLEN/8, x4, x1, x2)

inst_59499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffffffc; valaddr_reg:x3; val_offset:178497*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178497*0 + 3*363*FLEN/8, x4, x1, x2)

inst_59500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bffffffffffffe; valaddr_reg:x3; val_offset:178500*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178500*0 + 3*364*FLEN/8, x4, x1, x2)

inst_59501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25e64ed675513 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa25e64ed675513; op2val:0x0;
op3val:0x2bfffffffffffff; valaddr_reg:x3; val_offset:178503*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178503*0 + 3*365*FLEN/8, x4, x1, x2)

inst_59502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000000000000; valaddr_reg:x3; val_offset:178506*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178506*0 + 3*366*FLEN/8, x4, x1, x2)

inst_59503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000000000001; valaddr_reg:x3; val_offset:178509*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178509*0 + 3*367*FLEN/8, x4, x1, x2)

inst_59504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000000000003; valaddr_reg:x3; val_offset:178512*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178512*0 + 3*368*FLEN/8, x4, x1, x2)

inst_59505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000000000007; valaddr_reg:x3; val_offset:178515*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178515*0 + 3*369*FLEN/8, x4, x1, x2)

inst_59506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000000000000f; valaddr_reg:x3; val_offset:178518*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178518*0 + 3*370*FLEN/8, x4, x1, x2)

inst_59507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000000000001f; valaddr_reg:x3; val_offset:178521*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178521*0 + 3*371*FLEN/8, x4, x1, x2)

inst_59508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000000000003f; valaddr_reg:x3; val_offset:178524*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178524*0 + 3*372*FLEN/8, x4, x1, x2)

inst_59509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000000000007f; valaddr_reg:x3; val_offset:178527*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178527*0 + 3*373*FLEN/8, x4, x1, x2)

inst_59510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00000000000ff; valaddr_reg:x3; val_offset:178530*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178530*0 + 3*374*FLEN/8, x4, x1, x2)

inst_59511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00000000001ff; valaddr_reg:x3; val_offset:178533*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178533*0 + 3*375*FLEN/8, x4, x1, x2)

inst_59512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00000000003ff; valaddr_reg:x3; val_offset:178536*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178536*0 + 3*376*FLEN/8, x4, x1, x2)

inst_59513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00000000007ff; valaddr_reg:x3; val_offset:178539*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178539*0 + 3*377*FLEN/8, x4, x1, x2)

inst_59514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000000000fff; valaddr_reg:x3; val_offset:178542*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178542*0 + 3*378*FLEN/8, x4, x1, x2)

inst_59515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000000001fff; valaddr_reg:x3; val_offset:178545*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178545*0 + 3*379*FLEN/8, x4, x1, x2)

inst_59516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000000003fff; valaddr_reg:x3; val_offset:178548*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178548*0 + 3*380*FLEN/8, x4, x1, x2)

inst_59517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000000007fff; valaddr_reg:x3; val_offset:178551*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178551*0 + 3*381*FLEN/8, x4, x1, x2)

inst_59518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000000000ffff; valaddr_reg:x3; val_offset:178554*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178554*0 + 3*382*FLEN/8, x4, x1, x2)

inst_59519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000000001ffff; valaddr_reg:x3; val_offset:178557*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178557*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_59520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000000003ffff; valaddr_reg:x3; val_offset:178560*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178560*0 + 3*384*FLEN/8, x4, x1, x2)

inst_59521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000000007ffff; valaddr_reg:x3; val_offset:178563*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178563*0 + 3*385*FLEN/8, x4, x1, x2)

inst_59522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00000000fffff; valaddr_reg:x3; val_offset:178566*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178566*0 + 3*386*FLEN/8, x4, x1, x2)

inst_59523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00000001fffff; valaddr_reg:x3; val_offset:178569*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178569*0 + 3*387*FLEN/8, x4, x1, x2)

inst_59524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00000003fffff; valaddr_reg:x3; val_offset:178572*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178572*0 + 3*388*FLEN/8, x4, x1, x2)

inst_59525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00000007fffff; valaddr_reg:x3; val_offset:178575*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178575*0 + 3*389*FLEN/8, x4, x1, x2)

inst_59526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000000ffffff; valaddr_reg:x3; val_offset:178578*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178578*0 + 3*390*FLEN/8, x4, x1, x2)

inst_59527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000001ffffff; valaddr_reg:x3; val_offset:178581*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178581*0 + 3*391*FLEN/8, x4, x1, x2)

inst_59528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000003ffffff; valaddr_reg:x3; val_offset:178584*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178584*0 + 3*392*FLEN/8, x4, x1, x2)

inst_59529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000007ffffff; valaddr_reg:x3; val_offset:178587*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178587*0 + 3*393*FLEN/8, x4, x1, x2)

inst_59530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000000fffffff; valaddr_reg:x3; val_offset:178590*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178590*0 + 3*394*FLEN/8, x4, x1, x2)

inst_59531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000001fffffff; valaddr_reg:x3; val_offset:178593*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178593*0 + 3*395*FLEN/8, x4, x1, x2)

inst_59532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000003fffffff; valaddr_reg:x3; val_offset:178596*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178596*0 + 3*396*FLEN/8, x4, x1, x2)

inst_59533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000007fffffff; valaddr_reg:x3; val_offset:178599*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178599*0 + 3*397*FLEN/8, x4, x1, x2)

inst_59534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00000ffffffff; valaddr_reg:x3; val_offset:178602*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178602*0 + 3*398*FLEN/8, x4, x1, x2)

inst_59535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00001ffffffff; valaddr_reg:x3; val_offset:178605*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178605*0 + 3*399*FLEN/8, x4, x1, x2)

inst_59536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00003ffffffff; valaddr_reg:x3; val_offset:178608*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178608*0 + 3*400*FLEN/8, x4, x1, x2)

inst_59537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00007ffffffff; valaddr_reg:x3; val_offset:178611*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178611*0 + 3*401*FLEN/8, x4, x1, x2)

inst_59538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0000fffffffff; valaddr_reg:x3; val_offset:178614*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178614*0 + 3*402*FLEN/8, x4, x1, x2)

inst_59539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0001fffffffff; valaddr_reg:x3; val_offset:178617*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178617*0 + 3*403*FLEN/8, x4, x1, x2)

inst_59540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0003fffffffff; valaddr_reg:x3; val_offset:178620*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178620*0 + 3*404*FLEN/8, x4, x1, x2)

inst_59541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0007fffffffff; valaddr_reg:x3; val_offset:178623*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178623*0 + 3*405*FLEN/8, x4, x1, x2)

inst_59542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c000ffffffffff; valaddr_reg:x3; val_offset:178626*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178626*0 + 3*406*FLEN/8, x4, x1, x2)

inst_59543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c001ffffffffff; valaddr_reg:x3; val_offset:178629*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178629*0 + 3*407*FLEN/8, x4, x1, x2)

inst_59544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c003ffffffffff; valaddr_reg:x3; val_offset:178632*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178632*0 + 3*408*FLEN/8, x4, x1, x2)

inst_59545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c007ffffffffff; valaddr_reg:x3; val_offset:178635*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178635*0 + 3*409*FLEN/8, x4, x1, x2)

inst_59546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c00fffffffffff; valaddr_reg:x3; val_offset:178638*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178638*0 + 3*410*FLEN/8, x4, x1, x2)

inst_59547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c01fffffffffff; valaddr_reg:x3; val_offset:178641*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178641*0 + 3*411*FLEN/8, x4, x1, x2)

inst_59548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c03fffffffffff; valaddr_reg:x3; val_offset:178644*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178644*0 + 3*412*FLEN/8, x4, x1, x2)

inst_59549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c07fffffffffff; valaddr_reg:x3; val_offset:178647*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178647*0 + 3*413*FLEN/8, x4, x1, x2)

inst_59550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c0ffffffffffff; valaddr_reg:x3; val_offset:178650*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178650*0 + 3*414*FLEN/8, x4, x1, x2)

inst_59551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c1ffffffffffff; valaddr_reg:x3; val_offset:178653*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178653*0 + 3*415*FLEN/8, x4, x1, x2)

inst_59552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c3ffffffffffff; valaddr_reg:x3; val_offset:178656*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178656*0 + 3*416*FLEN/8, x4, x1, x2)

inst_59553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c7ffffffffffff; valaddr_reg:x3; val_offset:178659*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178659*0 + 3*417*FLEN/8, x4, x1, x2)

inst_59554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39c8000000000000; valaddr_reg:x3; val_offset:178662*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178662*0 + 3*418*FLEN/8, x4, x1, x2)

inst_59555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cc000000000000; valaddr_reg:x3; val_offset:178665*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178665*0 + 3*419*FLEN/8, x4, x1, x2)

inst_59556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39ce000000000000; valaddr_reg:x3; val_offset:178668*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178668*0 + 3*420*FLEN/8, x4, x1, x2)

inst_59557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cf000000000000; valaddr_reg:x3; val_offset:178671*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178671*0 + 3*421*FLEN/8, x4, x1, x2)

inst_59558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cf800000000000; valaddr_reg:x3; val_offset:178674*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178674*0 + 3*422*FLEN/8, x4, x1, x2)

inst_59559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfc00000000000; valaddr_reg:x3; val_offset:178677*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178677*0 + 3*423*FLEN/8, x4, x1, x2)

inst_59560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfe00000000000; valaddr_reg:x3; val_offset:178680*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178680*0 + 3*424*FLEN/8, x4, x1, x2)

inst_59561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cff00000000000; valaddr_reg:x3; val_offset:178683*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178683*0 + 3*425*FLEN/8, x4, x1, x2)

inst_59562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cff80000000000; valaddr_reg:x3; val_offset:178686*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178686*0 + 3*426*FLEN/8, x4, x1, x2)

inst_59563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffc0000000000; valaddr_reg:x3; val_offset:178689*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178689*0 + 3*427*FLEN/8, x4, x1, x2)

inst_59564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffe0000000000; valaddr_reg:x3; val_offset:178692*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178692*0 + 3*428*FLEN/8, x4, x1, x2)

inst_59565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfff0000000000; valaddr_reg:x3; val_offset:178695*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178695*0 + 3*429*FLEN/8, x4, x1, x2)

inst_59566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfff8000000000; valaddr_reg:x3; val_offset:178698*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178698*0 + 3*430*FLEN/8, x4, x1, x2)

inst_59567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffc000000000; valaddr_reg:x3; val_offset:178701*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178701*0 + 3*431*FLEN/8, x4, x1, x2)

inst_59568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffe000000000; valaddr_reg:x3; val_offset:178704*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178704*0 + 3*432*FLEN/8, x4, x1, x2)

inst_59569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffff000000000; valaddr_reg:x3; val_offset:178707*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178707*0 + 3*433*FLEN/8, x4, x1, x2)

inst_59570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffff800000000; valaddr_reg:x3; val_offset:178710*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178710*0 + 3*434*FLEN/8, x4, x1, x2)

inst_59571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffc00000000; valaddr_reg:x3; val_offset:178713*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178713*0 + 3*435*FLEN/8, x4, x1, x2)

inst_59572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffe00000000; valaddr_reg:x3; val_offset:178716*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178716*0 + 3*436*FLEN/8, x4, x1, x2)

inst_59573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffff00000000; valaddr_reg:x3; val_offset:178719*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178719*0 + 3*437*FLEN/8, x4, x1, x2)

inst_59574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffff80000000; valaddr_reg:x3; val_offset:178722*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178722*0 + 3*438*FLEN/8, x4, x1, x2)

inst_59575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffc0000000; valaddr_reg:x3; val_offset:178725*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178725*0 + 3*439*FLEN/8, x4, x1, x2)

inst_59576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffe0000000; valaddr_reg:x3; val_offset:178728*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178728*0 + 3*440*FLEN/8, x4, x1, x2)

inst_59577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffff0000000; valaddr_reg:x3; val_offset:178731*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178731*0 + 3*441*FLEN/8, x4, x1, x2)

inst_59578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffff8000000; valaddr_reg:x3; val_offset:178734*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178734*0 + 3*442*FLEN/8, x4, x1, x2)

inst_59579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffc000000; valaddr_reg:x3; val_offset:178737*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178737*0 + 3*443*FLEN/8, x4, x1, x2)

inst_59580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffe000000; valaddr_reg:x3; val_offset:178740*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178740*0 + 3*444*FLEN/8, x4, x1, x2)

inst_59581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffff000000; valaddr_reg:x3; val_offset:178743*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178743*0 + 3*445*FLEN/8, x4, x1, x2)

inst_59582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffff800000; valaddr_reg:x3; val_offset:178746*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178746*0 + 3*446*FLEN/8, x4, x1, x2)

inst_59583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffc00000; valaddr_reg:x3; val_offset:178749*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178749*0 + 3*447*FLEN/8, x4, x1, x2)

inst_59584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffe00000; valaddr_reg:x3; val_offset:178752*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178752*0 + 3*448*FLEN/8, x4, x1, x2)

inst_59585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffff00000; valaddr_reg:x3; val_offset:178755*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178755*0 + 3*449*FLEN/8, x4, x1, x2)

inst_59586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffff80000; valaddr_reg:x3; val_offset:178758*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178758*0 + 3*450*FLEN/8, x4, x1, x2)

inst_59587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffc0000; valaddr_reg:x3; val_offset:178761*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178761*0 + 3*451*FLEN/8, x4, x1, x2)

inst_59588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffe0000; valaddr_reg:x3; val_offset:178764*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178764*0 + 3*452*FLEN/8, x4, x1, x2)

inst_59589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffff0000; valaddr_reg:x3; val_offset:178767*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178767*0 + 3*453*FLEN/8, x4, x1, x2)

inst_59590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffff8000; valaddr_reg:x3; val_offset:178770*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178770*0 + 3*454*FLEN/8, x4, x1, x2)

inst_59591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffffc000; valaddr_reg:x3; val_offset:178773*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178773*0 + 3*455*FLEN/8, x4, x1, x2)

inst_59592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffffe000; valaddr_reg:x3; val_offset:178776*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178776*0 + 3*456*FLEN/8, x4, x1, x2)

inst_59593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffff000; valaddr_reg:x3; val_offset:178779*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178779*0 + 3*457*FLEN/8, x4, x1, x2)

inst_59594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffff800; valaddr_reg:x3; val_offset:178782*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178782*0 + 3*458*FLEN/8, x4, x1, x2)

inst_59595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffffc00; valaddr_reg:x3; val_offset:178785*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178785*0 + 3*459*FLEN/8, x4, x1, x2)

inst_59596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffffe00; valaddr_reg:x3; val_offset:178788*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178788*0 + 3*460*FLEN/8, x4, x1, x2)

inst_59597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffffff00; valaddr_reg:x3; val_offset:178791*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178791*0 + 3*461*FLEN/8, x4, x1, x2)

inst_59598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffffff80; valaddr_reg:x3; val_offset:178794*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178794*0 + 3*462*FLEN/8, x4, x1, x2)

inst_59599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffffffc0; valaddr_reg:x3; val_offset:178797*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178797*0 + 3*463*FLEN/8, x4, x1, x2)

inst_59600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffffffe0; valaddr_reg:x3; val_offset:178800*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178800*0 + 3*464*FLEN/8, x4, x1, x2)

inst_59601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffffff0; valaddr_reg:x3; val_offset:178803*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178803*0 + 3*465*FLEN/8, x4, x1, x2)

inst_59602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffffff8; valaddr_reg:x3; val_offset:178806*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178806*0 + 3*466*FLEN/8, x4, x1, x2)

inst_59603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffffffc; valaddr_reg:x3; val_offset:178809*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178809*0 + 3*467*FLEN/8, x4, x1, x2)

inst_59604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cffffffffffffe; valaddr_reg:x3; val_offset:178812*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178812*0 + 3*468*FLEN/8, x4, x1, x2)

inst_59605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x39c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x39cfffffffffffff; valaddr_reg:x3; val_offset:178815*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178815*0 + 3*469*FLEN/8, x4, x1, x2)

inst_59606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:178818*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178818*0 + 3*470*FLEN/8, x4, x1, x2)

inst_59607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:178821*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178821*0 + 3*471*FLEN/8, x4, x1, x2)

inst_59608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:178824*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178824*0 + 3*472*FLEN/8, x4, x1, x2)

inst_59609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:178827*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178827*0 + 3*473*FLEN/8, x4, x1, x2)

inst_59610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:178830*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178830*0 + 3*474*FLEN/8, x4, x1, x2)

inst_59611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:178833*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178833*0 + 3*475*FLEN/8, x4, x1, x2)

inst_59612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:178836*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178836*0 + 3*476*FLEN/8, x4, x1, x2)

inst_59613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:178839*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178839*0 + 3*477*FLEN/8, x4, x1, x2)

inst_59614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:178842*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178842*0 + 3*478*FLEN/8, x4, x1, x2)

inst_59615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:178845*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178845*0 + 3*479*FLEN/8, x4, x1, x2)

inst_59616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:178848*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178848*0 + 3*480*FLEN/8, x4, x1, x2)

inst_59617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:178851*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178851*0 + 3*481*FLEN/8, x4, x1, x2)

inst_59618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:178854*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178854*0 + 3*482*FLEN/8, x4, x1, x2)

inst_59619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:178857*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178857*0 + 3*483*FLEN/8, x4, x1, x2)

inst_59620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:178860*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178860*0 + 3*484*FLEN/8, x4, x1, x2)

inst_59621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:178863*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178863*0 + 3*485*FLEN/8, x4, x1, x2)

inst_59622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:178866*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178866*0 + 3*486*FLEN/8, x4, x1, x2)

inst_59623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:178869*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178869*0 + 3*487*FLEN/8, x4, x1, x2)

inst_59624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:178872*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178872*0 + 3*488*FLEN/8, x4, x1, x2)

inst_59625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:178875*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178875*0 + 3*489*FLEN/8, x4, x1, x2)

inst_59626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:178878*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178878*0 + 3*490*FLEN/8, x4, x1, x2)

inst_59627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2650cf8bbfe0b and fs2 == 0 and fe2 == 0x203 and fm2 == 0xbd584f8afdd30 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2650cf8bbfe0b; op2val:0x203bd584f8afdd30;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:178881*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178881*0 + 3*491*FLEN/8, x4, x1, x2)

inst_59628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:178884*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178884*0 + 3*492*FLEN/8, x4, x1, x2)

inst_59629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:178887*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178887*0 + 3*493*FLEN/8, x4, x1, x2)

inst_59630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:178890*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178890*0 + 3*494*FLEN/8, x4, x1, x2)

inst_59631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:178893*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178893*0 + 3*495*FLEN/8, x4, x1, x2)

inst_59632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:178896*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178896*0 + 3*496*FLEN/8, x4, x1, x2)

inst_59633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:178899*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178899*0 + 3*497*FLEN/8, x4, x1, x2)

inst_59634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:178902*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178902*0 + 3*498*FLEN/8, x4, x1, x2)

inst_59635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:178905*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178905*0 + 3*499*FLEN/8, x4, x1, x2)

inst_59636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:178908*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178908*0 + 3*500*FLEN/8, x4, x1, x2)

inst_59637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:178911*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178911*0 + 3*501*FLEN/8, x4, x1, x2)

inst_59638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:178914*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178914*0 + 3*502*FLEN/8, x4, x1, x2)

inst_59639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:178917*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178917*0 + 3*503*FLEN/8, x4, x1, x2)

inst_59640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:178920*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178920*0 + 3*504*FLEN/8, x4, x1, x2)

inst_59641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:178923*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178923*0 + 3*505*FLEN/8, x4, x1, x2)

inst_59642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:178926*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178926*0 + 3*506*FLEN/8, x4, x1, x2)

inst_59643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:178929*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178929*0 + 3*507*FLEN/8, x4, x1, x2)

inst_59644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:178932*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178932*0 + 3*508*FLEN/8, x4, x1, x2)

inst_59645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:178935*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178935*0 + 3*509*FLEN/8, x4, x1, x2)

inst_59646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:178938*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178938*0 + 3*510*FLEN/8, x4, x1, x2)

inst_59647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:178941*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178941*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_59648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:178944*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178944*0 + 3*512*FLEN/8, x4, x1, x2)

inst_59649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:178947*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178947*0 + 3*513*FLEN/8, x4, x1, x2)

inst_59650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000000000000; valaddr_reg:x3; val_offset:178950*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178950*0 + 3*514*FLEN/8, x4, x1, x2)

inst_59651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000000000001; valaddr_reg:x3; val_offset:178953*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178953*0 + 3*515*FLEN/8, x4, x1, x2)

inst_59652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000000000003; valaddr_reg:x3; val_offset:178956*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178956*0 + 3*516*FLEN/8, x4, x1, x2)

inst_59653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000000000007; valaddr_reg:x3; val_offset:178959*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178959*0 + 3*517*FLEN/8, x4, x1, x2)

inst_59654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000000000000f; valaddr_reg:x3; val_offset:178962*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178962*0 + 3*518*FLEN/8, x4, x1, x2)

inst_59655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000000000001f; valaddr_reg:x3; val_offset:178965*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178965*0 + 3*519*FLEN/8, x4, x1, x2)

inst_59656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000000000003f; valaddr_reg:x3; val_offset:178968*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178968*0 + 3*520*FLEN/8, x4, x1, x2)

inst_59657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000000000007f; valaddr_reg:x3; val_offset:178971*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178971*0 + 3*521*FLEN/8, x4, x1, x2)

inst_59658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00000000000ff; valaddr_reg:x3; val_offset:178974*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178974*0 + 3*522*FLEN/8, x4, x1, x2)

inst_59659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00000000001ff; valaddr_reg:x3; val_offset:178977*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178977*0 + 3*523*FLEN/8, x4, x1, x2)

inst_59660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00000000003ff; valaddr_reg:x3; val_offset:178980*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178980*0 + 3*524*FLEN/8, x4, x1, x2)

inst_59661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00000000007ff; valaddr_reg:x3; val_offset:178983*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178983*0 + 3*525*FLEN/8, x4, x1, x2)

inst_59662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000000000fff; valaddr_reg:x3; val_offset:178986*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178986*0 + 3*526*FLEN/8, x4, x1, x2)

inst_59663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000000001fff; valaddr_reg:x3; val_offset:178989*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178989*0 + 3*527*FLEN/8, x4, x1, x2)

inst_59664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000000003fff; valaddr_reg:x3; val_offset:178992*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178992*0 + 3*528*FLEN/8, x4, x1, x2)

inst_59665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000000007fff; valaddr_reg:x3; val_offset:178995*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178995*0 + 3*529*FLEN/8, x4, x1, x2)

inst_59666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000000000ffff; valaddr_reg:x3; val_offset:178998*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 178998*0 + 3*530*FLEN/8, x4, x1, x2)

inst_59667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000000001ffff; valaddr_reg:x3; val_offset:179001*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179001*0 + 3*531*FLEN/8, x4, x1, x2)

inst_59668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000000003ffff; valaddr_reg:x3; val_offset:179004*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179004*0 + 3*532*FLEN/8, x4, x1, x2)

inst_59669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000000007ffff; valaddr_reg:x3; val_offset:179007*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179007*0 + 3*533*FLEN/8, x4, x1, x2)

inst_59670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00000000fffff; valaddr_reg:x3; val_offset:179010*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179010*0 + 3*534*FLEN/8, x4, x1, x2)

inst_59671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00000001fffff; valaddr_reg:x3; val_offset:179013*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179013*0 + 3*535*FLEN/8, x4, x1, x2)

inst_59672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00000003fffff; valaddr_reg:x3; val_offset:179016*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179016*0 + 3*536*FLEN/8, x4, x1, x2)

inst_59673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00000007fffff; valaddr_reg:x3; val_offset:179019*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179019*0 + 3*537*FLEN/8, x4, x1, x2)

inst_59674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000000ffffff; valaddr_reg:x3; val_offset:179022*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179022*0 + 3*538*FLEN/8, x4, x1, x2)

inst_59675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000001ffffff; valaddr_reg:x3; val_offset:179025*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179025*0 + 3*539*FLEN/8, x4, x1, x2)

inst_59676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000003ffffff; valaddr_reg:x3; val_offset:179028*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179028*0 + 3*540*FLEN/8, x4, x1, x2)

inst_59677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000007ffffff; valaddr_reg:x3; val_offset:179031*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179031*0 + 3*541*FLEN/8, x4, x1, x2)

inst_59678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000000fffffff; valaddr_reg:x3; val_offset:179034*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179034*0 + 3*542*FLEN/8, x4, x1, x2)

inst_59679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000001fffffff; valaddr_reg:x3; val_offset:179037*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179037*0 + 3*543*FLEN/8, x4, x1, x2)

inst_59680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000003fffffff; valaddr_reg:x3; val_offset:179040*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179040*0 + 3*544*FLEN/8, x4, x1, x2)

inst_59681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000007fffffff; valaddr_reg:x3; val_offset:179043*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179043*0 + 3*545*FLEN/8, x4, x1, x2)

inst_59682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00000ffffffff; valaddr_reg:x3; val_offset:179046*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179046*0 + 3*546*FLEN/8, x4, x1, x2)

inst_59683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00001ffffffff; valaddr_reg:x3; val_offset:179049*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179049*0 + 3*547*FLEN/8, x4, x1, x2)

inst_59684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00003ffffffff; valaddr_reg:x3; val_offset:179052*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179052*0 + 3*548*FLEN/8, x4, x1, x2)

inst_59685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00007ffffffff; valaddr_reg:x3; val_offset:179055*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179055*0 + 3*549*FLEN/8, x4, x1, x2)

inst_59686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0000fffffffff; valaddr_reg:x3; val_offset:179058*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179058*0 + 3*550*FLEN/8, x4, x1, x2)

inst_59687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0001fffffffff; valaddr_reg:x3; val_offset:179061*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179061*0 + 3*551*FLEN/8, x4, x1, x2)

inst_59688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0003fffffffff; valaddr_reg:x3; val_offset:179064*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179064*0 + 3*552*FLEN/8, x4, x1, x2)

inst_59689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0007fffffffff; valaddr_reg:x3; val_offset:179067*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179067*0 + 3*553*FLEN/8, x4, x1, x2)

inst_59690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f000ffffffffff; valaddr_reg:x3; val_offset:179070*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179070*0 + 3*554*FLEN/8, x4, x1, x2)

inst_59691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f001ffffffffff; valaddr_reg:x3; val_offset:179073*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179073*0 + 3*555*FLEN/8, x4, x1, x2)

inst_59692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f003ffffffffff; valaddr_reg:x3; val_offset:179076*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179076*0 + 3*556*FLEN/8, x4, x1, x2)

inst_59693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f007ffffffffff; valaddr_reg:x3; val_offset:179079*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179079*0 + 3*557*FLEN/8, x4, x1, x2)

inst_59694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f00fffffffffff; valaddr_reg:x3; val_offset:179082*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179082*0 + 3*558*FLEN/8, x4, x1, x2)

inst_59695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f01fffffffffff; valaddr_reg:x3; val_offset:179085*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179085*0 + 3*559*FLEN/8, x4, x1, x2)

inst_59696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f03fffffffffff; valaddr_reg:x3; val_offset:179088*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179088*0 + 3*560*FLEN/8, x4, x1, x2)

inst_59697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f07fffffffffff; valaddr_reg:x3; val_offset:179091*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179091*0 + 3*561*FLEN/8, x4, x1, x2)

inst_59698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f0ffffffffffff; valaddr_reg:x3; val_offset:179094*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179094*0 + 3*562*FLEN/8, x4, x1, x2)

inst_59699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f1ffffffffffff; valaddr_reg:x3; val_offset:179097*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179097*0 + 3*563*FLEN/8, x4, x1, x2)

inst_59700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f3ffffffffffff; valaddr_reg:x3; val_offset:179100*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179100*0 + 3*564*FLEN/8, x4, x1, x2)

inst_59701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f7ffffffffffff; valaddr_reg:x3; val_offset:179103*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179103*0 + 3*565*FLEN/8, x4, x1, x2)

inst_59702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1f8000000000000; valaddr_reg:x3; val_offset:179106*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179106*0 + 3*566*FLEN/8, x4, x1, x2)

inst_59703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fc000000000000; valaddr_reg:x3; val_offset:179109*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179109*0 + 3*567*FLEN/8, x4, x1, x2)

inst_59704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fe000000000000; valaddr_reg:x3; val_offset:179112*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179112*0 + 3*568*FLEN/8, x4, x1, x2)

inst_59705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ff000000000000; valaddr_reg:x3; val_offset:179115*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179115*0 + 3*569*FLEN/8, x4, x1, x2)

inst_59706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ff800000000000; valaddr_reg:x3; val_offset:179118*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179118*0 + 3*570*FLEN/8, x4, x1, x2)

inst_59707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffc00000000000; valaddr_reg:x3; val_offset:179121*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179121*0 + 3*571*FLEN/8, x4, x1, x2)

inst_59708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffe00000000000; valaddr_reg:x3; val_offset:179124*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179124*0 + 3*572*FLEN/8, x4, x1, x2)

inst_59709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fff00000000000; valaddr_reg:x3; val_offset:179127*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179127*0 + 3*573*FLEN/8, x4, x1, x2)

inst_59710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fff80000000000; valaddr_reg:x3; val_offset:179130*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179130*0 + 3*574*FLEN/8, x4, x1, x2)

inst_59711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffc0000000000; valaddr_reg:x3; val_offset:179133*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179133*0 + 3*575*FLEN/8, x4, x1, x2)

inst_59712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffe0000000000; valaddr_reg:x3; val_offset:179136*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179136*0 + 3*576*FLEN/8, x4, x1, x2)

inst_59713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffff0000000000; valaddr_reg:x3; val_offset:179139*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179139*0 + 3*577*FLEN/8, x4, x1, x2)

inst_59714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffff8000000000; valaddr_reg:x3; val_offset:179142*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179142*0 + 3*578*FLEN/8, x4, x1, x2)

inst_59715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffc000000000; valaddr_reg:x3; val_offset:179145*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179145*0 + 3*579*FLEN/8, x4, x1, x2)

inst_59716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffe000000000; valaddr_reg:x3; val_offset:179148*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179148*0 + 3*580*FLEN/8, x4, x1, x2)

inst_59717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffff000000000; valaddr_reg:x3; val_offset:179151*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179151*0 + 3*581*FLEN/8, x4, x1, x2)

inst_59718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffff800000000; valaddr_reg:x3; val_offset:179154*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179154*0 + 3*582*FLEN/8, x4, x1, x2)

inst_59719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffc00000000; valaddr_reg:x3; val_offset:179157*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179157*0 + 3*583*FLEN/8, x4, x1, x2)

inst_59720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffe00000000; valaddr_reg:x3; val_offset:179160*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179160*0 + 3*584*FLEN/8, x4, x1, x2)

inst_59721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffff00000000; valaddr_reg:x3; val_offset:179163*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179163*0 + 3*585*FLEN/8, x4, x1, x2)

inst_59722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffff80000000; valaddr_reg:x3; val_offset:179166*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179166*0 + 3*586*FLEN/8, x4, x1, x2)

inst_59723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffc0000000; valaddr_reg:x3; val_offset:179169*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179169*0 + 3*587*FLEN/8, x4, x1, x2)

inst_59724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffe0000000; valaddr_reg:x3; val_offset:179172*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179172*0 + 3*588*FLEN/8, x4, x1, x2)

inst_59725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffff0000000; valaddr_reg:x3; val_offset:179175*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179175*0 + 3*589*FLEN/8, x4, x1, x2)

inst_59726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffff8000000; valaddr_reg:x3; val_offset:179178*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179178*0 + 3*590*FLEN/8, x4, x1, x2)

inst_59727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffc000000; valaddr_reg:x3; val_offset:179181*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179181*0 + 3*591*FLEN/8, x4, x1, x2)

inst_59728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffe000000; valaddr_reg:x3; val_offset:179184*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179184*0 + 3*592*FLEN/8, x4, x1, x2)

inst_59729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffff000000; valaddr_reg:x3; val_offset:179187*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179187*0 + 3*593*FLEN/8, x4, x1, x2)

inst_59730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffff800000; valaddr_reg:x3; val_offset:179190*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179190*0 + 3*594*FLEN/8, x4, x1, x2)

inst_59731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffc00000; valaddr_reg:x3; val_offset:179193*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179193*0 + 3*595*FLEN/8, x4, x1, x2)

inst_59732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffe00000; valaddr_reg:x3; val_offset:179196*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179196*0 + 3*596*FLEN/8, x4, x1, x2)

inst_59733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffff00000; valaddr_reg:x3; val_offset:179199*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179199*0 + 3*597*FLEN/8, x4, x1, x2)

inst_59734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffff80000; valaddr_reg:x3; val_offset:179202*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179202*0 + 3*598*FLEN/8, x4, x1, x2)

inst_59735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffc0000; valaddr_reg:x3; val_offset:179205*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179205*0 + 3*599*FLEN/8, x4, x1, x2)

inst_59736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffe0000; valaddr_reg:x3; val_offset:179208*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179208*0 + 3*600*FLEN/8, x4, x1, x2)

inst_59737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffff0000; valaddr_reg:x3; val_offset:179211*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179211*0 + 3*601*FLEN/8, x4, x1, x2)

inst_59738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffff8000; valaddr_reg:x3; val_offset:179214*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179214*0 + 3*602*FLEN/8, x4, x1, x2)

inst_59739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffffc000; valaddr_reg:x3; val_offset:179217*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179217*0 + 3*603*FLEN/8, x4, x1, x2)

inst_59740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffffe000; valaddr_reg:x3; val_offset:179220*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179220*0 + 3*604*FLEN/8, x4, x1, x2)

inst_59741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffff000; valaddr_reg:x3; val_offset:179223*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179223*0 + 3*605*FLEN/8, x4, x1, x2)

inst_59742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffff800; valaddr_reg:x3; val_offset:179226*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179226*0 + 3*606*FLEN/8, x4, x1, x2)

inst_59743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffffc00; valaddr_reg:x3; val_offset:179229*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179229*0 + 3*607*FLEN/8, x4, x1, x2)

inst_59744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffffe00; valaddr_reg:x3; val_offset:179232*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179232*0 + 3*608*FLEN/8, x4, x1, x2)

inst_59745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffffff00; valaddr_reg:x3; val_offset:179235*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179235*0 + 3*609*FLEN/8, x4, x1, x2)

inst_59746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffffff80; valaddr_reg:x3; val_offset:179238*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179238*0 + 3*610*FLEN/8, x4, x1, x2)

inst_59747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffffffc0; valaddr_reg:x3; val_offset:179241*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179241*0 + 3*611*FLEN/8, x4, x1, x2)

inst_59748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffffffe0; valaddr_reg:x3; val_offset:179244*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179244*0 + 3*612*FLEN/8, x4, x1, x2)

inst_59749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffffff0; valaddr_reg:x3; val_offset:179247*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179247*0 + 3*613*FLEN/8, x4, x1, x2)

inst_59750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffffff8; valaddr_reg:x3; val_offset:179250*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179250*0 + 3*614*FLEN/8, x4, x1, x2)

inst_59751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffffffc; valaddr_reg:x3; val_offset:179253*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179253*0 + 3*615*FLEN/8, x4, x1, x2)

inst_59752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1fffffffffffffe; valaddr_reg:x3; val_offset:179256*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179256*0 + 3*616*FLEN/8, x4, x1, x2)

inst_59753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2760b41c74abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa2760b41c74abc; op2val:0x0;
op3val:0x1ffffffffffffff; valaddr_reg:x3; val_offset:179259*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179259*0 + 3*617*FLEN/8, x4, x1, x2)

inst_59754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000000000000; valaddr_reg:x3; val_offset:179262*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179262*0 + 3*618*FLEN/8, x4, x1, x2)

inst_59755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000000000001; valaddr_reg:x3; val_offset:179265*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179265*0 + 3*619*FLEN/8, x4, x1, x2)

inst_59756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000000000003; valaddr_reg:x3; val_offset:179268*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179268*0 + 3*620*FLEN/8, x4, x1, x2)

inst_59757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000000000007; valaddr_reg:x3; val_offset:179271*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179271*0 + 3*621*FLEN/8, x4, x1, x2)

inst_59758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000000000000f; valaddr_reg:x3; val_offset:179274*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179274*0 + 3*622*FLEN/8, x4, x1, x2)

inst_59759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000000000001f; valaddr_reg:x3; val_offset:179277*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179277*0 + 3*623*FLEN/8, x4, x1, x2)

inst_59760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000000000003f; valaddr_reg:x3; val_offset:179280*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179280*0 + 3*624*FLEN/8, x4, x1, x2)

inst_59761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000000000007f; valaddr_reg:x3; val_offset:179283*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179283*0 + 3*625*FLEN/8, x4, x1, x2)

inst_59762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700000000000ff; valaddr_reg:x3; val_offset:179286*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179286*0 + 3*626*FLEN/8, x4, x1, x2)

inst_59763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700000000001ff; valaddr_reg:x3; val_offset:179289*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179289*0 + 3*627*FLEN/8, x4, x1, x2)

inst_59764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700000000003ff; valaddr_reg:x3; val_offset:179292*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179292*0 + 3*628*FLEN/8, x4, x1, x2)

inst_59765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700000000007ff; valaddr_reg:x3; val_offset:179295*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179295*0 + 3*629*FLEN/8, x4, x1, x2)

inst_59766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000000000fff; valaddr_reg:x3; val_offset:179298*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179298*0 + 3*630*FLEN/8, x4, x1, x2)

inst_59767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000000001fff; valaddr_reg:x3; val_offset:179301*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179301*0 + 3*631*FLEN/8, x4, x1, x2)

inst_59768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000000003fff; valaddr_reg:x3; val_offset:179304*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179304*0 + 3*632*FLEN/8, x4, x1, x2)

inst_59769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000000007fff; valaddr_reg:x3; val_offset:179307*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179307*0 + 3*633*FLEN/8, x4, x1, x2)

inst_59770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000000000ffff; valaddr_reg:x3; val_offset:179310*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179310*0 + 3*634*FLEN/8, x4, x1, x2)

inst_59771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000000001ffff; valaddr_reg:x3; val_offset:179313*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179313*0 + 3*635*FLEN/8, x4, x1, x2)

inst_59772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000000003ffff; valaddr_reg:x3; val_offset:179316*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179316*0 + 3*636*FLEN/8, x4, x1, x2)

inst_59773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000000007ffff; valaddr_reg:x3; val_offset:179319*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179319*0 + 3*637*FLEN/8, x4, x1, x2)

inst_59774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700000000fffff; valaddr_reg:x3; val_offset:179322*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179322*0 + 3*638*FLEN/8, x4, x1, x2)

inst_59775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700000001fffff; valaddr_reg:x3; val_offset:179325*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179325*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_59776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700000003fffff; valaddr_reg:x3; val_offset:179328*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179328*0 + 3*640*FLEN/8, x4, x1, x2)

inst_59777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700000007fffff; valaddr_reg:x3; val_offset:179331*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179331*0 + 3*641*FLEN/8, x4, x1, x2)

inst_59778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000000ffffff; valaddr_reg:x3; val_offset:179334*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179334*0 + 3*642*FLEN/8, x4, x1, x2)

inst_59779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000001ffffff; valaddr_reg:x3; val_offset:179337*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179337*0 + 3*643*FLEN/8, x4, x1, x2)

inst_59780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000003ffffff; valaddr_reg:x3; val_offset:179340*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179340*0 + 3*644*FLEN/8, x4, x1, x2)

inst_59781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000007ffffff; valaddr_reg:x3; val_offset:179343*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179343*0 + 3*645*FLEN/8, x4, x1, x2)

inst_59782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000000fffffff; valaddr_reg:x3; val_offset:179346*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179346*0 + 3*646*FLEN/8, x4, x1, x2)

inst_59783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000001fffffff; valaddr_reg:x3; val_offset:179349*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179349*0 + 3*647*FLEN/8, x4, x1, x2)

inst_59784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000003fffffff; valaddr_reg:x3; val_offset:179352*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179352*0 + 3*648*FLEN/8, x4, x1, x2)

inst_59785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000007fffffff; valaddr_reg:x3; val_offset:179355*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179355*0 + 3*649*FLEN/8, x4, x1, x2)

inst_59786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700000ffffffff; valaddr_reg:x3; val_offset:179358*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179358*0 + 3*650*FLEN/8, x4, x1, x2)

inst_59787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700001ffffffff; valaddr_reg:x3; val_offset:179361*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179361*0 + 3*651*FLEN/8, x4, x1, x2)

inst_59788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700003ffffffff; valaddr_reg:x3; val_offset:179364*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179364*0 + 3*652*FLEN/8, x4, x1, x2)

inst_59789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700007ffffffff; valaddr_reg:x3; val_offset:179367*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179367*0 + 3*653*FLEN/8, x4, x1, x2)

inst_59790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70000fffffffff; valaddr_reg:x3; val_offset:179370*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179370*0 + 3*654*FLEN/8, x4, x1, x2)

inst_59791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70001fffffffff; valaddr_reg:x3; val_offset:179373*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179373*0 + 3*655*FLEN/8, x4, x1, x2)

inst_59792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70003fffffffff; valaddr_reg:x3; val_offset:179376*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179376*0 + 3*656*FLEN/8, x4, x1, x2)

inst_59793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70007fffffffff; valaddr_reg:x3; val_offset:179379*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179379*0 + 3*657*FLEN/8, x4, x1, x2)

inst_59794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7000ffffffffff; valaddr_reg:x3; val_offset:179382*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179382*0 + 3*658*FLEN/8, x4, x1, x2)

inst_59795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7001ffffffffff; valaddr_reg:x3; val_offset:179385*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179385*0 + 3*659*FLEN/8, x4, x1, x2)

inst_59796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7003ffffffffff; valaddr_reg:x3; val_offset:179388*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179388*0 + 3*660*FLEN/8, x4, x1, x2)

inst_59797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7007ffffffffff; valaddr_reg:x3; val_offset:179391*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179391*0 + 3*661*FLEN/8, x4, x1, x2)

inst_59798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba700fffffffffff; valaddr_reg:x3; val_offset:179394*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179394*0 + 3*662*FLEN/8, x4, x1, x2)

inst_59799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba701fffffffffff; valaddr_reg:x3; val_offset:179397*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179397*0 + 3*663*FLEN/8, x4, x1, x2)

inst_59800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba703fffffffffff; valaddr_reg:x3; val_offset:179400*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179400*0 + 3*664*FLEN/8, x4, x1, x2)

inst_59801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba707fffffffffff; valaddr_reg:x3; val_offset:179403*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179403*0 + 3*665*FLEN/8, x4, x1, x2)

inst_59802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba70ffffffffffff; valaddr_reg:x3; val_offset:179406*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179406*0 + 3*666*FLEN/8, x4, x1, x2)

inst_59803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba71ffffffffffff; valaddr_reg:x3; val_offset:179409*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179409*0 + 3*667*FLEN/8, x4, x1, x2)

inst_59804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba73ffffffffffff; valaddr_reg:x3; val_offset:179412*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179412*0 + 3*668*FLEN/8, x4, x1, x2)

inst_59805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba77ffffffffffff; valaddr_reg:x3; val_offset:179415*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179415*0 + 3*669*FLEN/8, x4, x1, x2)

inst_59806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba78000000000000; valaddr_reg:x3; val_offset:179418*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179418*0 + 3*670*FLEN/8, x4, x1, x2)

inst_59807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7c000000000000; valaddr_reg:x3; val_offset:179421*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179421*0 + 3*671*FLEN/8, x4, x1, x2)

inst_59808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7e000000000000; valaddr_reg:x3; val_offset:179424*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179424*0 + 3*672*FLEN/8, x4, x1, x2)

inst_59809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7f000000000000; valaddr_reg:x3; val_offset:179427*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179427*0 + 3*673*FLEN/8, x4, x1, x2)

inst_59810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7f800000000000; valaddr_reg:x3; val_offset:179430*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179430*0 + 3*674*FLEN/8, x4, x1, x2)

inst_59811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fc00000000000; valaddr_reg:x3; val_offset:179433*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179433*0 + 3*675*FLEN/8, x4, x1, x2)

inst_59812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fe00000000000; valaddr_reg:x3; val_offset:179436*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179436*0 + 3*676*FLEN/8, x4, x1, x2)

inst_59813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ff00000000000; valaddr_reg:x3; val_offset:179439*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179439*0 + 3*677*FLEN/8, x4, x1, x2)

inst_59814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ff80000000000; valaddr_reg:x3; val_offset:179442*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179442*0 + 3*678*FLEN/8, x4, x1, x2)

inst_59815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffc0000000000; valaddr_reg:x3; val_offset:179445*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179445*0 + 3*679*FLEN/8, x4, x1, x2)

inst_59816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffe0000000000; valaddr_reg:x3; val_offset:179448*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179448*0 + 3*680*FLEN/8, x4, x1, x2)

inst_59817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fff0000000000; valaddr_reg:x3; val_offset:179451*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179451*0 + 3*681*FLEN/8, x4, x1, x2)

inst_59818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fff8000000000; valaddr_reg:x3; val_offset:179454*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179454*0 + 3*682*FLEN/8, x4, x1, x2)

inst_59819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffc000000000; valaddr_reg:x3; val_offset:179457*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179457*0 + 3*683*FLEN/8, x4, x1, x2)

inst_59820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffe000000000; valaddr_reg:x3; val_offset:179460*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179460*0 + 3*684*FLEN/8, x4, x1, x2)

inst_59821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffff000000000; valaddr_reg:x3; val_offset:179463*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179463*0 + 3*685*FLEN/8, x4, x1, x2)

inst_59822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffff800000000; valaddr_reg:x3; val_offset:179466*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179466*0 + 3*686*FLEN/8, x4, x1, x2)

inst_59823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffc00000000; valaddr_reg:x3; val_offset:179469*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179469*0 + 3*687*FLEN/8, x4, x1, x2)

inst_59824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffe00000000; valaddr_reg:x3; val_offset:179472*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179472*0 + 3*688*FLEN/8, x4, x1, x2)

inst_59825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffff00000000; valaddr_reg:x3; val_offset:179475*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179475*0 + 3*689*FLEN/8, x4, x1, x2)

inst_59826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffff80000000; valaddr_reg:x3; val_offset:179478*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179478*0 + 3*690*FLEN/8, x4, x1, x2)

inst_59827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffc0000000; valaddr_reg:x3; val_offset:179481*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179481*0 + 3*691*FLEN/8, x4, x1, x2)

inst_59828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffe0000000; valaddr_reg:x3; val_offset:179484*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179484*0 + 3*692*FLEN/8, x4, x1, x2)

inst_59829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffff0000000; valaddr_reg:x3; val_offset:179487*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179487*0 + 3*693*FLEN/8, x4, x1, x2)

inst_59830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffff8000000; valaddr_reg:x3; val_offset:179490*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179490*0 + 3*694*FLEN/8, x4, x1, x2)

inst_59831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffc000000; valaddr_reg:x3; val_offset:179493*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179493*0 + 3*695*FLEN/8, x4, x1, x2)

inst_59832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffe000000; valaddr_reg:x3; val_offset:179496*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179496*0 + 3*696*FLEN/8, x4, x1, x2)

inst_59833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffff000000; valaddr_reg:x3; val_offset:179499*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179499*0 + 3*697*FLEN/8, x4, x1, x2)

inst_59834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffff800000; valaddr_reg:x3; val_offset:179502*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179502*0 + 3*698*FLEN/8, x4, x1, x2)

inst_59835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffc00000; valaddr_reg:x3; val_offset:179505*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179505*0 + 3*699*FLEN/8, x4, x1, x2)

inst_59836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffe00000; valaddr_reg:x3; val_offset:179508*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179508*0 + 3*700*FLEN/8, x4, x1, x2)

inst_59837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffff00000; valaddr_reg:x3; val_offset:179511*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179511*0 + 3*701*FLEN/8, x4, x1, x2)

inst_59838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffff80000; valaddr_reg:x3; val_offset:179514*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179514*0 + 3*702*FLEN/8, x4, x1, x2)

inst_59839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffc0000; valaddr_reg:x3; val_offset:179517*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179517*0 + 3*703*FLEN/8, x4, x1, x2)

inst_59840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffe0000; valaddr_reg:x3; val_offset:179520*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179520*0 + 3*704*FLEN/8, x4, x1, x2)

inst_59841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffff0000; valaddr_reg:x3; val_offset:179523*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179523*0 + 3*705*FLEN/8, x4, x1, x2)

inst_59842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffff8000; valaddr_reg:x3; val_offset:179526*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179526*0 + 3*706*FLEN/8, x4, x1, x2)

inst_59843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffffc000; valaddr_reg:x3; val_offset:179529*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179529*0 + 3*707*FLEN/8, x4, x1, x2)

inst_59844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffffe000; valaddr_reg:x3; val_offset:179532*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179532*0 + 3*708*FLEN/8, x4, x1, x2)

inst_59845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffff000; valaddr_reg:x3; val_offset:179535*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179535*0 + 3*709*FLEN/8, x4, x1, x2)

inst_59846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffff800; valaddr_reg:x3; val_offset:179538*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179538*0 + 3*710*FLEN/8, x4, x1, x2)

inst_59847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffffc00; valaddr_reg:x3; val_offset:179541*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179541*0 + 3*711*FLEN/8, x4, x1, x2)

inst_59848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffffe00; valaddr_reg:x3; val_offset:179544*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179544*0 + 3*712*FLEN/8, x4, x1, x2)

inst_59849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffffff00; valaddr_reg:x3; val_offset:179547*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179547*0 + 3*713*FLEN/8, x4, x1, x2)

inst_59850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffffff80; valaddr_reg:x3; val_offset:179550*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179550*0 + 3*714*FLEN/8, x4, x1, x2)

inst_59851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffffffc0; valaddr_reg:x3; val_offset:179553*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179553*0 + 3*715*FLEN/8, x4, x1, x2)

inst_59852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffffffe0; valaddr_reg:x3; val_offset:179556*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179556*0 + 3*716*FLEN/8, x4, x1, x2)

inst_59853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffffff0; valaddr_reg:x3; val_offset:179559*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179559*0 + 3*717*FLEN/8, x4, x1, x2)

inst_59854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffffff8; valaddr_reg:x3; val_offset:179562*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179562*0 + 3*718*FLEN/8, x4, x1, x2)

inst_59855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffffffc; valaddr_reg:x3; val_offset:179565*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179565*0 + 3*719*FLEN/8, x4, x1, x2)

inst_59856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7ffffffffffffe; valaddr_reg:x3; val_offset:179568*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179568*0 + 3*720*FLEN/8, x4, x1, x2)

inst_59857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3a7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xba7fffffffffffff; valaddr_reg:x3; val_offset:179571*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179571*0 + 3*721*FLEN/8, x4, x1, x2)

inst_59858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:179574*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179574*0 + 3*722*FLEN/8, x4, x1, x2)

inst_59859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:179577*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179577*0 + 3*723*FLEN/8, x4, x1, x2)

inst_59860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:179580*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179580*0 + 3*724*FLEN/8, x4, x1, x2)

inst_59861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:179583*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179583*0 + 3*725*FLEN/8, x4, x1, x2)

inst_59862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:179586*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179586*0 + 3*726*FLEN/8, x4, x1, x2)

inst_59863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:179589*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179589*0 + 3*727*FLEN/8, x4, x1, x2)

inst_59864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:179592*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179592*0 + 3*728*FLEN/8, x4, x1, x2)

inst_59865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:179595*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179595*0 + 3*729*FLEN/8, x4, x1, x2)

inst_59866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:179598*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179598*0 + 3*730*FLEN/8, x4, x1, x2)

inst_59867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:179601*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179601*0 + 3*731*FLEN/8, x4, x1, x2)

inst_59868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:179604*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179604*0 + 3*732*FLEN/8, x4, x1, x2)

inst_59869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:179607*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179607*0 + 3*733*FLEN/8, x4, x1, x2)

inst_59870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:179610*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179610*0 + 3*734*FLEN/8, x4, x1, x2)

inst_59871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:179613*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179613*0 + 3*735*FLEN/8, x4, x1, x2)

inst_59872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:179616*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179616*0 + 3*736*FLEN/8, x4, x1, x2)

inst_59873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:179619*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179619*0 + 3*737*FLEN/8, x4, x1, x2)

inst_59874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:179622*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179622*0 + 3*738*FLEN/8, x4, x1, x2)

inst_59875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:179625*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179625*0 + 3*739*FLEN/8, x4, x1, x2)

inst_59876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:179628*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179628*0 + 3*740*FLEN/8, x4, x1, x2)

inst_59877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:179631*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179631*0 + 3*741*FLEN/8, x4, x1, x2)

inst_59878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:179634*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179634*0 + 3*742*FLEN/8, x4, x1, x2)

inst_59879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x287cb45329138 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xba15518891e19 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa287cb45329138; op2val:0x9fcba15518891e19;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:179637*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179637*0 + 3*743*FLEN/8, x4, x1, x2)

inst_59880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:179640*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179640*0 + 3*744*FLEN/8, x4, x1, x2)

inst_59881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:179643*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179643*0 + 3*745*FLEN/8, x4, x1, x2)

inst_59882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:179646*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179646*0 + 3*746*FLEN/8, x4, x1, x2)

inst_59883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:179649*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179649*0 + 3*747*FLEN/8, x4, x1, x2)

inst_59884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:179652*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179652*0 + 3*748*FLEN/8, x4, x1, x2)

inst_59885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:179655*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179655*0 + 3*749*FLEN/8, x4, x1, x2)

inst_59886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:179658*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179658*0 + 3*750*FLEN/8, x4, x1, x2)

inst_59887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:179661*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179661*0 + 3*751*FLEN/8, x4, x1, x2)

inst_59888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:179664*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179664*0 + 3*752*FLEN/8, x4, x1, x2)

inst_59889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:179667*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179667*0 + 3*753*FLEN/8, x4, x1, x2)

inst_59890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:179670*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179670*0 + 3*754*FLEN/8, x4, x1, x2)

inst_59891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:179673*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179673*0 + 3*755*FLEN/8, x4, x1, x2)

inst_59892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:179676*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179676*0 + 3*756*FLEN/8, x4, x1, x2)

inst_59893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:179679*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179679*0 + 3*757*FLEN/8, x4, x1, x2)

inst_59894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:179682*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179682*0 + 3*758*FLEN/8, x4, x1, x2)

inst_59895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:179685*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179685*0 + 3*759*FLEN/8, x4, x1, x2)

inst_59896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:179688*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179688*0 + 3*760*FLEN/8, x4, x1, x2)

inst_59897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:179691*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179691*0 + 3*761*FLEN/8, x4, x1, x2)

inst_59898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:179694*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179694*0 + 3*762*FLEN/8, x4, x1, x2)

inst_59899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:179697*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179697*0 + 3*763*FLEN/8, x4, x1, x2)

inst_59900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:179700*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179700*0 + 3*764*FLEN/8, x4, x1, x2)

inst_59901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:179703*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179703*0 + 3*765*FLEN/8, x4, x1, x2)

inst_59902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x82d0000000000000; valaddr_reg:x3; val_offset:179706*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179706*0 + 3*766*FLEN/8, x4, x1, x2)

inst_59903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x28f1335426ef4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa28f1335426ef4; op2val:0x8000;
op3val:0x82d0000000000001; valaddr_reg:x3; val_offset:179709*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179709*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230724165631,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230724169727,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230724177919,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230724194303,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230724227071,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230724292607,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230724423679,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230724685823,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230725210111,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230726258687,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230728355839,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230732550143,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230740938751,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230757715967,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230791270399,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230858379263,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067230992596991,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067231261032447,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067231797903359,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067232871645183,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067235019128831,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067239314096127,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067247904030719,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067265083899903,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067299443638271,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067368163115007,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067505602068479,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463067780479975423,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463068330235789311,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463069429747417087,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463071628770672639,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463076026817183743,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463084822910205951,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463102415096250367,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463137599468339199,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463207968212516863,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463348705700872191,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4463630180677582847,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4464193130631004159,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4465319030537846783,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4465319030537846784,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4466444930444689408,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467007880398110720,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467289355374821376,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467430092863176704,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467500461607354368,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467535645979443200,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467553238165487616,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467562034258509824,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467566432305020928,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467568631328276480,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467569730839904256,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570280595718144,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570555473625088,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570692912578560,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570761632055296,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570795991793664,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570813171662848,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570821761597440,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570826056564736,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570828204048384,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570829277790208,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570829814661120,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830083096576,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830217314304,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830284423168,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830317977600,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830334754816,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830343143424,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830347337728,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830349434880,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830350483456,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351007744,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351269888,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351400960,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351466496,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351499264,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351515648,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351523840,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351527936,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351529984,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351531008,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351531520,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351531776,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351531904,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351531968,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351532000,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351532016,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351532024,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351532028,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351532030,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4467570830351532031,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891145998021902720,64,FLEN)
NAN_BOXED(2322738869632879499,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747776,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747777,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747779,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747783,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747791,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747807,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747839,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747903,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748031,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748287,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748799,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132749823,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132751871,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132755967,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132764159,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132780543,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132813311,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132878847,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133009919,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133272063,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133796351,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579134844927,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579136942079,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579141136383,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579149524991,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579166302207,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579199856639,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579266965503,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579401183231,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579669618687,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201580206489599,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201581280231423,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201583427715071,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201587722682367,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201596312616959,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201613492486143,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201647852224511,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201716571701247,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201854010654719,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202128888561663,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202678644375551,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252203778156003327,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252205977179258879,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252210375225769983,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252219171318792191,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252236763504836607,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252271947876925439,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252342316621103103,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252483054109458431,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252764529086169087,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(253327479039590399,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433023,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433024,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255579278853275648,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256142228806696960,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256423703783407616,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256564441271762944,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256634810015940608,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256669994388029440,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256687586574073856,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256696382667096064,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256700780713607168,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256702979736862720,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704079248490496,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704629004304384,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704903882211328,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705041321164800,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705110040641536,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705144400379904,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705161580249088,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705170170183680,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705174465150976,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705176612634624,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705177686376448,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178223247360,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178491682816,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178625900544,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178693009408,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178726563840,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178743341056,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178751729664,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178755923968,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178758021120,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759069696,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759593984,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759856128,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759987200,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760052736,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760085504,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760101888,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760110080,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760114176,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760116224,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117248,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117760,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118016,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118144,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118208,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118240,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118256,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118264,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118268,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118270,64,FLEN)
NAN_BOXED(6891155548331754525,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118271,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931328,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931329,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931331,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931335,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931343,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931359,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931391,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931455,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931583,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931839,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976932351,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976933375,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976935423,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976939519,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976947711,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976964095,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976996863,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977062399,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977193471,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977455615,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977979903,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783979028479,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783981125631,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783985319935,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783993708543,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784010485759,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784044040191,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784111149055,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784245366783,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784513802239,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654785050673151,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654786124414975,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654788271898623,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654792566865919,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654801156800511,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654818336669695,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654852696408063,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654921415884799,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655058854838271,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655333732745215,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655883488559103,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193656983000186879,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193659182023442431,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193663580069953535,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193672376162975743,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193689968349020159,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193725152721108991,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193795521465286655,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193936258953641983,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194217733930352639,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194780683883773951,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616575,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616576,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197032483697459200,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197595433650880512,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197876908627591168,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198017646115946496,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198088014860124160,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198123199232212992,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198140791418257408,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198149587511279616,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198153985557790720,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198156184581046272,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157284092674048,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157833848487936,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158108726394880,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158246165348352,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158314884825088,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158349244563456,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158366424432640,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158375014367232,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158379309334528,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158381456818176,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158382530560000,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383067430912,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383335866368,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383470084096,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383537192960,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383570747392,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383587524608,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383595913216,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383600107520,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383602204672,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603253248,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603777536,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604039680,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604170752,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604236288,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604269056,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604285440,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604293632,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604297728,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604299776,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604300800,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301312,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301568,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301696,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301760,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301792,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301808,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301816,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301820,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301822,64,FLEN)
NAN_BOXED(6891174167402992915,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301823,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338304,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338305,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338307,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338311,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338319,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338335,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338367,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338431,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338559,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690338815,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690339327,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690340351,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690342399,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690346495,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690354687,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690371071,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690403839,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690469375,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690600447,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055690862591,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055691386879,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055692435455,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055694532607,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055698726911,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055707115519,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055723892735,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055757447167,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055824556031,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326055958773759,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326056227209215,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326056764080127,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326057837821951,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326059985305599,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326064280272895,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326072870207487,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326090050076671,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326124409815039,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326193129291775,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326330568245247,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161326605446152191,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161327155201966079,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161328254713593855,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161330453736849407,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161334851783360511,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161343647876382719,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161361240062427135,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161396424434515967,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161466793178693631,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161607530667048959,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4161889005643759615,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4162451955597180927,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4163577855504023551,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4163577855504023552,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4164703755410866176,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165266705364287488,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165548180340998144,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165688917829353472,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165759286573531136,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165794470945619968,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165812063131664384,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165820859224686592,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165825257271197696,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165827456294453248,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165828555806081024,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829105561894912,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829380439801856,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829517878755328,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829586598232064,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829620957970432,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829638137839616,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829646727774208,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829651022741504,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829653170225152,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829654243966976,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829654780837888,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655049273344,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655183491072,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655250599936,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655284154368,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655300931584,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655309320192,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655313514496,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655315611648,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655316660224,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317184512,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317446656,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317577728,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317643264,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317676032,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317692416,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317700608,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317704704,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317706752,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317707776,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708288,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708544,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708672,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708736,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708768,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708784,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708792,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708796,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708798,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4165829655317708799,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891181486217362955,64,FLEN)
NAN_BOXED(2322684799924297008,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485376,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485377,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485379,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485383,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485391,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485407,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485439,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485503,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485631,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485887,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448486399,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448487423,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448489471,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448493567,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448501759,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448518143,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448550911,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448616447,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448747519,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449009663,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449533951,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588450582527,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588452679679,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588456873983,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588465262591,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588482039807,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588515594239,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588582703103,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588716920831,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588985356287,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611589522227199,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611590595969023,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611592743452671,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611597038419967,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611605628354559,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611622808223743,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611657167962111,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611725887438847,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611863326392319,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612138204299263,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612687960113151,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139613787471740927,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139615986494996479,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139620384541507583,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139629180634529791,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139646772820574207,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139681957192663039,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139752325936840703,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139893063425196031,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140174538401906687,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327999,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170623,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170624,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(142989288169013248,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143552238122434560,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143833713099145216,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143974450587500544,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144044819331678208,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144080003703767040,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144097595889811456,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144106391982833664,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144110790029344768,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144112989052600320,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114088564228096,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114638320041984,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114913197948928,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115050636902400,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115119356379136,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115153716117504,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115170895986688,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115179485921280,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115183780888576,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115185928372224,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187002114048,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187538984960,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187807420416,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187941638144,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188008747008,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188042301440,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188059078656,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188067467264,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188071661568,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188073758720,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188074807296,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075331584,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075593728,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075724800,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075790336,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075823104,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075839488,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075847680,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075851776,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075853824,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075854848,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855360,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855616,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855744,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855808,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855840,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855856,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855864,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855868,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855870,64,FLEN)
NAN_BOXED(6891200170550577852,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855871,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446189568,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446189569,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446189571,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446189575,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446189583,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446189599,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446189631,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446189695,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446189823,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446190079,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446190591,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446191615,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446193663,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446197759,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446205951,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446222335,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446255103,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446320639,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446451711,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688446713855,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688447238143,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688448286719,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688450383871,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688454578175,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688462966783,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688479743999,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688513298431,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688580407295,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688714625023,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237688983060479,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237689519931391,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237690593673215,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237692741156863,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237697036124159,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237705626058751,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237722805927935,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237757165666303,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237825885143039,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434237963324096511,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434238238202003455,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434238787957817343,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434239887469445119,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434242086492700671,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434246484539211775,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434255280632233983,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434272872818278399,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434308057190367231,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434378425934544895,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434519163422900223,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13434800638399610879,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13435363588353032191,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13436489488259874815,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13436489488259874816,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13437615388166717440,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438178338120138752,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438459813096849408,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438600550585204736,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438670919329382400,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438706103701471232,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438723695887515648,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438732491980537856,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438736890027048960,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438739089050304512,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438740188561932288,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438740738317746176,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741013195653120,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741150634606592,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741219354083328,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741253713821696,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741270893690880,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741279483625472,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741283778592768,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741285926076416,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741286999818240,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741287536689152,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741287805124608,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741287939342336,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288006451200,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288040005632,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288056782848,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288065171456,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288069365760,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288071462912,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288072511488,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073035776,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073297920,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073428992,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073494528,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073527296,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073543680,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073551872,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073555968,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073558016,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073559040,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073559552,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073559808,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073559936,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073560000,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073560032,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073560048,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073560056,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073560060,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073560062,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13438741288073560063,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891219686939332920,64,FLEN)
NAN_BOXED(11514474259158736409,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448128,64,FLEN)
NAN_BOXED(6891227692490977012,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448129,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
