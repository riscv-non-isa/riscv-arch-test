
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_45312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0000000003fff; valaddr_reg:x3; val_offset:135936*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135936*0 + 3*0*FLEN/8, x4, x1, x2)

inst_45313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0000000007fff; valaddr_reg:x3; val_offset:135939*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135939*0 + 3*1*FLEN/8, x4, x1, x2)

inst_45314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c000000000ffff; valaddr_reg:x3; val_offset:135942*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135942*0 + 3*2*FLEN/8, x4, x1, x2)

inst_45315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c000000001ffff; valaddr_reg:x3; val_offset:135945*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135945*0 + 3*3*FLEN/8, x4, x1, x2)

inst_45316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c000000003ffff; valaddr_reg:x3; val_offset:135948*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135948*0 + 3*4*FLEN/8, x4, x1, x2)

inst_45317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c000000007ffff; valaddr_reg:x3; val_offset:135951*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135951*0 + 3*5*FLEN/8, x4, x1, x2)

inst_45318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c00000000fffff; valaddr_reg:x3; val_offset:135954*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135954*0 + 3*6*FLEN/8, x4, x1, x2)

inst_45319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c00000001fffff; valaddr_reg:x3; val_offset:135957*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135957*0 + 3*7*FLEN/8, x4, x1, x2)

inst_45320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c00000003fffff; valaddr_reg:x3; val_offset:135960*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135960*0 + 3*8*FLEN/8, x4, x1, x2)

inst_45321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c00000007fffff; valaddr_reg:x3; val_offset:135963*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135963*0 + 3*9*FLEN/8, x4, x1, x2)

inst_45322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0000000ffffff; valaddr_reg:x3; val_offset:135966*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135966*0 + 3*10*FLEN/8, x4, x1, x2)

inst_45323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0000001ffffff; valaddr_reg:x3; val_offset:135969*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135969*0 + 3*11*FLEN/8, x4, x1, x2)

inst_45324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0000003ffffff; valaddr_reg:x3; val_offset:135972*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135972*0 + 3*12*FLEN/8, x4, x1, x2)

inst_45325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0000007ffffff; valaddr_reg:x3; val_offset:135975*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135975*0 + 3*13*FLEN/8, x4, x1, x2)

inst_45326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c000000fffffff; valaddr_reg:x3; val_offset:135978*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135978*0 + 3*14*FLEN/8, x4, x1, x2)

inst_45327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c000001fffffff; valaddr_reg:x3; val_offset:135981*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135981*0 + 3*15*FLEN/8, x4, x1, x2)

inst_45328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c000003fffffff; valaddr_reg:x3; val_offset:135984*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135984*0 + 3*16*FLEN/8, x4, x1, x2)

inst_45329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c000007fffffff; valaddr_reg:x3; val_offset:135987*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135987*0 + 3*17*FLEN/8, x4, x1, x2)

inst_45330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c00000ffffffff; valaddr_reg:x3; val_offset:135990*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135990*0 + 3*18*FLEN/8, x4, x1, x2)

inst_45331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c00001ffffffff; valaddr_reg:x3; val_offset:135993*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135993*0 + 3*19*FLEN/8, x4, x1, x2)

inst_45332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c00003ffffffff; valaddr_reg:x3; val_offset:135996*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135996*0 + 3*20*FLEN/8, x4, x1, x2)

inst_45333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c00007ffffffff; valaddr_reg:x3; val_offset:135999*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135999*0 + 3*21*FLEN/8, x4, x1, x2)

inst_45334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0000fffffffff; valaddr_reg:x3; val_offset:136002*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136002*0 + 3*22*FLEN/8, x4, x1, x2)

inst_45335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0001fffffffff; valaddr_reg:x3; val_offset:136005*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136005*0 + 3*23*FLEN/8, x4, x1, x2)

inst_45336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0003fffffffff; valaddr_reg:x3; val_offset:136008*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136008*0 + 3*24*FLEN/8, x4, x1, x2)

inst_45337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0007fffffffff; valaddr_reg:x3; val_offset:136011*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136011*0 + 3*25*FLEN/8, x4, x1, x2)

inst_45338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c000ffffffffff; valaddr_reg:x3; val_offset:136014*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136014*0 + 3*26*FLEN/8, x4, x1, x2)

inst_45339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c001ffffffffff; valaddr_reg:x3; val_offset:136017*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136017*0 + 3*27*FLEN/8, x4, x1, x2)

inst_45340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c003ffffffffff; valaddr_reg:x3; val_offset:136020*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136020*0 + 3*28*FLEN/8, x4, x1, x2)

inst_45341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c007ffffffffff; valaddr_reg:x3; val_offset:136023*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136023*0 + 3*29*FLEN/8, x4, x1, x2)

inst_45342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c00fffffffffff; valaddr_reg:x3; val_offset:136026*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136026*0 + 3*30*FLEN/8, x4, x1, x2)

inst_45343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c01fffffffffff; valaddr_reg:x3; val_offset:136029*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136029*0 + 3*31*FLEN/8, x4, x1, x2)

inst_45344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c03fffffffffff; valaddr_reg:x3; val_offset:136032*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136032*0 + 3*32*FLEN/8, x4, x1, x2)

inst_45345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c07fffffffffff; valaddr_reg:x3; val_offset:136035*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136035*0 + 3*33*FLEN/8, x4, x1, x2)

inst_45346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c0ffffffffffff; valaddr_reg:x3; val_offset:136038*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136038*0 + 3*34*FLEN/8, x4, x1, x2)

inst_45347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c1ffffffffffff; valaddr_reg:x3; val_offset:136041*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136041*0 + 3*35*FLEN/8, x4, x1, x2)

inst_45348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c3ffffffffffff; valaddr_reg:x3; val_offset:136044*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136044*0 + 3*36*FLEN/8, x4, x1, x2)

inst_45349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c7ffffffffffff; valaddr_reg:x3; val_offset:136047*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136047*0 + 3*37*FLEN/8, x4, x1, x2)

inst_45350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1c8000000000000; valaddr_reg:x3; val_offset:136050*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136050*0 + 3*38*FLEN/8, x4, x1, x2)

inst_45351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cc000000000000; valaddr_reg:x3; val_offset:136053*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136053*0 + 3*39*FLEN/8, x4, x1, x2)

inst_45352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1ce000000000000; valaddr_reg:x3; val_offset:136056*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136056*0 + 3*40*FLEN/8, x4, x1, x2)

inst_45353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cf000000000000; valaddr_reg:x3; val_offset:136059*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136059*0 + 3*41*FLEN/8, x4, x1, x2)

inst_45354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cf800000000000; valaddr_reg:x3; val_offset:136062*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136062*0 + 3*42*FLEN/8, x4, x1, x2)

inst_45355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfc00000000000; valaddr_reg:x3; val_offset:136065*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136065*0 + 3*43*FLEN/8, x4, x1, x2)

inst_45356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfe00000000000; valaddr_reg:x3; val_offset:136068*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136068*0 + 3*44*FLEN/8, x4, x1, x2)

inst_45357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cff00000000000; valaddr_reg:x3; val_offset:136071*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136071*0 + 3*45*FLEN/8, x4, x1, x2)

inst_45358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cff80000000000; valaddr_reg:x3; val_offset:136074*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136074*0 + 3*46*FLEN/8, x4, x1, x2)

inst_45359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffc0000000000; valaddr_reg:x3; val_offset:136077*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136077*0 + 3*47*FLEN/8, x4, x1, x2)

inst_45360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffe0000000000; valaddr_reg:x3; val_offset:136080*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136080*0 + 3*48*FLEN/8, x4, x1, x2)

inst_45361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfff0000000000; valaddr_reg:x3; val_offset:136083*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136083*0 + 3*49*FLEN/8, x4, x1, x2)

inst_45362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfff8000000000; valaddr_reg:x3; val_offset:136086*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136086*0 + 3*50*FLEN/8, x4, x1, x2)

inst_45363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffc000000000; valaddr_reg:x3; val_offset:136089*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136089*0 + 3*51*FLEN/8, x4, x1, x2)

inst_45364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffe000000000; valaddr_reg:x3; val_offset:136092*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136092*0 + 3*52*FLEN/8, x4, x1, x2)

inst_45365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffff000000000; valaddr_reg:x3; val_offset:136095*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136095*0 + 3*53*FLEN/8, x4, x1, x2)

inst_45366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffff800000000; valaddr_reg:x3; val_offset:136098*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136098*0 + 3*54*FLEN/8, x4, x1, x2)

inst_45367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffc00000000; valaddr_reg:x3; val_offset:136101*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136101*0 + 3*55*FLEN/8, x4, x1, x2)

inst_45368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffe00000000; valaddr_reg:x3; val_offset:136104*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136104*0 + 3*56*FLEN/8, x4, x1, x2)

inst_45369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffff00000000; valaddr_reg:x3; val_offset:136107*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136107*0 + 3*57*FLEN/8, x4, x1, x2)

inst_45370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffff80000000; valaddr_reg:x3; val_offset:136110*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136110*0 + 3*58*FLEN/8, x4, x1, x2)

inst_45371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffc0000000; valaddr_reg:x3; val_offset:136113*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136113*0 + 3*59*FLEN/8, x4, x1, x2)

inst_45372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffe0000000; valaddr_reg:x3; val_offset:136116*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136116*0 + 3*60*FLEN/8, x4, x1, x2)

inst_45373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffff0000000; valaddr_reg:x3; val_offset:136119*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136119*0 + 3*61*FLEN/8, x4, x1, x2)

inst_45374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffff8000000; valaddr_reg:x3; val_offset:136122*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136122*0 + 3*62*FLEN/8, x4, x1, x2)

inst_45375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffc000000; valaddr_reg:x3; val_offset:136125*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136125*0 + 3*63*FLEN/8, x4, x1, x2)

inst_45376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffe000000; valaddr_reg:x3; val_offset:136128*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136128*0 + 3*64*FLEN/8, x4, x1, x2)

inst_45377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffff000000; valaddr_reg:x3; val_offset:136131*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136131*0 + 3*65*FLEN/8, x4, x1, x2)

inst_45378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffff800000; valaddr_reg:x3; val_offset:136134*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136134*0 + 3*66*FLEN/8, x4, x1, x2)

inst_45379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffc00000; valaddr_reg:x3; val_offset:136137*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136137*0 + 3*67*FLEN/8, x4, x1, x2)

inst_45380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffe00000; valaddr_reg:x3; val_offset:136140*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136140*0 + 3*68*FLEN/8, x4, x1, x2)

inst_45381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffff00000; valaddr_reg:x3; val_offset:136143*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136143*0 + 3*69*FLEN/8, x4, x1, x2)

inst_45382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffff80000; valaddr_reg:x3; val_offset:136146*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136146*0 + 3*70*FLEN/8, x4, x1, x2)

inst_45383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffc0000; valaddr_reg:x3; val_offset:136149*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136149*0 + 3*71*FLEN/8, x4, x1, x2)

inst_45384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffe0000; valaddr_reg:x3; val_offset:136152*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136152*0 + 3*72*FLEN/8, x4, x1, x2)

inst_45385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffff0000; valaddr_reg:x3; val_offset:136155*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136155*0 + 3*73*FLEN/8, x4, x1, x2)

inst_45386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffff8000; valaddr_reg:x3; val_offset:136158*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136158*0 + 3*74*FLEN/8, x4, x1, x2)

inst_45387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffffc000; valaddr_reg:x3; val_offset:136161*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136161*0 + 3*75*FLEN/8, x4, x1, x2)

inst_45388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffffe000; valaddr_reg:x3; val_offset:136164*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136164*0 + 3*76*FLEN/8, x4, x1, x2)

inst_45389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffff000; valaddr_reg:x3; val_offset:136167*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136167*0 + 3*77*FLEN/8, x4, x1, x2)

inst_45390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffff800; valaddr_reg:x3; val_offset:136170*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136170*0 + 3*78*FLEN/8, x4, x1, x2)

inst_45391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffffc00; valaddr_reg:x3; val_offset:136173*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136173*0 + 3*79*FLEN/8, x4, x1, x2)

inst_45392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffffe00; valaddr_reg:x3; val_offset:136176*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136176*0 + 3*80*FLEN/8, x4, x1, x2)

inst_45393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffffff00; valaddr_reg:x3; val_offset:136179*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136179*0 + 3*81*FLEN/8, x4, x1, x2)

inst_45394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffffff80; valaddr_reg:x3; val_offset:136182*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136182*0 + 3*82*FLEN/8, x4, x1, x2)

inst_45395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffffffc0; valaddr_reg:x3; val_offset:136185*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136185*0 + 3*83*FLEN/8, x4, x1, x2)

inst_45396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffffffe0; valaddr_reg:x3; val_offset:136188*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136188*0 + 3*84*FLEN/8, x4, x1, x2)

inst_45397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffffff0; valaddr_reg:x3; val_offset:136191*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136191*0 + 3*85*FLEN/8, x4, x1, x2)

inst_45398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffffff8; valaddr_reg:x3; val_offset:136194*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136194*0 + 3*86*FLEN/8, x4, x1, x2)

inst_45399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffffffc; valaddr_reg:x3; val_offset:136197*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136197*0 + 3*87*FLEN/8, x4, x1, x2)

inst_45400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cffffffffffffe; valaddr_reg:x3; val_offset:136200*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136200*0 + 3*88*FLEN/8, x4, x1, x2)

inst_45401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd22778a5a92b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd22778a5a92b; op2val:0x0;
op3val:0x1cfffffffffffff; valaddr_reg:x3; val_offset:136203*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136203*0 + 3*89*FLEN/8, x4, x1, x2)

inst_45402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:136206*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136206*0 + 3*90*FLEN/8, x4, x1, x2)

inst_45403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:136209*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136209*0 + 3*91*FLEN/8, x4, x1, x2)

inst_45404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:136212*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136212*0 + 3*92*FLEN/8, x4, x1, x2)

inst_45405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:136215*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136215*0 + 3*93*FLEN/8, x4, x1, x2)

inst_45406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:136218*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136218*0 + 3*94*FLEN/8, x4, x1, x2)

inst_45407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:136221*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136221*0 + 3*95*FLEN/8, x4, x1, x2)

inst_45408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:136224*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136224*0 + 3*96*FLEN/8, x4, x1, x2)

inst_45409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:136227*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136227*0 + 3*97*FLEN/8, x4, x1, x2)

inst_45410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:136230*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136230*0 + 3*98*FLEN/8, x4, x1, x2)

inst_45411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:136233*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136233*0 + 3*99*FLEN/8, x4, x1, x2)

inst_45412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:136236*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136236*0 + 3*100*FLEN/8, x4, x1, x2)

inst_45413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:136239*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136239*0 + 3*101*FLEN/8, x4, x1, x2)

inst_45414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:136242*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136242*0 + 3*102*FLEN/8, x4, x1, x2)

inst_45415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:136245*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136245*0 + 3*103*FLEN/8, x4, x1, x2)

inst_45416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:136248*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136248*0 + 3*104*FLEN/8, x4, x1, x2)

inst_45417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:136251*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136251*0 + 3*105*FLEN/8, x4, x1, x2)

inst_45418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:136254*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136254*0 + 3*106*FLEN/8, x4, x1, x2)

inst_45419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:136257*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136257*0 + 3*107*FLEN/8, x4, x1, x2)

inst_45420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:136260*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136260*0 + 3*108*FLEN/8, x4, x1, x2)

inst_45421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:136263*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136263*0 + 3*109*FLEN/8, x4, x1, x2)

inst_45422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:136266*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136266*0 + 3*110*FLEN/8, x4, x1, x2)

inst_45423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:136269*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136269*0 + 3*111*FLEN/8, x4, x1, x2)

inst_45424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000000000000; valaddr_reg:x3; val_offset:136272*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136272*0 + 3*112*FLEN/8, x4, x1, x2)

inst_45425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000000000001; valaddr_reg:x3; val_offset:136275*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136275*0 + 3*113*FLEN/8, x4, x1, x2)

inst_45426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000000000003; valaddr_reg:x3; val_offset:136278*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136278*0 + 3*114*FLEN/8, x4, x1, x2)

inst_45427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000000000007; valaddr_reg:x3; val_offset:136281*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136281*0 + 3*115*FLEN/8, x4, x1, x2)

inst_45428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000000000000f; valaddr_reg:x3; val_offset:136284*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136284*0 + 3*116*FLEN/8, x4, x1, x2)

inst_45429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000000000001f; valaddr_reg:x3; val_offset:136287*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136287*0 + 3*117*FLEN/8, x4, x1, x2)

inst_45430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000000000003f; valaddr_reg:x3; val_offset:136290*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136290*0 + 3*118*FLEN/8, x4, x1, x2)

inst_45431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000000000007f; valaddr_reg:x3; val_offset:136293*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136293*0 + 3*119*FLEN/8, x4, x1, x2)

inst_45432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200000000000ff; valaddr_reg:x3; val_offset:136296*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136296*0 + 3*120*FLEN/8, x4, x1, x2)

inst_45433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200000000001ff; valaddr_reg:x3; val_offset:136299*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136299*0 + 3*121*FLEN/8, x4, x1, x2)

inst_45434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200000000003ff; valaddr_reg:x3; val_offset:136302*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136302*0 + 3*122*FLEN/8, x4, x1, x2)

inst_45435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200000000007ff; valaddr_reg:x3; val_offset:136305*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136305*0 + 3*123*FLEN/8, x4, x1, x2)

inst_45436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000000000fff; valaddr_reg:x3; val_offset:136308*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136308*0 + 3*124*FLEN/8, x4, x1, x2)

inst_45437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000000001fff; valaddr_reg:x3; val_offset:136311*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136311*0 + 3*125*FLEN/8, x4, x1, x2)

inst_45438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000000003fff; valaddr_reg:x3; val_offset:136314*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136314*0 + 3*126*FLEN/8, x4, x1, x2)

inst_45439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000000007fff; valaddr_reg:x3; val_offset:136317*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136317*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_45440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000000000ffff; valaddr_reg:x3; val_offset:136320*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136320*0 + 3*128*FLEN/8, x4, x1, x2)

inst_45441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000000001ffff; valaddr_reg:x3; val_offset:136323*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136323*0 + 3*129*FLEN/8, x4, x1, x2)

inst_45442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000000003ffff; valaddr_reg:x3; val_offset:136326*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136326*0 + 3*130*FLEN/8, x4, x1, x2)

inst_45443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000000007ffff; valaddr_reg:x3; val_offset:136329*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136329*0 + 3*131*FLEN/8, x4, x1, x2)

inst_45444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200000000fffff; valaddr_reg:x3; val_offset:136332*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136332*0 + 3*132*FLEN/8, x4, x1, x2)

inst_45445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200000001fffff; valaddr_reg:x3; val_offset:136335*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136335*0 + 3*133*FLEN/8, x4, x1, x2)

inst_45446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200000003fffff; valaddr_reg:x3; val_offset:136338*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136338*0 + 3*134*FLEN/8, x4, x1, x2)

inst_45447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200000007fffff; valaddr_reg:x3; val_offset:136341*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136341*0 + 3*135*FLEN/8, x4, x1, x2)

inst_45448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000000ffffff; valaddr_reg:x3; val_offset:136344*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136344*0 + 3*136*FLEN/8, x4, x1, x2)

inst_45449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000001ffffff; valaddr_reg:x3; val_offset:136347*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136347*0 + 3*137*FLEN/8, x4, x1, x2)

inst_45450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000003ffffff; valaddr_reg:x3; val_offset:136350*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136350*0 + 3*138*FLEN/8, x4, x1, x2)

inst_45451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000007ffffff; valaddr_reg:x3; val_offset:136353*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136353*0 + 3*139*FLEN/8, x4, x1, x2)

inst_45452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000000fffffff; valaddr_reg:x3; val_offset:136356*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136356*0 + 3*140*FLEN/8, x4, x1, x2)

inst_45453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000001fffffff; valaddr_reg:x3; val_offset:136359*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136359*0 + 3*141*FLEN/8, x4, x1, x2)

inst_45454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000003fffffff; valaddr_reg:x3; val_offset:136362*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136362*0 + 3*142*FLEN/8, x4, x1, x2)

inst_45455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000007fffffff; valaddr_reg:x3; val_offset:136365*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136365*0 + 3*143*FLEN/8, x4, x1, x2)

inst_45456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200000ffffffff; valaddr_reg:x3; val_offset:136368*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136368*0 + 3*144*FLEN/8, x4, x1, x2)

inst_45457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200001ffffffff; valaddr_reg:x3; val_offset:136371*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136371*0 + 3*145*FLEN/8, x4, x1, x2)

inst_45458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200003ffffffff; valaddr_reg:x3; val_offset:136374*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136374*0 + 3*146*FLEN/8, x4, x1, x2)

inst_45459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200007ffffffff; valaddr_reg:x3; val_offset:136377*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136377*0 + 3*147*FLEN/8, x4, x1, x2)

inst_45460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220000fffffffff; valaddr_reg:x3; val_offset:136380*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136380*0 + 3*148*FLEN/8, x4, x1, x2)

inst_45461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220001fffffffff; valaddr_reg:x3; val_offset:136383*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136383*0 + 3*149*FLEN/8, x4, x1, x2)

inst_45462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220003fffffffff; valaddr_reg:x3; val_offset:136386*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136386*0 + 3*150*FLEN/8, x4, x1, x2)

inst_45463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220007fffffffff; valaddr_reg:x3; val_offset:136389*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136389*0 + 3*151*FLEN/8, x4, x1, x2)

inst_45464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22000ffffffffff; valaddr_reg:x3; val_offset:136392*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136392*0 + 3*152*FLEN/8, x4, x1, x2)

inst_45465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22001ffffffffff; valaddr_reg:x3; val_offset:136395*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136395*0 + 3*153*FLEN/8, x4, x1, x2)

inst_45466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22003ffffffffff; valaddr_reg:x3; val_offset:136398*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136398*0 + 3*154*FLEN/8, x4, x1, x2)

inst_45467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22007ffffffffff; valaddr_reg:x3; val_offset:136401*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136401*0 + 3*155*FLEN/8, x4, x1, x2)

inst_45468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2200fffffffffff; valaddr_reg:x3; val_offset:136404*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136404*0 + 3*156*FLEN/8, x4, x1, x2)

inst_45469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2201fffffffffff; valaddr_reg:x3; val_offset:136407*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136407*0 + 3*157*FLEN/8, x4, x1, x2)

inst_45470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2203fffffffffff; valaddr_reg:x3; val_offset:136410*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136410*0 + 3*158*FLEN/8, x4, x1, x2)

inst_45471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x2207fffffffffff; valaddr_reg:x3; val_offset:136413*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136413*0 + 3*159*FLEN/8, x4, x1, x2)

inst_45472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x220ffffffffffff; valaddr_reg:x3; val_offset:136416*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136416*0 + 3*160*FLEN/8, x4, x1, x2)

inst_45473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x221ffffffffffff; valaddr_reg:x3; val_offset:136419*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136419*0 + 3*161*FLEN/8, x4, x1, x2)

inst_45474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x223ffffffffffff; valaddr_reg:x3; val_offset:136422*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136422*0 + 3*162*FLEN/8, x4, x1, x2)

inst_45475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x227ffffffffffff; valaddr_reg:x3; val_offset:136425*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136425*0 + 3*163*FLEN/8, x4, x1, x2)

inst_45476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x228000000000000; valaddr_reg:x3; val_offset:136428*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136428*0 + 3*164*FLEN/8, x4, x1, x2)

inst_45477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22c000000000000; valaddr_reg:x3; val_offset:136431*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136431*0 + 3*165*FLEN/8, x4, x1, x2)

inst_45478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22e000000000000; valaddr_reg:x3; val_offset:136434*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136434*0 + 3*166*FLEN/8, x4, x1, x2)

inst_45479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22f000000000000; valaddr_reg:x3; val_offset:136437*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136437*0 + 3*167*FLEN/8, x4, x1, x2)

inst_45480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22f800000000000; valaddr_reg:x3; val_offset:136440*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136440*0 + 3*168*FLEN/8, x4, x1, x2)

inst_45481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fc00000000000; valaddr_reg:x3; val_offset:136443*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136443*0 + 3*169*FLEN/8, x4, x1, x2)

inst_45482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fe00000000000; valaddr_reg:x3; val_offset:136446*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136446*0 + 3*170*FLEN/8, x4, x1, x2)

inst_45483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ff00000000000; valaddr_reg:x3; val_offset:136449*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136449*0 + 3*171*FLEN/8, x4, x1, x2)

inst_45484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ff80000000000; valaddr_reg:x3; val_offset:136452*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136452*0 + 3*172*FLEN/8, x4, x1, x2)

inst_45485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffc0000000000; valaddr_reg:x3; val_offset:136455*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136455*0 + 3*173*FLEN/8, x4, x1, x2)

inst_45486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffe0000000000; valaddr_reg:x3; val_offset:136458*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136458*0 + 3*174*FLEN/8, x4, x1, x2)

inst_45487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fff0000000000; valaddr_reg:x3; val_offset:136461*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136461*0 + 3*175*FLEN/8, x4, x1, x2)

inst_45488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fff8000000000; valaddr_reg:x3; val_offset:136464*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136464*0 + 3*176*FLEN/8, x4, x1, x2)

inst_45489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffc000000000; valaddr_reg:x3; val_offset:136467*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136467*0 + 3*177*FLEN/8, x4, x1, x2)

inst_45490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffe000000000; valaddr_reg:x3; val_offset:136470*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136470*0 + 3*178*FLEN/8, x4, x1, x2)

inst_45491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffff000000000; valaddr_reg:x3; val_offset:136473*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136473*0 + 3*179*FLEN/8, x4, x1, x2)

inst_45492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffff800000000; valaddr_reg:x3; val_offset:136476*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136476*0 + 3*180*FLEN/8, x4, x1, x2)

inst_45493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffc00000000; valaddr_reg:x3; val_offset:136479*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136479*0 + 3*181*FLEN/8, x4, x1, x2)

inst_45494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffe00000000; valaddr_reg:x3; val_offset:136482*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136482*0 + 3*182*FLEN/8, x4, x1, x2)

inst_45495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffff00000000; valaddr_reg:x3; val_offset:136485*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136485*0 + 3*183*FLEN/8, x4, x1, x2)

inst_45496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffff80000000; valaddr_reg:x3; val_offset:136488*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136488*0 + 3*184*FLEN/8, x4, x1, x2)

inst_45497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffc0000000; valaddr_reg:x3; val_offset:136491*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136491*0 + 3*185*FLEN/8, x4, x1, x2)

inst_45498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffe0000000; valaddr_reg:x3; val_offset:136494*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136494*0 + 3*186*FLEN/8, x4, x1, x2)

inst_45499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffff0000000; valaddr_reg:x3; val_offset:136497*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136497*0 + 3*187*FLEN/8, x4, x1, x2)

inst_45500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffff8000000; valaddr_reg:x3; val_offset:136500*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136500*0 + 3*188*FLEN/8, x4, x1, x2)

inst_45501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffc000000; valaddr_reg:x3; val_offset:136503*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136503*0 + 3*189*FLEN/8, x4, x1, x2)

inst_45502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffe000000; valaddr_reg:x3; val_offset:136506*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136506*0 + 3*190*FLEN/8, x4, x1, x2)

inst_45503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffff000000; valaddr_reg:x3; val_offset:136509*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136509*0 + 3*191*FLEN/8, x4, x1, x2)

inst_45504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffff800000; valaddr_reg:x3; val_offset:136512*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136512*0 + 3*192*FLEN/8, x4, x1, x2)

inst_45505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffc00000; valaddr_reg:x3; val_offset:136515*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136515*0 + 3*193*FLEN/8, x4, x1, x2)

inst_45506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffe00000; valaddr_reg:x3; val_offset:136518*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136518*0 + 3*194*FLEN/8, x4, x1, x2)

inst_45507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffff00000; valaddr_reg:x3; val_offset:136521*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136521*0 + 3*195*FLEN/8, x4, x1, x2)

inst_45508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffff80000; valaddr_reg:x3; val_offset:136524*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136524*0 + 3*196*FLEN/8, x4, x1, x2)

inst_45509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffc0000; valaddr_reg:x3; val_offset:136527*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136527*0 + 3*197*FLEN/8, x4, x1, x2)

inst_45510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffe0000; valaddr_reg:x3; val_offset:136530*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136530*0 + 3*198*FLEN/8, x4, x1, x2)

inst_45511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffff0000; valaddr_reg:x3; val_offset:136533*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136533*0 + 3*199*FLEN/8, x4, x1, x2)

inst_45512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffff8000; valaddr_reg:x3; val_offset:136536*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136536*0 + 3*200*FLEN/8, x4, x1, x2)

inst_45513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffffc000; valaddr_reg:x3; val_offset:136539*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136539*0 + 3*201*FLEN/8, x4, x1, x2)

inst_45514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffffe000; valaddr_reg:x3; val_offset:136542*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136542*0 + 3*202*FLEN/8, x4, x1, x2)

inst_45515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffff000; valaddr_reg:x3; val_offset:136545*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136545*0 + 3*203*FLEN/8, x4, x1, x2)

inst_45516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffff800; valaddr_reg:x3; val_offset:136548*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136548*0 + 3*204*FLEN/8, x4, x1, x2)

inst_45517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffffc00; valaddr_reg:x3; val_offset:136551*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136551*0 + 3*205*FLEN/8, x4, x1, x2)

inst_45518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffffe00; valaddr_reg:x3; val_offset:136554*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136554*0 + 3*206*FLEN/8, x4, x1, x2)

inst_45519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffffff00; valaddr_reg:x3; val_offset:136557*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136557*0 + 3*207*FLEN/8, x4, x1, x2)

inst_45520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffffff80; valaddr_reg:x3; val_offset:136560*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136560*0 + 3*208*FLEN/8, x4, x1, x2)

inst_45521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffffffc0; valaddr_reg:x3; val_offset:136563*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136563*0 + 3*209*FLEN/8, x4, x1, x2)

inst_45522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffffffe0; valaddr_reg:x3; val_offset:136566*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136566*0 + 3*210*FLEN/8, x4, x1, x2)

inst_45523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffffff0; valaddr_reg:x3; val_offset:136569*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136569*0 + 3*211*FLEN/8, x4, x1, x2)

inst_45524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffffff8; valaddr_reg:x3; val_offset:136572*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136572*0 + 3*212*FLEN/8, x4, x1, x2)

inst_45525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffffffc; valaddr_reg:x3; val_offset:136575*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136575*0 + 3*213*FLEN/8, x4, x1, x2)

inst_45526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22ffffffffffffe; valaddr_reg:x3; val_offset:136578*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136578*0 + 3*214*FLEN/8, x4, x1, x2)

inst_45527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcd38bc25d40ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cd38bc25d40ef; op2val:0x0;
op3val:0x22fffffffffffff; valaddr_reg:x3; val_offset:136581*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136581*0 + 3*215*FLEN/8, x4, x1, x2)

inst_45528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:136584*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136584*0 + 3*216*FLEN/8, x4, x1, x2)

inst_45529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:136587*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136587*0 + 3*217*FLEN/8, x4, x1, x2)

inst_45530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:136590*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136590*0 + 3*218*FLEN/8, x4, x1, x2)

inst_45531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:136593*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136593*0 + 3*219*FLEN/8, x4, x1, x2)

inst_45532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:136596*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136596*0 + 3*220*FLEN/8, x4, x1, x2)

inst_45533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:136599*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136599*0 + 3*221*FLEN/8, x4, x1, x2)

inst_45534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:136602*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136602*0 + 3*222*FLEN/8, x4, x1, x2)

inst_45535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:136605*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136605*0 + 3*223*FLEN/8, x4, x1, x2)

inst_45536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:136608*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136608*0 + 3*224*FLEN/8, x4, x1, x2)

inst_45537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:136611*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136611*0 + 3*225*FLEN/8, x4, x1, x2)

inst_45538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:136614*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136614*0 + 3*226*FLEN/8, x4, x1, x2)

inst_45539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:136617*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136617*0 + 3*227*FLEN/8, x4, x1, x2)

inst_45540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:136620*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136620*0 + 3*228*FLEN/8, x4, x1, x2)

inst_45541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:136623*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136623*0 + 3*229*FLEN/8, x4, x1, x2)

inst_45542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:136626*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136626*0 + 3*230*FLEN/8, x4, x1, x2)

inst_45543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:136629*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136629*0 + 3*231*FLEN/8, x4, x1, x2)

inst_45544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:136632*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136632*0 + 3*232*FLEN/8, x4, x1, x2)

inst_45545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:136635*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136635*0 + 3*233*FLEN/8, x4, x1, x2)

inst_45546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:136638*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136638*0 + 3*234*FLEN/8, x4, x1, x2)

inst_45547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:136641*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136641*0 + 3*235*FLEN/8, x4, x1, x2)

inst_45548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:136644*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136644*0 + 3*236*FLEN/8, x4, x1, x2)

inst_45549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:136647*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136647*0 + 3*237*FLEN/8, x4, x1, x2)

inst_45550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000000000000; valaddr_reg:x3; val_offset:136650*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136650*0 + 3*238*FLEN/8, x4, x1, x2)

inst_45551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000000000001; valaddr_reg:x3; val_offset:136653*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136653*0 + 3*239*FLEN/8, x4, x1, x2)

inst_45552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000000000003; valaddr_reg:x3; val_offset:136656*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136656*0 + 3*240*FLEN/8, x4, x1, x2)

inst_45553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000000000007; valaddr_reg:x3; val_offset:136659*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136659*0 + 3*241*FLEN/8, x4, x1, x2)

inst_45554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000000000000f; valaddr_reg:x3; val_offset:136662*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136662*0 + 3*242*FLEN/8, x4, x1, x2)

inst_45555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000000000001f; valaddr_reg:x3; val_offset:136665*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136665*0 + 3*243*FLEN/8, x4, x1, x2)

inst_45556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000000000003f; valaddr_reg:x3; val_offset:136668*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136668*0 + 3*244*FLEN/8, x4, x1, x2)

inst_45557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000000000007f; valaddr_reg:x3; val_offset:136671*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136671*0 + 3*245*FLEN/8, x4, x1, x2)

inst_45558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00000000000ff; valaddr_reg:x3; val_offset:136674*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136674*0 + 3*246*FLEN/8, x4, x1, x2)

inst_45559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00000000001ff; valaddr_reg:x3; val_offset:136677*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136677*0 + 3*247*FLEN/8, x4, x1, x2)

inst_45560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00000000003ff; valaddr_reg:x3; val_offset:136680*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136680*0 + 3*248*FLEN/8, x4, x1, x2)

inst_45561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00000000007ff; valaddr_reg:x3; val_offset:136683*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136683*0 + 3*249*FLEN/8, x4, x1, x2)

inst_45562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000000000fff; valaddr_reg:x3; val_offset:136686*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136686*0 + 3*250*FLEN/8, x4, x1, x2)

inst_45563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000000001fff; valaddr_reg:x3; val_offset:136689*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136689*0 + 3*251*FLEN/8, x4, x1, x2)

inst_45564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000000003fff; valaddr_reg:x3; val_offset:136692*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136692*0 + 3*252*FLEN/8, x4, x1, x2)

inst_45565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000000007fff; valaddr_reg:x3; val_offset:136695*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136695*0 + 3*253*FLEN/8, x4, x1, x2)

inst_45566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000000000ffff; valaddr_reg:x3; val_offset:136698*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136698*0 + 3*254*FLEN/8, x4, x1, x2)

inst_45567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000000001ffff; valaddr_reg:x3; val_offset:136701*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136701*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_45568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000000003ffff; valaddr_reg:x3; val_offset:136704*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136704*0 + 3*256*FLEN/8, x4, x1, x2)

inst_45569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000000007ffff; valaddr_reg:x3; val_offset:136707*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136707*0 + 3*257*FLEN/8, x4, x1, x2)

inst_45570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00000000fffff; valaddr_reg:x3; val_offset:136710*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136710*0 + 3*258*FLEN/8, x4, x1, x2)

inst_45571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00000001fffff; valaddr_reg:x3; val_offset:136713*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136713*0 + 3*259*FLEN/8, x4, x1, x2)

inst_45572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00000003fffff; valaddr_reg:x3; val_offset:136716*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136716*0 + 3*260*FLEN/8, x4, x1, x2)

inst_45573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00000007fffff; valaddr_reg:x3; val_offset:136719*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136719*0 + 3*261*FLEN/8, x4, x1, x2)

inst_45574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000000ffffff; valaddr_reg:x3; val_offset:136722*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136722*0 + 3*262*FLEN/8, x4, x1, x2)

inst_45575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000001ffffff; valaddr_reg:x3; val_offset:136725*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136725*0 + 3*263*FLEN/8, x4, x1, x2)

inst_45576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000003ffffff; valaddr_reg:x3; val_offset:136728*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136728*0 + 3*264*FLEN/8, x4, x1, x2)

inst_45577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000007ffffff; valaddr_reg:x3; val_offset:136731*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136731*0 + 3*265*FLEN/8, x4, x1, x2)

inst_45578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000000fffffff; valaddr_reg:x3; val_offset:136734*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136734*0 + 3*266*FLEN/8, x4, x1, x2)

inst_45579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000001fffffff; valaddr_reg:x3; val_offset:136737*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136737*0 + 3*267*FLEN/8, x4, x1, x2)

inst_45580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000003fffffff; valaddr_reg:x3; val_offset:136740*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136740*0 + 3*268*FLEN/8, x4, x1, x2)

inst_45581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000007fffffff; valaddr_reg:x3; val_offset:136743*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136743*0 + 3*269*FLEN/8, x4, x1, x2)

inst_45582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00000ffffffff; valaddr_reg:x3; val_offset:136746*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136746*0 + 3*270*FLEN/8, x4, x1, x2)

inst_45583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00001ffffffff; valaddr_reg:x3; val_offset:136749*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136749*0 + 3*271*FLEN/8, x4, x1, x2)

inst_45584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00003ffffffff; valaddr_reg:x3; val_offset:136752*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136752*0 + 3*272*FLEN/8, x4, x1, x2)

inst_45585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00007ffffffff; valaddr_reg:x3; val_offset:136755*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136755*0 + 3*273*FLEN/8, x4, x1, x2)

inst_45586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0000fffffffff; valaddr_reg:x3; val_offset:136758*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136758*0 + 3*274*FLEN/8, x4, x1, x2)

inst_45587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0001fffffffff; valaddr_reg:x3; val_offset:136761*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136761*0 + 3*275*FLEN/8, x4, x1, x2)

inst_45588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0003fffffffff; valaddr_reg:x3; val_offset:136764*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136764*0 + 3*276*FLEN/8, x4, x1, x2)

inst_45589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0007fffffffff; valaddr_reg:x3; val_offset:136767*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136767*0 + 3*277*FLEN/8, x4, x1, x2)

inst_45590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc000ffffffffff; valaddr_reg:x3; val_offset:136770*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136770*0 + 3*278*FLEN/8, x4, x1, x2)

inst_45591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc001ffffffffff; valaddr_reg:x3; val_offset:136773*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136773*0 + 3*279*FLEN/8, x4, x1, x2)

inst_45592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc003ffffffffff; valaddr_reg:x3; val_offset:136776*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136776*0 + 3*280*FLEN/8, x4, x1, x2)

inst_45593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc007ffffffffff; valaddr_reg:x3; val_offset:136779*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136779*0 + 3*281*FLEN/8, x4, x1, x2)

inst_45594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc00fffffffffff; valaddr_reg:x3; val_offset:136782*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136782*0 + 3*282*FLEN/8, x4, x1, x2)

inst_45595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc01fffffffffff; valaddr_reg:x3; val_offset:136785*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136785*0 + 3*283*FLEN/8, x4, x1, x2)

inst_45596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc03fffffffffff; valaddr_reg:x3; val_offset:136788*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136788*0 + 3*284*FLEN/8, x4, x1, x2)

inst_45597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc07fffffffffff; valaddr_reg:x3; val_offset:136791*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136791*0 + 3*285*FLEN/8, x4, x1, x2)

inst_45598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc0ffffffffffff; valaddr_reg:x3; val_offset:136794*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136794*0 + 3*286*FLEN/8, x4, x1, x2)

inst_45599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc1ffffffffffff; valaddr_reg:x3; val_offset:136797*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136797*0 + 3*287*FLEN/8, x4, x1, x2)

inst_45600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc3ffffffffffff; valaddr_reg:x3; val_offset:136800*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136800*0 + 3*288*FLEN/8, x4, x1, x2)

inst_45601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc7ffffffffffff; valaddr_reg:x3; val_offset:136803*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136803*0 + 3*289*FLEN/8, x4, x1, x2)

inst_45602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xc8000000000000; valaddr_reg:x3; val_offset:136806*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136806*0 + 3*290*FLEN/8, x4, x1, x2)

inst_45603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcc000000000000; valaddr_reg:x3; val_offset:136809*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136809*0 + 3*291*FLEN/8, x4, x1, x2)

inst_45604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xce000000000000; valaddr_reg:x3; val_offset:136812*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136812*0 + 3*292*FLEN/8, x4, x1, x2)

inst_45605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcf000000000000; valaddr_reg:x3; val_offset:136815*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136815*0 + 3*293*FLEN/8, x4, x1, x2)

inst_45606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcf800000000000; valaddr_reg:x3; val_offset:136818*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136818*0 + 3*294*FLEN/8, x4, x1, x2)

inst_45607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfc00000000000; valaddr_reg:x3; val_offset:136821*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136821*0 + 3*295*FLEN/8, x4, x1, x2)

inst_45608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfe00000000000; valaddr_reg:x3; val_offset:136824*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136824*0 + 3*296*FLEN/8, x4, x1, x2)

inst_45609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcff00000000000; valaddr_reg:x3; val_offset:136827*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136827*0 + 3*297*FLEN/8, x4, x1, x2)

inst_45610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcff80000000000; valaddr_reg:x3; val_offset:136830*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136830*0 + 3*298*FLEN/8, x4, x1, x2)

inst_45611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffc0000000000; valaddr_reg:x3; val_offset:136833*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136833*0 + 3*299*FLEN/8, x4, x1, x2)

inst_45612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffe0000000000; valaddr_reg:x3; val_offset:136836*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136836*0 + 3*300*FLEN/8, x4, x1, x2)

inst_45613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfff0000000000; valaddr_reg:x3; val_offset:136839*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136839*0 + 3*301*FLEN/8, x4, x1, x2)

inst_45614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfff8000000000; valaddr_reg:x3; val_offset:136842*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136842*0 + 3*302*FLEN/8, x4, x1, x2)

inst_45615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffc000000000; valaddr_reg:x3; val_offset:136845*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136845*0 + 3*303*FLEN/8, x4, x1, x2)

inst_45616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffe000000000; valaddr_reg:x3; val_offset:136848*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136848*0 + 3*304*FLEN/8, x4, x1, x2)

inst_45617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffff000000000; valaddr_reg:x3; val_offset:136851*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136851*0 + 3*305*FLEN/8, x4, x1, x2)

inst_45618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffff800000000; valaddr_reg:x3; val_offset:136854*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136854*0 + 3*306*FLEN/8, x4, x1, x2)

inst_45619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffc00000000; valaddr_reg:x3; val_offset:136857*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136857*0 + 3*307*FLEN/8, x4, x1, x2)

inst_45620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffe00000000; valaddr_reg:x3; val_offset:136860*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136860*0 + 3*308*FLEN/8, x4, x1, x2)

inst_45621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffff00000000; valaddr_reg:x3; val_offset:136863*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136863*0 + 3*309*FLEN/8, x4, x1, x2)

inst_45622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffff80000000; valaddr_reg:x3; val_offset:136866*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136866*0 + 3*310*FLEN/8, x4, x1, x2)

inst_45623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffc0000000; valaddr_reg:x3; val_offset:136869*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136869*0 + 3*311*FLEN/8, x4, x1, x2)

inst_45624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffe0000000; valaddr_reg:x3; val_offset:136872*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136872*0 + 3*312*FLEN/8, x4, x1, x2)

inst_45625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffff0000000; valaddr_reg:x3; val_offset:136875*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136875*0 + 3*313*FLEN/8, x4, x1, x2)

inst_45626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffff8000000; valaddr_reg:x3; val_offset:136878*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136878*0 + 3*314*FLEN/8, x4, x1, x2)

inst_45627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffc000000; valaddr_reg:x3; val_offset:136881*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136881*0 + 3*315*FLEN/8, x4, x1, x2)

inst_45628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffe000000; valaddr_reg:x3; val_offset:136884*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136884*0 + 3*316*FLEN/8, x4, x1, x2)

inst_45629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffff000000; valaddr_reg:x3; val_offset:136887*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136887*0 + 3*317*FLEN/8, x4, x1, x2)

inst_45630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffff800000; valaddr_reg:x3; val_offset:136890*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136890*0 + 3*318*FLEN/8, x4, x1, x2)

inst_45631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffc00000; valaddr_reg:x3; val_offset:136893*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136893*0 + 3*319*FLEN/8, x4, x1, x2)

inst_45632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffe00000; valaddr_reg:x3; val_offset:136896*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136896*0 + 3*320*FLEN/8, x4, x1, x2)

inst_45633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffff00000; valaddr_reg:x3; val_offset:136899*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136899*0 + 3*321*FLEN/8, x4, x1, x2)

inst_45634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffff80000; valaddr_reg:x3; val_offset:136902*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136902*0 + 3*322*FLEN/8, x4, x1, x2)

inst_45635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffc0000; valaddr_reg:x3; val_offset:136905*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136905*0 + 3*323*FLEN/8, x4, x1, x2)

inst_45636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffe0000; valaddr_reg:x3; val_offset:136908*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136908*0 + 3*324*FLEN/8, x4, x1, x2)

inst_45637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffff0000; valaddr_reg:x3; val_offset:136911*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136911*0 + 3*325*FLEN/8, x4, x1, x2)

inst_45638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffff8000; valaddr_reg:x3; val_offset:136914*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136914*0 + 3*326*FLEN/8, x4, x1, x2)

inst_45639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffffc000; valaddr_reg:x3; val_offset:136917*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136917*0 + 3*327*FLEN/8, x4, x1, x2)

inst_45640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffffe000; valaddr_reg:x3; val_offset:136920*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136920*0 + 3*328*FLEN/8, x4, x1, x2)

inst_45641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffff000; valaddr_reg:x3; val_offset:136923*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136923*0 + 3*329*FLEN/8, x4, x1, x2)

inst_45642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffff800; valaddr_reg:x3; val_offset:136926*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136926*0 + 3*330*FLEN/8, x4, x1, x2)

inst_45643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffffc00; valaddr_reg:x3; val_offset:136929*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136929*0 + 3*331*FLEN/8, x4, x1, x2)

inst_45644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffffe00; valaddr_reg:x3; val_offset:136932*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136932*0 + 3*332*FLEN/8, x4, x1, x2)

inst_45645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffffff00; valaddr_reg:x3; val_offset:136935*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136935*0 + 3*333*FLEN/8, x4, x1, x2)

inst_45646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffffff80; valaddr_reg:x3; val_offset:136938*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136938*0 + 3*334*FLEN/8, x4, x1, x2)

inst_45647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffffffc0; valaddr_reg:x3; val_offset:136941*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136941*0 + 3*335*FLEN/8, x4, x1, x2)

inst_45648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffffffe0; valaddr_reg:x3; val_offset:136944*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136944*0 + 3*336*FLEN/8, x4, x1, x2)

inst_45649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffffff0; valaddr_reg:x3; val_offset:136947*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136947*0 + 3*337*FLEN/8, x4, x1, x2)

inst_45650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffffff8; valaddr_reg:x3; val_offset:136950*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136950*0 + 3*338*FLEN/8, x4, x1, x2)

inst_45651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffffffc; valaddr_reg:x3; val_offset:136953*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136953*0 + 3*339*FLEN/8, x4, x1, x2)

inst_45652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcffffffffffffe; valaddr_reg:x3; val_offset:136956*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136956*0 + 3*340*FLEN/8, x4, x1, x2)

inst_45653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcf36a84a47457 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cf36a84a47457; op2val:0x0;
op3val:0xcfffffffffffff; valaddr_reg:x3; val_offset:136959*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136959*0 + 3*341*FLEN/8, x4, x1, x2)

inst_45654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:136962*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136962*0 + 3*342*FLEN/8, x4, x1, x2)

inst_45655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:136965*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136965*0 + 3*343*FLEN/8, x4, x1, x2)

inst_45656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:136968*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136968*0 + 3*344*FLEN/8, x4, x1, x2)

inst_45657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:136971*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136971*0 + 3*345*FLEN/8, x4, x1, x2)

inst_45658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:136974*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136974*0 + 3*346*FLEN/8, x4, x1, x2)

inst_45659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:136977*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136977*0 + 3*347*FLEN/8, x4, x1, x2)

inst_45660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:136980*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136980*0 + 3*348*FLEN/8, x4, x1, x2)

inst_45661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:136983*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136983*0 + 3*349*FLEN/8, x4, x1, x2)

inst_45662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:136986*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136986*0 + 3*350*FLEN/8, x4, x1, x2)

inst_45663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:136989*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136989*0 + 3*351*FLEN/8, x4, x1, x2)

inst_45664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:136992*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136992*0 + 3*352*FLEN/8, x4, x1, x2)

inst_45665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:136995*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136995*0 + 3*353*FLEN/8, x4, x1, x2)

inst_45666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:136998*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136998*0 + 3*354*FLEN/8, x4, x1, x2)

inst_45667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:137001*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137001*0 + 3*355*FLEN/8, x4, x1, x2)

inst_45668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:137004*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137004*0 + 3*356*FLEN/8, x4, x1, x2)

inst_45669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:137007*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137007*0 + 3*357*FLEN/8, x4, x1, x2)

inst_45670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:137010*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137010*0 + 3*358*FLEN/8, x4, x1, x2)

inst_45671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:137013*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137013*0 + 3*359*FLEN/8, x4, x1, x2)

inst_45672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:137016*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137016*0 + 3*360*FLEN/8, x4, x1, x2)

inst_45673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:137019*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137019*0 + 3*361*FLEN/8, x4, x1, x2)

inst_45674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:137022*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137022*0 + 3*362*FLEN/8, x4, x1, x2)

inst_45675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:137025*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137025*0 + 3*363*FLEN/8, x4, x1, x2)

inst_45676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:137028*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137028*0 + 3*364*FLEN/8, x4, x1, x2)

inst_45677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:137031*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137031*0 + 3*365*FLEN/8, x4, x1, x2)

inst_45678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:137034*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137034*0 + 3*366*FLEN/8, x4, x1, x2)

inst_45679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:137037*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137037*0 + 3*367*FLEN/8, x4, x1, x2)

inst_45680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:137040*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137040*0 + 3*368*FLEN/8, x4, x1, x2)

inst_45681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:137043*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137043*0 + 3*369*FLEN/8, x4, x1, x2)

inst_45682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:137046*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137046*0 + 3*370*FLEN/8, x4, x1, x2)

inst_45683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:137049*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137049*0 + 3*371*FLEN/8, x4, x1, x2)

inst_45684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:137052*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137052*0 + 3*372*FLEN/8, x4, x1, x2)

inst_45685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:137055*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137055*0 + 3*373*FLEN/8, x4, x1, x2)

inst_45686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:137058*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137058*0 + 3*374*FLEN/8, x4, x1, x2)

inst_45687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:137061*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137061*0 + 3*375*FLEN/8, x4, x1, x2)

inst_45688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:137064*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137064*0 + 3*376*FLEN/8, x4, x1, x2)

inst_45689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:137067*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137067*0 + 3*377*FLEN/8, x4, x1, x2)

inst_45690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:137070*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137070*0 + 3*378*FLEN/8, x4, x1, x2)

inst_45691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:137073*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137073*0 + 3*379*FLEN/8, x4, x1, x2)

inst_45692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:137076*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137076*0 + 3*380*FLEN/8, x4, x1, x2)

inst_45693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:137079*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137079*0 + 3*381*FLEN/8, x4, x1, x2)

inst_45694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:137082*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137082*0 + 3*382*FLEN/8, x4, x1, x2)

inst_45695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:137085*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137085*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_45696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:137088*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137088*0 + 3*384*FLEN/8, x4, x1, x2)

inst_45697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:137091*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137091*0 + 3*385*FLEN/8, x4, x1, x2)

inst_45698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:137094*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137094*0 + 3*386*FLEN/8, x4, x1, x2)

inst_45699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:137097*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137097*0 + 3*387*FLEN/8, x4, x1, x2)

inst_45700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:137100*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137100*0 + 3*388*FLEN/8, x4, x1, x2)

inst_45701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:137103*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137103*0 + 3*389*FLEN/8, x4, x1, x2)

inst_45702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000003ffffff; valaddr_reg:x3; val_offset:137106*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137106*0 + 3*390*FLEN/8, x4, x1, x2)

inst_45703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000007ffffff; valaddr_reg:x3; val_offset:137109*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137109*0 + 3*391*FLEN/8, x4, x1, x2)

inst_45704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000000fffffff; valaddr_reg:x3; val_offset:137112*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137112*0 + 3*392*FLEN/8, x4, x1, x2)

inst_45705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000001fffffff; valaddr_reg:x3; val_offset:137115*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137115*0 + 3*393*FLEN/8, x4, x1, x2)

inst_45706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000003fffffff; valaddr_reg:x3; val_offset:137118*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137118*0 + 3*394*FLEN/8, x4, x1, x2)

inst_45707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000007fffffff; valaddr_reg:x3; val_offset:137121*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137121*0 + 3*395*FLEN/8, x4, x1, x2)

inst_45708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700000ffffffff; valaddr_reg:x3; val_offset:137124*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137124*0 + 3*396*FLEN/8, x4, x1, x2)

inst_45709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700001ffffffff; valaddr_reg:x3; val_offset:137127*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137127*0 + 3*397*FLEN/8, x4, x1, x2)

inst_45710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700003ffffffff; valaddr_reg:x3; val_offset:137130*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137130*0 + 3*398*FLEN/8, x4, x1, x2)

inst_45711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700007ffffffff; valaddr_reg:x3; val_offset:137133*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137133*0 + 3*399*FLEN/8, x4, x1, x2)

inst_45712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370000fffffffff; valaddr_reg:x3; val_offset:137136*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137136*0 + 3*400*FLEN/8, x4, x1, x2)

inst_45713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370001fffffffff; valaddr_reg:x3; val_offset:137139*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137139*0 + 3*401*FLEN/8, x4, x1, x2)

inst_45714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370003fffffffff; valaddr_reg:x3; val_offset:137142*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137142*0 + 3*402*FLEN/8, x4, x1, x2)

inst_45715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370007fffffffff; valaddr_reg:x3; val_offset:137145*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137145*0 + 3*403*FLEN/8, x4, x1, x2)

inst_45716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37000ffffffffff; valaddr_reg:x3; val_offset:137148*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137148*0 + 3*404*FLEN/8, x4, x1, x2)

inst_45717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37001ffffffffff; valaddr_reg:x3; val_offset:137151*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137151*0 + 3*405*FLEN/8, x4, x1, x2)

inst_45718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37003ffffffffff; valaddr_reg:x3; val_offset:137154*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137154*0 + 3*406*FLEN/8, x4, x1, x2)

inst_45719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37007ffffffffff; valaddr_reg:x3; val_offset:137157*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137157*0 + 3*407*FLEN/8, x4, x1, x2)

inst_45720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3700fffffffffff; valaddr_reg:x3; val_offset:137160*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137160*0 + 3*408*FLEN/8, x4, x1, x2)

inst_45721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3701fffffffffff; valaddr_reg:x3; val_offset:137163*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137163*0 + 3*409*FLEN/8, x4, x1, x2)

inst_45722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3703fffffffffff; valaddr_reg:x3; val_offset:137166*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137166*0 + 3*410*FLEN/8, x4, x1, x2)

inst_45723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x3707fffffffffff; valaddr_reg:x3; val_offset:137169*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137169*0 + 3*411*FLEN/8, x4, x1, x2)

inst_45724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x370ffffffffffff; valaddr_reg:x3; val_offset:137172*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137172*0 + 3*412*FLEN/8, x4, x1, x2)

inst_45725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x371ffffffffffff; valaddr_reg:x3; val_offset:137175*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137175*0 + 3*413*FLEN/8, x4, x1, x2)

inst_45726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x373ffffffffffff; valaddr_reg:x3; val_offset:137178*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137178*0 + 3*414*FLEN/8, x4, x1, x2)

inst_45727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x377ffffffffffff; valaddr_reg:x3; val_offset:137181*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137181*0 + 3*415*FLEN/8, x4, x1, x2)

inst_45728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x378000000000000; valaddr_reg:x3; val_offset:137184*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137184*0 + 3*416*FLEN/8, x4, x1, x2)

inst_45729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37c000000000000; valaddr_reg:x3; val_offset:137187*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137187*0 + 3*417*FLEN/8, x4, x1, x2)

inst_45730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37e000000000000; valaddr_reg:x3; val_offset:137190*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137190*0 + 3*418*FLEN/8, x4, x1, x2)

inst_45731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37f000000000000; valaddr_reg:x3; val_offset:137193*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137193*0 + 3*419*FLEN/8, x4, x1, x2)

inst_45732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37f800000000000; valaddr_reg:x3; val_offset:137196*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137196*0 + 3*420*FLEN/8, x4, x1, x2)

inst_45733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fc00000000000; valaddr_reg:x3; val_offset:137199*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137199*0 + 3*421*FLEN/8, x4, x1, x2)

inst_45734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fe00000000000; valaddr_reg:x3; val_offset:137202*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137202*0 + 3*422*FLEN/8, x4, x1, x2)

inst_45735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ff00000000000; valaddr_reg:x3; val_offset:137205*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137205*0 + 3*423*FLEN/8, x4, x1, x2)

inst_45736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ff80000000000; valaddr_reg:x3; val_offset:137208*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137208*0 + 3*424*FLEN/8, x4, x1, x2)

inst_45737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffc0000000000; valaddr_reg:x3; val_offset:137211*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137211*0 + 3*425*FLEN/8, x4, x1, x2)

inst_45738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffe0000000000; valaddr_reg:x3; val_offset:137214*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137214*0 + 3*426*FLEN/8, x4, x1, x2)

inst_45739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fff0000000000; valaddr_reg:x3; val_offset:137217*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137217*0 + 3*427*FLEN/8, x4, x1, x2)

inst_45740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fff8000000000; valaddr_reg:x3; val_offset:137220*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137220*0 + 3*428*FLEN/8, x4, x1, x2)

inst_45741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffc000000000; valaddr_reg:x3; val_offset:137223*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137223*0 + 3*429*FLEN/8, x4, x1, x2)

inst_45742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffe000000000; valaddr_reg:x3; val_offset:137226*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137226*0 + 3*430*FLEN/8, x4, x1, x2)

inst_45743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffff000000000; valaddr_reg:x3; val_offset:137229*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137229*0 + 3*431*FLEN/8, x4, x1, x2)

inst_45744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffff800000000; valaddr_reg:x3; val_offset:137232*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137232*0 + 3*432*FLEN/8, x4, x1, x2)

inst_45745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffc00000000; valaddr_reg:x3; val_offset:137235*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137235*0 + 3*433*FLEN/8, x4, x1, x2)

inst_45746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffe00000000; valaddr_reg:x3; val_offset:137238*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137238*0 + 3*434*FLEN/8, x4, x1, x2)

inst_45747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffff00000000; valaddr_reg:x3; val_offset:137241*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137241*0 + 3*435*FLEN/8, x4, x1, x2)

inst_45748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffff80000000; valaddr_reg:x3; val_offset:137244*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137244*0 + 3*436*FLEN/8, x4, x1, x2)

inst_45749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffc0000000; valaddr_reg:x3; val_offset:137247*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137247*0 + 3*437*FLEN/8, x4, x1, x2)

inst_45750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffe0000000; valaddr_reg:x3; val_offset:137250*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137250*0 + 3*438*FLEN/8, x4, x1, x2)

inst_45751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffff0000000; valaddr_reg:x3; val_offset:137253*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137253*0 + 3*439*FLEN/8, x4, x1, x2)

inst_45752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffff8000000; valaddr_reg:x3; val_offset:137256*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137256*0 + 3*440*FLEN/8, x4, x1, x2)

inst_45753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffc000000; valaddr_reg:x3; val_offset:137259*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137259*0 + 3*441*FLEN/8, x4, x1, x2)

inst_45754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffe000000; valaddr_reg:x3; val_offset:137262*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137262*0 + 3*442*FLEN/8, x4, x1, x2)

inst_45755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffff000000; valaddr_reg:x3; val_offset:137265*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137265*0 + 3*443*FLEN/8, x4, x1, x2)

inst_45756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffff800000; valaddr_reg:x3; val_offset:137268*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137268*0 + 3*444*FLEN/8, x4, x1, x2)

inst_45757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffc00000; valaddr_reg:x3; val_offset:137271*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137271*0 + 3*445*FLEN/8, x4, x1, x2)

inst_45758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffe00000; valaddr_reg:x3; val_offset:137274*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137274*0 + 3*446*FLEN/8, x4, x1, x2)

inst_45759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffff00000; valaddr_reg:x3; val_offset:137277*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137277*0 + 3*447*FLEN/8, x4, x1, x2)

inst_45760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffff80000; valaddr_reg:x3; val_offset:137280*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137280*0 + 3*448*FLEN/8, x4, x1, x2)

inst_45761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffc0000; valaddr_reg:x3; val_offset:137283*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137283*0 + 3*449*FLEN/8, x4, x1, x2)

inst_45762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffe0000; valaddr_reg:x3; val_offset:137286*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137286*0 + 3*450*FLEN/8, x4, x1, x2)

inst_45763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffff0000; valaddr_reg:x3; val_offset:137289*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137289*0 + 3*451*FLEN/8, x4, x1, x2)

inst_45764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffff8000; valaddr_reg:x3; val_offset:137292*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137292*0 + 3*452*FLEN/8, x4, x1, x2)

inst_45765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffffc000; valaddr_reg:x3; val_offset:137295*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137295*0 + 3*453*FLEN/8, x4, x1, x2)

inst_45766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffffe000; valaddr_reg:x3; val_offset:137298*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137298*0 + 3*454*FLEN/8, x4, x1, x2)

inst_45767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffff000; valaddr_reg:x3; val_offset:137301*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137301*0 + 3*455*FLEN/8, x4, x1, x2)

inst_45768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffff800; valaddr_reg:x3; val_offset:137304*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137304*0 + 3*456*FLEN/8, x4, x1, x2)

inst_45769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffffc00; valaddr_reg:x3; val_offset:137307*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137307*0 + 3*457*FLEN/8, x4, x1, x2)

inst_45770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffffe00; valaddr_reg:x3; val_offset:137310*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137310*0 + 3*458*FLEN/8, x4, x1, x2)

inst_45771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffffff00; valaddr_reg:x3; val_offset:137313*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137313*0 + 3*459*FLEN/8, x4, x1, x2)

inst_45772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffffff80; valaddr_reg:x3; val_offset:137316*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137316*0 + 3*460*FLEN/8, x4, x1, x2)

inst_45773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffffffc0; valaddr_reg:x3; val_offset:137319*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137319*0 + 3*461*FLEN/8, x4, x1, x2)

inst_45774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffffffe0; valaddr_reg:x3; val_offset:137322*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137322*0 + 3*462*FLEN/8, x4, x1, x2)

inst_45775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffffff0; valaddr_reg:x3; val_offset:137325*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137325*0 + 3*463*FLEN/8, x4, x1, x2)

inst_45776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffffff8; valaddr_reg:x3; val_offset:137328*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137328*0 + 3*464*FLEN/8, x4, x1, x2)

inst_45777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffffffc; valaddr_reg:x3; val_offset:137331*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137331*0 + 3*465*FLEN/8, x4, x1, x2)

inst_45778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37ffffffffffffe; valaddr_reg:x3; val_offset:137334*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137334*0 + 3*466*FLEN/8, x4, x1, x2)

inst_45779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd123b48fc2c01 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d123b48fc2c01; op2val:0x0;
op3val:0x37fffffffffffff; valaddr_reg:x3; val_offset:137337*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137337*0 + 3*467*FLEN/8, x4, x1, x2)

inst_45780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:137340*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137340*0 + 3*468*FLEN/8, x4, x1, x2)

inst_45781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:137343*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137343*0 + 3*469*FLEN/8, x4, x1, x2)

inst_45782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:137346*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137346*0 + 3*470*FLEN/8, x4, x1, x2)

inst_45783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:137349*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137349*0 + 3*471*FLEN/8, x4, x1, x2)

inst_45784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:137352*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137352*0 + 3*472*FLEN/8, x4, x1, x2)

inst_45785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:137355*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137355*0 + 3*473*FLEN/8, x4, x1, x2)

inst_45786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:137358*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137358*0 + 3*474*FLEN/8, x4, x1, x2)

inst_45787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:137361*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137361*0 + 3*475*FLEN/8, x4, x1, x2)

inst_45788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:137364*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137364*0 + 3*476*FLEN/8, x4, x1, x2)

inst_45789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:137367*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137367*0 + 3*477*FLEN/8, x4, x1, x2)

inst_45790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:137370*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137370*0 + 3*478*FLEN/8, x4, x1, x2)

inst_45791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:137373*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137373*0 + 3*479*FLEN/8, x4, x1, x2)

inst_45792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:137376*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137376*0 + 3*480*FLEN/8, x4, x1, x2)

inst_45793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:137379*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137379*0 + 3*481*FLEN/8, x4, x1, x2)

inst_45794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:137382*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137382*0 + 3*482*FLEN/8, x4, x1, x2)

inst_45795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:137385*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137385*0 + 3*483*FLEN/8, x4, x1, x2)

inst_45796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:137388*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137388*0 + 3*484*FLEN/8, x4, x1, x2)

inst_45797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:137391*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137391*0 + 3*485*FLEN/8, x4, x1, x2)

inst_45798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:137394*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137394*0 + 3*486*FLEN/8, x4, x1, x2)

inst_45799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:137397*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137397*0 + 3*487*FLEN/8, x4, x1, x2)

inst_45800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:137400*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137400*0 + 3*488*FLEN/8, x4, x1, x2)

inst_45801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:137403*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137403*0 + 3*489*FLEN/8, x4, x1, x2)

inst_45802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000000000000; valaddr_reg:x3; val_offset:137406*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137406*0 + 3*490*FLEN/8, x4, x1, x2)

inst_45803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000000000001; valaddr_reg:x3; val_offset:137409*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137409*0 + 3*491*FLEN/8, x4, x1, x2)

inst_45804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000000000003; valaddr_reg:x3; val_offset:137412*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137412*0 + 3*492*FLEN/8, x4, x1, x2)

inst_45805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000000000007; valaddr_reg:x3; val_offset:137415*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137415*0 + 3*493*FLEN/8, x4, x1, x2)

inst_45806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000000000000f; valaddr_reg:x3; val_offset:137418*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137418*0 + 3*494*FLEN/8, x4, x1, x2)

inst_45807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000000000001f; valaddr_reg:x3; val_offset:137421*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137421*0 + 3*495*FLEN/8, x4, x1, x2)

inst_45808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000000000003f; valaddr_reg:x3; val_offset:137424*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137424*0 + 3*496*FLEN/8, x4, x1, x2)

inst_45809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000000000007f; valaddr_reg:x3; val_offset:137427*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137427*0 + 3*497*FLEN/8, x4, x1, x2)

inst_45810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00000000000ff; valaddr_reg:x3; val_offset:137430*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137430*0 + 3*498*FLEN/8, x4, x1, x2)

inst_45811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00000000001ff; valaddr_reg:x3; val_offset:137433*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137433*0 + 3*499*FLEN/8, x4, x1, x2)

inst_45812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00000000003ff; valaddr_reg:x3; val_offset:137436*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137436*0 + 3*500*FLEN/8, x4, x1, x2)

inst_45813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00000000007ff; valaddr_reg:x3; val_offset:137439*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137439*0 + 3*501*FLEN/8, x4, x1, x2)

inst_45814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000000000fff; valaddr_reg:x3; val_offset:137442*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137442*0 + 3*502*FLEN/8, x4, x1, x2)

inst_45815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000000001fff; valaddr_reg:x3; val_offset:137445*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137445*0 + 3*503*FLEN/8, x4, x1, x2)

inst_45816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000000003fff; valaddr_reg:x3; val_offset:137448*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137448*0 + 3*504*FLEN/8, x4, x1, x2)

inst_45817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000000007fff; valaddr_reg:x3; val_offset:137451*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137451*0 + 3*505*FLEN/8, x4, x1, x2)

inst_45818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000000000ffff; valaddr_reg:x3; val_offset:137454*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137454*0 + 3*506*FLEN/8, x4, x1, x2)

inst_45819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000000001ffff; valaddr_reg:x3; val_offset:137457*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137457*0 + 3*507*FLEN/8, x4, x1, x2)

inst_45820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000000003ffff; valaddr_reg:x3; val_offset:137460*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137460*0 + 3*508*FLEN/8, x4, x1, x2)

inst_45821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000000007ffff; valaddr_reg:x3; val_offset:137463*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137463*0 + 3*509*FLEN/8, x4, x1, x2)

inst_45822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00000000fffff; valaddr_reg:x3; val_offset:137466*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137466*0 + 3*510*FLEN/8, x4, x1, x2)

inst_45823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00000001fffff; valaddr_reg:x3; val_offset:137469*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137469*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_45824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00000003fffff; valaddr_reg:x3; val_offset:137472*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137472*0 + 3*512*FLEN/8, x4, x1, x2)

inst_45825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00000007fffff; valaddr_reg:x3; val_offset:137475*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137475*0 + 3*513*FLEN/8, x4, x1, x2)

inst_45826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000000ffffff; valaddr_reg:x3; val_offset:137478*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137478*0 + 3*514*FLEN/8, x4, x1, x2)

inst_45827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000001ffffff; valaddr_reg:x3; val_offset:137481*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137481*0 + 3*515*FLEN/8, x4, x1, x2)

inst_45828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000003ffffff; valaddr_reg:x3; val_offset:137484*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137484*0 + 3*516*FLEN/8, x4, x1, x2)

inst_45829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000007ffffff; valaddr_reg:x3; val_offset:137487*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137487*0 + 3*517*FLEN/8, x4, x1, x2)

inst_45830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000000fffffff; valaddr_reg:x3; val_offset:137490*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137490*0 + 3*518*FLEN/8, x4, x1, x2)

inst_45831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000001fffffff; valaddr_reg:x3; val_offset:137493*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137493*0 + 3*519*FLEN/8, x4, x1, x2)

inst_45832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000003fffffff; valaddr_reg:x3; val_offset:137496*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137496*0 + 3*520*FLEN/8, x4, x1, x2)

inst_45833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000007fffffff; valaddr_reg:x3; val_offset:137499*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137499*0 + 3*521*FLEN/8, x4, x1, x2)

inst_45834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00000ffffffff; valaddr_reg:x3; val_offset:137502*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137502*0 + 3*522*FLEN/8, x4, x1, x2)

inst_45835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00001ffffffff; valaddr_reg:x3; val_offset:137505*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137505*0 + 3*523*FLEN/8, x4, x1, x2)

inst_45836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00003ffffffff; valaddr_reg:x3; val_offset:137508*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137508*0 + 3*524*FLEN/8, x4, x1, x2)

inst_45837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00007ffffffff; valaddr_reg:x3; val_offset:137511*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137511*0 + 3*525*FLEN/8, x4, x1, x2)

inst_45838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0000fffffffff; valaddr_reg:x3; val_offset:137514*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137514*0 + 3*526*FLEN/8, x4, x1, x2)

inst_45839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0001fffffffff; valaddr_reg:x3; val_offset:137517*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137517*0 + 3*527*FLEN/8, x4, x1, x2)

inst_45840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0003fffffffff; valaddr_reg:x3; val_offset:137520*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137520*0 + 3*528*FLEN/8, x4, x1, x2)

inst_45841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0007fffffffff; valaddr_reg:x3; val_offset:137523*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137523*0 + 3*529*FLEN/8, x4, x1, x2)

inst_45842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a000ffffffffff; valaddr_reg:x3; val_offset:137526*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137526*0 + 3*530*FLEN/8, x4, x1, x2)

inst_45843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a001ffffffffff; valaddr_reg:x3; val_offset:137529*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137529*0 + 3*531*FLEN/8, x4, x1, x2)

inst_45844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a003ffffffffff; valaddr_reg:x3; val_offset:137532*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137532*0 + 3*532*FLEN/8, x4, x1, x2)

inst_45845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a007ffffffffff; valaddr_reg:x3; val_offset:137535*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137535*0 + 3*533*FLEN/8, x4, x1, x2)

inst_45846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a00fffffffffff; valaddr_reg:x3; val_offset:137538*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137538*0 + 3*534*FLEN/8, x4, x1, x2)

inst_45847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a01fffffffffff; valaddr_reg:x3; val_offset:137541*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137541*0 + 3*535*FLEN/8, x4, x1, x2)

inst_45848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a03fffffffffff; valaddr_reg:x3; val_offset:137544*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137544*0 + 3*536*FLEN/8, x4, x1, x2)

inst_45849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a07fffffffffff; valaddr_reg:x3; val_offset:137547*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137547*0 + 3*537*FLEN/8, x4, x1, x2)

inst_45850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a0ffffffffffff; valaddr_reg:x3; val_offset:137550*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137550*0 + 3*538*FLEN/8, x4, x1, x2)

inst_45851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a1ffffffffffff; valaddr_reg:x3; val_offset:137553*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137553*0 + 3*539*FLEN/8, x4, x1, x2)

inst_45852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a3ffffffffffff; valaddr_reg:x3; val_offset:137556*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137556*0 + 3*540*FLEN/8, x4, x1, x2)

inst_45853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a7ffffffffffff; valaddr_reg:x3; val_offset:137559*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137559*0 + 3*541*FLEN/8, x4, x1, x2)

inst_45854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2a8000000000000; valaddr_reg:x3; val_offset:137562*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137562*0 + 3*542*FLEN/8, x4, x1, x2)

inst_45855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2ac000000000000; valaddr_reg:x3; val_offset:137565*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137565*0 + 3*543*FLEN/8, x4, x1, x2)

inst_45856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2ae000000000000; valaddr_reg:x3; val_offset:137568*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137568*0 + 3*544*FLEN/8, x4, x1, x2)

inst_45857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2af000000000000; valaddr_reg:x3; val_offset:137571*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137571*0 + 3*545*FLEN/8, x4, x1, x2)

inst_45858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2af800000000000; valaddr_reg:x3; val_offset:137574*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137574*0 + 3*546*FLEN/8, x4, x1, x2)

inst_45859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afc00000000000; valaddr_reg:x3; val_offset:137577*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137577*0 + 3*547*FLEN/8, x4, x1, x2)

inst_45860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afe00000000000; valaddr_reg:x3; val_offset:137580*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137580*0 + 3*548*FLEN/8, x4, x1, x2)

inst_45861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2aff00000000000; valaddr_reg:x3; val_offset:137583*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137583*0 + 3*549*FLEN/8, x4, x1, x2)

inst_45862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2aff80000000000; valaddr_reg:x3; val_offset:137586*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137586*0 + 3*550*FLEN/8, x4, x1, x2)

inst_45863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affc0000000000; valaddr_reg:x3; val_offset:137589*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137589*0 + 3*551*FLEN/8, x4, x1, x2)

inst_45864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affe0000000000; valaddr_reg:x3; val_offset:137592*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137592*0 + 3*552*FLEN/8, x4, x1, x2)

inst_45865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afff0000000000; valaddr_reg:x3; val_offset:137595*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137595*0 + 3*553*FLEN/8, x4, x1, x2)

inst_45866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afff8000000000; valaddr_reg:x3; val_offset:137598*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137598*0 + 3*554*FLEN/8, x4, x1, x2)

inst_45867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffc000000000; valaddr_reg:x3; val_offset:137601*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137601*0 + 3*555*FLEN/8, x4, x1, x2)

inst_45868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffe000000000; valaddr_reg:x3; val_offset:137604*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137604*0 + 3*556*FLEN/8, x4, x1, x2)

inst_45869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affff000000000; valaddr_reg:x3; val_offset:137607*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137607*0 + 3*557*FLEN/8, x4, x1, x2)

inst_45870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affff800000000; valaddr_reg:x3; val_offset:137610*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137610*0 + 3*558*FLEN/8, x4, x1, x2)

inst_45871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffc00000000; valaddr_reg:x3; val_offset:137613*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137613*0 + 3*559*FLEN/8, x4, x1, x2)

inst_45872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffe00000000; valaddr_reg:x3; val_offset:137616*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137616*0 + 3*560*FLEN/8, x4, x1, x2)

inst_45873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffff00000000; valaddr_reg:x3; val_offset:137619*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137619*0 + 3*561*FLEN/8, x4, x1, x2)

inst_45874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffff80000000; valaddr_reg:x3; val_offset:137622*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137622*0 + 3*562*FLEN/8, x4, x1, x2)

inst_45875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffc0000000; valaddr_reg:x3; val_offset:137625*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137625*0 + 3*563*FLEN/8, x4, x1, x2)

inst_45876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffe0000000; valaddr_reg:x3; val_offset:137628*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137628*0 + 3*564*FLEN/8, x4, x1, x2)

inst_45877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffff0000000; valaddr_reg:x3; val_offset:137631*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137631*0 + 3*565*FLEN/8, x4, x1, x2)

inst_45878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffff8000000; valaddr_reg:x3; val_offset:137634*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137634*0 + 3*566*FLEN/8, x4, x1, x2)

inst_45879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffc000000; valaddr_reg:x3; val_offset:137637*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137637*0 + 3*567*FLEN/8, x4, x1, x2)

inst_45880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffe000000; valaddr_reg:x3; val_offset:137640*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137640*0 + 3*568*FLEN/8, x4, x1, x2)

inst_45881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffff000000; valaddr_reg:x3; val_offset:137643*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137643*0 + 3*569*FLEN/8, x4, x1, x2)

inst_45882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffff800000; valaddr_reg:x3; val_offset:137646*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137646*0 + 3*570*FLEN/8, x4, x1, x2)

inst_45883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffc00000; valaddr_reg:x3; val_offset:137649*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137649*0 + 3*571*FLEN/8, x4, x1, x2)

inst_45884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffe00000; valaddr_reg:x3; val_offset:137652*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137652*0 + 3*572*FLEN/8, x4, x1, x2)

inst_45885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffff00000; valaddr_reg:x3; val_offset:137655*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137655*0 + 3*573*FLEN/8, x4, x1, x2)

inst_45886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffff80000; valaddr_reg:x3; val_offset:137658*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137658*0 + 3*574*FLEN/8, x4, x1, x2)

inst_45887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffc0000; valaddr_reg:x3; val_offset:137661*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137661*0 + 3*575*FLEN/8, x4, x1, x2)

inst_45888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffe0000; valaddr_reg:x3; val_offset:137664*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137664*0 + 3*576*FLEN/8, x4, x1, x2)

inst_45889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffff0000; valaddr_reg:x3; val_offset:137667*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137667*0 + 3*577*FLEN/8, x4, x1, x2)

inst_45890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffff8000; valaddr_reg:x3; val_offset:137670*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137670*0 + 3*578*FLEN/8, x4, x1, x2)

inst_45891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffffc000; valaddr_reg:x3; val_offset:137673*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137673*0 + 3*579*FLEN/8, x4, x1, x2)

inst_45892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffffe000; valaddr_reg:x3; val_offset:137676*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137676*0 + 3*580*FLEN/8, x4, x1, x2)

inst_45893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffff000; valaddr_reg:x3; val_offset:137679*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137679*0 + 3*581*FLEN/8, x4, x1, x2)

inst_45894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffff800; valaddr_reg:x3; val_offset:137682*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137682*0 + 3*582*FLEN/8, x4, x1, x2)

inst_45895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffffc00; valaddr_reg:x3; val_offset:137685*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137685*0 + 3*583*FLEN/8, x4, x1, x2)

inst_45896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffffe00; valaddr_reg:x3; val_offset:137688*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137688*0 + 3*584*FLEN/8, x4, x1, x2)

inst_45897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffffff00; valaddr_reg:x3; val_offset:137691*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137691*0 + 3*585*FLEN/8, x4, x1, x2)

inst_45898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffffff80; valaddr_reg:x3; val_offset:137694*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137694*0 + 3*586*FLEN/8, x4, x1, x2)

inst_45899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffffffc0; valaddr_reg:x3; val_offset:137697*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137697*0 + 3*587*FLEN/8, x4, x1, x2)

inst_45900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffffffe0; valaddr_reg:x3; val_offset:137700*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137700*0 + 3*588*FLEN/8, x4, x1, x2)

inst_45901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffffff0; valaddr_reg:x3; val_offset:137703*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137703*0 + 3*589*FLEN/8, x4, x1, x2)

inst_45902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffffff8; valaddr_reg:x3; val_offset:137706*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137706*0 + 3*590*FLEN/8, x4, x1, x2)

inst_45903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffffffc; valaddr_reg:x3; val_offset:137709*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137709*0 + 3*591*FLEN/8, x4, x1, x2)

inst_45904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2affffffffffffe; valaddr_reg:x3; val_offset:137712*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137712*0 + 3*592*FLEN/8, x4, x1, x2)

inst_45905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd24e14f31fe89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d24e14f31fe89; op2val:0x0;
op3val:0x2afffffffffffff; valaddr_reg:x3; val_offset:137715*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137715*0 + 3*593*FLEN/8, x4, x1, x2)

inst_45906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:137718*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137718*0 + 3*594*FLEN/8, x4, x1, x2)

inst_45907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:137721*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137721*0 + 3*595*FLEN/8, x4, x1, x2)

inst_45908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:137724*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137724*0 + 3*596*FLEN/8, x4, x1, x2)

inst_45909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:137727*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137727*0 + 3*597*FLEN/8, x4, x1, x2)

inst_45910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:137730*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137730*0 + 3*598*FLEN/8, x4, x1, x2)

inst_45911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:137733*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137733*0 + 3*599*FLEN/8, x4, x1, x2)

inst_45912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:137736*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137736*0 + 3*600*FLEN/8, x4, x1, x2)

inst_45913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:137739*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137739*0 + 3*601*FLEN/8, x4, x1, x2)

inst_45914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:137742*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137742*0 + 3*602*FLEN/8, x4, x1, x2)

inst_45915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:137745*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137745*0 + 3*603*FLEN/8, x4, x1, x2)

inst_45916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:137748*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137748*0 + 3*604*FLEN/8, x4, x1, x2)

inst_45917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:137751*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137751*0 + 3*605*FLEN/8, x4, x1, x2)

inst_45918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:137754*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137754*0 + 3*606*FLEN/8, x4, x1, x2)

inst_45919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:137757*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137757*0 + 3*607*FLEN/8, x4, x1, x2)

inst_45920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:137760*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137760*0 + 3*608*FLEN/8, x4, x1, x2)

inst_45921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:137763*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137763*0 + 3*609*FLEN/8, x4, x1, x2)

inst_45922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:137766*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137766*0 + 3*610*FLEN/8, x4, x1, x2)

inst_45923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:137769*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137769*0 + 3*611*FLEN/8, x4, x1, x2)

inst_45924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:137772*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137772*0 + 3*612*FLEN/8, x4, x1, x2)

inst_45925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:137775*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137775*0 + 3*613*FLEN/8, x4, x1, x2)

inst_45926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:137778*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137778*0 + 3*614*FLEN/8, x4, x1, x2)

inst_45927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:137781*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137781*0 + 3*615*FLEN/8, x4, x1, x2)

inst_45928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000000000000; valaddr_reg:x3; val_offset:137784*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137784*0 + 3*616*FLEN/8, x4, x1, x2)

inst_45929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000000000001; valaddr_reg:x3; val_offset:137787*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137787*0 + 3*617*FLEN/8, x4, x1, x2)

inst_45930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000000000003; valaddr_reg:x3; val_offset:137790*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137790*0 + 3*618*FLEN/8, x4, x1, x2)

inst_45931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000000000007; valaddr_reg:x3; val_offset:137793*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137793*0 + 3*619*FLEN/8, x4, x1, x2)

inst_45932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000000000000f; valaddr_reg:x3; val_offset:137796*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137796*0 + 3*620*FLEN/8, x4, x1, x2)

inst_45933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000000000001f; valaddr_reg:x3; val_offset:137799*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137799*0 + 3*621*FLEN/8, x4, x1, x2)

inst_45934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000000000003f; valaddr_reg:x3; val_offset:137802*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137802*0 + 3*622*FLEN/8, x4, x1, x2)

inst_45935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000000000007f; valaddr_reg:x3; val_offset:137805*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137805*0 + 3*623*FLEN/8, x4, x1, x2)

inst_45936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00000000000ff; valaddr_reg:x3; val_offset:137808*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137808*0 + 3*624*FLEN/8, x4, x1, x2)

inst_45937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00000000001ff; valaddr_reg:x3; val_offset:137811*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137811*0 + 3*625*FLEN/8, x4, x1, x2)

inst_45938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00000000003ff; valaddr_reg:x3; val_offset:137814*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137814*0 + 3*626*FLEN/8, x4, x1, x2)

inst_45939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00000000007ff; valaddr_reg:x3; val_offset:137817*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137817*0 + 3*627*FLEN/8, x4, x1, x2)

inst_45940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000000000fff; valaddr_reg:x3; val_offset:137820*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137820*0 + 3*628*FLEN/8, x4, x1, x2)

inst_45941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000000001fff; valaddr_reg:x3; val_offset:137823*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137823*0 + 3*629*FLEN/8, x4, x1, x2)

inst_45942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000000003fff; valaddr_reg:x3; val_offset:137826*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137826*0 + 3*630*FLEN/8, x4, x1, x2)

inst_45943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000000007fff; valaddr_reg:x3; val_offset:137829*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137829*0 + 3*631*FLEN/8, x4, x1, x2)

inst_45944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000000000ffff; valaddr_reg:x3; val_offset:137832*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137832*0 + 3*632*FLEN/8, x4, x1, x2)

inst_45945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000000001ffff; valaddr_reg:x3; val_offset:137835*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137835*0 + 3*633*FLEN/8, x4, x1, x2)

inst_45946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000000003ffff; valaddr_reg:x3; val_offset:137838*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137838*0 + 3*634*FLEN/8, x4, x1, x2)

inst_45947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000000007ffff; valaddr_reg:x3; val_offset:137841*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137841*0 + 3*635*FLEN/8, x4, x1, x2)

inst_45948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00000000fffff; valaddr_reg:x3; val_offset:137844*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137844*0 + 3*636*FLEN/8, x4, x1, x2)

inst_45949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00000001fffff; valaddr_reg:x3; val_offset:137847*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137847*0 + 3*637*FLEN/8, x4, x1, x2)

inst_45950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00000003fffff; valaddr_reg:x3; val_offset:137850*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137850*0 + 3*638*FLEN/8, x4, x1, x2)

inst_45951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00000007fffff; valaddr_reg:x3; val_offset:137853*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137853*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_45952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000000ffffff; valaddr_reg:x3; val_offset:137856*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137856*0 + 3*640*FLEN/8, x4, x1, x2)

inst_45953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000001ffffff; valaddr_reg:x3; val_offset:137859*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137859*0 + 3*641*FLEN/8, x4, x1, x2)

inst_45954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000003ffffff; valaddr_reg:x3; val_offset:137862*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137862*0 + 3*642*FLEN/8, x4, x1, x2)

inst_45955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000007ffffff; valaddr_reg:x3; val_offset:137865*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137865*0 + 3*643*FLEN/8, x4, x1, x2)

inst_45956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000000fffffff; valaddr_reg:x3; val_offset:137868*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137868*0 + 3*644*FLEN/8, x4, x1, x2)

inst_45957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000001fffffff; valaddr_reg:x3; val_offset:137871*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137871*0 + 3*645*FLEN/8, x4, x1, x2)

inst_45958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000003fffffff; valaddr_reg:x3; val_offset:137874*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137874*0 + 3*646*FLEN/8, x4, x1, x2)

inst_45959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000007fffffff; valaddr_reg:x3; val_offset:137877*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137877*0 + 3*647*FLEN/8, x4, x1, x2)

inst_45960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00000ffffffff; valaddr_reg:x3; val_offset:137880*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137880*0 + 3*648*FLEN/8, x4, x1, x2)

inst_45961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00001ffffffff; valaddr_reg:x3; val_offset:137883*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137883*0 + 3*649*FLEN/8, x4, x1, x2)

inst_45962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00003ffffffff; valaddr_reg:x3; val_offset:137886*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137886*0 + 3*650*FLEN/8, x4, x1, x2)

inst_45963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00007ffffffff; valaddr_reg:x3; val_offset:137889*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137889*0 + 3*651*FLEN/8, x4, x1, x2)

inst_45964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0000fffffffff; valaddr_reg:x3; val_offset:137892*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137892*0 + 3*652*FLEN/8, x4, x1, x2)

inst_45965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0001fffffffff; valaddr_reg:x3; val_offset:137895*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137895*0 + 3*653*FLEN/8, x4, x1, x2)

inst_45966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0003fffffffff; valaddr_reg:x3; val_offset:137898*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137898*0 + 3*654*FLEN/8, x4, x1, x2)

inst_45967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0007fffffffff; valaddr_reg:x3; val_offset:137901*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137901*0 + 3*655*FLEN/8, x4, x1, x2)

inst_45968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d000ffffffffff; valaddr_reg:x3; val_offset:137904*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137904*0 + 3*656*FLEN/8, x4, x1, x2)

inst_45969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d001ffffffffff; valaddr_reg:x3; val_offset:137907*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137907*0 + 3*657*FLEN/8, x4, x1, x2)

inst_45970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d003ffffffffff; valaddr_reg:x3; val_offset:137910*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137910*0 + 3*658*FLEN/8, x4, x1, x2)

inst_45971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d007ffffffffff; valaddr_reg:x3; val_offset:137913*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137913*0 + 3*659*FLEN/8, x4, x1, x2)

inst_45972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d00fffffffffff; valaddr_reg:x3; val_offset:137916*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137916*0 + 3*660*FLEN/8, x4, x1, x2)

inst_45973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d01fffffffffff; valaddr_reg:x3; val_offset:137919*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137919*0 + 3*661*FLEN/8, x4, x1, x2)

inst_45974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d03fffffffffff; valaddr_reg:x3; val_offset:137922*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137922*0 + 3*662*FLEN/8, x4, x1, x2)

inst_45975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d07fffffffffff; valaddr_reg:x3; val_offset:137925*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137925*0 + 3*663*FLEN/8, x4, x1, x2)

inst_45976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d0ffffffffffff; valaddr_reg:x3; val_offset:137928*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137928*0 + 3*664*FLEN/8, x4, x1, x2)

inst_45977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d1ffffffffffff; valaddr_reg:x3; val_offset:137931*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137931*0 + 3*665*FLEN/8, x4, x1, x2)

inst_45978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d3ffffffffffff; valaddr_reg:x3; val_offset:137934*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137934*0 + 3*666*FLEN/8, x4, x1, x2)

inst_45979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d7ffffffffffff; valaddr_reg:x3; val_offset:137937*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137937*0 + 3*667*FLEN/8, x4, x1, x2)

inst_45980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83d8000000000000; valaddr_reg:x3; val_offset:137940*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137940*0 + 3*668*FLEN/8, x4, x1, x2)

inst_45981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dc000000000000; valaddr_reg:x3; val_offset:137943*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137943*0 + 3*669*FLEN/8, x4, x1, x2)

inst_45982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83de000000000000; valaddr_reg:x3; val_offset:137946*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137946*0 + 3*670*FLEN/8, x4, x1, x2)

inst_45983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83df000000000000; valaddr_reg:x3; val_offset:137949*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137949*0 + 3*671*FLEN/8, x4, x1, x2)

inst_45984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83df800000000000; valaddr_reg:x3; val_offset:137952*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137952*0 + 3*672*FLEN/8, x4, x1, x2)

inst_45985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfc00000000000; valaddr_reg:x3; val_offset:137955*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137955*0 + 3*673*FLEN/8, x4, x1, x2)

inst_45986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfe00000000000; valaddr_reg:x3; val_offset:137958*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137958*0 + 3*674*FLEN/8, x4, x1, x2)

inst_45987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dff00000000000; valaddr_reg:x3; val_offset:137961*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137961*0 + 3*675*FLEN/8, x4, x1, x2)

inst_45988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dff80000000000; valaddr_reg:x3; val_offset:137964*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137964*0 + 3*676*FLEN/8, x4, x1, x2)

inst_45989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffc0000000000; valaddr_reg:x3; val_offset:137967*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137967*0 + 3*677*FLEN/8, x4, x1, x2)

inst_45990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffe0000000000; valaddr_reg:x3; val_offset:137970*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137970*0 + 3*678*FLEN/8, x4, x1, x2)

inst_45991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfff0000000000; valaddr_reg:x3; val_offset:137973*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137973*0 + 3*679*FLEN/8, x4, x1, x2)

inst_45992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfff8000000000; valaddr_reg:x3; val_offset:137976*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137976*0 + 3*680*FLEN/8, x4, x1, x2)

inst_45993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffc000000000; valaddr_reg:x3; val_offset:137979*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137979*0 + 3*681*FLEN/8, x4, x1, x2)

inst_45994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffe000000000; valaddr_reg:x3; val_offset:137982*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137982*0 + 3*682*FLEN/8, x4, x1, x2)

inst_45995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffff000000000; valaddr_reg:x3; val_offset:137985*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137985*0 + 3*683*FLEN/8, x4, x1, x2)

inst_45996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffff800000000; valaddr_reg:x3; val_offset:137988*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137988*0 + 3*684*FLEN/8, x4, x1, x2)

inst_45997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffc00000000; valaddr_reg:x3; val_offset:137991*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137991*0 + 3*685*FLEN/8, x4, x1, x2)

inst_45998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffe00000000; valaddr_reg:x3; val_offset:137994*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137994*0 + 3*686*FLEN/8, x4, x1, x2)

inst_45999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffff00000000; valaddr_reg:x3; val_offset:137997*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137997*0 + 3*687*FLEN/8, x4, x1, x2)

inst_46000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffff80000000; valaddr_reg:x3; val_offset:138000*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138000*0 + 3*688*FLEN/8, x4, x1, x2)

inst_46001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffc0000000; valaddr_reg:x3; val_offset:138003*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138003*0 + 3*689*FLEN/8, x4, x1, x2)

inst_46002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffe0000000; valaddr_reg:x3; val_offset:138006*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138006*0 + 3*690*FLEN/8, x4, x1, x2)

inst_46003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffff0000000; valaddr_reg:x3; val_offset:138009*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138009*0 + 3*691*FLEN/8, x4, x1, x2)

inst_46004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffff8000000; valaddr_reg:x3; val_offset:138012*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138012*0 + 3*692*FLEN/8, x4, x1, x2)

inst_46005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffc000000; valaddr_reg:x3; val_offset:138015*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138015*0 + 3*693*FLEN/8, x4, x1, x2)

inst_46006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffe000000; valaddr_reg:x3; val_offset:138018*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138018*0 + 3*694*FLEN/8, x4, x1, x2)

inst_46007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffff000000; valaddr_reg:x3; val_offset:138021*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138021*0 + 3*695*FLEN/8, x4, x1, x2)

inst_46008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffff800000; valaddr_reg:x3; val_offset:138024*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138024*0 + 3*696*FLEN/8, x4, x1, x2)

inst_46009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffc00000; valaddr_reg:x3; val_offset:138027*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138027*0 + 3*697*FLEN/8, x4, x1, x2)

inst_46010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffe00000; valaddr_reg:x3; val_offset:138030*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138030*0 + 3*698*FLEN/8, x4, x1, x2)

inst_46011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffff00000; valaddr_reg:x3; val_offset:138033*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138033*0 + 3*699*FLEN/8, x4, x1, x2)

inst_46012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffff80000; valaddr_reg:x3; val_offset:138036*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138036*0 + 3*700*FLEN/8, x4, x1, x2)

inst_46013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffc0000; valaddr_reg:x3; val_offset:138039*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138039*0 + 3*701*FLEN/8, x4, x1, x2)

inst_46014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffe0000; valaddr_reg:x3; val_offset:138042*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138042*0 + 3*702*FLEN/8, x4, x1, x2)

inst_46015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffff0000; valaddr_reg:x3; val_offset:138045*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138045*0 + 3*703*FLEN/8, x4, x1, x2)

inst_46016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffff8000; valaddr_reg:x3; val_offset:138048*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138048*0 + 3*704*FLEN/8, x4, x1, x2)

inst_46017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffffc000; valaddr_reg:x3; val_offset:138051*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138051*0 + 3*705*FLEN/8, x4, x1, x2)

inst_46018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffffe000; valaddr_reg:x3; val_offset:138054*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138054*0 + 3*706*FLEN/8, x4, x1, x2)

inst_46019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffff000; valaddr_reg:x3; val_offset:138057*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138057*0 + 3*707*FLEN/8, x4, x1, x2)

inst_46020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffff800; valaddr_reg:x3; val_offset:138060*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138060*0 + 3*708*FLEN/8, x4, x1, x2)

inst_46021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffffc00; valaddr_reg:x3; val_offset:138063*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138063*0 + 3*709*FLEN/8, x4, x1, x2)

inst_46022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffffe00; valaddr_reg:x3; val_offset:138066*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138066*0 + 3*710*FLEN/8, x4, x1, x2)

inst_46023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffffff00; valaddr_reg:x3; val_offset:138069*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138069*0 + 3*711*FLEN/8, x4, x1, x2)

inst_46024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffffff80; valaddr_reg:x3; val_offset:138072*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138072*0 + 3*712*FLEN/8, x4, x1, x2)

inst_46025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffffffc0; valaddr_reg:x3; val_offset:138075*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138075*0 + 3*713*FLEN/8, x4, x1, x2)

inst_46026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffffffe0; valaddr_reg:x3; val_offset:138078*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138078*0 + 3*714*FLEN/8, x4, x1, x2)

inst_46027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffffff0; valaddr_reg:x3; val_offset:138081*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138081*0 + 3*715*FLEN/8, x4, x1, x2)

inst_46028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffffff8; valaddr_reg:x3; val_offset:138084*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138084*0 + 3*716*FLEN/8, x4, x1, x2)

inst_46029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffffffc; valaddr_reg:x3; val_offset:138087*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138087*0 + 3*717*FLEN/8, x4, x1, x2)

inst_46030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dffffffffffffe; valaddr_reg:x3; val_offset:138090*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138090*0 + 3*718*FLEN/8, x4, x1, x2)

inst_46031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3437ca639b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3437ca639b6b; op2val:0x8000;
op3val:0x83dfffffffffffff; valaddr_reg:x3; val_offset:138093*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138093*0 + 3*719*FLEN/8, x4, x1, x2)

inst_46032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000000000000; valaddr_reg:x3; val_offset:138096*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138096*0 + 3*720*FLEN/8, x4, x1, x2)

inst_46033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000000000001; valaddr_reg:x3; val_offset:138099*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138099*0 + 3*721*FLEN/8, x4, x1, x2)

inst_46034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000000000003; valaddr_reg:x3; val_offset:138102*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138102*0 + 3*722*FLEN/8, x4, x1, x2)

inst_46035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000000000007; valaddr_reg:x3; val_offset:138105*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138105*0 + 3*723*FLEN/8, x4, x1, x2)

inst_46036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000000000000f; valaddr_reg:x3; val_offset:138108*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138108*0 + 3*724*FLEN/8, x4, x1, x2)

inst_46037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000000000001f; valaddr_reg:x3; val_offset:138111*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138111*0 + 3*725*FLEN/8, x4, x1, x2)

inst_46038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000000000003f; valaddr_reg:x3; val_offset:138114*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138114*0 + 3*726*FLEN/8, x4, x1, x2)

inst_46039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000000000007f; valaddr_reg:x3; val_offset:138117*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138117*0 + 3*727*FLEN/8, x4, x1, x2)

inst_46040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500000000000ff; valaddr_reg:x3; val_offset:138120*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138120*0 + 3*728*FLEN/8, x4, x1, x2)

inst_46041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500000000001ff; valaddr_reg:x3; val_offset:138123*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138123*0 + 3*729*FLEN/8, x4, x1, x2)

inst_46042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500000000003ff; valaddr_reg:x3; val_offset:138126*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138126*0 + 3*730*FLEN/8, x4, x1, x2)

inst_46043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500000000007ff; valaddr_reg:x3; val_offset:138129*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138129*0 + 3*731*FLEN/8, x4, x1, x2)

inst_46044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000000000fff; valaddr_reg:x3; val_offset:138132*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138132*0 + 3*732*FLEN/8, x4, x1, x2)

inst_46045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000000001fff; valaddr_reg:x3; val_offset:138135*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138135*0 + 3*733*FLEN/8, x4, x1, x2)

inst_46046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000000003fff; valaddr_reg:x3; val_offset:138138*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138138*0 + 3*734*FLEN/8, x4, x1, x2)

inst_46047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000000007fff; valaddr_reg:x3; val_offset:138141*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138141*0 + 3*735*FLEN/8, x4, x1, x2)

inst_46048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000000000ffff; valaddr_reg:x3; val_offset:138144*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138144*0 + 3*736*FLEN/8, x4, x1, x2)

inst_46049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000000001ffff; valaddr_reg:x3; val_offset:138147*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138147*0 + 3*737*FLEN/8, x4, x1, x2)

inst_46050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000000003ffff; valaddr_reg:x3; val_offset:138150*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138150*0 + 3*738*FLEN/8, x4, x1, x2)

inst_46051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000000007ffff; valaddr_reg:x3; val_offset:138153*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138153*0 + 3*739*FLEN/8, x4, x1, x2)

inst_46052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500000000fffff; valaddr_reg:x3; val_offset:138156*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138156*0 + 3*740*FLEN/8, x4, x1, x2)

inst_46053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500000001fffff; valaddr_reg:x3; val_offset:138159*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138159*0 + 3*741*FLEN/8, x4, x1, x2)

inst_46054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500000003fffff; valaddr_reg:x3; val_offset:138162*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138162*0 + 3*742*FLEN/8, x4, x1, x2)

inst_46055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500000007fffff; valaddr_reg:x3; val_offset:138165*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138165*0 + 3*743*FLEN/8, x4, x1, x2)

inst_46056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000000ffffff; valaddr_reg:x3; val_offset:138168*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138168*0 + 3*744*FLEN/8, x4, x1, x2)

inst_46057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000001ffffff; valaddr_reg:x3; val_offset:138171*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138171*0 + 3*745*FLEN/8, x4, x1, x2)

inst_46058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000003ffffff; valaddr_reg:x3; val_offset:138174*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138174*0 + 3*746*FLEN/8, x4, x1, x2)

inst_46059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000007ffffff; valaddr_reg:x3; val_offset:138177*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138177*0 + 3*747*FLEN/8, x4, x1, x2)

inst_46060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000000fffffff; valaddr_reg:x3; val_offset:138180*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138180*0 + 3*748*FLEN/8, x4, x1, x2)

inst_46061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000001fffffff; valaddr_reg:x3; val_offset:138183*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138183*0 + 3*749*FLEN/8, x4, x1, x2)

inst_46062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000003fffffff; valaddr_reg:x3; val_offset:138186*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138186*0 + 3*750*FLEN/8, x4, x1, x2)

inst_46063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000007fffffff; valaddr_reg:x3; val_offset:138189*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138189*0 + 3*751*FLEN/8, x4, x1, x2)

inst_46064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500000ffffffff; valaddr_reg:x3; val_offset:138192*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138192*0 + 3*752*FLEN/8, x4, x1, x2)

inst_46065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500001ffffffff; valaddr_reg:x3; val_offset:138195*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138195*0 + 3*753*FLEN/8, x4, x1, x2)

inst_46066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500003ffffffff; valaddr_reg:x3; val_offset:138198*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138198*0 + 3*754*FLEN/8, x4, x1, x2)

inst_46067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500007ffffffff; valaddr_reg:x3; val_offset:138201*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138201*0 + 3*755*FLEN/8, x4, x1, x2)

inst_46068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50000fffffffff; valaddr_reg:x3; val_offset:138204*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138204*0 + 3*756*FLEN/8, x4, x1, x2)

inst_46069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50001fffffffff; valaddr_reg:x3; val_offset:138207*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138207*0 + 3*757*FLEN/8, x4, x1, x2)

inst_46070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50003fffffffff; valaddr_reg:x3; val_offset:138210*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138210*0 + 3*758*FLEN/8, x4, x1, x2)

inst_46071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50007fffffffff; valaddr_reg:x3; val_offset:138213*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138213*0 + 3*759*FLEN/8, x4, x1, x2)

inst_46072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5000ffffffffff; valaddr_reg:x3; val_offset:138216*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138216*0 + 3*760*FLEN/8, x4, x1, x2)

inst_46073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5001ffffffffff; valaddr_reg:x3; val_offset:138219*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138219*0 + 3*761*FLEN/8, x4, x1, x2)

inst_46074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5003ffffffffff; valaddr_reg:x3; val_offset:138222*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138222*0 + 3*762*FLEN/8, x4, x1, x2)

inst_46075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5007ffffffffff; valaddr_reg:x3; val_offset:138225*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138225*0 + 3*763*FLEN/8, x4, x1, x2)

inst_46076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b500fffffffffff; valaddr_reg:x3; val_offset:138228*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138228*0 + 3*764*FLEN/8, x4, x1, x2)

inst_46077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b501fffffffffff; valaddr_reg:x3; val_offset:138231*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138231*0 + 3*765*FLEN/8, x4, x1, x2)

inst_46078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b503fffffffffff; valaddr_reg:x3; val_offset:138234*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138234*0 + 3*766*FLEN/8, x4, x1, x2)

inst_46079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b507fffffffffff; valaddr_reg:x3; val_offset:138237*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138237*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566390271,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566406655,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566439423,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566504959,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566636031,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566898175,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789567422463,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789568471039,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789570568191,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789574762495,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789583151103,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789599928319,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789633482751,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789700591615,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789834809343,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790103244799,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790640115711,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100791713857535,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100793861341183,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100798156308479,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100806746243071,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100823926112255,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100858285850623,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100927005327359,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101064444280831,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101339322187775,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101889078001663,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126102988589629439,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126105187612884991,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126109585659396095,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126118381752418303,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126135973938462719,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126171158310551551,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126241527054729215,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126382264543084543,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126663739519795199,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127226689473216511,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059135,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059136,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(129478489286901760,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130041439240323072,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130322914217033728,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130463651705389056,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130534020449566720,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130569204821655552,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130586797007699968,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130595593100722176,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130599991147233280,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130602190170488832,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603289682116608,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603839437930496,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604114315837440,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604251754790912,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604320474267648,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604354834006016,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604372013875200,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604380603809792,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604384898777088,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604387046260736,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388120002560,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388656873472,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388925308928,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389059526656,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389126635520,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389160189952,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389176967168,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389185355776,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389189550080,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389191647232,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389192695808,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193220096,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193482240,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193613312,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193678848,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193711616,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193728000,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193736192,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193740288,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193742336,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743360,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743872,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744128,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744256,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744320,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744352,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744368,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744376,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744380,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744382,64,FLEN)
NAN_BOXED(6889612596939696427,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744383,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596864,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596865,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596867,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596871,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596879,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596895,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596927,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596991,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597119,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597375,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597887,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330598911,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330600959,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330605055,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330613247,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330629631,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330662399,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330727935,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330859007,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331121151,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331645439,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387332694015,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387334791167,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387338985471,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387347374079,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387364151295,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387397705727,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387464814591,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387599032319,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387867467775,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122388404338687,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122389478080511,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122391625564159,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122395920531455,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122404510466047,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122421690335231,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122456050073599,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122524769550335,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122662208503807,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122937086410751,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153123486842224639,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153124586353852415,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153126785377107967,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153131183423619071,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153139979516641279,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153157571702685695,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153192756074774527,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153263124818952191,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153403862307307519,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153685337284018175,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(154248287237439487,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282111,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282112,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(156500087051124736,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157063037004546048,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157344511981256704,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157485249469612032,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157555618213789696,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157590802585878528,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157608394771922944,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157617190864945152,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157621588911456256,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157623787934711808,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157624887446339584,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625437202153472,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625712080060416,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625849519013888,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625918238490624,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625952598228992,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625969778098176,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625978368032768,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625982663000064,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625984810483712,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625985884225536,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986421096448,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986689531904,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986823749632,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986890858496,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986924412928,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986941190144,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986949578752,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986953773056,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986955870208,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986956918784,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957443072,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957705216,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957836288,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957901824,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957934592,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957950976,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957959168,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957963264,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957965312,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966336,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966848,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967104,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967232,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967296,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967328,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967344,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967352,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967356,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967358,64,FLEN)
NAN_BOXED(6889614127184822511,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967359,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445952,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445953,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445955,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445959,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445967,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445983,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446015,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446079,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446207,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446463,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446975,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528447999,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528450047,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528454143,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528462335,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528478719,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528511487,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528577023,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528708095,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528970239,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195529494527,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195530543103,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195532640255,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195536834559,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195545223167,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195562000383,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195595554815,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195662663679,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195796881407,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196065316863,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196602187775,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043197675929599,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043199823413247,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043204118380543,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043212708315135,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043229888184319,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043264247922687,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043332967399423,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043470406352895,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043745284259839,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54044295040073727,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54045394551701503,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54047593574957055,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54051991621468159,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54060787714490367,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54078379900534783,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54113564272623615,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54183933016801279,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54324670505156607,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54606145481867263,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(55169095435288575,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131199,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131200,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57420895248973824,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57983845202395136,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58265320179105792,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58406057667461120,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58476426411638784,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58511610783727616,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58529202969772032,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58537999062794240,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58542397109305344,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58544596132560896,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58545695644188672,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546245400002560,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546520277909504,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546657716862976,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546726436339712,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546760796078080,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546777975947264,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546786565881856,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546790860849152,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546793008332800,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794082074624,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794618945536,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794887380992,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795021598720,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795088707584,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795122262016,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795139039232,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795147427840,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795151622144,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795153719296,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795154767872,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155292160,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155554304,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155685376,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155750912,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155783680,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155800064,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155808256,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155812352,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155814400,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815424,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815936,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816192,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816320,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816384,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816416,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816432,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816440,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816444,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816446,64,FLEN)
NAN_BOXED(6889649168787469399,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816447,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979572486143,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979639595007,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979773812735,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980042248191,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980579119103,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697981652860927,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697983800344575,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697988095311871,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697996685246463,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698013865115647,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698048224854015,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698116944330751,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698254383284223,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698529261191167,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247699079017005055,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247700178528632831,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247702377551888383,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247706775598399487,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247715571691421695,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247733163877466111,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247768348249554943,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247838716993732607,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247979454482087935,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248260929458798591,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248823879412219903,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062527,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062528,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251075679225905152,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251638629179326464,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251920104156037120,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252060841644392448,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252131210388570112,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252166394760658944,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252183986946703360,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252192783039725568,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252197181086236672,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252199380109492224,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252200479621120000,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201029376933888,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201304254840832,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201441693794304,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201510413271040,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201544773009408,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201561952878592,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201570542813184,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201574837780480,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201576985264128,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578059005952,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578595876864,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578864312320,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578998530048,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579065638912,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579099193344,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579115970560,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579124359168,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579128553472,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579130650624,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579131699200,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132223488,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132485632,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132616704,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132682240,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132715008,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132731392,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132739584,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132743680,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132745728,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132746752,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747264,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747520,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747648,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747712,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747744,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747760,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747768,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747772,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747774,64,FLEN)
NAN_BOXED(6889683050783583233,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747775,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560832,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560833,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560835,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560839,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560847,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560863,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560895,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560959,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561087,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561343,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561855,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349562879,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349564927,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349569023,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349577215,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349593599,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349626367,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349691903,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349822975,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350085119,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350609407,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184351657983,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184353755135,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184357949439,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184366338047,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184383115263,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184416669695,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184483778559,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184617996287,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184886431743,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151185423302655,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151186497044479,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151188644528127,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151192939495423,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151201529430015,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151218709299199,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151253069037567,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151321788514303,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151459227467775,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151734105374719,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189152283861188607,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189153383372816383,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189155582396071935,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189159980442583039,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189168776535605247,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189186368721649663,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189221553093738495,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189291921837916159,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189432659326271487,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189714134302982143,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(190277084256403455,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246079,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246080,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(192528884070088704,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193091834023510016,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193373309000220672,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193514046488576000,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193584415232753664,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193619599604842496,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193637191790886912,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193645987883909120,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193650385930420224,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193652584953675776,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193653684465303552,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654234221117440,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654509099024384,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654646537977856,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654715257454592,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654749617192960,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654766797062144,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654775386996736,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654779681964032,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654781829447680,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654782903189504,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783440060416,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783708495872,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783842713600,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783909822464,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783943376896,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783960154112,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783968542720,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783972737024,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783974834176,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783975882752,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976407040,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976669184,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976800256,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976865792,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976898560,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976914944,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976923136,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976927232,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976929280,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930304,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930816,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931072,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931200,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931264,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931296,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931312,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931320,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931324,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931326,64,FLEN)
NAN_BOXED(6889703555061644937,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931327,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376064,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376065,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376067,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376071,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376079,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376095,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376127,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376191,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376319,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376575,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124377087,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124378111,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124380159,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124384255,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124392447,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124408831,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124441599,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124507135,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124638207,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124900351,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614125424639,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614126473215,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614128570367,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614132764671,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614141153279,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614157930495,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614191484927,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614258593791,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614392811519,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614661246975,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091615198117887,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091616271859711,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091618419343359,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091622714310655,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091631304245247,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091648484114431,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091682843852799,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091751563329535,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091889002283007,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498092163880189951,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498092713636003839,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498093813147631615,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498096012170887167,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498100410217398271,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498109206310420479,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498126798496464895,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498161982868553727,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498232351612731391,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498373089101086719,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498654564077797375,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9499217514031218687,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9500343413938061311,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9500343413938061312,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9501469313844903936,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502032263798325248,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502313738775035904,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502454476263391232,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502524845007568896,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502560029379657728,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502577621565702144,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502586417658724352,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502590815705235456,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502593014728491008,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594114240118784,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594663995932672,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502594938873839616,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595076312793088,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595145032269824,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595179392008192,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595196571877376,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595205161811968,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595209456779264,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595211604262912,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595212678004736,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213214875648,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213483311104,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213617528832,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213684637696,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213718192128,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213734969344,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213743357952,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213747552256,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213749649408,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213750697984,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751222272,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751484416,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751615488,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751681024,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751713792,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751730176,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751738368,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751742464,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751744512,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751745536,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746048,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746304,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746432,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746496,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746528,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746544,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746552,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746556,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746558,64,FLEN)
NAN_BOXED(6889720419170098027,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746559,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374600704,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374600705,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374600707,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374600711,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374600719,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374600735,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374600767,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374600831,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374600959,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374601215,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374601727,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374602751,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374604799,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374608895,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374617087,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374633471,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374666239,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374731775,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046374862847,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046375124991,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046375649279,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046376697855,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046378795007,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046382989311,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046391377919,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046408155135,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046441709567,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046508818431,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046643036159,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916046911471615,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916047448342527,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916048522084351,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916050669567999,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916054964535295,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916063554469887,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916080734339071,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916115094077439,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916183813554175,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916321252507647,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273916596130414591,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273917145886228479,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273918245397856255,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273920444421111807,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273924842467622911,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273933638560645119,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273951230746689535,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4273986415118778367,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4274056783862956031,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
