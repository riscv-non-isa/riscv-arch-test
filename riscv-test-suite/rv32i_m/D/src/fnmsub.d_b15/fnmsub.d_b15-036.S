
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_26880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25f800000000000; valaddr_reg:x3; val_offset:80640*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80640*0 + 3*0*FLEN/8, x4, x1, x2)

inst_26881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fc00000000000; valaddr_reg:x3; val_offset:80643*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80643*0 + 3*1*FLEN/8, x4, x1, x2)

inst_26882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fe00000000000; valaddr_reg:x3; val_offset:80646*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80646*0 + 3*2*FLEN/8, x4, x1, x2)

inst_26883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ff00000000000; valaddr_reg:x3; val_offset:80649*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80649*0 + 3*3*FLEN/8, x4, x1, x2)

inst_26884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ff80000000000; valaddr_reg:x3; val_offset:80652*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80652*0 + 3*4*FLEN/8, x4, x1, x2)

inst_26885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffc0000000000; valaddr_reg:x3; val_offset:80655*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80655*0 + 3*5*FLEN/8, x4, x1, x2)

inst_26886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffe0000000000; valaddr_reg:x3; val_offset:80658*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80658*0 + 3*6*FLEN/8, x4, x1, x2)

inst_26887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fff0000000000; valaddr_reg:x3; val_offset:80661*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80661*0 + 3*7*FLEN/8, x4, x1, x2)

inst_26888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fff8000000000; valaddr_reg:x3; val_offset:80664*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80664*0 + 3*8*FLEN/8, x4, x1, x2)

inst_26889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffc000000000; valaddr_reg:x3; val_offset:80667*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80667*0 + 3*9*FLEN/8, x4, x1, x2)

inst_26890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffe000000000; valaddr_reg:x3; val_offset:80670*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80670*0 + 3*10*FLEN/8, x4, x1, x2)

inst_26891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffff000000000; valaddr_reg:x3; val_offset:80673*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80673*0 + 3*11*FLEN/8, x4, x1, x2)

inst_26892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffff800000000; valaddr_reg:x3; val_offset:80676*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80676*0 + 3*12*FLEN/8, x4, x1, x2)

inst_26893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffc00000000; valaddr_reg:x3; val_offset:80679*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80679*0 + 3*13*FLEN/8, x4, x1, x2)

inst_26894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffe00000000; valaddr_reg:x3; val_offset:80682*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80682*0 + 3*14*FLEN/8, x4, x1, x2)

inst_26895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffff00000000; valaddr_reg:x3; val_offset:80685*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80685*0 + 3*15*FLEN/8, x4, x1, x2)

inst_26896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffff80000000; valaddr_reg:x3; val_offset:80688*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80688*0 + 3*16*FLEN/8, x4, x1, x2)

inst_26897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffc0000000; valaddr_reg:x3; val_offset:80691*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80691*0 + 3*17*FLEN/8, x4, x1, x2)

inst_26898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffe0000000; valaddr_reg:x3; val_offset:80694*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80694*0 + 3*18*FLEN/8, x4, x1, x2)

inst_26899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffff0000000; valaddr_reg:x3; val_offset:80697*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80697*0 + 3*19*FLEN/8, x4, x1, x2)

inst_26900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffff8000000; valaddr_reg:x3; val_offset:80700*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80700*0 + 3*20*FLEN/8, x4, x1, x2)

inst_26901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffc000000; valaddr_reg:x3; val_offset:80703*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80703*0 + 3*21*FLEN/8, x4, x1, x2)

inst_26902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffe000000; valaddr_reg:x3; val_offset:80706*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80706*0 + 3*22*FLEN/8, x4, x1, x2)

inst_26903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffff000000; valaddr_reg:x3; val_offset:80709*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80709*0 + 3*23*FLEN/8, x4, x1, x2)

inst_26904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffff800000; valaddr_reg:x3; val_offset:80712*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80712*0 + 3*24*FLEN/8, x4, x1, x2)

inst_26905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffc00000; valaddr_reg:x3; val_offset:80715*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80715*0 + 3*25*FLEN/8, x4, x1, x2)

inst_26906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffe00000; valaddr_reg:x3; val_offset:80718*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80718*0 + 3*26*FLEN/8, x4, x1, x2)

inst_26907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffff00000; valaddr_reg:x3; val_offset:80721*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80721*0 + 3*27*FLEN/8, x4, x1, x2)

inst_26908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffff80000; valaddr_reg:x3; val_offset:80724*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80724*0 + 3*28*FLEN/8, x4, x1, x2)

inst_26909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffc0000; valaddr_reg:x3; val_offset:80727*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80727*0 + 3*29*FLEN/8, x4, x1, x2)

inst_26910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffe0000; valaddr_reg:x3; val_offset:80730*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80730*0 + 3*30*FLEN/8, x4, x1, x2)

inst_26911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffff0000; valaddr_reg:x3; val_offset:80733*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80733*0 + 3*31*FLEN/8, x4, x1, x2)

inst_26912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffff8000; valaddr_reg:x3; val_offset:80736*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80736*0 + 3*32*FLEN/8, x4, x1, x2)

inst_26913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffffc000; valaddr_reg:x3; val_offset:80739*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80739*0 + 3*33*FLEN/8, x4, x1, x2)

inst_26914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffffe000; valaddr_reg:x3; val_offset:80742*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80742*0 + 3*34*FLEN/8, x4, x1, x2)

inst_26915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffff000; valaddr_reg:x3; val_offset:80745*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80745*0 + 3*35*FLEN/8, x4, x1, x2)

inst_26916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffff800; valaddr_reg:x3; val_offset:80748*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80748*0 + 3*36*FLEN/8, x4, x1, x2)

inst_26917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffffc00; valaddr_reg:x3; val_offset:80751*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80751*0 + 3*37*FLEN/8, x4, x1, x2)

inst_26918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffffe00; valaddr_reg:x3; val_offset:80754*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80754*0 + 3*38*FLEN/8, x4, x1, x2)

inst_26919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffffff00; valaddr_reg:x3; val_offset:80757*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80757*0 + 3*39*FLEN/8, x4, x1, x2)

inst_26920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffffff80; valaddr_reg:x3; val_offset:80760*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80760*0 + 3*40*FLEN/8, x4, x1, x2)

inst_26921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffffffc0; valaddr_reg:x3; val_offset:80763*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80763*0 + 3*41*FLEN/8, x4, x1, x2)

inst_26922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffffffe0; valaddr_reg:x3; val_offset:80766*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80766*0 + 3*42*FLEN/8, x4, x1, x2)

inst_26923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffffff0; valaddr_reg:x3; val_offset:80769*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80769*0 + 3*43*FLEN/8, x4, x1, x2)

inst_26924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffffff8; valaddr_reg:x3; val_offset:80772*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80772*0 + 3*44*FLEN/8, x4, x1, x2)

inst_26925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffffffc; valaddr_reg:x3; val_offset:80775*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80775*0 + 3*45*FLEN/8, x4, x1, x2)

inst_26926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25ffffffffffffe; valaddr_reg:x3; val_offset:80778*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80778*0 + 3*46*FLEN/8, x4, x1, x2)

inst_26927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x082c3afb94da5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9082c3afb94da5; op2val:0x0;
op3val:0x25fffffffffffff; valaddr_reg:x3; val_offset:80781*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80781*0 + 3*47*FLEN/8, x4, x1, x2)

inst_26928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:80784*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80784*0 + 3*48*FLEN/8, x4, x1, x2)

inst_26929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:80787*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80787*0 + 3*49*FLEN/8, x4, x1, x2)

inst_26930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:80790*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80790*0 + 3*50*FLEN/8, x4, x1, x2)

inst_26931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:80793*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80793*0 + 3*51*FLEN/8, x4, x1, x2)

inst_26932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:80796*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80796*0 + 3*52*FLEN/8, x4, x1, x2)

inst_26933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:80799*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80799*0 + 3*53*FLEN/8, x4, x1, x2)

inst_26934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:80802*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80802*0 + 3*54*FLEN/8, x4, x1, x2)

inst_26935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7f; valaddr_reg:x3; val_offset:80805*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80805*0 + 3*55*FLEN/8, x4, x1, x2)

inst_26936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xff; valaddr_reg:x3; val_offset:80808*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80808*0 + 3*56*FLEN/8, x4, x1, x2)

inst_26937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1ff; valaddr_reg:x3; val_offset:80811*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80811*0 + 3*57*FLEN/8, x4, x1, x2)

inst_26938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3ff; valaddr_reg:x3; val_offset:80814*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80814*0 + 3*58*FLEN/8, x4, x1, x2)

inst_26939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7ff; valaddr_reg:x3; val_offset:80817*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80817*0 + 3*59*FLEN/8, x4, x1, x2)

inst_26940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfff; valaddr_reg:x3; val_offset:80820*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80820*0 + 3*60*FLEN/8, x4, x1, x2)

inst_26941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1fff; valaddr_reg:x3; val_offset:80823*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80823*0 + 3*61*FLEN/8, x4, x1, x2)

inst_26942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3fff; valaddr_reg:x3; val_offset:80826*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80826*0 + 3*62*FLEN/8, x4, x1, x2)

inst_26943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7fff; valaddr_reg:x3; val_offset:80829*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80829*0 + 3*63*FLEN/8, x4, x1, x2)

inst_26944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffff; valaddr_reg:x3; val_offset:80832*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80832*0 + 3*64*FLEN/8, x4, x1, x2)

inst_26945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1ffff; valaddr_reg:x3; val_offset:80835*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80835*0 + 3*65*FLEN/8, x4, x1, x2)

inst_26946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3ffff; valaddr_reg:x3; val_offset:80838*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80838*0 + 3*66*FLEN/8, x4, x1, x2)

inst_26947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7ffff; valaddr_reg:x3; val_offset:80841*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80841*0 + 3*67*FLEN/8, x4, x1, x2)

inst_26948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffff; valaddr_reg:x3; val_offset:80844*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80844*0 + 3*68*FLEN/8, x4, x1, x2)

inst_26949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1fffff; valaddr_reg:x3; val_offset:80847*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80847*0 + 3*69*FLEN/8, x4, x1, x2)

inst_26950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3fffff; valaddr_reg:x3; val_offset:80850*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80850*0 + 3*70*FLEN/8, x4, x1, x2)

inst_26951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7fffff; valaddr_reg:x3; val_offset:80853*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80853*0 + 3*71*FLEN/8, x4, x1, x2)

inst_26952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:80856*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80856*0 + 3*72*FLEN/8, x4, x1, x2)

inst_26953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1ffffff; valaddr_reg:x3; val_offset:80859*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80859*0 + 3*73*FLEN/8, x4, x1, x2)

inst_26954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3ffffff; valaddr_reg:x3; val_offset:80862*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80862*0 + 3*74*FLEN/8, x4, x1, x2)

inst_26955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:80865*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80865*0 + 3*75*FLEN/8, x4, x1, x2)

inst_26956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:80868*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80868*0 + 3*76*FLEN/8, x4, x1, x2)

inst_26957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:80871*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80871*0 + 3*77*FLEN/8, x4, x1, x2)

inst_26958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:80874*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80874*0 + 3*78*FLEN/8, x4, x1, x2)

inst_26959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:80877*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80877*0 + 3*79*FLEN/8, x4, x1, x2)

inst_26960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:80880*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80880*0 + 3*80*FLEN/8, x4, x1, x2)

inst_26961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:80883*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80883*0 + 3*81*FLEN/8, x4, x1, x2)

inst_26962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:80886*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80886*0 + 3*82*FLEN/8, x4, x1, x2)

inst_26963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:80889*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80889*0 + 3*83*FLEN/8, x4, x1, x2)

inst_26964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:80892*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80892*0 + 3*84*FLEN/8, x4, x1, x2)

inst_26965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:80895*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80895*0 + 3*85*FLEN/8, x4, x1, x2)

inst_26966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:80898*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80898*0 + 3*86*FLEN/8, x4, x1, x2)

inst_26967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:80901*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80901*0 + 3*87*FLEN/8, x4, x1, x2)

inst_26968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:80904*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80904*0 + 3*88*FLEN/8, x4, x1, x2)

inst_26969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:80907*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80907*0 + 3*89*FLEN/8, x4, x1, x2)

inst_26970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:80910*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80910*0 + 3*90*FLEN/8, x4, x1, x2)

inst_26971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:80913*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80913*0 + 3*91*FLEN/8, x4, x1, x2)

inst_26972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:80916*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80916*0 + 3*92*FLEN/8, x4, x1, x2)

inst_26973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:80919*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80919*0 + 3*93*FLEN/8, x4, x1, x2)

inst_26974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:80922*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80922*0 + 3*94*FLEN/8, x4, x1, x2)

inst_26975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:80925*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80925*0 + 3*95*FLEN/8, x4, x1, x2)

inst_26976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:80928*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80928*0 + 3*96*FLEN/8, x4, x1, x2)

inst_26977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:80931*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80931*0 + 3*97*FLEN/8, x4, x1, x2)

inst_26978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:80934*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80934*0 + 3*98*FLEN/8, x4, x1, x2)

inst_26979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:80937*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80937*0 + 3*99*FLEN/8, x4, x1, x2)

inst_26980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:80940*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80940*0 + 3*100*FLEN/8, x4, x1, x2)

inst_26981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:80943*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80943*0 + 3*101*FLEN/8, x4, x1, x2)

inst_26982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:80946*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80946*0 + 3*102*FLEN/8, x4, x1, x2)

inst_26983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:80949*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80949*0 + 3*103*FLEN/8, x4, x1, x2)

inst_26984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:80952*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80952*0 + 3*104*FLEN/8, x4, x1, x2)

inst_26985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:80955*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80955*0 + 3*105*FLEN/8, x4, x1, x2)

inst_26986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:80958*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80958*0 + 3*106*FLEN/8, x4, x1, x2)

inst_26987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:80961*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80961*0 + 3*107*FLEN/8, x4, x1, x2)

inst_26988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:80964*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80964*0 + 3*108*FLEN/8, x4, x1, x2)

inst_26989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:80967*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80967*0 + 3*109*FLEN/8, x4, x1, x2)

inst_26990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:80970*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80970*0 + 3*110*FLEN/8, x4, x1, x2)

inst_26991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:80973*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80973*0 + 3*111*FLEN/8, x4, x1, x2)

inst_26992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:80976*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80976*0 + 3*112*FLEN/8, x4, x1, x2)

inst_26993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:80979*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80979*0 + 3*113*FLEN/8, x4, x1, x2)

inst_26994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:80982*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80982*0 + 3*114*FLEN/8, x4, x1, x2)

inst_26995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:80985*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80985*0 + 3*115*FLEN/8, x4, x1, x2)

inst_26996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:80988*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80988*0 + 3*116*FLEN/8, x4, x1, x2)

inst_26997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:80991*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80991*0 + 3*117*FLEN/8, x4, x1, x2)

inst_26998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:80994*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80994*0 + 3*118*FLEN/8, x4, x1, x2)

inst_26999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:80997*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80997*0 + 3*119*FLEN/8, x4, x1, x2)

inst_27000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:81000*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81000*0 + 3*120*FLEN/8, x4, x1, x2)

inst_27001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:81003*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81003*0 + 3*121*FLEN/8, x4, x1, x2)

inst_27002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:81006*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81006*0 + 3*122*FLEN/8, x4, x1, x2)

inst_27003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:81009*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81009*0 + 3*123*FLEN/8, x4, x1, x2)

inst_27004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:81012*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81012*0 + 3*124*FLEN/8, x4, x1, x2)

inst_27005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:81015*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81015*0 + 3*125*FLEN/8, x4, x1, x2)

inst_27006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:81018*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81018*0 + 3*126*FLEN/8, x4, x1, x2)

inst_27007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:81021*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81021*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_27008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:81024*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81024*0 + 3*128*FLEN/8, x4, x1, x2)

inst_27009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:81027*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81027*0 + 3*129*FLEN/8, x4, x1, x2)

inst_27010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:81030*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81030*0 + 3*130*FLEN/8, x4, x1, x2)

inst_27011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:81033*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81033*0 + 3*131*FLEN/8, x4, x1, x2)

inst_27012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:81036*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81036*0 + 3*132*FLEN/8, x4, x1, x2)

inst_27013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:81039*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81039*0 + 3*133*FLEN/8, x4, x1, x2)

inst_27014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:81042*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81042*0 + 3*134*FLEN/8, x4, x1, x2)

inst_27015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:81045*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81045*0 + 3*135*FLEN/8, x4, x1, x2)

inst_27016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:81048*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81048*0 + 3*136*FLEN/8, x4, x1, x2)

inst_27017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:81051*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81051*0 + 3*137*FLEN/8, x4, x1, x2)

inst_27018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:81054*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81054*0 + 3*138*FLEN/8, x4, x1, x2)

inst_27019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:81057*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81057*0 + 3*139*FLEN/8, x4, x1, x2)

inst_27020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:81060*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81060*0 + 3*140*FLEN/8, x4, x1, x2)

inst_27021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:81063*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81063*0 + 3*141*FLEN/8, x4, x1, x2)

inst_27022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:81066*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81066*0 + 3*142*FLEN/8, x4, x1, x2)

inst_27023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:81069*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81069*0 + 3*143*FLEN/8, x4, x1, x2)

inst_27024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:81072*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81072*0 + 3*144*FLEN/8, x4, x1, x2)

inst_27025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:81075*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81075*0 + 3*145*FLEN/8, x4, x1, x2)

inst_27026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:81078*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81078*0 + 3*146*FLEN/8, x4, x1, x2)

inst_27027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:81081*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81081*0 + 3*147*FLEN/8, x4, x1, x2)

inst_27028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:81084*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81084*0 + 3*148*FLEN/8, x4, x1, x2)

inst_27029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:81087*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81087*0 + 3*149*FLEN/8, x4, x1, x2)

inst_27030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:81090*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81090*0 + 3*150*FLEN/8, x4, x1, x2)

inst_27031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:81093*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81093*0 + 3*151*FLEN/8, x4, x1, x2)

inst_27032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:81096*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81096*0 + 3*152*FLEN/8, x4, x1, x2)

inst_27033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:81099*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81099*0 + 3*153*FLEN/8, x4, x1, x2)

inst_27034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:81102*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81102*0 + 3*154*FLEN/8, x4, x1, x2)

inst_27035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:81105*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81105*0 + 3*155*FLEN/8, x4, x1, x2)

inst_27036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:81108*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81108*0 + 3*156*FLEN/8, x4, x1, x2)

inst_27037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:81111*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81111*0 + 3*157*FLEN/8, x4, x1, x2)

inst_27038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:81114*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81114*0 + 3*158*FLEN/8, x4, x1, x2)

inst_27039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:81117*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81117*0 + 3*159*FLEN/8, x4, x1, x2)

inst_27040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:81120*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81120*0 + 3*160*FLEN/8, x4, x1, x2)

inst_27041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08d4799198efb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908d4799198efb; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:81123*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81123*0 + 3*161*FLEN/8, x4, x1, x2)

inst_27042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:81126*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81126*0 + 3*162*FLEN/8, x4, x1, x2)

inst_27043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:81129*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81129*0 + 3*163*FLEN/8, x4, x1, x2)

inst_27044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:81132*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81132*0 + 3*164*FLEN/8, x4, x1, x2)

inst_27045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:81135*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81135*0 + 3*165*FLEN/8, x4, x1, x2)

inst_27046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:81138*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81138*0 + 3*166*FLEN/8, x4, x1, x2)

inst_27047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:81141*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81141*0 + 3*167*FLEN/8, x4, x1, x2)

inst_27048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:81144*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81144*0 + 3*168*FLEN/8, x4, x1, x2)

inst_27049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:81147*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81147*0 + 3*169*FLEN/8, x4, x1, x2)

inst_27050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:81150*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81150*0 + 3*170*FLEN/8, x4, x1, x2)

inst_27051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:81153*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81153*0 + 3*171*FLEN/8, x4, x1, x2)

inst_27052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:81156*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81156*0 + 3*172*FLEN/8, x4, x1, x2)

inst_27053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:81159*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81159*0 + 3*173*FLEN/8, x4, x1, x2)

inst_27054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:81162*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81162*0 + 3*174*FLEN/8, x4, x1, x2)

inst_27055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:81165*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81165*0 + 3*175*FLEN/8, x4, x1, x2)

inst_27056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:81168*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81168*0 + 3*176*FLEN/8, x4, x1, x2)

inst_27057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:81171*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81171*0 + 3*177*FLEN/8, x4, x1, x2)

inst_27058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:81174*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81174*0 + 3*178*FLEN/8, x4, x1, x2)

inst_27059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:81177*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81177*0 + 3*179*FLEN/8, x4, x1, x2)

inst_27060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:81180*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81180*0 + 3*180*FLEN/8, x4, x1, x2)

inst_27061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:81183*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81183*0 + 3*181*FLEN/8, x4, x1, x2)

inst_27062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:81186*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81186*0 + 3*182*FLEN/8, x4, x1, x2)

inst_27063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:81189*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81189*0 + 3*183*FLEN/8, x4, x1, x2)

inst_27064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000000000000; valaddr_reg:x3; val_offset:81192*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81192*0 + 3*184*FLEN/8, x4, x1, x2)

inst_27065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000000000001; valaddr_reg:x3; val_offset:81195*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81195*0 + 3*185*FLEN/8, x4, x1, x2)

inst_27066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000000000003; valaddr_reg:x3; val_offset:81198*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81198*0 + 3*186*FLEN/8, x4, x1, x2)

inst_27067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000000000007; valaddr_reg:x3; val_offset:81201*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81201*0 + 3*187*FLEN/8, x4, x1, x2)

inst_27068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000000000000f; valaddr_reg:x3; val_offset:81204*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81204*0 + 3*188*FLEN/8, x4, x1, x2)

inst_27069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000000000001f; valaddr_reg:x3; val_offset:81207*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81207*0 + 3*189*FLEN/8, x4, x1, x2)

inst_27070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000000000003f; valaddr_reg:x3; val_offset:81210*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81210*0 + 3*190*FLEN/8, x4, x1, x2)

inst_27071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000000000007f; valaddr_reg:x3; val_offset:81213*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81213*0 + 3*191*FLEN/8, x4, x1, x2)

inst_27072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300000000000ff; valaddr_reg:x3; val_offset:81216*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81216*0 + 3*192*FLEN/8, x4, x1, x2)

inst_27073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300000000001ff; valaddr_reg:x3; val_offset:81219*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81219*0 + 3*193*FLEN/8, x4, x1, x2)

inst_27074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300000000003ff; valaddr_reg:x3; val_offset:81222*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81222*0 + 3*194*FLEN/8, x4, x1, x2)

inst_27075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300000000007ff; valaddr_reg:x3; val_offset:81225*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81225*0 + 3*195*FLEN/8, x4, x1, x2)

inst_27076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000000000fff; valaddr_reg:x3; val_offset:81228*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81228*0 + 3*196*FLEN/8, x4, x1, x2)

inst_27077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000000001fff; valaddr_reg:x3; val_offset:81231*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81231*0 + 3*197*FLEN/8, x4, x1, x2)

inst_27078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000000003fff; valaddr_reg:x3; val_offset:81234*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81234*0 + 3*198*FLEN/8, x4, x1, x2)

inst_27079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000000007fff; valaddr_reg:x3; val_offset:81237*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81237*0 + 3*199*FLEN/8, x4, x1, x2)

inst_27080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000000000ffff; valaddr_reg:x3; val_offset:81240*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81240*0 + 3*200*FLEN/8, x4, x1, x2)

inst_27081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000000001ffff; valaddr_reg:x3; val_offset:81243*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81243*0 + 3*201*FLEN/8, x4, x1, x2)

inst_27082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000000003ffff; valaddr_reg:x3; val_offset:81246*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81246*0 + 3*202*FLEN/8, x4, x1, x2)

inst_27083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000000007ffff; valaddr_reg:x3; val_offset:81249*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81249*0 + 3*203*FLEN/8, x4, x1, x2)

inst_27084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300000000fffff; valaddr_reg:x3; val_offset:81252*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81252*0 + 3*204*FLEN/8, x4, x1, x2)

inst_27085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300000001fffff; valaddr_reg:x3; val_offset:81255*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81255*0 + 3*205*FLEN/8, x4, x1, x2)

inst_27086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300000003fffff; valaddr_reg:x3; val_offset:81258*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81258*0 + 3*206*FLEN/8, x4, x1, x2)

inst_27087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300000007fffff; valaddr_reg:x3; val_offset:81261*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81261*0 + 3*207*FLEN/8, x4, x1, x2)

inst_27088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000000ffffff; valaddr_reg:x3; val_offset:81264*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81264*0 + 3*208*FLEN/8, x4, x1, x2)

inst_27089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000001ffffff; valaddr_reg:x3; val_offset:81267*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81267*0 + 3*209*FLEN/8, x4, x1, x2)

inst_27090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000003ffffff; valaddr_reg:x3; val_offset:81270*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81270*0 + 3*210*FLEN/8, x4, x1, x2)

inst_27091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000007ffffff; valaddr_reg:x3; val_offset:81273*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81273*0 + 3*211*FLEN/8, x4, x1, x2)

inst_27092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000000fffffff; valaddr_reg:x3; val_offset:81276*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81276*0 + 3*212*FLEN/8, x4, x1, x2)

inst_27093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000001fffffff; valaddr_reg:x3; val_offset:81279*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81279*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000003fffffff; valaddr_reg:x3; val_offset:81282*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81282*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000007fffffff; valaddr_reg:x3; val_offset:81285*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81285*0 + 3*215*FLEN/8, x4, x1, x2)

inst_27096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300000ffffffff; valaddr_reg:x3; val_offset:81288*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81288*0 + 3*216*FLEN/8, x4, x1, x2)

inst_27097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300001ffffffff; valaddr_reg:x3; val_offset:81291*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81291*0 + 3*217*FLEN/8, x4, x1, x2)

inst_27098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300003ffffffff; valaddr_reg:x3; val_offset:81294*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81294*0 + 3*218*FLEN/8, x4, x1, x2)

inst_27099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300007ffffffff; valaddr_reg:x3; val_offset:81297*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81297*0 + 3*219*FLEN/8, x4, x1, x2)

inst_27100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330000fffffffff; valaddr_reg:x3; val_offset:81300*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81300*0 + 3*220*FLEN/8, x4, x1, x2)

inst_27101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330001fffffffff; valaddr_reg:x3; val_offset:81303*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81303*0 + 3*221*FLEN/8, x4, x1, x2)

inst_27102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330003fffffffff; valaddr_reg:x3; val_offset:81306*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81306*0 + 3*222*FLEN/8, x4, x1, x2)

inst_27103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330007fffffffff; valaddr_reg:x3; val_offset:81309*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81309*0 + 3*223*FLEN/8, x4, x1, x2)

inst_27104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33000ffffffffff; valaddr_reg:x3; val_offset:81312*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81312*0 + 3*224*FLEN/8, x4, x1, x2)

inst_27105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33001ffffffffff; valaddr_reg:x3; val_offset:81315*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81315*0 + 3*225*FLEN/8, x4, x1, x2)

inst_27106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33003ffffffffff; valaddr_reg:x3; val_offset:81318*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81318*0 + 3*226*FLEN/8, x4, x1, x2)

inst_27107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33007ffffffffff; valaddr_reg:x3; val_offset:81321*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81321*0 + 3*227*FLEN/8, x4, x1, x2)

inst_27108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3300fffffffffff; valaddr_reg:x3; val_offset:81324*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81324*0 + 3*228*FLEN/8, x4, x1, x2)

inst_27109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3301fffffffffff; valaddr_reg:x3; val_offset:81327*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81327*0 + 3*229*FLEN/8, x4, x1, x2)

inst_27110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3303fffffffffff; valaddr_reg:x3; val_offset:81330*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81330*0 + 3*230*FLEN/8, x4, x1, x2)

inst_27111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x3307fffffffffff; valaddr_reg:x3; val_offset:81333*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81333*0 + 3*231*FLEN/8, x4, x1, x2)

inst_27112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x330ffffffffffff; valaddr_reg:x3; val_offset:81336*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81336*0 + 3*232*FLEN/8, x4, x1, x2)

inst_27113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x331ffffffffffff; valaddr_reg:x3; val_offset:81339*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81339*0 + 3*233*FLEN/8, x4, x1, x2)

inst_27114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x333ffffffffffff; valaddr_reg:x3; val_offset:81342*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81342*0 + 3*234*FLEN/8, x4, x1, x2)

inst_27115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x337ffffffffffff; valaddr_reg:x3; val_offset:81345*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81345*0 + 3*235*FLEN/8, x4, x1, x2)

inst_27116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x338000000000000; valaddr_reg:x3; val_offset:81348*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81348*0 + 3*236*FLEN/8, x4, x1, x2)

inst_27117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33c000000000000; valaddr_reg:x3; val_offset:81351*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81351*0 + 3*237*FLEN/8, x4, x1, x2)

inst_27118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33e000000000000; valaddr_reg:x3; val_offset:81354*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81354*0 + 3*238*FLEN/8, x4, x1, x2)

inst_27119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33f000000000000; valaddr_reg:x3; val_offset:81357*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81357*0 + 3*239*FLEN/8, x4, x1, x2)

inst_27120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33f800000000000; valaddr_reg:x3; val_offset:81360*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81360*0 + 3*240*FLEN/8, x4, x1, x2)

inst_27121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fc00000000000; valaddr_reg:x3; val_offset:81363*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81363*0 + 3*241*FLEN/8, x4, x1, x2)

inst_27122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fe00000000000; valaddr_reg:x3; val_offset:81366*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81366*0 + 3*242*FLEN/8, x4, x1, x2)

inst_27123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ff00000000000; valaddr_reg:x3; val_offset:81369*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81369*0 + 3*243*FLEN/8, x4, x1, x2)

inst_27124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ff80000000000; valaddr_reg:x3; val_offset:81372*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81372*0 + 3*244*FLEN/8, x4, x1, x2)

inst_27125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffc0000000000; valaddr_reg:x3; val_offset:81375*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81375*0 + 3*245*FLEN/8, x4, x1, x2)

inst_27126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffe0000000000; valaddr_reg:x3; val_offset:81378*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81378*0 + 3*246*FLEN/8, x4, x1, x2)

inst_27127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fff0000000000; valaddr_reg:x3; val_offset:81381*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81381*0 + 3*247*FLEN/8, x4, x1, x2)

inst_27128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fff8000000000; valaddr_reg:x3; val_offset:81384*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81384*0 + 3*248*FLEN/8, x4, x1, x2)

inst_27129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffc000000000; valaddr_reg:x3; val_offset:81387*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81387*0 + 3*249*FLEN/8, x4, x1, x2)

inst_27130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffe000000000; valaddr_reg:x3; val_offset:81390*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81390*0 + 3*250*FLEN/8, x4, x1, x2)

inst_27131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffff000000000; valaddr_reg:x3; val_offset:81393*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81393*0 + 3*251*FLEN/8, x4, x1, x2)

inst_27132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffff800000000; valaddr_reg:x3; val_offset:81396*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81396*0 + 3*252*FLEN/8, x4, x1, x2)

inst_27133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffc00000000; valaddr_reg:x3; val_offset:81399*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81399*0 + 3*253*FLEN/8, x4, x1, x2)

inst_27134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffe00000000; valaddr_reg:x3; val_offset:81402*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81402*0 + 3*254*FLEN/8, x4, x1, x2)

inst_27135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffff00000000; valaddr_reg:x3; val_offset:81405*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81405*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_27136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffff80000000; valaddr_reg:x3; val_offset:81408*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81408*0 + 3*256*FLEN/8, x4, x1, x2)

inst_27137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffc0000000; valaddr_reg:x3; val_offset:81411*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81411*0 + 3*257*FLEN/8, x4, x1, x2)

inst_27138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffe0000000; valaddr_reg:x3; val_offset:81414*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81414*0 + 3*258*FLEN/8, x4, x1, x2)

inst_27139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffff0000000; valaddr_reg:x3; val_offset:81417*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81417*0 + 3*259*FLEN/8, x4, x1, x2)

inst_27140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffff8000000; valaddr_reg:x3; val_offset:81420*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81420*0 + 3*260*FLEN/8, x4, x1, x2)

inst_27141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffc000000; valaddr_reg:x3; val_offset:81423*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81423*0 + 3*261*FLEN/8, x4, x1, x2)

inst_27142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffe000000; valaddr_reg:x3; val_offset:81426*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81426*0 + 3*262*FLEN/8, x4, x1, x2)

inst_27143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffff000000; valaddr_reg:x3; val_offset:81429*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81429*0 + 3*263*FLEN/8, x4, x1, x2)

inst_27144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffff800000; valaddr_reg:x3; val_offset:81432*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81432*0 + 3*264*FLEN/8, x4, x1, x2)

inst_27145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffc00000; valaddr_reg:x3; val_offset:81435*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81435*0 + 3*265*FLEN/8, x4, x1, x2)

inst_27146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffe00000; valaddr_reg:x3; val_offset:81438*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81438*0 + 3*266*FLEN/8, x4, x1, x2)

inst_27147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffff00000; valaddr_reg:x3; val_offset:81441*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81441*0 + 3*267*FLEN/8, x4, x1, x2)

inst_27148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffff80000; valaddr_reg:x3; val_offset:81444*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81444*0 + 3*268*FLEN/8, x4, x1, x2)

inst_27149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffc0000; valaddr_reg:x3; val_offset:81447*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81447*0 + 3*269*FLEN/8, x4, x1, x2)

inst_27150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffe0000; valaddr_reg:x3; val_offset:81450*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81450*0 + 3*270*FLEN/8, x4, x1, x2)

inst_27151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffff0000; valaddr_reg:x3; val_offset:81453*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81453*0 + 3*271*FLEN/8, x4, x1, x2)

inst_27152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffff8000; valaddr_reg:x3; val_offset:81456*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81456*0 + 3*272*FLEN/8, x4, x1, x2)

inst_27153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffffc000; valaddr_reg:x3; val_offset:81459*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81459*0 + 3*273*FLEN/8, x4, x1, x2)

inst_27154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffffe000; valaddr_reg:x3; val_offset:81462*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81462*0 + 3*274*FLEN/8, x4, x1, x2)

inst_27155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffff000; valaddr_reg:x3; val_offset:81465*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81465*0 + 3*275*FLEN/8, x4, x1, x2)

inst_27156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffff800; valaddr_reg:x3; val_offset:81468*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81468*0 + 3*276*FLEN/8, x4, x1, x2)

inst_27157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffffc00; valaddr_reg:x3; val_offset:81471*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81471*0 + 3*277*FLEN/8, x4, x1, x2)

inst_27158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffffe00; valaddr_reg:x3; val_offset:81474*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81474*0 + 3*278*FLEN/8, x4, x1, x2)

inst_27159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffffff00; valaddr_reg:x3; val_offset:81477*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81477*0 + 3*279*FLEN/8, x4, x1, x2)

inst_27160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffffff80; valaddr_reg:x3; val_offset:81480*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81480*0 + 3*280*FLEN/8, x4, x1, x2)

inst_27161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffffffc0; valaddr_reg:x3; val_offset:81483*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81483*0 + 3*281*FLEN/8, x4, x1, x2)

inst_27162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffffffe0; valaddr_reg:x3; val_offset:81486*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81486*0 + 3*282*FLEN/8, x4, x1, x2)

inst_27163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffffff0; valaddr_reg:x3; val_offset:81489*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81489*0 + 3*283*FLEN/8, x4, x1, x2)

inst_27164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffffff8; valaddr_reg:x3; val_offset:81492*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81492*0 + 3*284*FLEN/8, x4, x1, x2)

inst_27165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffffffc; valaddr_reg:x3; val_offset:81495*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81495*0 + 3*285*FLEN/8, x4, x1, x2)

inst_27166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33ffffffffffffe; valaddr_reg:x3; val_offset:81498*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81498*0 + 3*286*FLEN/8, x4, x1, x2)

inst_27167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08e1aa643f401 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908e1aa643f401; op2val:0x0;
op3val:0x33fffffffffffff; valaddr_reg:x3; val_offset:81501*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81501*0 + 3*287*FLEN/8, x4, x1, x2)

inst_27168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000000000000; valaddr_reg:x3; val_offset:81504*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81504*0 + 3*288*FLEN/8, x4, x1, x2)

inst_27169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000000000001; valaddr_reg:x3; val_offset:81507*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81507*0 + 3*289*FLEN/8, x4, x1, x2)

inst_27170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000000000003; valaddr_reg:x3; val_offset:81510*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81510*0 + 3*290*FLEN/8, x4, x1, x2)

inst_27171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000000000007; valaddr_reg:x3; val_offset:81513*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81513*0 + 3*291*FLEN/8, x4, x1, x2)

inst_27172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000000000000f; valaddr_reg:x3; val_offset:81516*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81516*0 + 3*292*FLEN/8, x4, x1, x2)

inst_27173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000000000001f; valaddr_reg:x3; val_offset:81519*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81519*0 + 3*293*FLEN/8, x4, x1, x2)

inst_27174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000000000003f; valaddr_reg:x3; val_offset:81522*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81522*0 + 3*294*FLEN/8, x4, x1, x2)

inst_27175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000000000007f; valaddr_reg:x3; val_offset:81525*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81525*0 + 3*295*FLEN/8, x4, x1, x2)

inst_27176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00000000000ff; valaddr_reg:x3; val_offset:81528*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81528*0 + 3*296*FLEN/8, x4, x1, x2)

inst_27177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00000000001ff; valaddr_reg:x3; val_offset:81531*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81531*0 + 3*297*FLEN/8, x4, x1, x2)

inst_27178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00000000003ff; valaddr_reg:x3; val_offset:81534*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81534*0 + 3*298*FLEN/8, x4, x1, x2)

inst_27179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00000000007ff; valaddr_reg:x3; val_offset:81537*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81537*0 + 3*299*FLEN/8, x4, x1, x2)

inst_27180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000000000fff; valaddr_reg:x3; val_offset:81540*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81540*0 + 3*300*FLEN/8, x4, x1, x2)

inst_27181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000000001fff; valaddr_reg:x3; val_offset:81543*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81543*0 + 3*301*FLEN/8, x4, x1, x2)

inst_27182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000000003fff; valaddr_reg:x3; val_offset:81546*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81546*0 + 3*302*FLEN/8, x4, x1, x2)

inst_27183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000000007fff; valaddr_reg:x3; val_offset:81549*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81549*0 + 3*303*FLEN/8, x4, x1, x2)

inst_27184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000000000ffff; valaddr_reg:x3; val_offset:81552*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81552*0 + 3*304*FLEN/8, x4, x1, x2)

inst_27185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000000001ffff; valaddr_reg:x3; val_offset:81555*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81555*0 + 3*305*FLEN/8, x4, x1, x2)

inst_27186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000000003ffff; valaddr_reg:x3; val_offset:81558*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81558*0 + 3*306*FLEN/8, x4, x1, x2)

inst_27187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000000007ffff; valaddr_reg:x3; val_offset:81561*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81561*0 + 3*307*FLEN/8, x4, x1, x2)

inst_27188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00000000fffff; valaddr_reg:x3; val_offset:81564*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81564*0 + 3*308*FLEN/8, x4, x1, x2)

inst_27189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00000001fffff; valaddr_reg:x3; val_offset:81567*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81567*0 + 3*309*FLEN/8, x4, x1, x2)

inst_27190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00000003fffff; valaddr_reg:x3; val_offset:81570*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81570*0 + 3*310*FLEN/8, x4, x1, x2)

inst_27191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00000007fffff; valaddr_reg:x3; val_offset:81573*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81573*0 + 3*311*FLEN/8, x4, x1, x2)

inst_27192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000000ffffff; valaddr_reg:x3; val_offset:81576*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81576*0 + 3*312*FLEN/8, x4, x1, x2)

inst_27193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000001ffffff; valaddr_reg:x3; val_offset:81579*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81579*0 + 3*313*FLEN/8, x4, x1, x2)

inst_27194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000003ffffff; valaddr_reg:x3; val_offset:81582*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81582*0 + 3*314*FLEN/8, x4, x1, x2)

inst_27195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000007ffffff; valaddr_reg:x3; val_offset:81585*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81585*0 + 3*315*FLEN/8, x4, x1, x2)

inst_27196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000000fffffff; valaddr_reg:x3; val_offset:81588*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81588*0 + 3*316*FLEN/8, x4, x1, x2)

inst_27197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000001fffffff; valaddr_reg:x3; val_offset:81591*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81591*0 + 3*317*FLEN/8, x4, x1, x2)

inst_27198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000003fffffff; valaddr_reg:x3; val_offset:81594*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81594*0 + 3*318*FLEN/8, x4, x1, x2)

inst_27199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000007fffffff; valaddr_reg:x3; val_offset:81597*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81597*0 + 3*319*FLEN/8, x4, x1, x2)

inst_27200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00000ffffffff; valaddr_reg:x3; val_offset:81600*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81600*0 + 3*320*FLEN/8, x4, x1, x2)

inst_27201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00001ffffffff; valaddr_reg:x3; val_offset:81603*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81603*0 + 3*321*FLEN/8, x4, x1, x2)

inst_27202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00003ffffffff; valaddr_reg:x3; val_offset:81606*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81606*0 + 3*322*FLEN/8, x4, x1, x2)

inst_27203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00007ffffffff; valaddr_reg:x3; val_offset:81609*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81609*0 + 3*323*FLEN/8, x4, x1, x2)

inst_27204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0000fffffffff; valaddr_reg:x3; val_offset:81612*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81612*0 + 3*324*FLEN/8, x4, x1, x2)

inst_27205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0001fffffffff; valaddr_reg:x3; val_offset:81615*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81615*0 + 3*325*FLEN/8, x4, x1, x2)

inst_27206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0003fffffffff; valaddr_reg:x3; val_offset:81618*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81618*0 + 3*326*FLEN/8, x4, x1, x2)

inst_27207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0007fffffffff; valaddr_reg:x3; val_offset:81621*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81621*0 + 3*327*FLEN/8, x4, x1, x2)

inst_27208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c000ffffffffff; valaddr_reg:x3; val_offset:81624*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81624*0 + 3*328*FLEN/8, x4, x1, x2)

inst_27209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c001ffffffffff; valaddr_reg:x3; val_offset:81627*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81627*0 + 3*329*FLEN/8, x4, x1, x2)

inst_27210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c003ffffffffff; valaddr_reg:x3; val_offset:81630*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81630*0 + 3*330*FLEN/8, x4, x1, x2)

inst_27211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c007ffffffffff; valaddr_reg:x3; val_offset:81633*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81633*0 + 3*331*FLEN/8, x4, x1, x2)

inst_27212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c00fffffffffff; valaddr_reg:x3; val_offset:81636*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81636*0 + 3*332*FLEN/8, x4, x1, x2)

inst_27213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c01fffffffffff; valaddr_reg:x3; val_offset:81639*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81639*0 + 3*333*FLEN/8, x4, x1, x2)

inst_27214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c03fffffffffff; valaddr_reg:x3; val_offset:81642*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81642*0 + 3*334*FLEN/8, x4, x1, x2)

inst_27215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c07fffffffffff; valaddr_reg:x3; val_offset:81645*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81645*0 + 3*335*FLEN/8, x4, x1, x2)

inst_27216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c0ffffffffffff; valaddr_reg:x3; val_offset:81648*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81648*0 + 3*336*FLEN/8, x4, x1, x2)

inst_27217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c1ffffffffffff; valaddr_reg:x3; val_offset:81651*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81651*0 + 3*337*FLEN/8, x4, x1, x2)

inst_27218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c3ffffffffffff; valaddr_reg:x3; val_offset:81654*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81654*0 + 3*338*FLEN/8, x4, x1, x2)

inst_27219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c7ffffffffffff; valaddr_reg:x3; val_offset:81657*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81657*0 + 3*339*FLEN/8, x4, x1, x2)

inst_27220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8c8000000000000; valaddr_reg:x3; val_offset:81660*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81660*0 + 3*340*FLEN/8, x4, x1, x2)

inst_27221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cc000000000000; valaddr_reg:x3; val_offset:81663*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81663*0 + 3*341*FLEN/8, x4, x1, x2)

inst_27222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8ce000000000000; valaddr_reg:x3; val_offset:81666*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81666*0 + 3*342*FLEN/8, x4, x1, x2)

inst_27223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cf000000000000; valaddr_reg:x3; val_offset:81669*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81669*0 + 3*343*FLEN/8, x4, x1, x2)

inst_27224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cf800000000000; valaddr_reg:x3; val_offset:81672*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81672*0 + 3*344*FLEN/8, x4, x1, x2)

inst_27225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfc00000000000; valaddr_reg:x3; val_offset:81675*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81675*0 + 3*345*FLEN/8, x4, x1, x2)

inst_27226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfe00000000000; valaddr_reg:x3; val_offset:81678*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81678*0 + 3*346*FLEN/8, x4, x1, x2)

inst_27227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cff00000000000; valaddr_reg:x3; val_offset:81681*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81681*0 + 3*347*FLEN/8, x4, x1, x2)

inst_27228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cff80000000000; valaddr_reg:x3; val_offset:81684*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81684*0 + 3*348*FLEN/8, x4, x1, x2)

inst_27229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffc0000000000; valaddr_reg:x3; val_offset:81687*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81687*0 + 3*349*FLEN/8, x4, x1, x2)

inst_27230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffe0000000000; valaddr_reg:x3; val_offset:81690*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81690*0 + 3*350*FLEN/8, x4, x1, x2)

inst_27231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfff0000000000; valaddr_reg:x3; val_offset:81693*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81693*0 + 3*351*FLEN/8, x4, x1, x2)

inst_27232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfff8000000000; valaddr_reg:x3; val_offset:81696*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81696*0 + 3*352*FLEN/8, x4, x1, x2)

inst_27233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffc000000000; valaddr_reg:x3; val_offset:81699*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81699*0 + 3*353*FLEN/8, x4, x1, x2)

inst_27234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffe000000000; valaddr_reg:x3; val_offset:81702*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81702*0 + 3*354*FLEN/8, x4, x1, x2)

inst_27235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffff000000000; valaddr_reg:x3; val_offset:81705*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81705*0 + 3*355*FLEN/8, x4, x1, x2)

inst_27236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffff800000000; valaddr_reg:x3; val_offset:81708*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81708*0 + 3*356*FLEN/8, x4, x1, x2)

inst_27237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffc00000000; valaddr_reg:x3; val_offset:81711*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81711*0 + 3*357*FLEN/8, x4, x1, x2)

inst_27238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffe00000000; valaddr_reg:x3; val_offset:81714*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81714*0 + 3*358*FLEN/8, x4, x1, x2)

inst_27239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffff00000000; valaddr_reg:x3; val_offset:81717*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81717*0 + 3*359*FLEN/8, x4, x1, x2)

inst_27240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffff80000000; valaddr_reg:x3; val_offset:81720*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81720*0 + 3*360*FLEN/8, x4, x1, x2)

inst_27241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffc0000000; valaddr_reg:x3; val_offset:81723*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81723*0 + 3*361*FLEN/8, x4, x1, x2)

inst_27242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffe0000000; valaddr_reg:x3; val_offset:81726*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81726*0 + 3*362*FLEN/8, x4, x1, x2)

inst_27243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffff0000000; valaddr_reg:x3; val_offset:81729*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81729*0 + 3*363*FLEN/8, x4, x1, x2)

inst_27244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffff8000000; valaddr_reg:x3; val_offset:81732*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81732*0 + 3*364*FLEN/8, x4, x1, x2)

inst_27245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffc000000; valaddr_reg:x3; val_offset:81735*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81735*0 + 3*365*FLEN/8, x4, x1, x2)

inst_27246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffe000000; valaddr_reg:x3; val_offset:81738*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81738*0 + 3*366*FLEN/8, x4, x1, x2)

inst_27247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffff000000; valaddr_reg:x3; val_offset:81741*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81741*0 + 3*367*FLEN/8, x4, x1, x2)

inst_27248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffff800000; valaddr_reg:x3; val_offset:81744*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81744*0 + 3*368*FLEN/8, x4, x1, x2)

inst_27249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffc00000; valaddr_reg:x3; val_offset:81747*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81747*0 + 3*369*FLEN/8, x4, x1, x2)

inst_27250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffe00000; valaddr_reg:x3; val_offset:81750*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81750*0 + 3*370*FLEN/8, x4, x1, x2)

inst_27251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffff00000; valaddr_reg:x3; val_offset:81753*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81753*0 + 3*371*FLEN/8, x4, x1, x2)

inst_27252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffff80000; valaddr_reg:x3; val_offset:81756*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81756*0 + 3*372*FLEN/8, x4, x1, x2)

inst_27253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffc0000; valaddr_reg:x3; val_offset:81759*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81759*0 + 3*373*FLEN/8, x4, x1, x2)

inst_27254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffe0000; valaddr_reg:x3; val_offset:81762*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81762*0 + 3*374*FLEN/8, x4, x1, x2)

inst_27255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffff0000; valaddr_reg:x3; val_offset:81765*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81765*0 + 3*375*FLEN/8, x4, x1, x2)

inst_27256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffff8000; valaddr_reg:x3; val_offset:81768*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81768*0 + 3*376*FLEN/8, x4, x1, x2)

inst_27257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffffc000; valaddr_reg:x3; val_offset:81771*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81771*0 + 3*377*FLEN/8, x4, x1, x2)

inst_27258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffffe000; valaddr_reg:x3; val_offset:81774*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81774*0 + 3*378*FLEN/8, x4, x1, x2)

inst_27259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffff000; valaddr_reg:x3; val_offset:81777*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81777*0 + 3*379*FLEN/8, x4, x1, x2)

inst_27260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffff800; valaddr_reg:x3; val_offset:81780*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81780*0 + 3*380*FLEN/8, x4, x1, x2)

inst_27261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffffc00; valaddr_reg:x3; val_offset:81783*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81783*0 + 3*381*FLEN/8, x4, x1, x2)

inst_27262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffffe00; valaddr_reg:x3; val_offset:81786*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81786*0 + 3*382*FLEN/8, x4, x1, x2)

inst_27263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffffff00; valaddr_reg:x3; val_offset:81789*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81789*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_27264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffffff80; valaddr_reg:x3; val_offset:81792*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81792*0 + 3*384*FLEN/8, x4, x1, x2)

inst_27265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffffffc0; valaddr_reg:x3; val_offset:81795*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81795*0 + 3*385*FLEN/8, x4, x1, x2)

inst_27266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffffffe0; valaddr_reg:x3; val_offset:81798*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81798*0 + 3*386*FLEN/8, x4, x1, x2)

inst_27267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffffff0; valaddr_reg:x3; val_offset:81801*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81801*0 + 3*387*FLEN/8, x4, x1, x2)

inst_27268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffffff8; valaddr_reg:x3; val_offset:81804*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81804*0 + 3*388*FLEN/8, x4, x1, x2)

inst_27269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffffffc; valaddr_reg:x3; val_offset:81807*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81807*0 + 3*389*FLEN/8, x4, x1, x2)

inst_27270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cffffffffffffe; valaddr_reg:x3; val_offset:81810*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81810*0 + 3*390*FLEN/8, x4, x1, x2)

inst_27271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x38c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xb8cfffffffffffff; valaddr_reg:x3; val_offset:81813*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81813*0 + 3*391*FLEN/8, x4, x1, x2)

inst_27272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:81816*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81816*0 + 3*392*FLEN/8, x4, x1, x2)

inst_27273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:81819*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81819*0 + 3*393*FLEN/8, x4, x1, x2)

inst_27274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:81822*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81822*0 + 3*394*FLEN/8, x4, x1, x2)

inst_27275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:81825*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81825*0 + 3*395*FLEN/8, x4, x1, x2)

inst_27276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:81828*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81828*0 + 3*396*FLEN/8, x4, x1, x2)

inst_27277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:81831*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81831*0 + 3*397*FLEN/8, x4, x1, x2)

inst_27278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:81834*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81834*0 + 3*398*FLEN/8, x4, x1, x2)

inst_27279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:81837*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81837*0 + 3*399*FLEN/8, x4, x1, x2)

inst_27280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:81840*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81840*0 + 3*400*FLEN/8, x4, x1, x2)

inst_27281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:81843*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81843*0 + 3*401*FLEN/8, x4, x1, x2)

inst_27282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:81846*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81846*0 + 3*402*FLEN/8, x4, x1, x2)

inst_27283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:81849*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81849*0 + 3*403*FLEN/8, x4, x1, x2)

inst_27284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:81852*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81852*0 + 3*404*FLEN/8, x4, x1, x2)

inst_27285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:81855*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81855*0 + 3*405*FLEN/8, x4, x1, x2)

inst_27286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:81858*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81858*0 + 3*406*FLEN/8, x4, x1, x2)

inst_27287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:81861*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81861*0 + 3*407*FLEN/8, x4, x1, x2)

inst_27288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:81864*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81864*0 + 3*408*FLEN/8, x4, x1, x2)

inst_27289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:81867*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81867*0 + 3*409*FLEN/8, x4, x1, x2)

inst_27290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:81870*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81870*0 + 3*410*FLEN/8, x4, x1, x2)

inst_27291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:81873*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81873*0 + 3*411*FLEN/8, x4, x1, x2)

inst_27292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:81876*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81876*0 + 3*412*FLEN/8, x4, x1, x2)

inst_27293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0c78d78f8bb47 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xe836f7899949e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90c78d78f8bb47; op2val:0x9fde836f7899949e;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:81879*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81879*0 + 3*413*FLEN/8, x4, x1, x2)

inst_27294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000000000000; valaddr_reg:x3; val_offset:81882*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81882*0 + 3*414*FLEN/8, x4, x1, x2)

inst_27295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000000000001; valaddr_reg:x3; val_offset:81885*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81885*0 + 3*415*FLEN/8, x4, x1, x2)

inst_27296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000000000003; valaddr_reg:x3; val_offset:81888*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81888*0 + 3*416*FLEN/8, x4, x1, x2)

inst_27297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000000000007; valaddr_reg:x3; val_offset:81891*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81891*0 + 3*417*FLEN/8, x4, x1, x2)

inst_27298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000000000000f; valaddr_reg:x3; val_offset:81894*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81894*0 + 3*418*FLEN/8, x4, x1, x2)

inst_27299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000000000001f; valaddr_reg:x3; val_offset:81897*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81897*0 + 3*419*FLEN/8, x4, x1, x2)

inst_27300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000000000003f; valaddr_reg:x3; val_offset:81900*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81900*0 + 3*420*FLEN/8, x4, x1, x2)

inst_27301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000000000007f; valaddr_reg:x3; val_offset:81903*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81903*0 + 3*421*FLEN/8, x4, x1, x2)

inst_27302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00000000000ff; valaddr_reg:x3; val_offset:81906*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81906*0 + 3*422*FLEN/8, x4, x1, x2)

inst_27303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00000000001ff; valaddr_reg:x3; val_offset:81909*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81909*0 + 3*423*FLEN/8, x4, x1, x2)

inst_27304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00000000003ff; valaddr_reg:x3; val_offset:81912*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81912*0 + 3*424*FLEN/8, x4, x1, x2)

inst_27305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00000000007ff; valaddr_reg:x3; val_offset:81915*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81915*0 + 3*425*FLEN/8, x4, x1, x2)

inst_27306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000000000fff; valaddr_reg:x3; val_offset:81918*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81918*0 + 3*426*FLEN/8, x4, x1, x2)

inst_27307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000000001fff; valaddr_reg:x3; val_offset:81921*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81921*0 + 3*427*FLEN/8, x4, x1, x2)

inst_27308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000000003fff; valaddr_reg:x3; val_offset:81924*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81924*0 + 3*428*FLEN/8, x4, x1, x2)

inst_27309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000000007fff; valaddr_reg:x3; val_offset:81927*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81927*0 + 3*429*FLEN/8, x4, x1, x2)

inst_27310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000000000ffff; valaddr_reg:x3; val_offset:81930*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81930*0 + 3*430*FLEN/8, x4, x1, x2)

inst_27311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000000001ffff; valaddr_reg:x3; val_offset:81933*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81933*0 + 3*431*FLEN/8, x4, x1, x2)

inst_27312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000000003ffff; valaddr_reg:x3; val_offset:81936*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81936*0 + 3*432*FLEN/8, x4, x1, x2)

inst_27313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000000007ffff; valaddr_reg:x3; val_offset:81939*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81939*0 + 3*433*FLEN/8, x4, x1, x2)

inst_27314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00000000fffff; valaddr_reg:x3; val_offset:81942*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81942*0 + 3*434*FLEN/8, x4, x1, x2)

inst_27315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00000001fffff; valaddr_reg:x3; val_offset:81945*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81945*0 + 3*435*FLEN/8, x4, x1, x2)

inst_27316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00000003fffff; valaddr_reg:x3; val_offset:81948*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81948*0 + 3*436*FLEN/8, x4, x1, x2)

inst_27317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00000007fffff; valaddr_reg:x3; val_offset:81951*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81951*0 + 3*437*FLEN/8, x4, x1, x2)

inst_27318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000000ffffff; valaddr_reg:x3; val_offset:81954*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81954*0 + 3*438*FLEN/8, x4, x1, x2)

inst_27319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000001ffffff; valaddr_reg:x3; val_offset:81957*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81957*0 + 3*439*FLEN/8, x4, x1, x2)

inst_27320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000003ffffff; valaddr_reg:x3; val_offset:81960*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81960*0 + 3*440*FLEN/8, x4, x1, x2)

inst_27321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000007ffffff; valaddr_reg:x3; val_offset:81963*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81963*0 + 3*441*FLEN/8, x4, x1, x2)

inst_27322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000000fffffff; valaddr_reg:x3; val_offset:81966*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81966*0 + 3*442*FLEN/8, x4, x1, x2)

inst_27323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000001fffffff; valaddr_reg:x3; val_offset:81969*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81969*0 + 3*443*FLEN/8, x4, x1, x2)

inst_27324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000003fffffff; valaddr_reg:x3; val_offset:81972*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81972*0 + 3*444*FLEN/8, x4, x1, x2)

inst_27325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000007fffffff; valaddr_reg:x3; val_offset:81975*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81975*0 + 3*445*FLEN/8, x4, x1, x2)

inst_27326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00000ffffffff; valaddr_reg:x3; val_offset:81978*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81978*0 + 3*446*FLEN/8, x4, x1, x2)

inst_27327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00001ffffffff; valaddr_reg:x3; val_offset:81981*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81981*0 + 3*447*FLEN/8, x4, x1, x2)

inst_27328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00003ffffffff; valaddr_reg:x3; val_offset:81984*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81984*0 + 3*448*FLEN/8, x4, x1, x2)

inst_27329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00007ffffffff; valaddr_reg:x3; val_offset:81987*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81987*0 + 3*449*FLEN/8, x4, x1, x2)

inst_27330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0000fffffffff; valaddr_reg:x3; val_offset:81990*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81990*0 + 3*450*FLEN/8, x4, x1, x2)

inst_27331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0001fffffffff; valaddr_reg:x3; val_offset:81993*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81993*0 + 3*451*FLEN/8, x4, x1, x2)

inst_27332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0003fffffffff; valaddr_reg:x3; val_offset:81996*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81996*0 + 3*452*FLEN/8, x4, x1, x2)

inst_27333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0007fffffffff; valaddr_reg:x3; val_offset:81999*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81999*0 + 3*453*FLEN/8, x4, x1, x2)

inst_27334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e000ffffffffff; valaddr_reg:x3; val_offset:82002*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82002*0 + 3*454*FLEN/8, x4, x1, x2)

inst_27335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e001ffffffffff; valaddr_reg:x3; val_offset:82005*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82005*0 + 3*455*FLEN/8, x4, x1, x2)

inst_27336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e003ffffffffff; valaddr_reg:x3; val_offset:82008*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82008*0 + 3*456*FLEN/8, x4, x1, x2)

inst_27337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e007ffffffffff; valaddr_reg:x3; val_offset:82011*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82011*0 + 3*457*FLEN/8, x4, x1, x2)

inst_27338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e00fffffffffff; valaddr_reg:x3; val_offset:82014*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82014*0 + 3*458*FLEN/8, x4, x1, x2)

inst_27339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e01fffffffffff; valaddr_reg:x3; val_offset:82017*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82017*0 + 3*459*FLEN/8, x4, x1, x2)

inst_27340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e03fffffffffff; valaddr_reg:x3; val_offset:82020*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82020*0 + 3*460*FLEN/8, x4, x1, x2)

inst_27341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e07fffffffffff; valaddr_reg:x3; val_offset:82023*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82023*0 + 3*461*FLEN/8, x4, x1, x2)

inst_27342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e0ffffffffffff; valaddr_reg:x3; val_offset:82026*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82026*0 + 3*462*FLEN/8, x4, x1, x2)

inst_27343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e1ffffffffffff; valaddr_reg:x3; val_offset:82029*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82029*0 + 3*463*FLEN/8, x4, x1, x2)

inst_27344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e3ffffffffffff; valaddr_reg:x3; val_offset:82032*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82032*0 + 3*464*FLEN/8, x4, x1, x2)

inst_27345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e7ffffffffffff; valaddr_reg:x3; val_offset:82035*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82035*0 + 3*465*FLEN/8, x4, x1, x2)

inst_27346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37e8000000000000; valaddr_reg:x3; val_offset:82038*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82038*0 + 3*466*FLEN/8, x4, x1, x2)

inst_27347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37ec000000000000; valaddr_reg:x3; val_offset:82041*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82041*0 + 3*467*FLEN/8, x4, x1, x2)

inst_27348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37ee000000000000; valaddr_reg:x3; val_offset:82044*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82044*0 + 3*468*FLEN/8, x4, x1, x2)

inst_27349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37ef000000000000; valaddr_reg:x3; val_offset:82047*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82047*0 + 3*469*FLEN/8, x4, x1, x2)

inst_27350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37ef800000000000; valaddr_reg:x3; val_offset:82050*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82050*0 + 3*470*FLEN/8, x4, x1, x2)

inst_27351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efc00000000000; valaddr_reg:x3; val_offset:82053*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82053*0 + 3*471*FLEN/8, x4, x1, x2)

inst_27352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efe00000000000; valaddr_reg:x3; val_offset:82056*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82056*0 + 3*472*FLEN/8, x4, x1, x2)

inst_27353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37eff00000000000; valaddr_reg:x3; val_offset:82059*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82059*0 + 3*473*FLEN/8, x4, x1, x2)

inst_27354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37eff80000000000; valaddr_reg:x3; val_offset:82062*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82062*0 + 3*474*FLEN/8, x4, x1, x2)

inst_27355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effc0000000000; valaddr_reg:x3; val_offset:82065*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82065*0 + 3*475*FLEN/8, x4, x1, x2)

inst_27356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effe0000000000; valaddr_reg:x3; val_offset:82068*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82068*0 + 3*476*FLEN/8, x4, x1, x2)

inst_27357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efff0000000000; valaddr_reg:x3; val_offset:82071*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82071*0 + 3*477*FLEN/8, x4, x1, x2)

inst_27358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efff8000000000; valaddr_reg:x3; val_offset:82074*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82074*0 + 3*478*FLEN/8, x4, x1, x2)

inst_27359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffc000000000; valaddr_reg:x3; val_offset:82077*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82077*0 + 3*479*FLEN/8, x4, x1, x2)

inst_27360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffe000000000; valaddr_reg:x3; val_offset:82080*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82080*0 + 3*480*FLEN/8, x4, x1, x2)

inst_27361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effff000000000; valaddr_reg:x3; val_offset:82083*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82083*0 + 3*481*FLEN/8, x4, x1, x2)

inst_27362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effff800000000; valaddr_reg:x3; val_offset:82086*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82086*0 + 3*482*FLEN/8, x4, x1, x2)

inst_27363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffc00000000; valaddr_reg:x3; val_offset:82089*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82089*0 + 3*483*FLEN/8, x4, x1, x2)

inst_27364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffe00000000; valaddr_reg:x3; val_offset:82092*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82092*0 + 3*484*FLEN/8, x4, x1, x2)

inst_27365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffff00000000; valaddr_reg:x3; val_offset:82095*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82095*0 + 3*485*FLEN/8, x4, x1, x2)

inst_27366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffff80000000; valaddr_reg:x3; val_offset:82098*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82098*0 + 3*486*FLEN/8, x4, x1, x2)

inst_27367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffc0000000; valaddr_reg:x3; val_offset:82101*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82101*0 + 3*487*FLEN/8, x4, x1, x2)

inst_27368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffe0000000; valaddr_reg:x3; val_offset:82104*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82104*0 + 3*488*FLEN/8, x4, x1, x2)

inst_27369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffff0000000; valaddr_reg:x3; val_offset:82107*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82107*0 + 3*489*FLEN/8, x4, x1, x2)

inst_27370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffff8000000; valaddr_reg:x3; val_offset:82110*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82110*0 + 3*490*FLEN/8, x4, x1, x2)

inst_27371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffc000000; valaddr_reg:x3; val_offset:82113*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82113*0 + 3*491*FLEN/8, x4, x1, x2)

inst_27372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffe000000; valaddr_reg:x3; val_offset:82116*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82116*0 + 3*492*FLEN/8, x4, x1, x2)

inst_27373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffff000000; valaddr_reg:x3; val_offset:82119*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82119*0 + 3*493*FLEN/8, x4, x1, x2)

inst_27374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffff800000; valaddr_reg:x3; val_offset:82122*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82122*0 + 3*494*FLEN/8, x4, x1, x2)

inst_27375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffc00000; valaddr_reg:x3; val_offset:82125*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82125*0 + 3*495*FLEN/8, x4, x1, x2)

inst_27376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffe00000; valaddr_reg:x3; val_offset:82128*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82128*0 + 3*496*FLEN/8, x4, x1, x2)

inst_27377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffff00000; valaddr_reg:x3; val_offset:82131*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82131*0 + 3*497*FLEN/8, x4, x1, x2)

inst_27378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffff80000; valaddr_reg:x3; val_offset:82134*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82134*0 + 3*498*FLEN/8, x4, x1, x2)

inst_27379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffc0000; valaddr_reg:x3; val_offset:82137*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82137*0 + 3*499*FLEN/8, x4, x1, x2)

inst_27380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffe0000; valaddr_reg:x3; val_offset:82140*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82140*0 + 3*500*FLEN/8, x4, x1, x2)

inst_27381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffff0000; valaddr_reg:x3; val_offset:82143*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82143*0 + 3*501*FLEN/8, x4, x1, x2)

inst_27382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffff8000; valaddr_reg:x3; val_offset:82146*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82146*0 + 3*502*FLEN/8, x4, x1, x2)

inst_27383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffffc000; valaddr_reg:x3; val_offset:82149*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82149*0 + 3*503*FLEN/8, x4, x1, x2)

inst_27384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffffe000; valaddr_reg:x3; val_offset:82152*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82152*0 + 3*504*FLEN/8, x4, x1, x2)

inst_27385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffff000; valaddr_reg:x3; val_offset:82155*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82155*0 + 3*505*FLEN/8, x4, x1, x2)

inst_27386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffff800; valaddr_reg:x3; val_offset:82158*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82158*0 + 3*506*FLEN/8, x4, x1, x2)

inst_27387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffffc00; valaddr_reg:x3; val_offset:82161*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82161*0 + 3*507*FLEN/8, x4, x1, x2)

inst_27388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffffe00; valaddr_reg:x3; val_offset:82164*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82164*0 + 3*508*FLEN/8, x4, x1, x2)

inst_27389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffffff00; valaddr_reg:x3; val_offset:82167*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82167*0 + 3*509*FLEN/8, x4, x1, x2)

inst_27390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffffff80; valaddr_reg:x3; val_offset:82170*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82170*0 + 3*510*FLEN/8, x4, x1, x2)

inst_27391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffffffc0; valaddr_reg:x3; val_offset:82173*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82173*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_27392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffffffe0; valaddr_reg:x3; val_offset:82176*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82176*0 + 3*512*FLEN/8, x4, x1, x2)

inst_27393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffffff0; valaddr_reg:x3; val_offset:82179*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82179*0 + 3*513*FLEN/8, x4, x1, x2)

inst_27394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffffff8; valaddr_reg:x3; val_offset:82182*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82182*0 + 3*514*FLEN/8, x4, x1, x2)

inst_27395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffffffc; valaddr_reg:x3; val_offset:82185*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82185*0 + 3*515*FLEN/8, x4, x1, x2)

inst_27396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37effffffffffffe; valaddr_reg:x3; val_offset:82188*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82188*0 + 3*516*FLEN/8, x4, x1, x2)

inst_27397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x37e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x37efffffffffffff; valaddr_reg:x3; val_offset:82191*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82191*0 + 3*517*FLEN/8, x4, x1, x2)

inst_27398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:82194*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82194*0 + 3*518*FLEN/8, x4, x1, x2)

inst_27399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:82197*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82197*0 + 3*519*FLEN/8, x4, x1, x2)

inst_27400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:82200*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82200*0 + 3*520*FLEN/8, x4, x1, x2)

inst_27401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:82203*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82203*0 + 3*521*FLEN/8, x4, x1, x2)

inst_27402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:82206*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82206*0 + 3*522*FLEN/8, x4, x1, x2)

inst_27403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:82209*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82209*0 + 3*523*FLEN/8, x4, x1, x2)

inst_27404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:82212*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82212*0 + 3*524*FLEN/8, x4, x1, x2)

inst_27405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:82215*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82215*0 + 3*525*FLEN/8, x4, x1, x2)

inst_27406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:82218*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82218*0 + 3*526*FLEN/8, x4, x1, x2)

inst_27407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:82221*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82221*0 + 3*527*FLEN/8, x4, x1, x2)

inst_27408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:82224*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82224*0 + 3*528*FLEN/8, x4, x1, x2)

inst_27409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:82227*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82227*0 + 3*529*FLEN/8, x4, x1, x2)

inst_27410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:82230*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82230*0 + 3*530*FLEN/8, x4, x1, x2)

inst_27411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:82233*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82233*0 + 3*531*FLEN/8, x4, x1, x2)

inst_27412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:82236*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82236*0 + 3*532*FLEN/8, x4, x1, x2)

inst_27413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:82239*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82239*0 + 3*533*FLEN/8, x4, x1, x2)

inst_27414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:82242*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82242*0 + 3*534*FLEN/8, x4, x1, x2)

inst_27415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:82245*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82245*0 + 3*535*FLEN/8, x4, x1, x2)

inst_27416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:82248*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82248*0 + 3*536*FLEN/8, x4, x1, x2)

inst_27417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:82251*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82251*0 + 3*537*FLEN/8, x4, x1, x2)

inst_27418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:82254*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82254*0 + 3*538*FLEN/8, x4, x1, x2)

inst_27419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e79fea673a31 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe498b7ba5bafc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e79fea673a31; op2val:0x204e498b7ba5bafc;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:82257*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82257*0 + 3*539*FLEN/8, x4, x1, x2)

inst_27420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:82260*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82260*0 + 3*540*FLEN/8, x4, x1, x2)

inst_27421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:82263*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82263*0 + 3*541*FLEN/8, x4, x1, x2)

inst_27422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:82266*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82266*0 + 3*542*FLEN/8, x4, x1, x2)

inst_27423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:82269*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82269*0 + 3*543*FLEN/8, x4, x1, x2)

inst_27424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:82272*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82272*0 + 3*544*FLEN/8, x4, x1, x2)

inst_27425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:82275*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82275*0 + 3*545*FLEN/8, x4, x1, x2)

inst_27426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:82278*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82278*0 + 3*546*FLEN/8, x4, x1, x2)

inst_27427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:82281*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82281*0 + 3*547*FLEN/8, x4, x1, x2)

inst_27428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:82284*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82284*0 + 3*548*FLEN/8, x4, x1, x2)

inst_27429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:82287*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82287*0 + 3*549*FLEN/8, x4, x1, x2)

inst_27430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:82290*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82290*0 + 3*550*FLEN/8, x4, x1, x2)

inst_27431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:82293*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82293*0 + 3*551*FLEN/8, x4, x1, x2)

inst_27432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:82296*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82296*0 + 3*552*FLEN/8, x4, x1, x2)

inst_27433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:82299*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82299*0 + 3*553*FLEN/8, x4, x1, x2)

inst_27434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:82302*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82302*0 + 3*554*FLEN/8, x4, x1, x2)

inst_27435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:82305*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82305*0 + 3*555*FLEN/8, x4, x1, x2)

inst_27436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:82308*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82308*0 + 3*556*FLEN/8, x4, x1, x2)

inst_27437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:82311*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82311*0 + 3*557*FLEN/8, x4, x1, x2)

inst_27438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:82314*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82314*0 + 3*558*FLEN/8, x4, x1, x2)

inst_27439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:82317*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82317*0 + 3*559*FLEN/8, x4, x1, x2)

inst_27440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:82320*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82320*0 + 3*560*FLEN/8, x4, x1, x2)

inst_27441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:82323*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82323*0 + 3*561*FLEN/8, x4, x1, x2)

inst_27442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000000000000; valaddr_reg:x3; val_offset:82326*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82326*0 + 3*562*FLEN/8, x4, x1, x2)

inst_27443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000000000001; valaddr_reg:x3; val_offset:82329*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82329*0 + 3*563*FLEN/8, x4, x1, x2)

inst_27444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000000000003; valaddr_reg:x3; val_offset:82332*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82332*0 + 3*564*FLEN/8, x4, x1, x2)

inst_27445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000000000007; valaddr_reg:x3; val_offset:82335*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82335*0 + 3*565*FLEN/8, x4, x1, x2)

inst_27446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000000000000f; valaddr_reg:x3; val_offset:82338*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82338*0 + 3*566*FLEN/8, x4, x1, x2)

inst_27447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000000000001f; valaddr_reg:x3; val_offset:82341*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82341*0 + 3*567*FLEN/8, x4, x1, x2)

inst_27448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000000000003f; valaddr_reg:x3; val_offset:82344*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82344*0 + 3*568*FLEN/8, x4, x1, x2)

inst_27449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000000000007f; valaddr_reg:x3; val_offset:82347*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82347*0 + 3*569*FLEN/8, x4, x1, x2)

inst_27450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900000000000ff; valaddr_reg:x3; val_offset:82350*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82350*0 + 3*570*FLEN/8, x4, x1, x2)

inst_27451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900000000001ff; valaddr_reg:x3; val_offset:82353*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82353*0 + 3*571*FLEN/8, x4, x1, x2)

inst_27452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900000000003ff; valaddr_reg:x3; val_offset:82356*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82356*0 + 3*572*FLEN/8, x4, x1, x2)

inst_27453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900000000007ff; valaddr_reg:x3; val_offset:82359*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82359*0 + 3*573*FLEN/8, x4, x1, x2)

inst_27454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000000000fff; valaddr_reg:x3; val_offset:82362*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82362*0 + 3*574*FLEN/8, x4, x1, x2)

inst_27455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000000001fff; valaddr_reg:x3; val_offset:82365*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82365*0 + 3*575*FLEN/8, x4, x1, x2)

inst_27456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000000003fff; valaddr_reg:x3; val_offset:82368*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82368*0 + 3*576*FLEN/8, x4, x1, x2)

inst_27457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000000007fff; valaddr_reg:x3; val_offset:82371*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82371*0 + 3*577*FLEN/8, x4, x1, x2)

inst_27458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000000000ffff; valaddr_reg:x3; val_offset:82374*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82374*0 + 3*578*FLEN/8, x4, x1, x2)

inst_27459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000000001ffff; valaddr_reg:x3; val_offset:82377*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82377*0 + 3*579*FLEN/8, x4, x1, x2)

inst_27460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000000003ffff; valaddr_reg:x3; val_offset:82380*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82380*0 + 3*580*FLEN/8, x4, x1, x2)

inst_27461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000000007ffff; valaddr_reg:x3; val_offset:82383*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82383*0 + 3*581*FLEN/8, x4, x1, x2)

inst_27462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900000000fffff; valaddr_reg:x3; val_offset:82386*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82386*0 + 3*582*FLEN/8, x4, x1, x2)

inst_27463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900000001fffff; valaddr_reg:x3; val_offset:82389*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82389*0 + 3*583*FLEN/8, x4, x1, x2)

inst_27464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900000003fffff; valaddr_reg:x3; val_offset:82392*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82392*0 + 3*584*FLEN/8, x4, x1, x2)

inst_27465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900000007fffff; valaddr_reg:x3; val_offset:82395*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82395*0 + 3*585*FLEN/8, x4, x1, x2)

inst_27466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000000ffffff; valaddr_reg:x3; val_offset:82398*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82398*0 + 3*586*FLEN/8, x4, x1, x2)

inst_27467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000001ffffff; valaddr_reg:x3; val_offset:82401*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82401*0 + 3*587*FLEN/8, x4, x1, x2)

inst_27468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000003ffffff; valaddr_reg:x3; val_offset:82404*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82404*0 + 3*588*FLEN/8, x4, x1, x2)

inst_27469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000007ffffff; valaddr_reg:x3; val_offset:82407*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82407*0 + 3*589*FLEN/8, x4, x1, x2)

inst_27470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000000fffffff; valaddr_reg:x3; val_offset:82410*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82410*0 + 3*590*FLEN/8, x4, x1, x2)

inst_27471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000001fffffff; valaddr_reg:x3; val_offset:82413*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82413*0 + 3*591*FLEN/8, x4, x1, x2)

inst_27472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000003fffffff; valaddr_reg:x3; val_offset:82416*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82416*0 + 3*592*FLEN/8, x4, x1, x2)

inst_27473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000007fffffff; valaddr_reg:x3; val_offset:82419*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82419*0 + 3*593*FLEN/8, x4, x1, x2)

inst_27474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900000ffffffff; valaddr_reg:x3; val_offset:82422*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82422*0 + 3*594*FLEN/8, x4, x1, x2)

inst_27475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900001ffffffff; valaddr_reg:x3; val_offset:82425*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82425*0 + 3*595*FLEN/8, x4, x1, x2)

inst_27476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900003ffffffff; valaddr_reg:x3; val_offset:82428*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82428*0 + 3*596*FLEN/8, x4, x1, x2)

inst_27477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900007ffffffff; valaddr_reg:x3; val_offset:82431*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82431*0 + 3*597*FLEN/8, x4, x1, x2)

inst_27478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90000fffffffff; valaddr_reg:x3; val_offset:82434*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82434*0 + 3*598*FLEN/8, x4, x1, x2)

inst_27479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90001fffffffff; valaddr_reg:x3; val_offset:82437*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82437*0 + 3*599*FLEN/8, x4, x1, x2)

inst_27480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90003fffffffff; valaddr_reg:x3; val_offset:82440*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82440*0 + 3*600*FLEN/8, x4, x1, x2)

inst_27481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90007fffffffff; valaddr_reg:x3; val_offset:82443*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82443*0 + 3*601*FLEN/8, x4, x1, x2)

inst_27482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9000ffffffffff; valaddr_reg:x3; val_offset:82446*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82446*0 + 3*602*FLEN/8, x4, x1, x2)

inst_27483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9001ffffffffff; valaddr_reg:x3; val_offset:82449*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82449*0 + 3*603*FLEN/8, x4, x1, x2)

inst_27484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9003ffffffffff; valaddr_reg:x3; val_offset:82452*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82452*0 + 3*604*FLEN/8, x4, x1, x2)

inst_27485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9007ffffffffff; valaddr_reg:x3; val_offset:82455*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82455*0 + 3*605*FLEN/8, x4, x1, x2)

inst_27486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x900fffffffffff; valaddr_reg:x3; val_offset:82458*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82458*0 + 3*606*FLEN/8, x4, x1, x2)

inst_27487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x901fffffffffff; valaddr_reg:x3; val_offset:82461*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82461*0 + 3*607*FLEN/8, x4, x1, x2)

inst_27488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x903fffffffffff; valaddr_reg:x3; val_offset:82464*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82464*0 + 3*608*FLEN/8, x4, x1, x2)

inst_27489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x907fffffffffff; valaddr_reg:x3; val_offset:82467*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82467*0 + 3*609*FLEN/8, x4, x1, x2)

inst_27490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x90ffffffffffff; valaddr_reg:x3; val_offset:82470*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82470*0 + 3*610*FLEN/8, x4, x1, x2)

inst_27491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x91ffffffffffff; valaddr_reg:x3; val_offset:82473*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82473*0 + 3*611*FLEN/8, x4, x1, x2)

inst_27492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x93ffffffffffff; valaddr_reg:x3; val_offset:82476*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82476*0 + 3*612*FLEN/8, x4, x1, x2)

inst_27493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x97ffffffffffff; valaddr_reg:x3; val_offset:82479*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82479*0 + 3*613*FLEN/8, x4, x1, x2)

inst_27494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x98000000000000; valaddr_reg:x3; val_offset:82482*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82482*0 + 3*614*FLEN/8, x4, x1, x2)

inst_27495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9c000000000000; valaddr_reg:x3; val_offset:82485*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82485*0 + 3*615*FLEN/8, x4, x1, x2)

inst_27496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9e000000000000; valaddr_reg:x3; val_offset:82488*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82488*0 + 3*616*FLEN/8, x4, x1, x2)

inst_27497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9f000000000000; valaddr_reg:x3; val_offset:82491*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82491*0 + 3*617*FLEN/8, x4, x1, x2)

inst_27498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9f800000000000; valaddr_reg:x3; val_offset:82494*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82494*0 + 3*618*FLEN/8, x4, x1, x2)

inst_27499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fc00000000000; valaddr_reg:x3; val_offset:82497*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82497*0 + 3*619*FLEN/8, x4, x1, x2)

inst_27500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fe00000000000; valaddr_reg:x3; val_offset:82500*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82500*0 + 3*620*FLEN/8, x4, x1, x2)

inst_27501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ff00000000000; valaddr_reg:x3; val_offset:82503*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82503*0 + 3*621*FLEN/8, x4, x1, x2)

inst_27502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ff80000000000; valaddr_reg:x3; val_offset:82506*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82506*0 + 3*622*FLEN/8, x4, x1, x2)

inst_27503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffc0000000000; valaddr_reg:x3; val_offset:82509*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82509*0 + 3*623*FLEN/8, x4, x1, x2)

inst_27504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffe0000000000; valaddr_reg:x3; val_offset:82512*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82512*0 + 3*624*FLEN/8, x4, x1, x2)

inst_27505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fff0000000000; valaddr_reg:x3; val_offset:82515*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82515*0 + 3*625*FLEN/8, x4, x1, x2)

inst_27506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fff8000000000; valaddr_reg:x3; val_offset:82518*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82518*0 + 3*626*FLEN/8, x4, x1, x2)

inst_27507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffc000000000; valaddr_reg:x3; val_offset:82521*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82521*0 + 3*627*FLEN/8, x4, x1, x2)

inst_27508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffe000000000; valaddr_reg:x3; val_offset:82524*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82524*0 + 3*628*FLEN/8, x4, x1, x2)

inst_27509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffff000000000; valaddr_reg:x3; val_offset:82527*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82527*0 + 3*629*FLEN/8, x4, x1, x2)

inst_27510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffff800000000; valaddr_reg:x3; val_offset:82530*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82530*0 + 3*630*FLEN/8, x4, x1, x2)

inst_27511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffc00000000; valaddr_reg:x3; val_offset:82533*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82533*0 + 3*631*FLEN/8, x4, x1, x2)

inst_27512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffe00000000; valaddr_reg:x3; val_offset:82536*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82536*0 + 3*632*FLEN/8, x4, x1, x2)

inst_27513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffff00000000; valaddr_reg:x3; val_offset:82539*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82539*0 + 3*633*FLEN/8, x4, x1, x2)

inst_27514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffff80000000; valaddr_reg:x3; val_offset:82542*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82542*0 + 3*634*FLEN/8, x4, x1, x2)

inst_27515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffc0000000; valaddr_reg:x3; val_offset:82545*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82545*0 + 3*635*FLEN/8, x4, x1, x2)

inst_27516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffe0000000; valaddr_reg:x3; val_offset:82548*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82548*0 + 3*636*FLEN/8, x4, x1, x2)

inst_27517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffff0000000; valaddr_reg:x3; val_offset:82551*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82551*0 + 3*637*FLEN/8, x4, x1, x2)

inst_27518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffff8000000; valaddr_reg:x3; val_offset:82554*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82554*0 + 3*638*FLEN/8, x4, x1, x2)

inst_27519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffc000000; valaddr_reg:x3; val_offset:82557*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82557*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_27520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffe000000; valaddr_reg:x3; val_offset:82560*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82560*0 + 3*640*FLEN/8, x4, x1, x2)

inst_27521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffff000000; valaddr_reg:x3; val_offset:82563*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82563*0 + 3*641*FLEN/8, x4, x1, x2)

inst_27522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffff800000; valaddr_reg:x3; val_offset:82566*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82566*0 + 3*642*FLEN/8, x4, x1, x2)

inst_27523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffc00000; valaddr_reg:x3; val_offset:82569*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82569*0 + 3*643*FLEN/8, x4, x1, x2)

inst_27524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffe00000; valaddr_reg:x3; val_offset:82572*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82572*0 + 3*644*FLEN/8, x4, x1, x2)

inst_27525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffff00000; valaddr_reg:x3; val_offset:82575*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82575*0 + 3*645*FLEN/8, x4, x1, x2)

inst_27526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffff80000; valaddr_reg:x3; val_offset:82578*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82578*0 + 3*646*FLEN/8, x4, x1, x2)

inst_27527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffc0000; valaddr_reg:x3; val_offset:82581*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82581*0 + 3*647*FLEN/8, x4, x1, x2)

inst_27528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffe0000; valaddr_reg:x3; val_offset:82584*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82584*0 + 3*648*FLEN/8, x4, x1, x2)

inst_27529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffff0000; valaddr_reg:x3; val_offset:82587*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82587*0 + 3*649*FLEN/8, x4, x1, x2)

inst_27530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffff8000; valaddr_reg:x3; val_offset:82590*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82590*0 + 3*650*FLEN/8, x4, x1, x2)

inst_27531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffffc000; valaddr_reg:x3; val_offset:82593*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82593*0 + 3*651*FLEN/8, x4, x1, x2)

inst_27532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffffe000; valaddr_reg:x3; val_offset:82596*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82596*0 + 3*652*FLEN/8, x4, x1, x2)

inst_27533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffff000; valaddr_reg:x3; val_offset:82599*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82599*0 + 3*653*FLEN/8, x4, x1, x2)

inst_27534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffff800; valaddr_reg:x3; val_offset:82602*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82602*0 + 3*654*FLEN/8, x4, x1, x2)

inst_27535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffffc00; valaddr_reg:x3; val_offset:82605*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82605*0 + 3*655*FLEN/8, x4, x1, x2)

inst_27536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffffe00; valaddr_reg:x3; val_offset:82608*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82608*0 + 3*656*FLEN/8, x4, x1, x2)

inst_27537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffffff00; valaddr_reg:x3; val_offset:82611*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82611*0 + 3*657*FLEN/8, x4, x1, x2)

inst_27538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffffff80; valaddr_reg:x3; val_offset:82614*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82614*0 + 3*658*FLEN/8, x4, x1, x2)

inst_27539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffffffc0; valaddr_reg:x3; val_offset:82617*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82617*0 + 3*659*FLEN/8, x4, x1, x2)

inst_27540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffffffe0; valaddr_reg:x3; val_offset:82620*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82620*0 + 3*660*FLEN/8, x4, x1, x2)

inst_27541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffffff0; valaddr_reg:x3; val_offset:82623*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82623*0 + 3*661*FLEN/8, x4, x1, x2)

inst_27542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffffff8; valaddr_reg:x3; val_offset:82626*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82626*0 + 3*662*FLEN/8, x4, x1, x2)

inst_27543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffffffc; valaddr_reg:x3; val_offset:82629*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82629*0 + 3*663*FLEN/8, x4, x1, x2)

inst_27544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9ffffffffffffe; valaddr_reg:x3; val_offset:82632*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82632*0 + 3*664*FLEN/8, x4, x1, x2)

inst_27545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0e841a6abe309 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90e841a6abe309; op2val:0x0;
op3val:0x9fffffffffffff; valaddr_reg:x3; val_offset:82635*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82635*0 + 3*665*FLEN/8, x4, x1, x2)

inst_27546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000000000000; valaddr_reg:x3; val_offset:82638*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82638*0 + 3*666*FLEN/8, x4, x1, x2)

inst_27547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000000000001; valaddr_reg:x3; val_offset:82641*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82641*0 + 3*667*FLEN/8, x4, x1, x2)

inst_27548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000000000003; valaddr_reg:x3; val_offset:82644*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82644*0 + 3*668*FLEN/8, x4, x1, x2)

inst_27549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000000000007; valaddr_reg:x3; val_offset:82647*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82647*0 + 3*669*FLEN/8, x4, x1, x2)

inst_27550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000000000000f; valaddr_reg:x3; val_offset:82650*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82650*0 + 3*670*FLEN/8, x4, x1, x2)

inst_27551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000000000001f; valaddr_reg:x3; val_offset:82653*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82653*0 + 3*671*FLEN/8, x4, x1, x2)

inst_27552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000000000003f; valaddr_reg:x3; val_offset:82656*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82656*0 + 3*672*FLEN/8, x4, x1, x2)

inst_27553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000000000007f; valaddr_reg:x3; val_offset:82659*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82659*0 + 3*673*FLEN/8, x4, x1, x2)

inst_27554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600000000000ff; valaddr_reg:x3; val_offset:82662*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82662*0 + 3*674*FLEN/8, x4, x1, x2)

inst_27555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600000000001ff; valaddr_reg:x3; val_offset:82665*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82665*0 + 3*675*FLEN/8, x4, x1, x2)

inst_27556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600000000003ff; valaddr_reg:x3; val_offset:82668*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82668*0 + 3*676*FLEN/8, x4, x1, x2)

inst_27557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600000000007ff; valaddr_reg:x3; val_offset:82671*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82671*0 + 3*677*FLEN/8, x4, x1, x2)

inst_27558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000000000fff; valaddr_reg:x3; val_offset:82674*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82674*0 + 3*678*FLEN/8, x4, x1, x2)

inst_27559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000000001fff; valaddr_reg:x3; val_offset:82677*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82677*0 + 3*679*FLEN/8, x4, x1, x2)

inst_27560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000000003fff; valaddr_reg:x3; val_offset:82680*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82680*0 + 3*680*FLEN/8, x4, x1, x2)

inst_27561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000000007fff; valaddr_reg:x3; val_offset:82683*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82683*0 + 3*681*FLEN/8, x4, x1, x2)

inst_27562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000000000ffff; valaddr_reg:x3; val_offset:82686*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82686*0 + 3*682*FLEN/8, x4, x1, x2)

inst_27563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000000001ffff; valaddr_reg:x3; val_offset:82689*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82689*0 + 3*683*FLEN/8, x4, x1, x2)

inst_27564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000000003ffff; valaddr_reg:x3; val_offset:82692*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82692*0 + 3*684*FLEN/8, x4, x1, x2)

inst_27565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000000007ffff; valaddr_reg:x3; val_offset:82695*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82695*0 + 3*685*FLEN/8, x4, x1, x2)

inst_27566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600000000fffff; valaddr_reg:x3; val_offset:82698*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82698*0 + 3*686*FLEN/8, x4, x1, x2)

inst_27567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600000001fffff; valaddr_reg:x3; val_offset:82701*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82701*0 + 3*687*FLEN/8, x4, x1, x2)

inst_27568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600000003fffff; valaddr_reg:x3; val_offset:82704*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82704*0 + 3*688*FLEN/8, x4, x1, x2)

inst_27569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600000007fffff; valaddr_reg:x3; val_offset:82707*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82707*0 + 3*689*FLEN/8, x4, x1, x2)

inst_27570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000000ffffff; valaddr_reg:x3; val_offset:82710*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82710*0 + 3*690*FLEN/8, x4, x1, x2)

inst_27571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000001ffffff; valaddr_reg:x3; val_offset:82713*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82713*0 + 3*691*FLEN/8, x4, x1, x2)

inst_27572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000003ffffff; valaddr_reg:x3; val_offset:82716*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82716*0 + 3*692*FLEN/8, x4, x1, x2)

inst_27573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000007ffffff; valaddr_reg:x3; val_offset:82719*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82719*0 + 3*693*FLEN/8, x4, x1, x2)

inst_27574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000000fffffff; valaddr_reg:x3; val_offset:82722*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82722*0 + 3*694*FLEN/8, x4, x1, x2)

inst_27575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000001fffffff; valaddr_reg:x3; val_offset:82725*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82725*0 + 3*695*FLEN/8, x4, x1, x2)

inst_27576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000003fffffff; valaddr_reg:x3; val_offset:82728*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82728*0 + 3*696*FLEN/8, x4, x1, x2)

inst_27577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000007fffffff; valaddr_reg:x3; val_offset:82731*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82731*0 + 3*697*FLEN/8, x4, x1, x2)

inst_27578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600000ffffffff; valaddr_reg:x3; val_offset:82734*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82734*0 + 3*698*FLEN/8, x4, x1, x2)

inst_27579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600001ffffffff; valaddr_reg:x3; val_offset:82737*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82737*0 + 3*699*FLEN/8, x4, x1, x2)

inst_27580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600003ffffffff; valaddr_reg:x3; val_offset:82740*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82740*0 + 3*700*FLEN/8, x4, x1, x2)

inst_27581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600007ffffffff; valaddr_reg:x3; val_offset:82743*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82743*0 + 3*701*FLEN/8, x4, x1, x2)

inst_27582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60000fffffffff; valaddr_reg:x3; val_offset:82746*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82746*0 + 3*702*FLEN/8, x4, x1, x2)

inst_27583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60001fffffffff; valaddr_reg:x3; val_offset:82749*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82749*0 + 3*703*FLEN/8, x4, x1, x2)

inst_27584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60003fffffffff; valaddr_reg:x3; val_offset:82752*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82752*0 + 3*704*FLEN/8, x4, x1, x2)

inst_27585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60007fffffffff; valaddr_reg:x3; val_offset:82755*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82755*0 + 3*705*FLEN/8, x4, x1, x2)

inst_27586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6000ffffffffff; valaddr_reg:x3; val_offset:82758*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82758*0 + 3*706*FLEN/8, x4, x1, x2)

inst_27587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6001ffffffffff; valaddr_reg:x3; val_offset:82761*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82761*0 + 3*707*FLEN/8, x4, x1, x2)

inst_27588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6003ffffffffff; valaddr_reg:x3; val_offset:82764*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82764*0 + 3*708*FLEN/8, x4, x1, x2)

inst_27589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6007ffffffffff; valaddr_reg:x3; val_offset:82767*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82767*0 + 3*709*FLEN/8, x4, x1, x2)

inst_27590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f600fffffffffff; valaddr_reg:x3; val_offset:82770*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82770*0 + 3*710*FLEN/8, x4, x1, x2)

inst_27591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f601fffffffffff; valaddr_reg:x3; val_offset:82773*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82773*0 + 3*711*FLEN/8, x4, x1, x2)

inst_27592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f603fffffffffff; valaddr_reg:x3; val_offset:82776*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82776*0 + 3*712*FLEN/8, x4, x1, x2)

inst_27593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f607fffffffffff; valaddr_reg:x3; val_offset:82779*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82779*0 + 3*713*FLEN/8, x4, x1, x2)

inst_27594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f60ffffffffffff; valaddr_reg:x3; val_offset:82782*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82782*0 + 3*714*FLEN/8, x4, x1, x2)

inst_27595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f61ffffffffffff; valaddr_reg:x3; val_offset:82785*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82785*0 + 3*715*FLEN/8, x4, x1, x2)

inst_27596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f63ffffffffffff; valaddr_reg:x3; val_offset:82788*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82788*0 + 3*716*FLEN/8, x4, x1, x2)

inst_27597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f67ffffffffffff; valaddr_reg:x3; val_offset:82791*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82791*0 + 3*717*FLEN/8, x4, x1, x2)

inst_27598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f68000000000000; valaddr_reg:x3; val_offset:82794*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82794*0 + 3*718*FLEN/8, x4, x1, x2)

inst_27599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6c000000000000; valaddr_reg:x3; val_offset:82797*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82797*0 + 3*719*FLEN/8, x4, x1, x2)

inst_27600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6e000000000000; valaddr_reg:x3; val_offset:82800*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82800*0 + 3*720*FLEN/8, x4, x1, x2)

inst_27601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6f000000000000; valaddr_reg:x3; val_offset:82803*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82803*0 + 3*721*FLEN/8, x4, x1, x2)

inst_27602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6f800000000000; valaddr_reg:x3; val_offset:82806*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82806*0 + 3*722*FLEN/8, x4, x1, x2)

inst_27603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fc00000000000; valaddr_reg:x3; val_offset:82809*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82809*0 + 3*723*FLEN/8, x4, x1, x2)

inst_27604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fe00000000000; valaddr_reg:x3; val_offset:82812*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82812*0 + 3*724*FLEN/8, x4, x1, x2)

inst_27605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ff00000000000; valaddr_reg:x3; val_offset:82815*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82815*0 + 3*725*FLEN/8, x4, x1, x2)

inst_27606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ff80000000000; valaddr_reg:x3; val_offset:82818*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82818*0 + 3*726*FLEN/8, x4, x1, x2)

inst_27607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffc0000000000; valaddr_reg:x3; val_offset:82821*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82821*0 + 3*727*FLEN/8, x4, x1, x2)

inst_27608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffe0000000000; valaddr_reg:x3; val_offset:82824*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82824*0 + 3*728*FLEN/8, x4, x1, x2)

inst_27609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fff0000000000; valaddr_reg:x3; val_offset:82827*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82827*0 + 3*729*FLEN/8, x4, x1, x2)

inst_27610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fff8000000000; valaddr_reg:x3; val_offset:82830*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82830*0 + 3*730*FLEN/8, x4, x1, x2)

inst_27611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffc000000000; valaddr_reg:x3; val_offset:82833*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82833*0 + 3*731*FLEN/8, x4, x1, x2)

inst_27612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffe000000000; valaddr_reg:x3; val_offset:82836*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82836*0 + 3*732*FLEN/8, x4, x1, x2)

inst_27613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffff000000000; valaddr_reg:x3; val_offset:82839*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82839*0 + 3*733*FLEN/8, x4, x1, x2)

inst_27614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffff800000000; valaddr_reg:x3; val_offset:82842*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82842*0 + 3*734*FLEN/8, x4, x1, x2)

inst_27615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffc00000000; valaddr_reg:x3; val_offset:82845*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82845*0 + 3*735*FLEN/8, x4, x1, x2)

inst_27616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffe00000000; valaddr_reg:x3; val_offset:82848*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82848*0 + 3*736*FLEN/8, x4, x1, x2)

inst_27617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffff00000000; valaddr_reg:x3; val_offset:82851*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82851*0 + 3*737*FLEN/8, x4, x1, x2)

inst_27618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffff80000000; valaddr_reg:x3; val_offset:82854*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82854*0 + 3*738*FLEN/8, x4, x1, x2)

inst_27619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffc0000000; valaddr_reg:x3; val_offset:82857*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82857*0 + 3*739*FLEN/8, x4, x1, x2)

inst_27620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffe0000000; valaddr_reg:x3; val_offset:82860*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82860*0 + 3*740*FLEN/8, x4, x1, x2)

inst_27621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffff0000000; valaddr_reg:x3; val_offset:82863*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82863*0 + 3*741*FLEN/8, x4, x1, x2)

inst_27622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffff8000000; valaddr_reg:x3; val_offset:82866*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82866*0 + 3*742*FLEN/8, x4, x1, x2)

inst_27623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffc000000; valaddr_reg:x3; val_offset:82869*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82869*0 + 3*743*FLEN/8, x4, x1, x2)

inst_27624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffe000000; valaddr_reg:x3; val_offset:82872*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82872*0 + 3*744*FLEN/8, x4, x1, x2)

inst_27625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffff000000; valaddr_reg:x3; val_offset:82875*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82875*0 + 3*745*FLEN/8, x4, x1, x2)

inst_27626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffff800000; valaddr_reg:x3; val_offset:82878*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82878*0 + 3*746*FLEN/8, x4, x1, x2)

inst_27627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffc00000; valaddr_reg:x3; val_offset:82881*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82881*0 + 3*747*FLEN/8, x4, x1, x2)

inst_27628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffe00000; valaddr_reg:x3; val_offset:82884*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82884*0 + 3*748*FLEN/8, x4, x1, x2)

inst_27629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffff00000; valaddr_reg:x3; val_offset:82887*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82887*0 + 3*749*FLEN/8, x4, x1, x2)

inst_27630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffff80000; valaddr_reg:x3; val_offset:82890*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82890*0 + 3*750*FLEN/8, x4, x1, x2)

inst_27631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffffc0000; valaddr_reg:x3; val_offset:82893*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82893*0 + 3*751*FLEN/8, x4, x1, x2)

inst_27632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffffe0000; valaddr_reg:x3; val_offset:82896*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82896*0 + 3*752*FLEN/8, x4, x1, x2)

inst_27633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffff0000; valaddr_reg:x3; val_offset:82899*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82899*0 + 3*753*FLEN/8, x4, x1, x2)

inst_27634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffff8000; valaddr_reg:x3; val_offset:82902*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82902*0 + 3*754*FLEN/8, x4, x1, x2)

inst_27635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffffc000; valaddr_reg:x3; val_offset:82905*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82905*0 + 3*755*FLEN/8, x4, x1, x2)

inst_27636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffffe000; valaddr_reg:x3; val_offset:82908*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82908*0 + 3*756*FLEN/8, x4, x1, x2)

inst_27637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffffff000; valaddr_reg:x3; val_offset:82911*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82911*0 + 3*757*FLEN/8, x4, x1, x2)

inst_27638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffffff800; valaddr_reg:x3; val_offset:82914*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82914*0 + 3*758*FLEN/8, x4, x1, x2)

inst_27639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffffffc00; valaddr_reg:x3; val_offset:82917*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82917*0 + 3*759*FLEN/8, x4, x1, x2)

inst_27640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffffffe00; valaddr_reg:x3; val_offset:82920*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82920*0 + 3*760*FLEN/8, x4, x1, x2)

inst_27641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffffff00; valaddr_reg:x3; val_offset:82923*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82923*0 + 3*761*FLEN/8, x4, x1, x2)

inst_27642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffffff80; valaddr_reg:x3; val_offset:82926*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82926*0 + 3*762*FLEN/8, x4, x1, x2)

inst_27643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffffffc0; valaddr_reg:x3; val_offset:82929*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82929*0 + 3*763*FLEN/8, x4, x1, x2)

inst_27644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6fffffffffffe0; valaddr_reg:x3; val_offset:82932*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82932*0 + 3*764*FLEN/8, x4, x1, x2)

inst_27645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffffffff0; valaddr_reg:x3; val_offset:82935*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82935*0 + 3*765*FLEN/8, x4, x1, x2)

inst_27646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffffffff8; valaddr_reg:x3; val_offset:82938*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82938*0 + 3*766*FLEN/8, x4, x1, x2)

inst_27647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0f49ee98755fd and fs2 == 0 and fe2 == 0x204 and fm2 == 0xe32548cdc9306 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90f49ee98755fd; op2val:0x204e32548cdc9306;
op3val:0x3f6ffffffffffffc; valaddr_reg:x3; val_offset:82941*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82941*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170996048351723520,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171066417095901184,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171101601467990016,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171119193654034432,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171127989747056640,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171132387793567744,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171134586816823296,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171135686328451072,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136236084264960,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136510962171904,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136648401125376,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136717120602112,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136751480340480,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136768660209664,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136777250144256,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136781545111552,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136783692595200,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136784766337024,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785303207936,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785571643392,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785705861120,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785772969984,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785806524416,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785823301632,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785831690240,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785835884544,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785837981696,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839030272,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839554560,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839816704,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839947776,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840013312,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840046080,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840062464,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840070656,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840074752,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840076800,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840077824,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078336,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078592,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078720,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078784,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078816,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078832,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078840,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078844,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078846,64,FLEN)
NAN_BOXED(6886147607227878821,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078847,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(511,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1023,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2047,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4095,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8191,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16383,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32767,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65535,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131071,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262143,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(524287,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1048575,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2097151,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4194303,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8388607,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16777215,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33554431,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67108863,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134217727,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(268435455,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(536870911,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1073741823,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2147483647,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4294967295,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8589934591,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17179869183,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34359738367,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68719476735,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137438953471,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274877906943,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(549755813887,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1099511627775,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2199023255551,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4398046511103,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8796093022207,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17592186044415,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35184372088831,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70368744177663,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(562949953421311,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1125899906842623,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886159168900271867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895296,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895297,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895299,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895303,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895311,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895327,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895359,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895423,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895551,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895807,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995896319,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995897343,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995899391,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995903487,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995911679,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995928063,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995960831,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996026367,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996157439,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996419583,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996943871,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580997992447,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581000089599,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581004283903,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581012672511,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581029449727,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581063004159,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581130113023,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581264330751,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581532766207,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683582069637119,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683583143378943,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683585290862591,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683589585829887,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683598175764479,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683615355633663,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683649715372031,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683718434848767,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683855873802239,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684130751709183,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684680507523071,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229685780019150847,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229687979042406399,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229692377088917503,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229701173181939711,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229718765367984127,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229753949740072959,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229824318484250623,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229965055972605951,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230246530949316607,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230809480902737919,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580543,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580544,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233061280716423168,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233624230669844480,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233905705646555136,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234046443134910464,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234116811879088128,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234151996251176960,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234169588437221376,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234178384530243584,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234182782576754688,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234184981600010240,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186081111638016,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186630867451904,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186905745358848,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187043184312320,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187111903789056,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187146263527424,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187163443396608,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187172033331200,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187176328298496,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187178475782144,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187179549523968,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180086394880,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180354830336,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180489048064,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180556156928,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180589711360,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180606488576,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180614877184,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180619071488,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180621168640,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622217216,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622741504,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623003648,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623134720,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623200256,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623233024,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623249408,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623257600,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623261696,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623263744,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623264768,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265280,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265536,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265664,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265728,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265760,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265776,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265784,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265788,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265790,64,FLEN)
NAN_BOXED(6886160075359253505,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265791,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186176,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186177,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186179,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186183,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186191,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186207,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186239,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186303,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186431,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507186687,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507187199,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507188223,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507190271,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507194367,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507202559,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507218943,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507251711,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507317247,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507448319,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498507710463,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498508234751,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498509283327,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498511380479,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498515574783,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498523963391,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498540740607,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498574295039,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498641403903,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640498775621631,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640499044057087,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640499580927999,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640500654669823,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640502802153471,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640507097120767,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640515687055359,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640532866924543,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640567226662911,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640635946139647,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312640773385093119,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312641048263000063,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312641598018813951,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312642697530441727,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312644896553697279,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312649294600208383,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312658090693230591,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312675682879275007,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312710867251363839,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312781235995541503,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13312921973483896831,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13313203448460607487,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13313766398414028799,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13314892298320871423,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13314892298320871424,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13316018198227714048,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13316581148181135360,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13316862623157846016,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317003360646201344,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317073729390379008,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317108913762467840,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317126505948512256,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317135302041534464,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317139700088045568,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317141899111301120,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317142998622928896,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317143548378742784,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317143823256649728,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317143960695603200,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144029415079936,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144063774818304,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144080954687488,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144089544622080,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144093839589376,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144095987073024,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144097060814848,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144097597685760,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144097866121216,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098000338944,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098067447808,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098101002240,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098117779456,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098126168064,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098130362368,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098132459520,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098133508096,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134032384,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134294528,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134425600,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134491136,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134523904,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134540288,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134548480,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134552576,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134554624,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134555648,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556160,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556416,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556544,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556608,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556640,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556656,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556664,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556668,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556670,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13317144098134556671,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6886223240683371335,64,FLEN)
NAN_BOXED(11519789411648246942,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223424,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223425,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223427,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223431,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223439,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223455,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223487,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223551,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223679,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869223935,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869224447,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869225471,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869227519,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869231615,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869239807,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869256191,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869288959,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869354495,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869485567,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066869747711,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066870271999,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066871320575,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066873417727,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066877612031,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066886000639,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066902777855,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218066936332287,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218067003441151,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218067137658879,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218067406094335,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218067942965247,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218069016707071,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218071164190719,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218075459158015,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218084049092607,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218101228961791,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218135588700159,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218204308176895,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218341747130367,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026218616625037311,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026219166380851199,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026220265892478975,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026222464915734527,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026226862962245631,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026235659055267839,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026253251241312255,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026288435613401087,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026358804357578751,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026499541845934079,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4026781016822644735,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4027343966776066047,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4028469866682908671,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4028469866682908672,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4029595766589751296,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030158716543172608,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030440191519883264,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030580929008238592,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030651297752416256,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030686482124505088,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030704074310549504,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030712870403571712,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030717268450082816,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030719467473338368,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030720566984966144,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721116740780032,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721391618686976,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721529057640448,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721597777117184,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721632136855552,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721649316724736,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721657906659328,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721662201626624,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721664349110272,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721665422852096,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721665959723008,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666228158464,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666362376192,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666429485056,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666463039488,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666479816704,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666488205312,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666492399616,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666494496768,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666495545344,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496069632,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496331776,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496462848,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496528384,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496561152,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496577536,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496585728,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496589824,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496591872,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496592896,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593408,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593664,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593792,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593856,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593888,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593904,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593912,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593916,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593918,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4030721666496593919,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6886258504267938353,64,FLEN)
NAN_BOXED(2327878920820865788,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334464,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334465,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334467,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334471,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334479,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334495,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334527,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334591,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334719,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334975,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646335487,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646336511,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646338559,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646342655,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646350847,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646367231,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646399999,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646465535,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646596607,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646858751,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396647383039,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396648431615,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396650528767,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396654723071,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396663111679,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396679888895,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396713443327,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396780552191,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396914769919,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397183205375,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397720076287,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532398793818111,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532400941301759,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532405236269055,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532413826203647,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532431006072831,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532465365811199,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532534085287935,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532671524241407,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532946402148351,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40533496157962239,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40534595669590015,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40536794692845567,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40541192739356671,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40549988832378879,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40567581018423295,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40602765390512127,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40673134134689791,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40813871623045119,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41095346599755775,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41658296553177087,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019711,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019712,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(43910096366862336,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44473046320283648,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44754521296994304,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44895258785349632,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44965627529527296,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45000811901616128,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45018404087660544,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45027200180682752,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45031598227193856,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45033797250449408,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45034896762077184,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035446517891072,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035721395798016,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035858834751488,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035927554228224,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035961913966592,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035979093835776,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035987683770368,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035991978737664,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035994126221312,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995199963136,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995736834048,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996005269504,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996139487232,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996206596096,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996240150528,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996256927744,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996265316352,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996269510656,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996271607808,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996272656384,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273180672,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273442816,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273573888,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273639424,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273672192,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273688576,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273696768,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273700864,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273702912,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273703936,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704448,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704704,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704832,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704896,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704928,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704944,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704952,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704956,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704958,64,FLEN)
NAN_BOXED(6886259198916289289,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704959,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153682944,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153682945,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153682947,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153682951,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153682959,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153682975,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153683007,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153683071,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153683199,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153683455,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153683967,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153684991,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153687039,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153691135,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153699327,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153715711,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153748479,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153814015,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022153945087,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022154207231,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022154731519,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022155780095,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022157877247,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022162071551,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022170460159,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022187237375,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022220791807,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022287900671,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022422118399,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650022690553855,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650023227424767,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650024301166591,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650026448650239,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650030743617535,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650039333552127,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650056513421311,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650090873159679,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650159592636415,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650297031589887,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566650571909496831,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566651121665310719,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566652221176938495,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566654420200194047,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566658818246705151,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566667614339727359,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566685206525771775,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566720390897860607,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566790759642038271,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4566931497130393599,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4567212972107104255,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4567775922060525567,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4568901821967368191,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4568901821967368192,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4570027721874210816,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4570590671827632128,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4570872146804342784,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571012884292698112,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571083253036875776,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571118437408964608,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571136029595009024,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571144825688031232,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571149223734542336,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571151422757797888,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571152522269425664,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153072025239552,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153346903146496,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153484342099968,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153553061576704,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153587421315072,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153604601184256,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153613191118848,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153617486086144,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153619633569792,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153620707311616,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621244182528,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621512617984,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621646835712,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621713944576,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621747499008,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621764276224,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621772664832,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621776859136,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621778956288,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621780004864,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621780529152,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621780791296,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621780922368,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621780987904,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781020672,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781037056,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781045248,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781049344,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781051392,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781052416,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781052928,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781053184,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781053312,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781053376,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781053408,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781053424,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781053432,64,FLEN)
NAN_BOXED(6886272793609459197,64,FLEN)
NAN_BOXED(2327853396119032582,64,FLEN)
NAN_BOXED(4571153621781053436,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
