
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_86016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000000000000; valaddr_reg:x3; val_offset:258048*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258048*0 + 3*0*FLEN/8, x4, x1, x2)

inst_86017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000000000001; valaddr_reg:x3; val_offset:258051*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258051*0 + 3*1*FLEN/8, x4, x1, x2)

inst_86018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000000000003; valaddr_reg:x3; val_offset:258054*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258054*0 + 3*2*FLEN/8, x4, x1, x2)

inst_86019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000000000007; valaddr_reg:x3; val_offset:258057*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258057*0 + 3*3*FLEN/8, x4, x1, x2)

inst_86020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000000000000f; valaddr_reg:x3; val_offset:258060*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258060*0 + 3*4*FLEN/8, x4, x1, x2)

inst_86021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000000000001f; valaddr_reg:x3; val_offset:258063*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258063*0 + 3*5*FLEN/8, x4, x1, x2)

inst_86022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000000000003f; valaddr_reg:x3; val_offset:258066*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258066*0 + 3*6*FLEN/8, x4, x1, x2)

inst_86023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000000000007f; valaddr_reg:x3; val_offset:258069*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258069*0 + 3*7*FLEN/8, x4, x1, x2)

inst_86024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00000000000ff; valaddr_reg:x3; val_offset:258072*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258072*0 + 3*8*FLEN/8, x4, x1, x2)

inst_86025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00000000001ff; valaddr_reg:x3; val_offset:258075*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258075*0 + 3*9*FLEN/8, x4, x1, x2)

inst_86026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00000000003ff; valaddr_reg:x3; val_offset:258078*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258078*0 + 3*10*FLEN/8, x4, x1, x2)

inst_86027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00000000007ff; valaddr_reg:x3; val_offset:258081*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258081*0 + 3*11*FLEN/8, x4, x1, x2)

inst_86028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000000000fff; valaddr_reg:x3; val_offset:258084*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258084*0 + 3*12*FLEN/8, x4, x1, x2)

inst_86029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000000001fff; valaddr_reg:x3; val_offset:258087*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258087*0 + 3*13*FLEN/8, x4, x1, x2)

inst_86030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000000003fff; valaddr_reg:x3; val_offset:258090*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258090*0 + 3*14*FLEN/8, x4, x1, x2)

inst_86031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000000007fff; valaddr_reg:x3; val_offset:258093*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258093*0 + 3*15*FLEN/8, x4, x1, x2)

inst_86032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000000000ffff; valaddr_reg:x3; val_offset:258096*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258096*0 + 3*16*FLEN/8, x4, x1, x2)

inst_86033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000000001ffff; valaddr_reg:x3; val_offset:258099*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258099*0 + 3*17*FLEN/8, x4, x1, x2)

inst_86034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000000003ffff; valaddr_reg:x3; val_offset:258102*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258102*0 + 3*18*FLEN/8, x4, x1, x2)

inst_86035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000000007ffff; valaddr_reg:x3; val_offset:258105*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258105*0 + 3*19*FLEN/8, x4, x1, x2)

inst_86036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00000000fffff; valaddr_reg:x3; val_offset:258108*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258108*0 + 3*20*FLEN/8, x4, x1, x2)

inst_86037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00000001fffff; valaddr_reg:x3; val_offset:258111*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258111*0 + 3*21*FLEN/8, x4, x1, x2)

inst_86038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00000003fffff; valaddr_reg:x3; val_offset:258114*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258114*0 + 3*22*FLEN/8, x4, x1, x2)

inst_86039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00000007fffff; valaddr_reg:x3; val_offset:258117*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258117*0 + 3*23*FLEN/8, x4, x1, x2)

inst_86040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000000ffffff; valaddr_reg:x3; val_offset:258120*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258120*0 + 3*24*FLEN/8, x4, x1, x2)

inst_86041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000001ffffff; valaddr_reg:x3; val_offset:258123*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258123*0 + 3*25*FLEN/8, x4, x1, x2)

inst_86042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000003ffffff; valaddr_reg:x3; val_offset:258126*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258126*0 + 3*26*FLEN/8, x4, x1, x2)

inst_86043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000007ffffff; valaddr_reg:x3; val_offset:258129*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258129*0 + 3*27*FLEN/8, x4, x1, x2)

inst_86044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000000fffffff; valaddr_reg:x3; val_offset:258132*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258132*0 + 3*28*FLEN/8, x4, x1, x2)

inst_86045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000001fffffff; valaddr_reg:x3; val_offset:258135*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258135*0 + 3*29*FLEN/8, x4, x1, x2)

inst_86046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000003fffffff; valaddr_reg:x3; val_offset:258138*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258138*0 + 3*30*FLEN/8, x4, x1, x2)

inst_86047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000007fffffff; valaddr_reg:x3; val_offset:258141*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258141*0 + 3*31*FLEN/8, x4, x1, x2)

inst_86048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00000ffffffff; valaddr_reg:x3; val_offset:258144*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258144*0 + 3*32*FLEN/8, x4, x1, x2)

inst_86049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00001ffffffff; valaddr_reg:x3; val_offset:258147*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258147*0 + 3*33*FLEN/8, x4, x1, x2)

inst_86050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00003ffffffff; valaddr_reg:x3; val_offset:258150*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258150*0 + 3*34*FLEN/8, x4, x1, x2)

inst_86051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00007ffffffff; valaddr_reg:x3; val_offset:258153*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258153*0 + 3*35*FLEN/8, x4, x1, x2)

inst_86052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0000fffffffff; valaddr_reg:x3; val_offset:258156*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258156*0 + 3*36*FLEN/8, x4, x1, x2)

inst_86053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0001fffffffff; valaddr_reg:x3; val_offset:258159*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258159*0 + 3*37*FLEN/8, x4, x1, x2)

inst_86054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0003fffffffff; valaddr_reg:x3; val_offset:258162*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258162*0 + 3*38*FLEN/8, x4, x1, x2)

inst_86055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0007fffffffff; valaddr_reg:x3; val_offset:258165*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258165*0 + 3*39*FLEN/8, x4, x1, x2)

inst_86056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f000ffffffffff; valaddr_reg:x3; val_offset:258168*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258168*0 + 3*40*FLEN/8, x4, x1, x2)

inst_86057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f001ffffffffff; valaddr_reg:x3; val_offset:258171*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258171*0 + 3*41*FLEN/8, x4, x1, x2)

inst_86058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f003ffffffffff; valaddr_reg:x3; val_offset:258174*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258174*0 + 3*42*FLEN/8, x4, x1, x2)

inst_86059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f007ffffffffff; valaddr_reg:x3; val_offset:258177*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258177*0 + 3*43*FLEN/8, x4, x1, x2)

inst_86060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f00fffffffffff; valaddr_reg:x3; val_offset:258180*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258180*0 + 3*44*FLEN/8, x4, x1, x2)

inst_86061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f01fffffffffff; valaddr_reg:x3; val_offset:258183*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258183*0 + 3*45*FLEN/8, x4, x1, x2)

inst_86062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f03fffffffffff; valaddr_reg:x3; val_offset:258186*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258186*0 + 3*46*FLEN/8, x4, x1, x2)

inst_86063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f07fffffffffff; valaddr_reg:x3; val_offset:258189*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258189*0 + 3*47*FLEN/8, x4, x1, x2)

inst_86064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f0ffffffffffff; valaddr_reg:x3; val_offset:258192*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258192*0 + 3*48*FLEN/8, x4, x1, x2)

inst_86065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f1ffffffffffff; valaddr_reg:x3; val_offset:258195*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258195*0 + 3*49*FLEN/8, x4, x1, x2)

inst_86066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f3ffffffffffff; valaddr_reg:x3; val_offset:258198*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258198*0 + 3*50*FLEN/8, x4, x1, x2)

inst_86067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f7ffffffffffff; valaddr_reg:x3; val_offset:258201*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258201*0 + 3*51*FLEN/8, x4, x1, x2)

inst_86068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39f8000000000000; valaddr_reg:x3; val_offset:258204*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258204*0 + 3*52*FLEN/8, x4, x1, x2)

inst_86069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fc000000000000; valaddr_reg:x3; val_offset:258207*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258207*0 + 3*53*FLEN/8, x4, x1, x2)

inst_86070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fe000000000000; valaddr_reg:x3; val_offset:258210*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258210*0 + 3*54*FLEN/8, x4, x1, x2)

inst_86071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ff000000000000; valaddr_reg:x3; val_offset:258213*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258213*0 + 3*55*FLEN/8, x4, x1, x2)

inst_86072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ff800000000000; valaddr_reg:x3; val_offset:258216*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258216*0 + 3*56*FLEN/8, x4, x1, x2)

inst_86073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffc00000000000; valaddr_reg:x3; val_offset:258219*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258219*0 + 3*57*FLEN/8, x4, x1, x2)

inst_86074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffe00000000000; valaddr_reg:x3; val_offset:258222*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258222*0 + 3*58*FLEN/8, x4, x1, x2)

inst_86075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fff00000000000; valaddr_reg:x3; val_offset:258225*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258225*0 + 3*59*FLEN/8, x4, x1, x2)

inst_86076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fff80000000000; valaddr_reg:x3; val_offset:258228*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258228*0 + 3*60*FLEN/8, x4, x1, x2)

inst_86077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffc0000000000; valaddr_reg:x3; val_offset:258231*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258231*0 + 3*61*FLEN/8, x4, x1, x2)

inst_86078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffe0000000000; valaddr_reg:x3; val_offset:258234*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258234*0 + 3*62*FLEN/8, x4, x1, x2)

inst_86079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffff0000000000; valaddr_reg:x3; val_offset:258237*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258237*0 + 3*63*FLEN/8, x4, x1, x2)

inst_86080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffff8000000000; valaddr_reg:x3; val_offset:258240*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258240*0 + 3*64*FLEN/8, x4, x1, x2)

inst_86081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffc000000000; valaddr_reg:x3; val_offset:258243*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258243*0 + 3*65*FLEN/8, x4, x1, x2)

inst_86082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffe000000000; valaddr_reg:x3; val_offset:258246*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258246*0 + 3*66*FLEN/8, x4, x1, x2)

inst_86083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffff000000000; valaddr_reg:x3; val_offset:258249*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258249*0 + 3*67*FLEN/8, x4, x1, x2)

inst_86084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffff800000000; valaddr_reg:x3; val_offset:258252*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258252*0 + 3*68*FLEN/8, x4, x1, x2)

inst_86085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffc00000000; valaddr_reg:x3; val_offset:258255*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258255*0 + 3*69*FLEN/8, x4, x1, x2)

inst_86086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffe00000000; valaddr_reg:x3; val_offset:258258*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258258*0 + 3*70*FLEN/8, x4, x1, x2)

inst_86087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffff00000000; valaddr_reg:x3; val_offset:258261*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258261*0 + 3*71*FLEN/8, x4, x1, x2)

inst_86088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffff80000000; valaddr_reg:x3; val_offset:258264*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258264*0 + 3*72*FLEN/8, x4, x1, x2)

inst_86089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffc0000000; valaddr_reg:x3; val_offset:258267*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258267*0 + 3*73*FLEN/8, x4, x1, x2)

inst_86090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffe0000000; valaddr_reg:x3; val_offset:258270*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258270*0 + 3*74*FLEN/8, x4, x1, x2)

inst_86091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffff0000000; valaddr_reg:x3; val_offset:258273*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258273*0 + 3*75*FLEN/8, x4, x1, x2)

inst_86092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffff8000000; valaddr_reg:x3; val_offset:258276*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258276*0 + 3*76*FLEN/8, x4, x1, x2)

inst_86093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffc000000; valaddr_reg:x3; val_offset:258279*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258279*0 + 3*77*FLEN/8, x4, x1, x2)

inst_86094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffe000000; valaddr_reg:x3; val_offset:258282*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258282*0 + 3*78*FLEN/8, x4, x1, x2)

inst_86095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffff000000; valaddr_reg:x3; val_offset:258285*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258285*0 + 3*79*FLEN/8, x4, x1, x2)

inst_86096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffff800000; valaddr_reg:x3; val_offset:258288*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258288*0 + 3*80*FLEN/8, x4, x1, x2)

inst_86097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffc00000; valaddr_reg:x3; val_offset:258291*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258291*0 + 3*81*FLEN/8, x4, x1, x2)

inst_86098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffe00000; valaddr_reg:x3; val_offset:258294*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258294*0 + 3*82*FLEN/8, x4, x1, x2)

inst_86099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffff00000; valaddr_reg:x3; val_offset:258297*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258297*0 + 3*83*FLEN/8, x4, x1, x2)

inst_86100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffff80000; valaddr_reg:x3; val_offset:258300*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258300*0 + 3*84*FLEN/8, x4, x1, x2)

inst_86101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffc0000; valaddr_reg:x3; val_offset:258303*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258303*0 + 3*85*FLEN/8, x4, x1, x2)

inst_86102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffe0000; valaddr_reg:x3; val_offset:258306*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258306*0 + 3*86*FLEN/8, x4, x1, x2)

inst_86103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffff0000; valaddr_reg:x3; val_offset:258309*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258309*0 + 3*87*FLEN/8, x4, x1, x2)

inst_86104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffff8000; valaddr_reg:x3; val_offset:258312*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258312*0 + 3*88*FLEN/8, x4, x1, x2)

inst_86105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffffc000; valaddr_reg:x3; val_offset:258315*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258315*0 + 3*89*FLEN/8, x4, x1, x2)

inst_86106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffffe000; valaddr_reg:x3; val_offset:258318*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258318*0 + 3*90*FLEN/8, x4, x1, x2)

inst_86107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffff000; valaddr_reg:x3; val_offset:258321*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258321*0 + 3*91*FLEN/8, x4, x1, x2)

inst_86108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffff800; valaddr_reg:x3; val_offset:258324*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258324*0 + 3*92*FLEN/8, x4, x1, x2)

inst_86109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffffc00; valaddr_reg:x3; val_offset:258327*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258327*0 + 3*93*FLEN/8, x4, x1, x2)

inst_86110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffffe00; valaddr_reg:x3; val_offset:258330*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258330*0 + 3*94*FLEN/8, x4, x1, x2)

inst_86111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffffff00; valaddr_reg:x3; val_offset:258333*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258333*0 + 3*95*FLEN/8, x4, x1, x2)

inst_86112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffffff80; valaddr_reg:x3; val_offset:258336*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258336*0 + 3*96*FLEN/8, x4, x1, x2)

inst_86113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffffffc0; valaddr_reg:x3; val_offset:258339*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258339*0 + 3*97*FLEN/8, x4, x1, x2)

inst_86114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffffffe0; valaddr_reg:x3; val_offset:258342*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258342*0 + 3*98*FLEN/8, x4, x1, x2)

inst_86115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffffff0; valaddr_reg:x3; val_offset:258345*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258345*0 + 3*99*FLEN/8, x4, x1, x2)

inst_86116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffffff8; valaddr_reg:x3; val_offset:258348*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258348*0 + 3*100*FLEN/8, x4, x1, x2)

inst_86117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffffffc; valaddr_reg:x3; val_offset:258351*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258351*0 + 3*101*FLEN/8, x4, x1, x2)

inst_86118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39fffffffffffffe; valaddr_reg:x3; val_offset:258354*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258354*0 + 3*102*FLEN/8, x4, x1, x2)

inst_86119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x39ffffffffffffff; valaddr_reg:x3; val_offset:258357*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258357*0 + 3*103*FLEN/8, x4, x1, x2)

inst_86120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:258360*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258360*0 + 3*104*FLEN/8, x4, x1, x2)

inst_86121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:258363*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258363*0 + 3*105*FLEN/8, x4, x1, x2)

inst_86122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:258366*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258366*0 + 3*106*FLEN/8, x4, x1, x2)

inst_86123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:258369*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258369*0 + 3*107*FLEN/8, x4, x1, x2)

inst_86124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:258372*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258372*0 + 3*108*FLEN/8, x4, x1, x2)

inst_86125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:258375*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258375*0 + 3*109*FLEN/8, x4, x1, x2)

inst_86126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:258378*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258378*0 + 3*110*FLEN/8, x4, x1, x2)

inst_86127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:258381*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258381*0 + 3*111*FLEN/8, x4, x1, x2)

inst_86128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:258384*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258384*0 + 3*112*FLEN/8, x4, x1, x2)

inst_86129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:258387*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258387*0 + 3*113*FLEN/8, x4, x1, x2)

inst_86130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:258390*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258390*0 + 3*114*FLEN/8, x4, x1, x2)

inst_86131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:258393*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258393*0 + 3*115*FLEN/8, x4, x1, x2)

inst_86132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:258396*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258396*0 + 3*116*FLEN/8, x4, x1, x2)

inst_86133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:258399*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258399*0 + 3*117*FLEN/8, x4, x1, x2)

inst_86134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:258402*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258402*0 + 3*118*FLEN/8, x4, x1, x2)

inst_86135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:258405*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258405*0 + 3*119*FLEN/8, x4, x1, x2)

inst_86136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:258408*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258408*0 + 3*120*FLEN/8, x4, x1, x2)

inst_86137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:258411*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258411*0 + 3*121*FLEN/8, x4, x1, x2)

inst_86138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:258414*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258414*0 + 3*122*FLEN/8, x4, x1, x2)

inst_86139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:258417*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258417*0 + 3*123*FLEN/8, x4, x1, x2)

inst_86140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:258420*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258420*0 + 3*124*FLEN/8, x4, x1, x2)

inst_86141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7e898a9157ff and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3532e0d6209e1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7e898a9157ff; op2val:0x2033532e0d6209e1;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:258423*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258423*0 + 3*125*FLEN/8, x4, x1, x2)

inst_86142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000000000000; valaddr_reg:x3; val_offset:258426*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258426*0 + 3*126*FLEN/8, x4, x1, x2)

inst_86143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000000000001; valaddr_reg:x3; val_offset:258429*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258429*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_86144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000000000003; valaddr_reg:x3; val_offset:258432*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258432*0 + 3*128*FLEN/8, x4, x1, x2)

inst_86145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000000000007; valaddr_reg:x3; val_offset:258435*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258435*0 + 3*129*FLEN/8, x4, x1, x2)

inst_86146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000000000000f; valaddr_reg:x3; val_offset:258438*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258438*0 + 3*130*FLEN/8, x4, x1, x2)

inst_86147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000000000001f; valaddr_reg:x3; val_offset:258441*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258441*0 + 3*131*FLEN/8, x4, x1, x2)

inst_86148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000000000003f; valaddr_reg:x3; val_offset:258444*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258444*0 + 3*132*FLEN/8, x4, x1, x2)

inst_86149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000000000007f; valaddr_reg:x3; val_offset:258447*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258447*0 + 3*133*FLEN/8, x4, x1, x2)

inst_86150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300000000000ff; valaddr_reg:x3; val_offset:258450*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258450*0 + 3*134*FLEN/8, x4, x1, x2)

inst_86151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300000000001ff; valaddr_reg:x3; val_offset:258453*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258453*0 + 3*135*FLEN/8, x4, x1, x2)

inst_86152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300000000003ff; valaddr_reg:x3; val_offset:258456*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258456*0 + 3*136*FLEN/8, x4, x1, x2)

inst_86153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300000000007ff; valaddr_reg:x3; val_offset:258459*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258459*0 + 3*137*FLEN/8, x4, x1, x2)

inst_86154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000000000fff; valaddr_reg:x3; val_offset:258462*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258462*0 + 3*138*FLEN/8, x4, x1, x2)

inst_86155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000000001fff; valaddr_reg:x3; val_offset:258465*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258465*0 + 3*139*FLEN/8, x4, x1, x2)

inst_86156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000000003fff; valaddr_reg:x3; val_offset:258468*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258468*0 + 3*140*FLEN/8, x4, x1, x2)

inst_86157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000000007fff; valaddr_reg:x3; val_offset:258471*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258471*0 + 3*141*FLEN/8, x4, x1, x2)

inst_86158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000000000ffff; valaddr_reg:x3; val_offset:258474*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258474*0 + 3*142*FLEN/8, x4, x1, x2)

inst_86159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000000001ffff; valaddr_reg:x3; val_offset:258477*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258477*0 + 3*143*FLEN/8, x4, x1, x2)

inst_86160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000000003ffff; valaddr_reg:x3; val_offset:258480*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258480*0 + 3*144*FLEN/8, x4, x1, x2)

inst_86161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000000007ffff; valaddr_reg:x3; val_offset:258483*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258483*0 + 3*145*FLEN/8, x4, x1, x2)

inst_86162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300000000fffff; valaddr_reg:x3; val_offset:258486*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258486*0 + 3*146*FLEN/8, x4, x1, x2)

inst_86163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300000001fffff; valaddr_reg:x3; val_offset:258489*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258489*0 + 3*147*FLEN/8, x4, x1, x2)

inst_86164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300000003fffff; valaddr_reg:x3; val_offset:258492*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258492*0 + 3*148*FLEN/8, x4, x1, x2)

inst_86165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300000007fffff; valaddr_reg:x3; val_offset:258495*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258495*0 + 3*149*FLEN/8, x4, x1, x2)

inst_86166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000000ffffff; valaddr_reg:x3; val_offset:258498*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258498*0 + 3*150*FLEN/8, x4, x1, x2)

inst_86167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000001ffffff; valaddr_reg:x3; val_offset:258501*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258501*0 + 3*151*FLEN/8, x4, x1, x2)

inst_86168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000003ffffff; valaddr_reg:x3; val_offset:258504*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258504*0 + 3*152*FLEN/8, x4, x1, x2)

inst_86169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000007ffffff; valaddr_reg:x3; val_offset:258507*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258507*0 + 3*153*FLEN/8, x4, x1, x2)

inst_86170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000000fffffff; valaddr_reg:x3; val_offset:258510*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258510*0 + 3*154*FLEN/8, x4, x1, x2)

inst_86171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000001fffffff; valaddr_reg:x3; val_offset:258513*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258513*0 + 3*155*FLEN/8, x4, x1, x2)

inst_86172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000003fffffff; valaddr_reg:x3; val_offset:258516*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258516*0 + 3*156*FLEN/8, x4, x1, x2)

inst_86173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000007fffffff; valaddr_reg:x3; val_offset:258519*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258519*0 + 3*157*FLEN/8, x4, x1, x2)

inst_86174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300000ffffffff; valaddr_reg:x3; val_offset:258522*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258522*0 + 3*158*FLEN/8, x4, x1, x2)

inst_86175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300001ffffffff; valaddr_reg:x3; val_offset:258525*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258525*0 + 3*159*FLEN/8, x4, x1, x2)

inst_86176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300003ffffffff; valaddr_reg:x3; val_offset:258528*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258528*0 + 3*160*FLEN/8, x4, x1, x2)

inst_86177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300007ffffffff; valaddr_reg:x3; val_offset:258531*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258531*0 + 3*161*FLEN/8, x4, x1, x2)

inst_86178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30000fffffffff; valaddr_reg:x3; val_offset:258534*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258534*0 + 3*162*FLEN/8, x4, x1, x2)

inst_86179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30001fffffffff; valaddr_reg:x3; val_offset:258537*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258537*0 + 3*163*FLEN/8, x4, x1, x2)

inst_86180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30003fffffffff; valaddr_reg:x3; val_offset:258540*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258540*0 + 3*164*FLEN/8, x4, x1, x2)

inst_86181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30007fffffffff; valaddr_reg:x3; val_offset:258543*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258543*0 + 3*165*FLEN/8, x4, x1, x2)

inst_86182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3000ffffffffff; valaddr_reg:x3; val_offset:258546*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258546*0 + 3*166*FLEN/8, x4, x1, x2)

inst_86183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3001ffffffffff; valaddr_reg:x3; val_offset:258549*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258549*0 + 3*167*FLEN/8, x4, x1, x2)

inst_86184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3003ffffffffff; valaddr_reg:x3; val_offset:258552*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258552*0 + 3*168*FLEN/8, x4, x1, x2)

inst_86185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3007ffffffffff; valaddr_reg:x3; val_offset:258555*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258555*0 + 3*169*FLEN/8, x4, x1, x2)

inst_86186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb300fffffffffff; valaddr_reg:x3; val_offset:258558*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258558*0 + 3*170*FLEN/8, x4, x1, x2)

inst_86187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb301fffffffffff; valaddr_reg:x3; val_offset:258561*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258561*0 + 3*171*FLEN/8, x4, x1, x2)

inst_86188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb303fffffffffff; valaddr_reg:x3; val_offset:258564*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258564*0 + 3*172*FLEN/8, x4, x1, x2)

inst_86189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb307fffffffffff; valaddr_reg:x3; val_offset:258567*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258567*0 + 3*173*FLEN/8, x4, x1, x2)

inst_86190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb30ffffffffffff; valaddr_reg:x3; val_offset:258570*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258570*0 + 3*174*FLEN/8, x4, x1, x2)

inst_86191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb31ffffffffffff; valaddr_reg:x3; val_offset:258573*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258573*0 + 3*175*FLEN/8, x4, x1, x2)

inst_86192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb33ffffffffffff; valaddr_reg:x3; val_offset:258576*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258576*0 + 3*176*FLEN/8, x4, x1, x2)

inst_86193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb37ffffffffffff; valaddr_reg:x3; val_offset:258579*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258579*0 + 3*177*FLEN/8, x4, x1, x2)

inst_86194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb38000000000000; valaddr_reg:x3; val_offset:258582*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258582*0 + 3*178*FLEN/8, x4, x1, x2)

inst_86195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3c000000000000; valaddr_reg:x3; val_offset:258585*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258585*0 + 3*179*FLEN/8, x4, x1, x2)

inst_86196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3e000000000000; valaddr_reg:x3; val_offset:258588*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258588*0 + 3*180*FLEN/8, x4, x1, x2)

inst_86197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3f000000000000; valaddr_reg:x3; val_offset:258591*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258591*0 + 3*181*FLEN/8, x4, x1, x2)

inst_86198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3f800000000000; valaddr_reg:x3; val_offset:258594*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258594*0 + 3*182*FLEN/8, x4, x1, x2)

inst_86199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fc00000000000; valaddr_reg:x3; val_offset:258597*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258597*0 + 3*183*FLEN/8, x4, x1, x2)

inst_86200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fe00000000000; valaddr_reg:x3; val_offset:258600*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258600*0 + 3*184*FLEN/8, x4, x1, x2)

inst_86201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ff00000000000; valaddr_reg:x3; val_offset:258603*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258603*0 + 3*185*FLEN/8, x4, x1, x2)

inst_86202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ff80000000000; valaddr_reg:x3; val_offset:258606*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258606*0 + 3*186*FLEN/8, x4, x1, x2)

inst_86203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffc0000000000; valaddr_reg:x3; val_offset:258609*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258609*0 + 3*187*FLEN/8, x4, x1, x2)

inst_86204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffe0000000000; valaddr_reg:x3; val_offset:258612*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258612*0 + 3*188*FLEN/8, x4, x1, x2)

inst_86205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fff0000000000; valaddr_reg:x3; val_offset:258615*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258615*0 + 3*189*FLEN/8, x4, x1, x2)

inst_86206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fff8000000000; valaddr_reg:x3; val_offset:258618*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258618*0 + 3*190*FLEN/8, x4, x1, x2)

inst_86207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffc000000000; valaddr_reg:x3; val_offset:258621*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258621*0 + 3*191*FLEN/8, x4, x1, x2)

inst_86208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffe000000000; valaddr_reg:x3; val_offset:258624*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258624*0 + 3*192*FLEN/8, x4, x1, x2)

inst_86209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffff000000000; valaddr_reg:x3; val_offset:258627*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258627*0 + 3*193*FLEN/8, x4, x1, x2)

inst_86210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffff800000000; valaddr_reg:x3; val_offset:258630*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258630*0 + 3*194*FLEN/8, x4, x1, x2)

inst_86211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffc00000000; valaddr_reg:x3; val_offset:258633*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258633*0 + 3*195*FLEN/8, x4, x1, x2)

inst_86212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffe00000000; valaddr_reg:x3; val_offset:258636*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258636*0 + 3*196*FLEN/8, x4, x1, x2)

inst_86213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffff00000000; valaddr_reg:x3; val_offset:258639*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258639*0 + 3*197*FLEN/8, x4, x1, x2)

inst_86214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffff80000000; valaddr_reg:x3; val_offset:258642*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258642*0 + 3*198*FLEN/8, x4, x1, x2)

inst_86215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffc0000000; valaddr_reg:x3; val_offset:258645*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258645*0 + 3*199*FLEN/8, x4, x1, x2)

inst_86216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffe0000000; valaddr_reg:x3; val_offset:258648*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258648*0 + 3*200*FLEN/8, x4, x1, x2)

inst_86217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffff0000000; valaddr_reg:x3; val_offset:258651*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258651*0 + 3*201*FLEN/8, x4, x1, x2)

inst_86218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffff8000000; valaddr_reg:x3; val_offset:258654*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258654*0 + 3*202*FLEN/8, x4, x1, x2)

inst_86219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffc000000; valaddr_reg:x3; val_offset:258657*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258657*0 + 3*203*FLEN/8, x4, x1, x2)

inst_86220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffe000000; valaddr_reg:x3; val_offset:258660*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258660*0 + 3*204*FLEN/8, x4, x1, x2)

inst_86221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffff000000; valaddr_reg:x3; val_offset:258663*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258663*0 + 3*205*FLEN/8, x4, x1, x2)

inst_86222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffff800000; valaddr_reg:x3; val_offset:258666*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258666*0 + 3*206*FLEN/8, x4, x1, x2)

inst_86223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffc00000; valaddr_reg:x3; val_offset:258669*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258669*0 + 3*207*FLEN/8, x4, x1, x2)

inst_86224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffe00000; valaddr_reg:x3; val_offset:258672*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258672*0 + 3*208*FLEN/8, x4, x1, x2)

inst_86225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffff00000; valaddr_reg:x3; val_offset:258675*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258675*0 + 3*209*FLEN/8, x4, x1, x2)

inst_86226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffff80000; valaddr_reg:x3; val_offset:258678*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258678*0 + 3*210*FLEN/8, x4, x1, x2)

inst_86227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffc0000; valaddr_reg:x3; val_offset:258681*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258681*0 + 3*211*FLEN/8, x4, x1, x2)

inst_86228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffe0000; valaddr_reg:x3; val_offset:258684*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258684*0 + 3*212*FLEN/8, x4, x1, x2)

inst_86229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffff0000; valaddr_reg:x3; val_offset:258687*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258687*0 + 3*213*FLEN/8, x4, x1, x2)

inst_86230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffff8000; valaddr_reg:x3; val_offset:258690*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258690*0 + 3*214*FLEN/8, x4, x1, x2)

inst_86231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffffc000; valaddr_reg:x3; val_offset:258693*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258693*0 + 3*215*FLEN/8, x4, x1, x2)

inst_86232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffffe000; valaddr_reg:x3; val_offset:258696*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258696*0 + 3*216*FLEN/8, x4, x1, x2)

inst_86233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffff000; valaddr_reg:x3; val_offset:258699*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258699*0 + 3*217*FLEN/8, x4, x1, x2)

inst_86234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffff800; valaddr_reg:x3; val_offset:258702*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258702*0 + 3*218*FLEN/8, x4, x1, x2)

inst_86235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffffc00; valaddr_reg:x3; val_offset:258705*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258705*0 + 3*219*FLEN/8, x4, x1, x2)

inst_86236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffffe00; valaddr_reg:x3; val_offset:258708*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258708*0 + 3*220*FLEN/8, x4, x1, x2)

inst_86237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffffff00; valaddr_reg:x3; val_offset:258711*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258711*0 + 3*221*FLEN/8, x4, x1, x2)

inst_86238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffffff80; valaddr_reg:x3; val_offset:258714*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258714*0 + 3*222*FLEN/8, x4, x1, x2)

inst_86239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffffffc0; valaddr_reg:x3; val_offset:258717*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258717*0 + 3*223*FLEN/8, x4, x1, x2)

inst_86240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffffffe0; valaddr_reg:x3; val_offset:258720*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258720*0 + 3*224*FLEN/8, x4, x1, x2)

inst_86241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffffff0; valaddr_reg:x3; val_offset:258723*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258723*0 + 3*225*FLEN/8, x4, x1, x2)

inst_86242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffffff8; valaddr_reg:x3; val_offset:258726*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258726*0 + 3*226*FLEN/8, x4, x1, x2)

inst_86243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffffffc; valaddr_reg:x3; val_offset:258729*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258729*0 + 3*227*FLEN/8, x4, x1, x2)

inst_86244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3ffffffffffffe; valaddr_reg:x3; val_offset:258732*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258732*0 + 3*228*FLEN/8, x4, x1, x2)

inst_86245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3b3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbb3fffffffffffff; valaddr_reg:x3; val_offset:258735*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258735*0 + 3*229*FLEN/8, x4, x1, x2)

inst_86246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:258738*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258738*0 + 3*230*FLEN/8, x4, x1, x2)

inst_86247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:258741*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258741*0 + 3*231*FLEN/8, x4, x1, x2)

inst_86248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:258744*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258744*0 + 3*232*FLEN/8, x4, x1, x2)

inst_86249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:258747*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258747*0 + 3*233*FLEN/8, x4, x1, x2)

inst_86250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:258750*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258750*0 + 3*234*FLEN/8, x4, x1, x2)

inst_86251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:258753*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258753*0 + 3*235*FLEN/8, x4, x1, x2)

inst_86252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:258756*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258756*0 + 3*236*FLEN/8, x4, x1, x2)

inst_86253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:258759*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258759*0 + 3*237*FLEN/8, x4, x1, x2)

inst_86254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:258762*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258762*0 + 3*238*FLEN/8, x4, x1, x2)

inst_86255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:258765*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258765*0 + 3*239*FLEN/8, x4, x1, x2)

inst_86256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:258768*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258768*0 + 3*240*FLEN/8, x4, x1, x2)

inst_86257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:258771*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258771*0 + 3*241*FLEN/8, x4, x1, x2)

inst_86258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:258774*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258774*0 + 3*242*FLEN/8, x4, x1, x2)

inst_86259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:258777*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258777*0 + 3*243*FLEN/8, x4, x1, x2)

inst_86260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:258780*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258780*0 + 3*244*FLEN/8, x4, x1, x2)

inst_86261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:258783*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258783*0 + 3*245*FLEN/8, x4, x1, x2)

inst_86262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:258786*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258786*0 + 3*246*FLEN/8, x4, x1, x2)

inst_86263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:258789*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258789*0 + 3*247*FLEN/8, x4, x1, x2)

inst_86264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:258792*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258792*0 + 3*248*FLEN/8, x4, x1, x2)

inst_86265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:258795*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258795*0 + 3*249*FLEN/8, x4, x1, x2)

inst_86266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:258798*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258798*0 + 3*250*FLEN/8, x4, x1, x2)

inst_86267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa7f76484f31a0 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x35281659b4077 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa7f76484f31a0; op2val:0x9fc35281659b4077;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:258801*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258801*0 + 3*251*FLEN/8, x4, x1, x2)

inst_86268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000000000000; valaddr_reg:x3; val_offset:258804*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258804*0 + 3*252*FLEN/8, x4, x1, x2)

inst_86269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000000000001; valaddr_reg:x3; val_offset:258807*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258807*0 + 3*253*FLEN/8, x4, x1, x2)

inst_86270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000000000003; valaddr_reg:x3; val_offset:258810*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258810*0 + 3*254*FLEN/8, x4, x1, x2)

inst_86271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000000000007; valaddr_reg:x3; val_offset:258813*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258813*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_86272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000000000000f; valaddr_reg:x3; val_offset:258816*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258816*0 + 3*256*FLEN/8, x4, x1, x2)

inst_86273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000000000001f; valaddr_reg:x3; val_offset:258819*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258819*0 + 3*257*FLEN/8, x4, x1, x2)

inst_86274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000000000003f; valaddr_reg:x3; val_offset:258822*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258822*0 + 3*258*FLEN/8, x4, x1, x2)

inst_86275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000000000007f; valaddr_reg:x3; val_offset:258825*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258825*0 + 3*259*FLEN/8, x4, x1, x2)

inst_86276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00000000000ff; valaddr_reg:x3; val_offset:258828*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258828*0 + 3*260*FLEN/8, x4, x1, x2)

inst_86277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00000000001ff; valaddr_reg:x3; val_offset:258831*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258831*0 + 3*261*FLEN/8, x4, x1, x2)

inst_86278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00000000003ff; valaddr_reg:x3; val_offset:258834*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258834*0 + 3*262*FLEN/8, x4, x1, x2)

inst_86279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00000000007ff; valaddr_reg:x3; val_offset:258837*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258837*0 + 3*263*FLEN/8, x4, x1, x2)

inst_86280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000000000fff; valaddr_reg:x3; val_offset:258840*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258840*0 + 3*264*FLEN/8, x4, x1, x2)

inst_86281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000000001fff; valaddr_reg:x3; val_offset:258843*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258843*0 + 3*265*FLEN/8, x4, x1, x2)

inst_86282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000000003fff; valaddr_reg:x3; val_offset:258846*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258846*0 + 3*266*FLEN/8, x4, x1, x2)

inst_86283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000000007fff; valaddr_reg:x3; val_offset:258849*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258849*0 + 3*267*FLEN/8, x4, x1, x2)

inst_86284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000000000ffff; valaddr_reg:x3; val_offset:258852*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258852*0 + 3*268*FLEN/8, x4, x1, x2)

inst_86285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000000001ffff; valaddr_reg:x3; val_offset:258855*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258855*0 + 3*269*FLEN/8, x4, x1, x2)

inst_86286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000000003ffff; valaddr_reg:x3; val_offset:258858*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258858*0 + 3*270*FLEN/8, x4, x1, x2)

inst_86287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000000007ffff; valaddr_reg:x3; val_offset:258861*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258861*0 + 3*271*FLEN/8, x4, x1, x2)

inst_86288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00000000fffff; valaddr_reg:x3; val_offset:258864*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258864*0 + 3*272*FLEN/8, x4, x1, x2)

inst_86289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00000001fffff; valaddr_reg:x3; val_offset:258867*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258867*0 + 3*273*FLEN/8, x4, x1, x2)

inst_86290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00000003fffff; valaddr_reg:x3; val_offset:258870*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258870*0 + 3*274*FLEN/8, x4, x1, x2)

inst_86291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00000007fffff; valaddr_reg:x3; val_offset:258873*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258873*0 + 3*275*FLEN/8, x4, x1, x2)

inst_86292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000000ffffff; valaddr_reg:x3; val_offset:258876*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258876*0 + 3*276*FLEN/8, x4, x1, x2)

inst_86293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000001ffffff; valaddr_reg:x3; val_offset:258879*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258879*0 + 3*277*FLEN/8, x4, x1, x2)

inst_86294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000003ffffff; valaddr_reg:x3; val_offset:258882*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258882*0 + 3*278*FLEN/8, x4, x1, x2)

inst_86295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000007ffffff; valaddr_reg:x3; val_offset:258885*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258885*0 + 3*279*FLEN/8, x4, x1, x2)

inst_86296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000000fffffff; valaddr_reg:x3; val_offset:258888*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258888*0 + 3*280*FLEN/8, x4, x1, x2)

inst_86297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000001fffffff; valaddr_reg:x3; val_offset:258891*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258891*0 + 3*281*FLEN/8, x4, x1, x2)

inst_86298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000003fffffff; valaddr_reg:x3; val_offset:258894*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258894*0 + 3*282*FLEN/8, x4, x1, x2)

inst_86299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000007fffffff; valaddr_reg:x3; val_offset:258897*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258897*0 + 3*283*FLEN/8, x4, x1, x2)

inst_86300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00000ffffffff; valaddr_reg:x3; val_offset:258900*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258900*0 + 3*284*FLEN/8, x4, x1, x2)

inst_86301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00001ffffffff; valaddr_reg:x3; val_offset:258903*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258903*0 + 3*285*FLEN/8, x4, x1, x2)

inst_86302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00003ffffffff; valaddr_reg:x3; val_offset:258906*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258906*0 + 3*286*FLEN/8, x4, x1, x2)

inst_86303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00007ffffffff; valaddr_reg:x3; val_offset:258909*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258909*0 + 3*287*FLEN/8, x4, x1, x2)

inst_86304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0000fffffffff; valaddr_reg:x3; val_offset:258912*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258912*0 + 3*288*FLEN/8, x4, x1, x2)

inst_86305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0001fffffffff; valaddr_reg:x3; val_offset:258915*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258915*0 + 3*289*FLEN/8, x4, x1, x2)

inst_86306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0003fffffffff; valaddr_reg:x3; val_offset:258918*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258918*0 + 3*290*FLEN/8, x4, x1, x2)

inst_86307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0007fffffffff; valaddr_reg:x3; val_offset:258921*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258921*0 + 3*291*FLEN/8, x4, x1, x2)

inst_86308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae000ffffffffff; valaddr_reg:x3; val_offset:258924*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258924*0 + 3*292*FLEN/8, x4, x1, x2)

inst_86309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae001ffffffffff; valaddr_reg:x3; val_offset:258927*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258927*0 + 3*293*FLEN/8, x4, x1, x2)

inst_86310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae003ffffffffff; valaddr_reg:x3; val_offset:258930*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258930*0 + 3*294*FLEN/8, x4, x1, x2)

inst_86311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae007ffffffffff; valaddr_reg:x3; val_offset:258933*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258933*0 + 3*295*FLEN/8, x4, x1, x2)

inst_86312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae00fffffffffff; valaddr_reg:x3; val_offset:258936*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258936*0 + 3*296*FLEN/8, x4, x1, x2)

inst_86313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae01fffffffffff; valaddr_reg:x3; val_offset:258939*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258939*0 + 3*297*FLEN/8, x4, x1, x2)

inst_86314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae03fffffffffff; valaddr_reg:x3; val_offset:258942*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258942*0 + 3*298*FLEN/8, x4, x1, x2)

inst_86315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae07fffffffffff; valaddr_reg:x3; val_offset:258945*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258945*0 + 3*299*FLEN/8, x4, x1, x2)

inst_86316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae0ffffffffffff; valaddr_reg:x3; val_offset:258948*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258948*0 + 3*300*FLEN/8, x4, x1, x2)

inst_86317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae1ffffffffffff; valaddr_reg:x3; val_offset:258951*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258951*0 + 3*301*FLEN/8, x4, x1, x2)

inst_86318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae3ffffffffffff; valaddr_reg:x3; val_offset:258954*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258954*0 + 3*302*FLEN/8, x4, x1, x2)

inst_86319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae7ffffffffffff; valaddr_reg:x3; val_offset:258957*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258957*0 + 3*303*FLEN/8, x4, x1, x2)

inst_86320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ae8000000000000; valaddr_reg:x3; val_offset:258960*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258960*0 + 3*304*FLEN/8, x4, x1, x2)

inst_86321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aec000000000000; valaddr_reg:x3; val_offset:258963*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258963*0 + 3*305*FLEN/8, x4, x1, x2)

inst_86322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aee000000000000; valaddr_reg:x3; val_offset:258966*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258966*0 + 3*306*FLEN/8, x4, x1, x2)

inst_86323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aef000000000000; valaddr_reg:x3; val_offset:258969*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258969*0 + 3*307*FLEN/8, x4, x1, x2)

inst_86324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aef800000000000; valaddr_reg:x3; val_offset:258972*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258972*0 + 3*308*FLEN/8, x4, x1, x2)

inst_86325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefc00000000000; valaddr_reg:x3; val_offset:258975*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258975*0 + 3*309*FLEN/8, x4, x1, x2)

inst_86326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefe00000000000; valaddr_reg:x3; val_offset:258978*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258978*0 + 3*310*FLEN/8, x4, x1, x2)

inst_86327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeff00000000000; valaddr_reg:x3; val_offset:258981*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258981*0 + 3*311*FLEN/8, x4, x1, x2)

inst_86328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeff80000000000; valaddr_reg:x3; val_offset:258984*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258984*0 + 3*312*FLEN/8, x4, x1, x2)

inst_86329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffc0000000000; valaddr_reg:x3; val_offset:258987*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258987*0 + 3*313*FLEN/8, x4, x1, x2)

inst_86330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffe0000000000; valaddr_reg:x3; val_offset:258990*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258990*0 + 3*314*FLEN/8, x4, x1, x2)

inst_86331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefff0000000000; valaddr_reg:x3; val_offset:258993*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258993*0 + 3*315*FLEN/8, x4, x1, x2)

inst_86332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefff8000000000; valaddr_reg:x3; val_offset:258996*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258996*0 + 3*316*FLEN/8, x4, x1, x2)

inst_86333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffc000000000; valaddr_reg:x3; val_offset:258999*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258999*0 + 3*317*FLEN/8, x4, x1, x2)

inst_86334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffe000000000; valaddr_reg:x3; val_offset:259002*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259002*0 + 3*318*FLEN/8, x4, x1, x2)

inst_86335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffff000000000; valaddr_reg:x3; val_offset:259005*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259005*0 + 3*319*FLEN/8, x4, x1, x2)

inst_86336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffff800000000; valaddr_reg:x3; val_offset:259008*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259008*0 + 3*320*FLEN/8, x4, x1, x2)

inst_86337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffc00000000; valaddr_reg:x3; val_offset:259011*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259011*0 + 3*321*FLEN/8, x4, x1, x2)

inst_86338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffe00000000; valaddr_reg:x3; val_offset:259014*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259014*0 + 3*322*FLEN/8, x4, x1, x2)

inst_86339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffff00000000; valaddr_reg:x3; val_offset:259017*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259017*0 + 3*323*FLEN/8, x4, x1, x2)

inst_86340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffff80000000; valaddr_reg:x3; val_offset:259020*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259020*0 + 3*324*FLEN/8, x4, x1, x2)

inst_86341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffc0000000; valaddr_reg:x3; val_offset:259023*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259023*0 + 3*325*FLEN/8, x4, x1, x2)

inst_86342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffe0000000; valaddr_reg:x3; val_offset:259026*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259026*0 + 3*326*FLEN/8, x4, x1, x2)

inst_86343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffff0000000; valaddr_reg:x3; val_offset:259029*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259029*0 + 3*327*FLEN/8, x4, x1, x2)

inst_86344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffff8000000; valaddr_reg:x3; val_offset:259032*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259032*0 + 3*328*FLEN/8, x4, x1, x2)

inst_86345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffc000000; valaddr_reg:x3; val_offset:259035*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259035*0 + 3*329*FLEN/8, x4, x1, x2)

inst_86346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffe000000; valaddr_reg:x3; val_offset:259038*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259038*0 + 3*330*FLEN/8, x4, x1, x2)

inst_86347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffff000000; valaddr_reg:x3; val_offset:259041*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259041*0 + 3*331*FLEN/8, x4, x1, x2)

inst_86348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffff800000; valaddr_reg:x3; val_offset:259044*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259044*0 + 3*332*FLEN/8, x4, x1, x2)

inst_86349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffc00000; valaddr_reg:x3; val_offset:259047*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259047*0 + 3*333*FLEN/8, x4, x1, x2)

inst_86350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffe00000; valaddr_reg:x3; val_offset:259050*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259050*0 + 3*334*FLEN/8, x4, x1, x2)

inst_86351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffff00000; valaddr_reg:x3; val_offset:259053*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259053*0 + 3*335*FLEN/8, x4, x1, x2)

inst_86352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffff80000; valaddr_reg:x3; val_offset:259056*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259056*0 + 3*336*FLEN/8, x4, x1, x2)

inst_86353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffc0000; valaddr_reg:x3; val_offset:259059*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259059*0 + 3*337*FLEN/8, x4, x1, x2)

inst_86354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffe0000; valaddr_reg:x3; val_offset:259062*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259062*0 + 3*338*FLEN/8, x4, x1, x2)

inst_86355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffff0000; valaddr_reg:x3; val_offset:259065*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259065*0 + 3*339*FLEN/8, x4, x1, x2)

inst_86356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffff8000; valaddr_reg:x3; val_offset:259068*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259068*0 + 3*340*FLEN/8, x4, x1, x2)

inst_86357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffffc000; valaddr_reg:x3; val_offset:259071*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259071*0 + 3*341*FLEN/8, x4, x1, x2)

inst_86358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffffe000; valaddr_reg:x3; val_offset:259074*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259074*0 + 3*342*FLEN/8, x4, x1, x2)

inst_86359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffff000; valaddr_reg:x3; val_offset:259077*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259077*0 + 3*343*FLEN/8, x4, x1, x2)

inst_86360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffff800; valaddr_reg:x3; val_offset:259080*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259080*0 + 3*344*FLEN/8, x4, x1, x2)

inst_86361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffffc00; valaddr_reg:x3; val_offset:259083*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259083*0 + 3*345*FLEN/8, x4, x1, x2)

inst_86362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffffe00; valaddr_reg:x3; val_offset:259086*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259086*0 + 3*346*FLEN/8, x4, x1, x2)

inst_86363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffffff00; valaddr_reg:x3; val_offset:259089*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259089*0 + 3*347*FLEN/8, x4, x1, x2)

inst_86364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffffff80; valaddr_reg:x3; val_offset:259092*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259092*0 + 3*348*FLEN/8, x4, x1, x2)

inst_86365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffffffc0; valaddr_reg:x3; val_offset:259095*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259095*0 + 3*349*FLEN/8, x4, x1, x2)

inst_86366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffffffe0; valaddr_reg:x3; val_offset:259098*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259098*0 + 3*350*FLEN/8, x4, x1, x2)

inst_86367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffffff0; valaddr_reg:x3; val_offset:259101*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259101*0 + 3*351*FLEN/8, x4, x1, x2)

inst_86368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffffff8; valaddr_reg:x3; val_offset:259104*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259104*0 + 3*352*FLEN/8, x4, x1, x2)

inst_86369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffffffc; valaddr_reg:x3; val_offset:259107*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259107*0 + 3*353*FLEN/8, x4, x1, x2)

inst_86370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aeffffffffffffe; valaddr_reg:x3; val_offset:259110*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259110*0 + 3*354*FLEN/8, x4, x1, x2)

inst_86371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ae and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3aefffffffffffff; valaddr_reg:x3; val_offset:259113*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259113*0 + 3*355*FLEN/8, x4, x1, x2)

inst_86372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:259116*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259116*0 + 3*356*FLEN/8, x4, x1, x2)

inst_86373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:259119*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259119*0 + 3*357*FLEN/8, x4, x1, x2)

inst_86374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:259122*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259122*0 + 3*358*FLEN/8, x4, x1, x2)

inst_86375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:259125*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259125*0 + 3*359*FLEN/8, x4, x1, x2)

inst_86376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:259128*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259128*0 + 3*360*FLEN/8, x4, x1, x2)

inst_86377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:259131*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259131*0 + 3*361*FLEN/8, x4, x1, x2)

inst_86378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:259134*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259134*0 + 3*362*FLEN/8, x4, x1, x2)

inst_86379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:259137*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259137*0 + 3*363*FLEN/8, x4, x1, x2)

inst_86380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:259140*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259140*0 + 3*364*FLEN/8, x4, x1, x2)

inst_86381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:259143*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259143*0 + 3*365*FLEN/8, x4, x1, x2)

inst_86382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:259146*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259146*0 + 3*366*FLEN/8, x4, x1, x2)

inst_86383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:259149*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259149*0 + 3*367*FLEN/8, x4, x1, x2)

inst_86384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:259152*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259152*0 + 3*368*FLEN/8, x4, x1, x2)

inst_86385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:259155*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259155*0 + 3*369*FLEN/8, x4, x1, x2)

inst_86386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:259158*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259158*0 + 3*370*FLEN/8, x4, x1, x2)

inst_86387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:259161*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259161*0 + 3*371*FLEN/8, x4, x1, x2)

inst_86388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:259164*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259164*0 + 3*372*FLEN/8, x4, x1, x2)

inst_86389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:259167*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259167*0 + 3*373*FLEN/8, x4, x1, x2)

inst_86390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:259170*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259170*0 + 3*374*FLEN/8, x4, x1, x2)

inst_86391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:259173*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259173*0 + 3*375*FLEN/8, x4, x1, x2)

inst_86392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:259176*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259176*0 + 3*376*FLEN/8, x4, x1, x2)

inst_86393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaa42a0b851903 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x337e2decb6735 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaa42a0b851903; op2val:0x203337e2decb6735;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:259179*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259179*0 + 3*377*FLEN/8, x4, x1, x2)

inst_86394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:259182*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259182*0 + 3*378*FLEN/8, x4, x1, x2)

inst_86395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:259185*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259185*0 + 3*379*FLEN/8, x4, x1, x2)

inst_86396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:259188*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259188*0 + 3*380*FLEN/8, x4, x1, x2)

inst_86397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:259191*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259191*0 + 3*381*FLEN/8, x4, x1, x2)

inst_86398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:259194*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259194*0 + 3*382*FLEN/8, x4, x1, x2)

inst_86399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:259197*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259197*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_86400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:259200*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259200*0 + 3*384*FLEN/8, x4, x1, x2)

inst_86401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:259203*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259203*0 + 3*385*FLEN/8, x4, x1, x2)

inst_86402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:259206*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259206*0 + 3*386*FLEN/8, x4, x1, x2)

inst_86403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:259209*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259209*0 + 3*387*FLEN/8, x4, x1, x2)

inst_86404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:259212*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259212*0 + 3*388*FLEN/8, x4, x1, x2)

inst_86405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:259215*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259215*0 + 3*389*FLEN/8, x4, x1, x2)

inst_86406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:259218*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259218*0 + 3*390*FLEN/8, x4, x1, x2)

inst_86407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:259221*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259221*0 + 3*391*FLEN/8, x4, x1, x2)

inst_86408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:259224*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259224*0 + 3*392*FLEN/8, x4, x1, x2)

inst_86409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:259227*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259227*0 + 3*393*FLEN/8, x4, x1, x2)

inst_86410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:259230*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259230*0 + 3*394*FLEN/8, x4, x1, x2)

inst_86411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:259233*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259233*0 + 3*395*FLEN/8, x4, x1, x2)

inst_86412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:259236*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259236*0 + 3*396*FLEN/8, x4, x1, x2)

inst_86413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:259239*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259239*0 + 3*397*FLEN/8, x4, x1, x2)

inst_86414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:259242*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259242*0 + 3*398*FLEN/8, x4, x1, x2)

inst_86415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:259245*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259245*0 + 3*399*FLEN/8, x4, x1, x2)

inst_86416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000000000000; valaddr_reg:x3; val_offset:259248*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259248*0 + 3*400*FLEN/8, x4, x1, x2)

inst_86417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000000000001; valaddr_reg:x3; val_offset:259251*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259251*0 + 3*401*FLEN/8, x4, x1, x2)

inst_86418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000000000003; valaddr_reg:x3; val_offset:259254*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259254*0 + 3*402*FLEN/8, x4, x1, x2)

inst_86419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000000000007; valaddr_reg:x3; val_offset:259257*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259257*0 + 3*403*FLEN/8, x4, x1, x2)

inst_86420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000000000000f; valaddr_reg:x3; val_offset:259260*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259260*0 + 3*404*FLEN/8, x4, x1, x2)

inst_86421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000000000001f; valaddr_reg:x3; val_offset:259263*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259263*0 + 3*405*FLEN/8, x4, x1, x2)

inst_86422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000000000003f; valaddr_reg:x3; val_offset:259266*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259266*0 + 3*406*FLEN/8, x4, x1, x2)

inst_86423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000000000007f; valaddr_reg:x3; val_offset:259269*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259269*0 + 3*407*FLEN/8, x4, x1, x2)

inst_86424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00000000000ff; valaddr_reg:x3; val_offset:259272*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259272*0 + 3*408*FLEN/8, x4, x1, x2)

inst_86425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00000000001ff; valaddr_reg:x3; val_offset:259275*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259275*0 + 3*409*FLEN/8, x4, x1, x2)

inst_86426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00000000003ff; valaddr_reg:x3; val_offset:259278*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259278*0 + 3*410*FLEN/8, x4, x1, x2)

inst_86427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00000000007ff; valaddr_reg:x3; val_offset:259281*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259281*0 + 3*411*FLEN/8, x4, x1, x2)

inst_86428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000000000fff; valaddr_reg:x3; val_offset:259284*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259284*0 + 3*412*FLEN/8, x4, x1, x2)

inst_86429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000000001fff; valaddr_reg:x3; val_offset:259287*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259287*0 + 3*413*FLEN/8, x4, x1, x2)

inst_86430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000000003fff; valaddr_reg:x3; val_offset:259290*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259290*0 + 3*414*FLEN/8, x4, x1, x2)

inst_86431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000000007fff; valaddr_reg:x3; val_offset:259293*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259293*0 + 3*415*FLEN/8, x4, x1, x2)

inst_86432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000000000ffff; valaddr_reg:x3; val_offset:259296*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259296*0 + 3*416*FLEN/8, x4, x1, x2)

inst_86433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000000001ffff; valaddr_reg:x3; val_offset:259299*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259299*0 + 3*417*FLEN/8, x4, x1, x2)

inst_86434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000000003ffff; valaddr_reg:x3; val_offset:259302*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259302*0 + 3*418*FLEN/8, x4, x1, x2)

inst_86435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000000007ffff; valaddr_reg:x3; val_offset:259305*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259305*0 + 3*419*FLEN/8, x4, x1, x2)

inst_86436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00000000fffff; valaddr_reg:x3; val_offset:259308*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259308*0 + 3*420*FLEN/8, x4, x1, x2)

inst_86437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00000001fffff; valaddr_reg:x3; val_offset:259311*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259311*0 + 3*421*FLEN/8, x4, x1, x2)

inst_86438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00000003fffff; valaddr_reg:x3; val_offset:259314*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259314*0 + 3*422*FLEN/8, x4, x1, x2)

inst_86439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00000007fffff; valaddr_reg:x3; val_offset:259317*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259317*0 + 3*423*FLEN/8, x4, x1, x2)

inst_86440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000000ffffff; valaddr_reg:x3; val_offset:259320*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259320*0 + 3*424*FLEN/8, x4, x1, x2)

inst_86441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000001ffffff; valaddr_reg:x3; val_offset:259323*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259323*0 + 3*425*FLEN/8, x4, x1, x2)

inst_86442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000003ffffff; valaddr_reg:x3; val_offset:259326*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259326*0 + 3*426*FLEN/8, x4, x1, x2)

inst_86443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000007ffffff; valaddr_reg:x3; val_offset:259329*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259329*0 + 3*427*FLEN/8, x4, x1, x2)

inst_86444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000000fffffff; valaddr_reg:x3; val_offset:259332*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259332*0 + 3*428*FLEN/8, x4, x1, x2)

inst_86445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000001fffffff; valaddr_reg:x3; val_offset:259335*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259335*0 + 3*429*FLEN/8, x4, x1, x2)

inst_86446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000003fffffff; valaddr_reg:x3; val_offset:259338*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259338*0 + 3*430*FLEN/8, x4, x1, x2)

inst_86447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000007fffffff; valaddr_reg:x3; val_offset:259341*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259341*0 + 3*431*FLEN/8, x4, x1, x2)

inst_86448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00000ffffffff; valaddr_reg:x3; val_offset:259344*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259344*0 + 3*432*FLEN/8, x4, x1, x2)

inst_86449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00001ffffffff; valaddr_reg:x3; val_offset:259347*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259347*0 + 3*433*FLEN/8, x4, x1, x2)

inst_86450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00003ffffffff; valaddr_reg:x3; val_offset:259350*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259350*0 + 3*434*FLEN/8, x4, x1, x2)

inst_86451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00007ffffffff; valaddr_reg:x3; val_offset:259353*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259353*0 + 3*435*FLEN/8, x4, x1, x2)

inst_86452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0000fffffffff; valaddr_reg:x3; val_offset:259356*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259356*0 + 3*436*FLEN/8, x4, x1, x2)

inst_86453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0001fffffffff; valaddr_reg:x3; val_offset:259359*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259359*0 + 3*437*FLEN/8, x4, x1, x2)

inst_86454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0003fffffffff; valaddr_reg:x3; val_offset:259362*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259362*0 + 3*438*FLEN/8, x4, x1, x2)

inst_86455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0007fffffffff; valaddr_reg:x3; val_offset:259365*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259365*0 + 3*439*FLEN/8, x4, x1, x2)

inst_86456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a000ffffffffff; valaddr_reg:x3; val_offset:259368*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259368*0 + 3*440*FLEN/8, x4, x1, x2)

inst_86457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a001ffffffffff; valaddr_reg:x3; val_offset:259371*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259371*0 + 3*441*FLEN/8, x4, x1, x2)

inst_86458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a003ffffffffff; valaddr_reg:x3; val_offset:259374*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259374*0 + 3*442*FLEN/8, x4, x1, x2)

inst_86459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a007ffffffffff; valaddr_reg:x3; val_offset:259377*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259377*0 + 3*443*FLEN/8, x4, x1, x2)

inst_86460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a00fffffffffff; valaddr_reg:x3; val_offset:259380*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259380*0 + 3*444*FLEN/8, x4, x1, x2)

inst_86461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a01fffffffffff; valaddr_reg:x3; val_offset:259383*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259383*0 + 3*445*FLEN/8, x4, x1, x2)

inst_86462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a03fffffffffff; valaddr_reg:x3; val_offset:259386*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259386*0 + 3*446*FLEN/8, x4, x1, x2)

inst_86463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a07fffffffffff; valaddr_reg:x3; val_offset:259389*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259389*0 + 3*447*FLEN/8, x4, x1, x2)

inst_86464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a0ffffffffffff; valaddr_reg:x3; val_offset:259392*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259392*0 + 3*448*FLEN/8, x4, x1, x2)

inst_86465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a1ffffffffffff; valaddr_reg:x3; val_offset:259395*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259395*0 + 3*449*FLEN/8, x4, x1, x2)

inst_86466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a3ffffffffffff; valaddr_reg:x3; val_offset:259398*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259398*0 + 3*450*FLEN/8, x4, x1, x2)

inst_86467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a7ffffffffffff; valaddr_reg:x3; val_offset:259401*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259401*0 + 3*451*FLEN/8, x4, x1, x2)

inst_86468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2a8000000000000; valaddr_reg:x3; val_offset:259404*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259404*0 + 3*452*FLEN/8, x4, x1, x2)

inst_86469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2ac000000000000; valaddr_reg:x3; val_offset:259407*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259407*0 + 3*453*FLEN/8, x4, x1, x2)

inst_86470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2ae000000000000; valaddr_reg:x3; val_offset:259410*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259410*0 + 3*454*FLEN/8, x4, x1, x2)

inst_86471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2af000000000000; valaddr_reg:x3; val_offset:259413*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259413*0 + 3*455*FLEN/8, x4, x1, x2)

inst_86472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2af800000000000; valaddr_reg:x3; val_offset:259416*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259416*0 + 3*456*FLEN/8, x4, x1, x2)

inst_86473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afc00000000000; valaddr_reg:x3; val_offset:259419*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259419*0 + 3*457*FLEN/8, x4, x1, x2)

inst_86474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afe00000000000; valaddr_reg:x3; val_offset:259422*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259422*0 + 3*458*FLEN/8, x4, x1, x2)

inst_86475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2aff00000000000; valaddr_reg:x3; val_offset:259425*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259425*0 + 3*459*FLEN/8, x4, x1, x2)

inst_86476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2aff80000000000; valaddr_reg:x3; val_offset:259428*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259428*0 + 3*460*FLEN/8, x4, x1, x2)

inst_86477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affc0000000000; valaddr_reg:x3; val_offset:259431*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259431*0 + 3*461*FLEN/8, x4, x1, x2)

inst_86478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affe0000000000; valaddr_reg:x3; val_offset:259434*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259434*0 + 3*462*FLEN/8, x4, x1, x2)

inst_86479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afff0000000000; valaddr_reg:x3; val_offset:259437*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259437*0 + 3*463*FLEN/8, x4, x1, x2)

inst_86480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afff8000000000; valaddr_reg:x3; val_offset:259440*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259440*0 + 3*464*FLEN/8, x4, x1, x2)

inst_86481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffc000000000; valaddr_reg:x3; val_offset:259443*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259443*0 + 3*465*FLEN/8, x4, x1, x2)

inst_86482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffe000000000; valaddr_reg:x3; val_offset:259446*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259446*0 + 3*466*FLEN/8, x4, x1, x2)

inst_86483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affff000000000; valaddr_reg:x3; val_offset:259449*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259449*0 + 3*467*FLEN/8, x4, x1, x2)

inst_86484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affff800000000; valaddr_reg:x3; val_offset:259452*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259452*0 + 3*468*FLEN/8, x4, x1, x2)

inst_86485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffc00000000; valaddr_reg:x3; val_offset:259455*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259455*0 + 3*469*FLEN/8, x4, x1, x2)

inst_86486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffe00000000; valaddr_reg:x3; val_offset:259458*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259458*0 + 3*470*FLEN/8, x4, x1, x2)

inst_86487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffff00000000; valaddr_reg:x3; val_offset:259461*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259461*0 + 3*471*FLEN/8, x4, x1, x2)

inst_86488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffff80000000; valaddr_reg:x3; val_offset:259464*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259464*0 + 3*472*FLEN/8, x4, x1, x2)

inst_86489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffc0000000; valaddr_reg:x3; val_offset:259467*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259467*0 + 3*473*FLEN/8, x4, x1, x2)

inst_86490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffe0000000; valaddr_reg:x3; val_offset:259470*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259470*0 + 3*474*FLEN/8, x4, x1, x2)

inst_86491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffff0000000; valaddr_reg:x3; val_offset:259473*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259473*0 + 3*475*FLEN/8, x4, x1, x2)

inst_86492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffff8000000; valaddr_reg:x3; val_offset:259476*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259476*0 + 3*476*FLEN/8, x4, x1, x2)

inst_86493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffc000000; valaddr_reg:x3; val_offset:259479*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259479*0 + 3*477*FLEN/8, x4, x1, x2)

inst_86494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffe000000; valaddr_reg:x3; val_offset:259482*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259482*0 + 3*478*FLEN/8, x4, x1, x2)

inst_86495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffff000000; valaddr_reg:x3; val_offset:259485*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259485*0 + 3*479*FLEN/8, x4, x1, x2)

inst_86496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffff800000; valaddr_reg:x3; val_offset:259488*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259488*0 + 3*480*FLEN/8, x4, x1, x2)

inst_86497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffc00000; valaddr_reg:x3; val_offset:259491*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259491*0 + 3*481*FLEN/8, x4, x1, x2)

inst_86498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffe00000; valaddr_reg:x3; val_offset:259494*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259494*0 + 3*482*FLEN/8, x4, x1, x2)

inst_86499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffff00000; valaddr_reg:x3; val_offset:259497*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259497*0 + 3*483*FLEN/8, x4, x1, x2)

inst_86500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffff80000; valaddr_reg:x3; val_offset:259500*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259500*0 + 3*484*FLEN/8, x4, x1, x2)

inst_86501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffc0000; valaddr_reg:x3; val_offset:259503*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259503*0 + 3*485*FLEN/8, x4, x1, x2)

inst_86502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffe0000; valaddr_reg:x3; val_offset:259506*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259506*0 + 3*486*FLEN/8, x4, x1, x2)

inst_86503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffff0000; valaddr_reg:x3; val_offset:259509*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259509*0 + 3*487*FLEN/8, x4, x1, x2)

inst_86504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffff8000; valaddr_reg:x3; val_offset:259512*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259512*0 + 3*488*FLEN/8, x4, x1, x2)

inst_86505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffffc000; valaddr_reg:x3; val_offset:259515*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259515*0 + 3*489*FLEN/8, x4, x1, x2)

inst_86506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffffe000; valaddr_reg:x3; val_offset:259518*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259518*0 + 3*490*FLEN/8, x4, x1, x2)

inst_86507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffff000; valaddr_reg:x3; val_offset:259521*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259521*0 + 3*491*FLEN/8, x4, x1, x2)

inst_86508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffff800; valaddr_reg:x3; val_offset:259524*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259524*0 + 3*492*FLEN/8, x4, x1, x2)

inst_86509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffffc00; valaddr_reg:x3; val_offset:259527*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259527*0 + 3*493*FLEN/8, x4, x1, x2)

inst_86510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffffe00; valaddr_reg:x3; val_offset:259530*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259530*0 + 3*494*FLEN/8, x4, x1, x2)

inst_86511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffffff00; valaddr_reg:x3; val_offset:259533*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259533*0 + 3*495*FLEN/8, x4, x1, x2)

inst_86512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffffff80; valaddr_reg:x3; val_offset:259536*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259536*0 + 3*496*FLEN/8, x4, x1, x2)

inst_86513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffffffc0; valaddr_reg:x3; val_offset:259539*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259539*0 + 3*497*FLEN/8, x4, x1, x2)

inst_86514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffffffe0; valaddr_reg:x3; val_offset:259542*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259542*0 + 3*498*FLEN/8, x4, x1, x2)

inst_86515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffffff0; valaddr_reg:x3; val_offset:259545*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259545*0 + 3*499*FLEN/8, x4, x1, x2)

inst_86516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffffff8; valaddr_reg:x3; val_offset:259548*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259548*0 + 3*500*FLEN/8, x4, x1, x2)

inst_86517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffffffc; valaddr_reg:x3; val_offset:259551*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259551*0 + 3*501*FLEN/8, x4, x1, x2)

inst_86518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2affffffffffffe; valaddr_reg:x3; val_offset:259554*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259554*0 + 3*502*FLEN/8, x4, x1, x2)

inst_86519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xaabd8358b2085 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faaabd8358b2085; op2val:0x0;
op3val:0x2afffffffffffff; valaddr_reg:x3; val_offset:259557*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259557*0 + 3*503*FLEN/8, x4, x1, x2)

inst_86520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000000000000; valaddr_reg:x3; val_offset:259560*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259560*0 + 3*504*FLEN/8, x4, x1, x2)

inst_86521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000000000001; valaddr_reg:x3; val_offset:259563*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259563*0 + 3*505*FLEN/8, x4, x1, x2)

inst_86522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000000000003; valaddr_reg:x3; val_offset:259566*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259566*0 + 3*506*FLEN/8, x4, x1, x2)

inst_86523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000000000007; valaddr_reg:x3; val_offset:259569*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259569*0 + 3*507*FLEN/8, x4, x1, x2)

inst_86524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000000000000f; valaddr_reg:x3; val_offset:259572*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259572*0 + 3*508*FLEN/8, x4, x1, x2)

inst_86525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000000000001f; valaddr_reg:x3; val_offset:259575*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259575*0 + 3*509*FLEN/8, x4, x1, x2)

inst_86526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000000000003f; valaddr_reg:x3; val_offset:259578*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259578*0 + 3*510*FLEN/8, x4, x1, x2)

inst_86527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000000000007f; valaddr_reg:x3; val_offset:259581*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259581*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_86528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00000000000ff; valaddr_reg:x3; val_offset:259584*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259584*0 + 3*512*FLEN/8, x4, x1, x2)

inst_86529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00000000001ff; valaddr_reg:x3; val_offset:259587*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259587*0 + 3*513*FLEN/8, x4, x1, x2)

inst_86530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00000000003ff; valaddr_reg:x3; val_offset:259590*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259590*0 + 3*514*FLEN/8, x4, x1, x2)

inst_86531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00000000007ff; valaddr_reg:x3; val_offset:259593*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259593*0 + 3*515*FLEN/8, x4, x1, x2)

inst_86532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000000000fff; valaddr_reg:x3; val_offset:259596*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259596*0 + 3*516*FLEN/8, x4, x1, x2)

inst_86533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000000001fff; valaddr_reg:x3; val_offset:259599*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259599*0 + 3*517*FLEN/8, x4, x1, x2)

inst_86534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000000003fff; valaddr_reg:x3; val_offset:259602*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259602*0 + 3*518*FLEN/8, x4, x1, x2)

inst_86535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000000007fff; valaddr_reg:x3; val_offset:259605*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259605*0 + 3*519*FLEN/8, x4, x1, x2)

inst_86536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000000000ffff; valaddr_reg:x3; val_offset:259608*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259608*0 + 3*520*FLEN/8, x4, x1, x2)

inst_86537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000000001ffff; valaddr_reg:x3; val_offset:259611*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259611*0 + 3*521*FLEN/8, x4, x1, x2)

inst_86538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000000003ffff; valaddr_reg:x3; val_offset:259614*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259614*0 + 3*522*FLEN/8, x4, x1, x2)

inst_86539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000000007ffff; valaddr_reg:x3; val_offset:259617*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259617*0 + 3*523*FLEN/8, x4, x1, x2)

inst_86540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00000000fffff; valaddr_reg:x3; val_offset:259620*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259620*0 + 3*524*FLEN/8, x4, x1, x2)

inst_86541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00000001fffff; valaddr_reg:x3; val_offset:259623*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259623*0 + 3*525*FLEN/8, x4, x1, x2)

inst_86542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00000003fffff; valaddr_reg:x3; val_offset:259626*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259626*0 + 3*526*FLEN/8, x4, x1, x2)

inst_86543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00000007fffff; valaddr_reg:x3; val_offset:259629*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259629*0 + 3*527*FLEN/8, x4, x1, x2)

inst_86544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000000ffffff; valaddr_reg:x3; val_offset:259632*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259632*0 + 3*528*FLEN/8, x4, x1, x2)

inst_86545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000001ffffff; valaddr_reg:x3; val_offset:259635*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259635*0 + 3*529*FLEN/8, x4, x1, x2)

inst_86546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000003ffffff; valaddr_reg:x3; val_offset:259638*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259638*0 + 3*530*FLEN/8, x4, x1, x2)

inst_86547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000007ffffff; valaddr_reg:x3; val_offset:259641*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259641*0 + 3*531*FLEN/8, x4, x1, x2)

inst_86548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000000fffffff; valaddr_reg:x3; val_offset:259644*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259644*0 + 3*532*FLEN/8, x4, x1, x2)

inst_86549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000001fffffff; valaddr_reg:x3; val_offset:259647*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259647*0 + 3*533*FLEN/8, x4, x1, x2)

inst_86550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000003fffffff; valaddr_reg:x3; val_offset:259650*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259650*0 + 3*534*FLEN/8, x4, x1, x2)

inst_86551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000007fffffff; valaddr_reg:x3; val_offset:259653*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259653*0 + 3*535*FLEN/8, x4, x1, x2)

inst_86552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00000ffffffff; valaddr_reg:x3; val_offset:259656*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259656*0 + 3*536*FLEN/8, x4, x1, x2)

inst_86553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00001ffffffff; valaddr_reg:x3; val_offset:259659*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259659*0 + 3*537*FLEN/8, x4, x1, x2)

inst_86554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00003ffffffff; valaddr_reg:x3; val_offset:259662*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259662*0 + 3*538*FLEN/8, x4, x1, x2)

inst_86555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00007ffffffff; valaddr_reg:x3; val_offset:259665*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259665*0 + 3*539*FLEN/8, x4, x1, x2)

inst_86556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0000fffffffff; valaddr_reg:x3; val_offset:259668*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259668*0 + 3*540*FLEN/8, x4, x1, x2)

inst_86557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0001fffffffff; valaddr_reg:x3; val_offset:259671*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259671*0 + 3*541*FLEN/8, x4, x1, x2)

inst_86558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0003fffffffff; valaddr_reg:x3; val_offset:259674*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259674*0 + 3*542*FLEN/8, x4, x1, x2)

inst_86559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0007fffffffff; valaddr_reg:x3; val_offset:259677*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259677*0 + 3*543*FLEN/8, x4, x1, x2)

inst_86560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed000ffffffffff; valaddr_reg:x3; val_offset:259680*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259680*0 + 3*544*FLEN/8, x4, x1, x2)

inst_86561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed001ffffffffff; valaddr_reg:x3; val_offset:259683*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259683*0 + 3*545*FLEN/8, x4, x1, x2)

inst_86562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed003ffffffffff; valaddr_reg:x3; val_offset:259686*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259686*0 + 3*546*FLEN/8, x4, x1, x2)

inst_86563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed007ffffffffff; valaddr_reg:x3; val_offset:259689*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259689*0 + 3*547*FLEN/8, x4, x1, x2)

inst_86564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed00fffffffffff; valaddr_reg:x3; val_offset:259692*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259692*0 + 3*548*FLEN/8, x4, x1, x2)

inst_86565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed01fffffffffff; valaddr_reg:x3; val_offset:259695*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259695*0 + 3*549*FLEN/8, x4, x1, x2)

inst_86566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed03fffffffffff; valaddr_reg:x3; val_offset:259698*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259698*0 + 3*550*FLEN/8, x4, x1, x2)

inst_86567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed07fffffffffff; valaddr_reg:x3; val_offset:259701*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259701*0 + 3*551*FLEN/8, x4, x1, x2)

inst_86568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed0ffffffffffff; valaddr_reg:x3; val_offset:259704*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259704*0 + 3*552*FLEN/8, x4, x1, x2)

inst_86569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed1ffffffffffff; valaddr_reg:x3; val_offset:259707*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259707*0 + 3*553*FLEN/8, x4, x1, x2)

inst_86570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed3ffffffffffff; valaddr_reg:x3; val_offset:259710*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259710*0 + 3*554*FLEN/8, x4, x1, x2)

inst_86571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed7ffffffffffff; valaddr_reg:x3; val_offset:259713*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259713*0 + 3*555*FLEN/8, x4, x1, x2)

inst_86572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbed8000000000000; valaddr_reg:x3; val_offset:259716*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259716*0 + 3*556*FLEN/8, x4, x1, x2)

inst_86573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedc000000000000; valaddr_reg:x3; val_offset:259719*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259719*0 + 3*557*FLEN/8, x4, x1, x2)

inst_86574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbede000000000000; valaddr_reg:x3; val_offset:259722*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259722*0 + 3*558*FLEN/8, x4, x1, x2)

inst_86575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedf000000000000; valaddr_reg:x3; val_offset:259725*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259725*0 + 3*559*FLEN/8, x4, x1, x2)

inst_86576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedf800000000000; valaddr_reg:x3; val_offset:259728*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259728*0 + 3*560*FLEN/8, x4, x1, x2)

inst_86577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfc00000000000; valaddr_reg:x3; val_offset:259731*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259731*0 + 3*561*FLEN/8, x4, x1, x2)

inst_86578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfe00000000000; valaddr_reg:x3; val_offset:259734*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259734*0 + 3*562*FLEN/8, x4, x1, x2)

inst_86579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedff00000000000; valaddr_reg:x3; val_offset:259737*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259737*0 + 3*563*FLEN/8, x4, x1, x2)

inst_86580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedff80000000000; valaddr_reg:x3; val_offset:259740*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259740*0 + 3*564*FLEN/8, x4, x1, x2)

inst_86581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffc0000000000; valaddr_reg:x3; val_offset:259743*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259743*0 + 3*565*FLEN/8, x4, x1, x2)

inst_86582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffe0000000000; valaddr_reg:x3; val_offset:259746*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259746*0 + 3*566*FLEN/8, x4, x1, x2)

inst_86583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfff0000000000; valaddr_reg:x3; val_offset:259749*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259749*0 + 3*567*FLEN/8, x4, x1, x2)

inst_86584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfff8000000000; valaddr_reg:x3; val_offset:259752*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259752*0 + 3*568*FLEN/8, x4, x1, x2)

inst_86585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffc000000000; valaddr_reg:x3; val_offset:259755*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259755*0 + 3*569*FLEN/8, x4, x1, x2)

inst_86586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffe000000000; valaddr_reg:x3; val_offset:259758*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259758*0 + 3*570*FLEN/8, x4, x1, x2)

inst_86587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffff000000000; valaddr_reg:x3; val_offset:259761*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259761*0 + 3*571*FLEN/8, x4, x1, x2)

inst_86588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffff800000000; valaddr_reg:x3; val_offset:259764*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259764*0 + 3*572*FLEN/8, x4, x1, x2)

inst_86589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffc00000000; valaddr_reg:x3; val_offset:259767*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259767*0 + 3*573*FLEN/8, x4, x1, x2)

inst_86590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffe00000000; valaddr_reg:x3; val_offset:259770*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259770*0 + 3*574*FLEN/8, x4, x1, x2)

inst_86591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffff00000000; valaddr_reg:x3; val_offset:259773*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259773*0 + 3*575*FLEN/8, x4, x1, x2)

inst_86592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffff80000000; valaddr_reg:x3; val_offset:259776*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259776*0 + 3*576*FLEN/8, x4, x1, x2)

inst_86593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffc0000000; valaddr_reg:x3; val_offset:259779*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259779*0 + 3*577*FLEN/8, x4, x1, x2)

inst_86594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffe0000000; valaddr_reg:x3; val_offset:259782*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259782*0 + 3*578*FLEN/8, x4, x1, x2)

inst_86595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffff0000000; valaddr_reg:x3; val_offset:259785*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259785*0 + 3*579*FLEN/8, x4, x1, x2)

inst_86596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffff8000000; valaddr_reg:x3; val_offset:259788*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259788*0 + 3*580*FLEN/8, x4, x1, x2)

inst_86597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffc000000; valaddr_reg:x3; val_offset:259791*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259791*0 + 3*581*FLEN/8, x4, x1, x2)

inst_86598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffe000000; valaddr_reg:x3; val_offset:259794*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259794*0 + 3*582*FLEN/8, x4, x1, x2)

inst_86599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffff000000; valaddr_reg:x3; val_offset:259797*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259797*0 + 3*583*FLEN/8, x4, x1, x2)

inst_86600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffff800000; valaddr_reg:x3; val_offset:259800*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259800*0 + 3*584*FLEN/8, x4, x1, x2)

inst_86601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffc00000; valaddr_reg:x3; val_offset:259803*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259803*0 + 3*585*FLEN/8, x4, x1, x2)

inst_86602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffe00000; valaddr_reg:x3; val_offset:259806*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259806*0 + 3*586*FLEN/8, x4, x1, x2)

inst_86603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffff00000; valaddr_reg:x3; val_offset:259809*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259809*0 + 3*587*FLEN/8, x4, x1, x2)

inst_86604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffff80000; valaddr_reg:x3; val_offset:259812*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259812*0 + 3*588*FLEN/8, x4, x1, x2)

inst_86605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffc0000; valaddr_reg:x3; val_offset:259815*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259815*0 + 3*589*FLEN/8, x4, x1, x2)

inst_86606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffe0000; valaddr_reg:x3; val_offset:259818*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259818*0 + 3*590*FLEN/8, x4, x1, x2)

inst_86607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffff0000; valaddr_reg:x3; val_offset:259821*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259821*0 + 3*591*FLEN/8, x4, x1, x2)

inst_86608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffff8000; valaddr_reg:x3; val_offset:259824*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259824*0 + 3*592*FLEN/8, x4, x1, x2)

inst_86609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffffc000; valaddr_reg:x3; val_offset:259827*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259827*0 + 3*593*FLEN/8, x4, x1, x2)

inst_86610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffffe000; valaddr_reg:x3; val_offset:259830*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259830*0 + 3*594*FLEN/8, x4, x1, x2)

inst_86611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffff000; valaddr_reg:x3; val_offset:259833*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259833*0 + 3*595*FLEN/8, x4, x1, x2)

inst_86612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffff800; valaddr_reg:x3; val_offset:259836*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259836*0 + 3*596*FLEN/8, x4, x1, x2)

inst_86613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffffc00; valaddr_reg:x3; val_offset:259839*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259839*0 + 3*597*FLEN/8, x4, x1, x2)

inst_86614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffffe00; valaddr_reg:x3; val_offset:259842*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259842*0 + 3*598*FLEN/8, x4, x1, x2)

inst_86615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffffff00; valaddr_reg:x3; val_offset:259845*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259845*0 + 3*599*FLEN/8, x4, x1, x2)

inst_86616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffffff80; valaddr_reg:x3; val_offset:259848*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259848*0 + 3*600*FLEN/8, x4, x1, x2)

inst_86617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffffffc0; valaddr_reg:x3; val_offset:259851*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259851*0 + 3*601*FLEN/8, x4, x1, x2)

inst_86618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffffffe0; valaddr_reg:x3; val_offset:259854*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259854*0 + 3*602*FLEN/8, x4, x1, x2)

inst_86619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffffff0; valaddr_reg:x3; val_offset:259857*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259857*0 + 3*603*FLEN/8, x4, x1, x2)

inst_86620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffffff8; valaddr_reg:x3; val_offset:259860*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259860*0 + 3*604*FLEN/8, x4, x1, x2)

inst_86621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffffffc; valaddr_reg:x3; val_offset:259863*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259863*0 + 3*605*FLEN/8, x4, x1, x2)

inst_86622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedffffffffffffe; valaddr_reg:x3; val_offset:259866*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259866*0 + 3*606*FLEN/8, x4, x1, x2)

inst_86623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3ed and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbedfffffffffffff; valaddr_reg:x3; val_offset:259869*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259869*0 + 3*607*FLEN/8, x4, x1, x2)

inst_86624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:259872*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259872*0 + 3*608*FLEN/8, x4, x1, x2)

inst_86625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:259875*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259875*0 + 3*609*FLEN/8, x4, x1, x2)

inst_86626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:259878*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259878*0 + 3*610*FLEN/8, x4, x1, x2)

inst_86627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:259881*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259881*0 + 3*611*FLEN/8, x4, x1, x2)

inst_86628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:259884*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259884*0 + 3*612*FLEN/8, x4, x1, x2)

inst_86629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:259887*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259887*0 + 3*613*FLEN/8, x4, x1, x2)

inst_86630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:259890*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259890*0 + 3*614*FLEN/8, x4, x1, x2)

inst_86631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:259893*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259893*0 + 3*615*FLEN/8, x4, x1, x2)

inst_86632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:259896*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259896*0 + 3*616*FLEN/8, x4, x1, x2)

inst_86633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:259899*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259899*0 + 3*617*FLEN/8, x4, x1, x2)

inst_86634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:259902*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259902*0 + 3*618*FLEN/8, x4, x1, x2)

inst_86635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:259905*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259905*0 + 3*619*FLEN/8, x4, x1, x2)

inst_86636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:259908*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259908*0 + 3*620*FLEN/8, x4, x1, x2)

inst_86637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:259911*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259911*0 + 3*621*FLEN/8, x4, x1, x2)

inst_86638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:259914*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259914*0 + 3*622*FLEN/8, x4, x1, x2)

inst_86639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:259917*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259917*0 + 3*623*FLEN/8, x4, x1, x2)

inst_86640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:259920*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259920*0 + 3*624*FLEN/8, x4, x1, x2)

inst_86641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:259923*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259923*0 + 3*625*FLEN/8, x4, x1, x2)

inst_86642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:259926*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259926*0 + 3*626*FLEN/8, x4, x1, x2)

inst_86643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:259929*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259929*0 + 3*627*FLEN/8, x4, x1, x2)

inst_86644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:259932*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259932*0 + 3*628*FLEN/8, x4, x1, x2)

inst_86645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xab523ab9b6599 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x32babd5872b67 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faab523ab9b6599; op2val:0x9fc32babd5872b67;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:259935*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259935*0 + 3*629*FLEN/8, x4, x1, x2)

inst_86646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:259938*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259938*0 + 3*630*FLEN/8, x4, x1, x2)

inst_86647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:259941*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259941*0 + 3*631*FLEN/8, x4, x1, x2)

inst_86648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:259944*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259944*0 + 3*632*FLEN/8, x4, x1, x2)

inst_86649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:259947*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259947*0 + 3*633*FLEN/8, x4, x1, x2)

inst_86650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:259950*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259950*0 + 3*634*FLEN/8, x4, x1, x2)

inst_86651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:259953*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259953*0 + 3*635*FLEN/8, x4, x1, x2)

inst_86652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:259956*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259956*0 + 3*636*FLEN/8, x4, x1, x2)

inst_86653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:259959*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259959*0 + 3*637*FLEN/8, x4, x1, x2)

inst_86654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:259962*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259962*0 + 3*638*FLEN/8, x4, x1, x2)

inst_86655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:259965*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259965*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_86656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:259968*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259968*0 + 3*640*FLEN/8, x4, x1, x2)

inst_86657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:259971*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259971*0 + 3*641*FLEN/8, x4, x1, x2)

inst_86658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:259974*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259974*0 + 3*642*FLEN/8, x4, x1, x2)

inst_86659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:259977*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259977*0 + 3*643*FLEN/8, x4, x1, x2)

inst_86660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:259980*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259980*0 + 3*644*FLEN/8, x4, x1, x2)

inst_86661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:259983*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259983*0 + 3*645*FLEN/8, x4, x1, x2)

inst_86662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:259986*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259986*0 + 3*646*FLEN/8, x4, x1, x2)

inst_86663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:259989*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259989*0 + 3*647*FLEN/8, x4, x1, x2)

inst_86664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:259992*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259992*0 + 3*648*FLEN/8, x4, x1, x2)

inst_86665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:259995*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259995*0 + 3*649*FLEN/8, x4, x1, x2)

inst_86666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:259998*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259998*0 + 3*650*FLEN/8, x4, x1, x2)

inst_86667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:260001*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260001*0 + 3*651*FLEN/8, x4, x1, x2)

inst_86668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000000000000; valaddr_reg:x3; val_offset:260004*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260004*0 + 3*652*FLEN/8, x4, x1, x2)

inst_86669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000000000001; valaddr_reg:x3; val_offset:260007*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260007*0 + 3*653*FLEN/8, x4, x1, x2)

inst_86670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000000000003; valaddr_reg:x3; val_offset:260010*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260010*0 + 3*654*FLEN/8, x4, x1, x2)

inst_86671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000000000007; valaddr_reg:x3; val_offset:260013*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260013*0 + 3*655*FLEN/8, x4, x1, x2)

inst_86672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000000000000f; valaddr_reg:x3; val_offset:260016*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260016*0 + 3*656*FLEN/8, x4, x1, x2)

inst_86673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000000000001f; valaddr_reg:x3; val_offset:260019*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260019*0 + 3*657*FLEN/8, x4, x1, x2)

inst_86674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000000000003f; valaddr_reg:x3; val_offset:260022*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260022*0 + 3*658*FLEN/8, x4, x1, x2)

inst_86675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000000000007f; valaddr_reg:x3; val_offset:260025*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260025*0 + 3*659*FLEN/8, x4, x1, x2)

inst_86676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00000000000ff; valaddr_reg:x3; val_offset:260028*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260028*0 + 3*660*FLEN/8, x4, x1, x2)

inst_86677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00000000001ff; valaddr_reg:x3; val_offset:260031*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260031*0 + 3*661*FLEN/8, x4, x1, x2)

inst_86678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00000000003ff; valaddr_reg:x3; val_offset:260034*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260034*0 + 3*662*FLEN/8, x4, x1, x2)

inst_86679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00000000007ff; valaddr_reg:x3; val_offset:260037*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260037*0 + 3*663*FLEN/8, x4, x1, x2)

inst_86680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000000000fff; valaddr_reg:x3; val_offset:260040*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260040*0 + 3*664*FLEN/8, x4, x1, x2)

inst_86681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000000001fff; valaddr_reg:x3; val_offset:260043*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260043*0 + 3*665*FLEN/8, x4, x1, x2)

inst_86682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000000003fff; valaddr_reg:x3; val_offset:260046*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260046*0 + 3*666*FLEN/8, x4, x1, x2)

inst_86683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000000007fff; valaddr_reg:x3; val_offset:260049*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260049*0 + 3*667*FLEN/8, x4, x1, x2)

inst_86684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000000000ffff; valaddr_reg:x3; val_offset:260052*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260052*0 + 3*668*FLEN/8, x4, x1, x2)

inst_86685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000000001ffff; valaddr_reg:x3; val_offset:260055*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260055*0 + 3*669*FLEN/8, x4, x1, x2)

inst_86686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000000003ffff; valaddr_reg:x3; val_offset:260058*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260058*0 + 3*670*FLEN/8, x4, x1, x2)

inst_86687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000000007ffff; valaddr_reg:x3; val_offset:260061*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260061*0 + 3*671*FLEN/8, x4, x1, x2)

inst_86688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00000000fffff; valaddr_reg:x3; val_offset:260064*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260064*0 + 3*672*FLEN/8, x4, x1, x2)

inst_86689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00000001fffff; valaddr_reg:x3; val_offset:260067*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260067*0 + 3*673*FLEN/8, x4, x1, x2)

inst_86690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00000003fffff; valaddr_reg:x3; val_offset:260070*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260070*0 + 3*674*FLEN/8, x4, x1, x2)

inst_86691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00000007fffff; valaddr_reg:x3; val_offset:260073*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260073*0 + 3*675*FLEN/8, x4, x1, x2)

inst_86692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000000ffffff; valaddr_reg:x3; val_offset:260076*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260076*0 + 3*676*FLEN/8, x4, x1, x2)

inst_86693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000001ffffff; valaddr_reg:x3; val_offset:260079*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260079*0 + 3*677*FLEN/8, x4, x1, x2)

inst_86694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000003ffffff; valaddr_reg:x3; val_offset:260082*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260082*0 + 3*678*FLEN/8, x4, x1, x2)

inst_86695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000007ffffff; valaddr_reg:x3; val_offset:260085*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260085*0 + 3*679*FLEN/8, x4, x1, x2)

inst_86696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000000fffffff; valaddr_reg:x3; val_offset:260088*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260088*0 + 3*680*FLEN/8, x4, x1, x2)

inst_86697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000001fffffff; valaddr_reg:x3; val_offset:260091*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260091*0 + 3*681*FLEN/8, x4, x1, x2)

inst_86698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000003fffffff; valaddr_reg:x3; val_offset:260094*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260094*0 + 3*682*FLEN/8, x4, x1, x2)

inst_86699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000007fffffff; valaddr_reg:x3; val_offset:260097*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260097*0 + 3*683*FLEN/8, x4, x1, x2)

inst_86700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00000ffffffff; valaddr_reg:x3; val_offset:260100*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260100*0 + 3*684*FLEN/8, x4, x1, x2)

inst_86701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00001ffffffff; valaddr_reg:x3; val_offset:260103*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260103*0 + 3*685*FLEN/8, x4, x1, x2)

inst_86702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00003ffffffff; valaddr_reg:x3; val_offset:260106*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260106*0 + 3*686*FLEN/8, x4, x1, x2)

inst_86703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00007ffffffff; valaddr_reg:x3; val_offset:260109*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260109*0 + 3*687*FLEN/8, x4, x1, x2)

inst_86704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0000fffffffff; valaddr_reg:x3; val_offset:260112*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260112*0 + 3*688*FLEN/8, x4, x1, x2)

inst_86705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0001fffffffff; valaddr_reg:x3; val_offset:260115*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260115*0 + 3*689*FLEN/8, x4, x1, x2)

inst_86706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0003fffffffff; valaddr_reg:x3; val_offset:260118*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260118*0 + 3*690*FLEN/8, x4, x1, x2)

inst_86707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0007fffffffff; valaddr_reg:x3; val_offset:260121*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260121*0 + 3*691*FLEN/8, x4, x1, x2)

inst_86708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a000ffffffffff; valaddr_reg:x3; val_offset:260124*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260124*0 + 3*692*FLEN/8, x4, x1, x2)

inst_86709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a001ffffffffff; valaddr_reg:x3; val_offset:260127*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260127*0 + 3*693*FLEN/8, x4, x1, x2)

inst_86710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a003ffffffffff; valaddr_reg:x3; val_offset:260130*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260130*0 + 3*694*FLEN/8, x4, x1, x2)

inst_86711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a007ffffffffff; valaddr_reg:x3; val_offset:260133*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260133*0 + 3*695*FLEN/8, x4, x1, x2)

inst_86712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a00fffffffffff; valaddr_reg:x3; val_offset:260136*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260136*0 + 3*696*FLEN/8, x4, x1, x2)

inst_86713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a01fffffffffff; valaddr_reg:x3; val_offset:260139*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260139*0 + 3*697*FLEN/8, x4, x1, x2)

inst_86714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a03fffffffffff; valaddr_reg:x3; val_offset:260142*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260142*0 + 3*698*FLEN/8, x4, x1, x2)

inst_86715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a07fffffffffff; valaddr_reg:x3; val_offset:260145*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260145*0 + 3*699*FLEN/8, x4, x1, x2)

inst_86716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a0ffffffffffff; valaddr_reg:x3; val_offset:260148*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260148*0 + 3*700*FLEN/8, x4, x1, x2)

inst_86717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a1ffffffffffff; valaddr_reg:x3; val_offset:260151*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260151*0 + 3*701*FLEN/8, x4, x1, x2)

inst_86718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a3ffffffffffff; valaddr_reg:x3; val_offset:260154*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260154*0 + 3*702*FLEN/8, x4, x1, x2)

inst_86719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a7ffffffffffff; valaddr_reg:x3; val_offset:260157*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260157*0 + 3*703*FLEN/8, x4, x1, x2)

inst_86720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83a8000000000000; valaddr_reg:x3; val_offset:260160*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260160*0 + 3*704*FLEN/8, x4, x1, x2)

inst_86721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83ac000000000000; valaddr_reg:x3; val_offset:260163*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260163*0 + 3*705*FLEN/8, x4, x1, x2)

inst_86722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83ae000000000000; valaddr_reg:x3; val_offset:260166*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260166*0 + 3*706*FLEN/8, x4, x1, x2)

inst_86723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83af000000000000; valaddr_reg:x3; val_offset:260169*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260169*0 + 3*707*FLEN/8, x4, x1, x2)

inst_86724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83af800000000000; valaddr_reg:x3; val_offset:260172*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260172*0 + 3*708*FLEN/8, x4, x1, x2)

inst_86725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afc00000000000; valaddr_reg:x3; val_offset:260175*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260175*0 + 3*709*FLEN/8, x4, x1, x2)

inst_86726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afe00000000000; valaddr_reg:x3; val_offset:260178*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260178*0 + 3*710*FLEN/8, x4, x1, x2)

inst_86727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83aff00000000000; valaddr_reg:x3; val_offset:260181*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260181*0 + 3*711*FLEN/8, x4, x1, x2)

inst_86728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83aff80000000000; valaddr_reg:x3; val_offset:260184*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260184*0 + 3*712*FLEN/8, x4, x1, x2)

inst_86729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affc0000000000; valaddr_reg:x3; val_offset:260187*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260187*0 + 3*713*FLEN/8, x4, x1, x2)

inst_86730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affe0000000000; valaddr_reg:x3; val_offset:260190*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260190*0 + 3*714*FLEN/8, x4, x1, x2)

inst_86731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afff0000000000; valaddr_reg:x3; val_offset:260193*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260193*0 + 3*715*FLEN/8, x4, x1, x2)

inst_86732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afff8000000000; valaddr_reg:x3; val_offset:260196*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260196*0 + 3*716*FLEN/8, x4, x1, x2)

inst_86733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffc000000000; valaddr_reg:x3; val_offset:260199*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260199*0 + 3*717*FLEN/8, x4, x1, x2)

inst_86734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffe000000000; valaddr_reg:x3; val_offset:260202*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260202*0 + 3*718*FLEN/8, x4, x1, x2)

inst_86735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affff000000000; valaddr_reg:x3; val_offset:260205*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260205*0 + 3*719*FLEN/8, x4, x1, x2)

inst_86736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affff800000000; valaddr_reg:x3; val_offset:260208*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260208*0 + 3*720*FLEN/8, x4, x1, x2)

inst_86737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffc00000000; valaddr_reg:x3; val_offset:260211*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260211*0 + 3*721*FLEN/8, x4, x1, x2)

inst_86738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffe00000000; valaddr_reg:x3; val_offset:260214*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260214*0 + 3*722*FLEN/8, x4, x1, x2)

inst_86739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffff00000000; valaddr_reg:x3; val_offset:260217*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260217*0 + 3*723*FLEN/8, x4, x1, x2)

inst_86740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffff80000000; valaddr_reg:x3; val_offset:260220*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260220*0 + 3*724*FLEN/8, x4, x1, x2)

inst_86741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffc0000000; valaddr_reg:x3; val_offset:260223*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260223*0 + 3*725*FLEN/8, x4, x1, x2)

inst_86742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffe0000000; valaddr_reg:x3; val_offset:260226*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260226*0 + 3*726*FLEN/8, x4, x1, x2)

inst_86743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffff0000000; valaddr_reg:x3; val_offset:260229*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260229*0 + 3*727*FLEN/8, x4, x1, x2)

inst_86744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffff8000000; valaddr_reg:x3; val_offset:260232*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260232*0 + 3*728*FLEN/8, x4, x1, x2)

inst_86745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffc000000; valaddr_reg:x3; val_offset:260235*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260235*0 + 3*729*FLEN/8, x4, x1, x2)

inst_86746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffe000000; valaddr_reg:x3; val_offset:260238*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260238*0 + 3*730*FLEN/8, x4, x1, x2)

inst_86747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffff000000; valaddr_reg:x3; val_offset:260241*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260241*0 + 3*731*FLEN/8, x4, x1, x2)

inst_86748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffff800000; valaddr_reg:x3; val_offset:260244*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260244*0 + 3*732*FLEN/8, x4, x1, x2)

inst_86749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffc00000; valaddr_reg:x3; val_offset:260247*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260247*0 + 3*733*FLEN/8, x4, x1, x2)

inst_86750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffe00000; valaddr_reg:x3; val_offset:260250*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260250*0 + 3*734*FLEN/8, x4, x1, x2)

inst_86751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffff00000; valaddr_reg:x3; val_offset:260253*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260253*0 + 3*735*FLEN/8, x4, x1, x2)

inst_86752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffff80000; valaddr_reg:x3; val_offset:260256*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260256*0 + 3*736*FLEN/8, x4, x1, x2)

inst_86753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffc0000; valaddr_reg:x3; val_offset:260259*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260259*0 + 3*737*FLEN/8, x4, x1, x2)

inst_86754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffe0000; valaddr_reg:x3; val_offset:260262*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260262*0 + 3*738*FLEN/8, x4, x1, x2)

inst_86755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffff0000; valaddr_reg:x3; val_offset:260265*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260265*0 + 3*739*FLEN/8, x4, x1, x2)

inst_86756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffff8000; valaddr_reg:x3; val_offset:260268*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260268*0 + 3*740*FLEN/8, x4, x1, x2)

inst_86757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffffc000; valaddr_reg:x3; val_offset:260271*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260271*0 + 3*741*FLEN/8, x4, x1, x2)

inst_86758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffffe000; valaddr_reg:x3; val_offset:260274*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260274*0 + 3*742*FLEN/8, x4, x1, x2)

inst_86759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffff000; valaddr_reg:x3; val_offset:260277*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260277*0 + 3*743*FLEN/8, x4, x1, x2)

inst_86760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffff800; valaddr_reg:x3; val_offset:260280*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260280*0 + 3*744*FLEN/8, x4, x1, x2)

inst_86761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffffc00; valaddr_reg:x3; val_offset:260283*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260283*0 + 3*745*FLEN/8, x4, x1, x2)

inst_86762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffffe00; valaddr_reg:x3; val_offset:260286*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260286*0 + 3*746*FLEN/8, x4, x1, x2)

inst_86763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffffff00; valaddr_reg:x3; val_offset:260289*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260289*0 + 3*747*FLEN/8, x4, x1, x2)

inst_86764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffffff80; valaddr_reg:x3; val_offset:260292*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260292*0 + 3*748*FLEN/8, x4, x1, x2)

inst_86765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffffffc0; valaddr_reg:x3; val_offset:260295*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260295*0 + 3*749*FLEN/8, x4, x1, x2)

inst_86766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffffffe0; valaddr_reg:x3; val_offset:260298*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260298*0 + 3*750*FLEN/8, x4, x1, x2)

inst_86767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffffff0; valaddr_reg:x3; val_offset:260301*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260301*0 + 3*751*FLEN/8, x4, x1, x2)

inst_86768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffffff8; valaddr_reg:x3; val_offset:260304*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260304*0 + 3*752*FLEN/8, x4, x1, x2)

inst_86769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffffffc; valaddr_reg:x3; val_offset:260307*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260307*0 + 3*753*FLEN/8, x4, x1, x2)

inst_86770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83affffffffffffe; valaddr_reg:x3; val_offset:260310*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260310*0 + 3*754*FLEN/8, x4, x1, x2)

inst_86771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xabdb453c02756 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faabdb453c02756; op2val:0x8000;
op3val:0x83afffffffffffff; valaddr_reg:x3; val_offset:260313*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260313*0 + 3*755*FLEN/8, x4, x1, x2)

inst_86772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba50000000000000; valaddr_reg:x3; val_offset:260316*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260316*0 + 3*756*FLEN/8, x4, x1, x2)

inst_86773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba50000000000001; valaddr_reg:x3; val_offset:260319*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260319*0 + 3*757*FLEN/8, x4, x1, x2)

inst_86774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba50000000000003; valaddr_reg:x3; val_offset:260322*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260322*0 + 3*758*FLEN/8, x4, x1, x2)

inst_86775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba50000000000007; valaddr_reg:x3; val_offset:260325*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260325*0 + 3*759*FLEN/8, x4, x1, x2)

inst_86776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba5000000000000f; valaddr_reg:x3; val_offset:260328*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260328*0 + 3*760*FLEN/8, x4, x1, x2)

inst_86777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba5000000000001f; valaddr_reg:x3; val_offset:260331*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260331*0 + 3*761*FLEN/8, x4, x1, x2)

inst_86778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba5000000000003f; valaddr_reg:x3; val_offset:260334*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260334*0 + 3*762*FLEN/8, x4, x1, x2)

inst_86779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba5000000000007f; valaddr_reg:x3; val_offset:260337*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260337*0 + 3*763*FLEN/8, x4, x1, x2)

inst_86780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba500000000000ff; valaddr_reg:x3; val_offset:260340*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260340*0 + 3*764*FLEN/8, x4, x1, x2)

inst_86781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba500000000001ff; valaddr_reg:x3; val_offset:260343*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260343*0 + 3*765*FLEN/8, x4, x1, x2)

inst_86782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba500000000003ff; valaddr_reg:x3; val_offset:260346*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260346*0 + 3*766*FLEN/8, x4, x1, x2)

inst_86783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac200a6c90fc3 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x322749583386e and fs3 == 1 and fe3 == 0x3a5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faac200a6c90fc3; op2val:0x9fc322749583386e;
op3val:0xba500000000007ff; valaddr_reg:x3; val_offset:260349*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260349*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572449792,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572449793,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572449795,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572449799,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572449807,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572449823,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572449855,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572449919,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572450047,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572450303,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572450815,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572451839,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572453887,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572457983,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572466175,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572482559,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572515327,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572580863,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572711935,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854572974079,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854573498367,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854574546943,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854576644095,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854580838399,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854589227007,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854606004223,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854639558655,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854706667519,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836854840885247,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836855109320703,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836855646191615,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836856719933439,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836858867417087,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836863162384383,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836871752318975,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836888932188159,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836923291926527,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174836992011403263,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174837129450356735,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174837404328263679,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174837954084077567,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174839053595705343,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174841252618960895,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174845650665471999,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174854446758494207,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174872038944538623,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174907223316627455,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4174977592060805119,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4175118329549160447,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4175399804525871103,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4175962754479292415,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4177088654386135039,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4177088654386135040,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4178214554292977664,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4178777504246398976,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179058979223109632,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179199716711464960,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179270085455642624,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179305269827731456,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179322862013775872,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179331658106798080,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179336056153309184,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179338255176564736,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179339354688192512,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179339904444006400,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340179321913344,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340316760866816,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340385480343552,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340419840081920,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340437019951104,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340445609885696,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340449904852992,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340452052336640,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340453126078464,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340453662949376,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340453931384832,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454065602560,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454132711424,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454166265856,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454183043072,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454191431680,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454195625984,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454197723136,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454198771712,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199296000,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199558144,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199689216,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199754752,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199787520,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199803904,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199812096,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199816192,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199818240,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199819264,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199819776,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199820032,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199820160,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199820224,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199820256,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199820272,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199820280,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199820284,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199820286,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4179340454199820287,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893461308844365823,64,FLEN)
NAN_BOXED(2320289690284067297,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974635520,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974635521,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974635523,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974635527,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974635535,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974635551,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974635583,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974635647,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974635775,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974636031,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974636543,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974637567,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974639615,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974643711,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974651903,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974668287,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974701055,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974766591,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883974897663,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883975159807,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883975684095,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883976732671,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883978829823,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883983024127,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280883991412735,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280884008189951,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280884041744383,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280884108853247,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280884243070975,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280884511506431,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280885048377343,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280886122119167,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280888269602815,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280892564570111,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280901154504703,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280918334373887,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488280952694112255,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488281021413588991,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488281158852542463,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488281433730449407,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488281983486263295,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488283082997891071,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488285282021146623,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488289680067657727,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488298476160679935,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488316068346724351,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488351252718813183,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488421621462990847,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488562358951346175,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13488843833928056831,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13489406783881478143,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13490532683788320767,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13490532683788320768,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13491658583695163392,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492221533648584704,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492503008625295360,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492643746113650688,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492714114857828352,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492749299229917184,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492766891415961600,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492775687508983808,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492780085555494912,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492782284578750464,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492783384090378240,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492783933846192128,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784208724099072,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784346163052544,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784414882529280,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784449242267648,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784466422136832,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784475012071424,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784479307038720,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784481454522368,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784482528264192,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483065135104,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483333570560,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483467788288,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483534897152,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483568451584,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483585228800,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483593617408,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483597811712,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483599908864,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483600957440,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483601481728,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483601743872,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483601874944,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483601940480,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483601973248,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483601989632,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483601997824,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602001920,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602003968,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602004992,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602005504,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602005760,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602005888,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602005952,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602005984,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602006000,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602006008,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602006012,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602006014,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13492784483602006015,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893462325639983520,64,FLEN)
NAN_BOXED(11512135788198051959,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007232,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007233,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007235,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007239,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007247,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007263,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007295,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007359,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007487,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983007743,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983008255,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983009279,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983011327,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983015423,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983023615,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983039999,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983072767,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983138303,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983269375,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848983531519,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848984055807,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848985104383,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848987201535,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848991395839,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390848999784447,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390849016561663,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390849050116095,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390849117224959,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390849251442687,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390849519878143,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390850056749055,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390851130490879,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390853277974527,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390857572941823,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390866162876415,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390883342745599,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390917702483967,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242390986421960703,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242391123860914175,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242391398738821119,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242391948494635007,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242393048006262783,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242395247029518335,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242399645076029439,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242408441169051647,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242426033355096063,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242461217727184895,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242531586471362559,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242672323959717887,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4242953798936428543,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4243516748889849855,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4244642648796692479,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4244642648796692480,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4245768548703535104,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246331498656956416,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246612973633667072,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246753711122022400,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246824079866200064,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246859264238288896,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246876856424333312,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246885652517355520,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246890050563866624,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246892249587122176,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246893349098749952,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246893898854563840,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894173732470784,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894311171424256,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894379890900992,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894414250639360,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894431430508544,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894440020443136,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894444315410432,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894446462894080,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894447536635904,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448073506816,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448341942272,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448476160000,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448543268864,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448576823296,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448593600512,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448601989120,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448606183424,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448608280576,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448609329152,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448609853440,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610115584,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610246656,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610312192,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610344960,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610361344,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610369536,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610373632,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610375680,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610376704,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377216,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377472,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377600,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377664,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377696,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377712,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377720,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377724,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377726,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4246894448610377727,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893502680132819203,64,FLEN)
NAN_BOXED(2320259680565946165,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560832,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560833,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560835,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560839,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560847,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560863,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560895,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560959,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561087,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561343,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561855,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349562879,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349564927,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349569023,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349577215,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349593599,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349626367,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349691903,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349822975,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350085119,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350609407,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184351657983,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184353755135,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184357949439,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184366338047,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184383115263,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184416669695,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184483778559,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184617996287,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184886431743,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151185423302655,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151186497044479,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151188644528127,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151192939495423,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151201529430015,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151218709299199,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151253069037567,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151321788514303,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151459227467775,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151734105374719,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189152283861188607,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189153383372816383,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189155582396071935,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189159980442583039,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189168776535605247,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189186368721649663,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189221553093738495,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189291921837916159,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189432659326271487,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189714134302982143,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(190277084256403455,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246079,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246080,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(192528884070088704,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193091834023510016,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193373309000220672,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193514046488576000,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193584415232753664,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193619599604842496,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193637191790886912,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193645987883909120,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193650385930420224,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193652584953675776,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193653684465303552,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654234221117440,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654509099024384,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654646537977856,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654715257454592,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654749617192960,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654766797062144,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654775386996736,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654779681964032,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654781829447680,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654782903189504,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783440060416,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783708495872,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783842713600,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783909822464,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783943376896,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783960154112,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783968542720,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783972737024,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783974834176,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783975882752,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976407040,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976669184,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976800256,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976865792,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976898560,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976914944,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976923136,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976927232,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976929280,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930304,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930816,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931072,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931200,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931264,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931296,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931312,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931320,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931324,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931326,64,FLEN)
NAN_BOXED(6893511124743561349,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931327,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124288,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124289,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124291,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124295,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124303,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124319,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124351,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124415,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124543,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362124799,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362125311,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362126335,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362128383,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362132479,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362140671,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362157055,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362189823,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362255359,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362386431,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662362648575,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662363172863,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662364221439,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662366318591,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662370512895,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662378901503,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662395678719,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662429233151,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662496342015,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662630559743,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489662898995199,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489663435866111,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489664509607935,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489666657091583,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489670952058879,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489679541993471,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489696721862655,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489731081601023,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489799801077759,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749489937240031231,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749490212117938175,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749490761873752063,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749491861385379839,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749494060408635391,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749498458455146495,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749507254548168703,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749524846734213119,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749560031106301951,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749630399850479615,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13749771137338834943,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13750052612315545599,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13750615562268966911,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13751741462175809535,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13751741462175809536,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13752867362082652160,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753430312036073472,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753711787012784128,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753852524501139456,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753922893245317120,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753958077617405952,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753975669803450368,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753984465896472576,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753988863942983680,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753991062966239232,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753992162477867008,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753992712233680896,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753992987111587840,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993124550541312,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993193270018048,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993227629756416,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993244809625600,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993253399560192,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993257694527488,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993259842011136,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993260915752960,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261452623872,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261721059328,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261855277056,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261922385920,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261955940352,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261972717568,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261981106176,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261985300480,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261987397632,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261988446208,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261988970496,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989232640,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989363712,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989429248,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989462016,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989478400,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989486592,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989490688,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989492736,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989493760,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494272,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494528,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494656,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494720,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494752,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494768,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494776,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494780,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494782,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13753993261989494783,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893521344451536281,64,FLEN)
NAN_BOXED(11512093089510927207,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264576,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264577,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264579,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264583,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264591,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264607,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264639,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264703,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264831,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265087,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265599,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242266623,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242268671,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242272767,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242280959,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242297343,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242330111,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242395647,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242526719,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242788863,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815243313151,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815244361727,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815246458879,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815250653183,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815259041791,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815275819007,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815309373439,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815376482303,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815510700031,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815779135487,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580816316006399,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580817389748223,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580819537231871,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580823832199167,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580832422133759,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580849602002943,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580883961741311,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580952681218047,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581090120171519,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581364998078463,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581914753892351,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484583014265520127,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484585213288775679,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484589611335286783,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484598407428308991,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484615999614353407,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484651183986442239,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484721552730619903,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484862290218975231,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485143765195685887,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485706715149107199,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949823,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949824,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9487958514962792448,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488521464916213760,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488802939892924416,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488943677381279744,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489014046125457408,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489049230497546240,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489066822683590656,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489075618776612864,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489080016823123968,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489082215846379520,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083315358007296,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083865113821184,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084139991728128,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084277430681600,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084346150158336,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084380509896704,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084397689765888,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084406279700480,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084410574667776,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084412722151424,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084413795893248,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414332764160,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414601199616,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414735417344,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414802526208,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414836080640,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414852857856,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414861246464,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414865440768,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414867537920,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414868586496,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869110784,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869372928,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869504000,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869569536,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869602304,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869618688,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869626880,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869630976,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869633024,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634048,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634560,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634816,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634944,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635008,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635040,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635056,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635064,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635068,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635070,64,FLEN)
NAN_BOXED(6893530761840830294,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635071,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191448576,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191448577,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191448579,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191448583,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191448591,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191448607,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191448639,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191448703,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191448831,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191449087,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191449599,64,FLEN)
NAN_BOXED(6893535487697948611,64,FLEN)
NAN_BOXED(11512082956609075310,64,FLEN)
NAN_BOXED(13425230489191450623,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
