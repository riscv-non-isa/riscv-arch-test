
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_40704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802f800000000000; valaddr_reg:x3; val_offset:122112*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122112*0 + 3*0*FLEN/8, x4, x1, x2)

inst_40705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fc00000000000; valaddr_reg:x3; val_offset:122115*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122115*0 + 3*1*FLEN/8, x4, x1, x2)

inst_40706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fe00000000000; valaddr_reg:x3; val_offset:122118*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122118*0 + 3*2*FLEN/8, x4, x1, x2)

inst_40707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ff00000000000; valaddr_reg:x3; val_offset:122121*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122121*0 + 3*3*FLEN/8, x4, x1, x2)

inst_40708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ff80000000000; valaddr_reg:x3; val_offset:122124*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122124*0 + 3*4*FLEN/8, x4, x1, x2)

inst_40709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffc0000000000; valaddr_reg:x3; val_offset:122127*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122127*0 + 3*5*FLEN/8, x4, x1, x2)

inst_40710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffe0000000000; valaddr_reg:x3; val_offset:122130*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122130*0 + 3*6*FLEN/8, x4, x1, x2)

inst_40711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fff0000000000; valaddr_reg:x3; val_offset:122133*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122133*0 + 3*7*FLEN/8, x4, x1, x2)

inst_40712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fff8000000000; valaddr_reg:x3; val_offset:122136*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122136*0 + 3*8*FLEN/8, x4, x1, x2)

inst_40713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffc000000000; valaddr_reg:x3; val_offset:122139*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122139*0 + 3*9*FLEN/8, x4, x1, x2)

inst_40714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffe000000000; valaddr_reg:x3; val_offset:122142*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122142*0 + 3*10*FLEN/8, x4, x1, x2)

inst_40715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffff000000000; valaddr_reg:x3; val_offset:122145*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122145*0 + 3*11*FLEN/8, x4, x1, x2)

inst_40716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffff800000000; valaddr_reg:x3; val_offset:122148*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122148*0 + 3*12*FLEN/8, x4, x1, x2)

inst_40717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffc00000000; valaddr_reg:x3; val_offset:122151*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122151*0 + 3*13*FLEN/8, x4, x1, x2)

inst_40718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffe00000000; valaddr_reg:x3; val_offset:122154*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122154*0 + 3*14*FLEN/8, x4, x1, x2)

inst_40719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffff00000000; valaddr_reg:x3; val_offset:122157*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122157*0 + 3*15*FLEN/8, x4, x1, x2)

inst_40720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffff80000000; valaddr_reg:x3; val_offset:122160*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122160*0 + 3*16*FLEN/8, x4, x1, x2)

inst_40721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffc0000000; valaddr_reg:x3; val_offset:122163*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122163*0 + 3*17*FLEN/8, x4, x1, x2)

inst_40722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffe0000000; valaddr_reg:x3; val_offset:122166*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122166*0 + 3*18*FLEN/8, x4, x1, x2)

inst_40723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffff0000000; valaddr_reg:x3; val_offset:122169*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122169*0 + 3*19*FLEN/8, x4, x1, x2)

inst_40724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffff8000000; valaddr_reg:x3; val_offset:122172*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122172*0 + 3*20*FLEN/8, x4, x1, x2)

inst_40725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffc000000; valaddr_reg:x3; val_offset:122175*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122175*0 + 3*21*FLEN/8, x4, x1, x2)

inst_40726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffe000000; valaddr_reg:x3; val_offset:122178*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122178*0 + 3*22*FLEN/8, x4, x1, x2)

inst_40727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffff000000; valaddr_reg:x3; val_offset:122181*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122181*0 + 3*23*FLEN/8, x4, x1, x2)

inst_40728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffff800000; valaddr_reg:x3; val_offset:122184*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122184*0 + 3*24*FLEN/8, x4, x1, x2)

inst_40729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffc00000; valaddr_reg:x3; val_offset:122187*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122187*0 + 3*25*FLEN/8, x4, x1, x2)

inst_40730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffe00000; valaddr_reg:x3; val_offset:122190*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122190*0 + 3*26*FLEN/8, x4, x1, x2)

inst_40731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffff00000; valaddr_reg:x3; val_offset:122193*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122193*0 + 3*27*FLEN/8, x4, x1, x2)

inst_40732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffff80000; valaddr_reg:x3; val_offset:122196*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122196*0 + 3*28*FLEN/8, x4, x1, x2)

inst_40733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffc0000; valaddr_reg:x3; val_offset:122199*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122199*0 + 3*29*FLEN/8, x4, x1, x2)

inst_40734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffe0000; valaddr_reg:x3; val_offset:122202*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122202*0 + 3*30*FLEN/8, x4, x1, x2)

inst_40735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffff0000; valaddr_reg:x3; val_offset:122205*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122205*0 + 3*31*FLEN/8, x4, x1, x2)

inst_40736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffff8000; valaddr_reg:x3; val_offset:122208*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122208*0 + 3*32*FLEN/8, x4, x1, x2)

inst_40737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffffc000; valaddr_reg:x3; val_offset:122211*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122211*0 + 3*33*FLEN/8, x4, x1, x2)

inst_40738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffffe000; valaddr_reg:x3; val_offset:122214*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122214*0 + 3*34*FLEN/8, x4, x1, x2)

inst_40739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffff000; valaddr_reg:x3; val_offset:122217*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122217*0 + 3*35*FLEN/8, x4, x1, x2)

inst_40740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffff800; valaddr_reg:x3; val_offset:122220*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122220*0 + 3*36*FLEN/8, x4, x1, x2)

inst_40741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffffc00; valaddr_reg:x3; val_offset:122223*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122223*0 + 3*37*FLEN/8, x4, x1, x2)

inst_40742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffffe00; valaddr_reg:x3; val_offset:122226*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122226*0 + 3*38*FLEN/8, x4, x1, x2)

inst_40743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffffff00; valaddr_reg:x3; val_offset:122229*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122229*0 + 3*39*FLEN/8, x4, x1, x2)

inst_40744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffffff80; valaddr_reg:x3; val_offset:122232*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122232*0 + 3*40*FLEN/8, x4, x1, x2)

inst_40745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffffffc0; valaddr_reg:x3; val_offset:122235*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122235*0 + 3*41*FLEN/8, x4, x1, x2)

inst_40746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffffffe0; valaddr_reg:x3; val_offset:122238*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122238*0 + 3*42*FLEN/8, x4, x1, x2)

inst_40747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffffff0; valaddr_reg:x3; val_offset:122241*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122241*0 + 3*43*FLEN/8, x4, x1, x2)

inst_40748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffffff8; valaddr_reg:x3; val_offset:122244*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122244*0 + 3*44*FLEN/8, x4, x1, x2)

inst_40749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffffffc; valaddr_reg:x3; val_offset:122247*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122247*0 + 3*45*FLEN/8, x4, x1, x2)

inst_40750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802ffffffffffffe; valaddr_reg:x3; val_offset:122250*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122250*0 + 3*46*FLEN/8, x4, x1, x2)

inst_40751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9cfb858502687 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99cfb858502687; op2val:0x8000;
op3val:0x802fffffffffffff; valaddr_reg:x3; val_offset:122253*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122253*0 + 3*47*FLEN/8, x4, x1, x2)

inst_40752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:122256*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122256*0 + 3*48*FLEN/8, x4, x1, x2)

inst_40753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:122259*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122259*0 + 3*49*FLEN/8, x4, x1, x2)

inst_40754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:122262*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122262*0 + 3*50*FLEN/8, x4, x1, x2)

inst_40755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:122265*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122265*0 + 3*51*FLEN/8, x4, x1, x2)

inst_40756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:122268*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122268*0 + 3*52*FLEN/8, x4, x1, x2)

inst_40757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:122271*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122271*0 + 3*53*FLEN/8, x4, x1, x2)

inst_40758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:122274*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122274*0 + 3*54*FLEN/8, x4, x1, x2)

inst_40759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:122277*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122277*0 + 3*55*FLEN/8, x4, x1, x2)

inst_40760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:122280*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122280*0 + 3*56*FLEN/8, x4, x1, x2)

inst_40761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:122283*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122283*0 + 3*57*FLEN/8, x4, x1, x2)

inst_40762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:122286*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122286*0 + 3*58*FLEN/8, x4, x1, x2)

inst_40763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:122289*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122289*0 + 3*59*FLEN/8, x4, x1, x2)

inst_40764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:122292*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122292*0 + 3*60*FLEN/8, x4, x1, x2)

inst_40765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:122295*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122295*0 + 3*61*FLEN/8, x4, x1, x2)

inst_40766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:122298*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122298*0 + 3*62*FLEN/8, x4, x1, x2)

inst_40767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:122301*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122301*0 + 3*63*FLEN/8, x4, x1, x2)

inst_40768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:122304*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122304*0 + 3*64*FLEN/8, x4, x1, x2)

inst_40769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:122307*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122307*0 + 3*65*FLEN/8, x4, x1, x2)

inst_40770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:122310*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122310*0 + 3*66*FLEN/8, x4, x1, x2)

inst_40771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:122313*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122313*0 + 3*67*FLEN/8, x4, x1, x2)

inst_40772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:122316*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122316*0 + 3*68*FLEN/8, x4, x1, x2)

inst_40773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:122319*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122319*0 + 3*69*FLEN/8, x4, x1, x2)

inst_40774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000000000000; valaddr_reg:x3; val_offset:122322*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122322*0 + 3*70*FLEN/8, x4, x1, x2)

inst_40775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000000000001; valaddr_reg:x3; val_offset:122325*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122325*0 + 3*71*FLEN/8, x4, x1, x2)

inst_40776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000000000003; valaddr_reg:x3; val_offset:122328*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122328*0 + 3*72*FLEN/8, x4, x1, x2)

inst_40777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000000000007; valaddr_reg:x3; val_offset:122331*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122331*0 + 3*73*FLEN/8, x4, x1, x2)

inst_40778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000000000000f; valaddr_reg:x3; val_offset:122334*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122334*0 + 3*74*FLEN/8, x4, x1, x2)

inst_40779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000000000001f; valaddr_reg:x3; val_offset:122337*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122337*0 + 3*75*FLEN/8, x4, x1, x2)

inst_40780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000000000003f; valaddr_reg:x3; val_offset:122340*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122340*0 + 3*76*FLEN/8, x4, x1, x2)

inst_40781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000000000007f; valaddr_reg:x3; val_offset:122343*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122343*0 + 3*77*FLEN/8, x4, x1, x2)

inst_40782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00000000000ff; valaddr_reg:x3; val_offset:122346*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122346*0 + 3*78*FLEN/8, x4, x1, x2)

inst_40783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00000000001ff; valaddr_reg:x3; val_offset:122349*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122349*0 + 3*79*FLEN/8, x4, x1, x2)

inst_40784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00000000003ff; valaddr_reg:x3; val_offset:122352*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122352*0 + 3*80*FLEN/8, x4, x1, x2)

inst_40785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00000000007ff; valaddr_reg:x3; val_offset:122355*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122355*0 + 3*81*FLEN/8, x4, x1, x2)

inst_40786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000000000fff; valaddr_reg:x3; val_offset:122358*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122358*0 + 3*82*FLEN/8, x4, x1, x2)

inst_40787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000000001fff; valaddr_reg:x3; val_offset:122361*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122361*0 + 3*83*FLEN/8, x4, x1, x2)

inst_40788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000000003fff; valaddr_reg:x3; val_offset:122364*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122364*0 + 3*84*FLEN/8, x4, x1, x2)

inst_40789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000000007fff; valaddr_reg:x3; val_offset:122367*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122367*0 + 3*85*FLEN/8, x4, x1, x2)

inst_40790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000000000ffff; valaddr_reg:x3; val_offset:122370*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122370*0 + 3*86*FLEN/8, x4, x1, x2)

inst_40791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000000001ffff; valaddr_reg:x3; val_offset:122373*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122373*0 + 3*87*FLEN/8, x4, x1, x2)

inst_40792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000000003ffff; valaddr_reg:x3; val_offset:122376*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122376*0 + 3*88*FLEN/8, x4, x1, x2)

inst_40793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000000007ffff; valaddr_reg:x3; val_offset:122379*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122379*0 + 3*89*FLEN/8, x4, x1, x2)

inst_40794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00000000fffff; valaddr_reg:x3; val_offset:122382*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122382*0 + 3*90*FLEN/8, x4, x1, x2)

inst_40795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00000001fffff; valaddr_reg:x3; val_offset:122385*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122385*0 + 3*91*FLEN/8, x4, x1, x2)

inst_40796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00000003fffff; valaddr_reg:x3; val_offset:122388*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122388*0 + 3*92*FLEN/8, x4, x1, x2)

inst_40797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00000007fffff; valaddr_reg:x3; val_offset:122391*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122391*0 + 3*93*FLEN/8, x4, x1, x2)

inst_40798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000000ffffff; valaddr_reg:x3; val_offset:122394*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122394*0 + 3*94*FLEN/8, x4, x1, x2)

inst_40799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000001ffffff; valaddr_reg:x3; val_offset:122397*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122397*0 + 3*95*FLEN/8, x4, x1, x2)

inst_40800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000003ffffff; valaddr_reg:x3; val_offset:122400*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122400*0 + 3*96*FLEN/8, x4, x1, x2)

inst_40801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000007ffffff; valaddr_reg:x3; val_offset:122403*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122403*0 + 3*97*FLEN/8, x4, x1, x2)

inst_40802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000000fffffff; valaddr_reg:x3; val_offset:122406*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122406*0 + 3*98*FLEN/8, x4, x1, x2)

inst_40803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000001fffffff; valaddr_reg:x3; val_offset:122409*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122409*0 + 3*99*FLEN/8, x4, x1, x2)

inst_40804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000003fffffff; valaddr_reg:x3; val_offset:122412*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122412*0 + 3*100*FLEN/8, x4, x1, x2)

inst_40805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000007fffffff; valaddr_reg:x3; val_offset:122415*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122415*0 + 3*101*FLEN/8, x4, x1, x2)

inst_40806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00000ffffffff; valaddr_reg:x3; val_offset:122418*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122418*0 + 3*102*FLEN/8, x4, x1, x2)

inst_40807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00001ffffffff; valaddr_reg:x3; val_offset:122421*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122421*0 + 3*103*FLEN/8, x4, x1, x2)

inst_40808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00003ffffffff; valaddr_reg:x3; val_offset:122424*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122424*0 + 3*104*FLEN/8, x4, x1, x2)

inst_40809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00007ffffffff; valaddr_reg:x3; val_offset:122427*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122427*0 + 3*105*FLEN/8, x4, x1, x2)

inst_40810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0000fffffffff; valaddr_reg:x3; val_offset:122430*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122430*0 + 3*106*FLEN/8, x4, x1, x2)

inst_40811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0001fffffffff; valaddr_reg:x3; val_offset:122433*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122433*0 + 3*107*FLEN/8, x4, x1, x2)

inst_40812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0003fffffffff; valaddr_reg:x3; val_offset:122436*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122436*0 + 3*108*FLEN/8, x4, x1, x2)

inst_40813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0007fffffffff; valaddr_reg:x3; val_offset:122439*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122439*0 + 3*109*FLEN/8, x4, x1, x2)

inst_40814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e000ffffffffff; valaddr_reg:x3; val_offset:122442*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122442*0 + 3*110*FLEN/8, x4, x1, x2)

inst_40815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e001ffffffffff; valaddr_reg:x3; val_offset:122445*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122445*0 + 3*111*FLEN/8, x4, x1, x2)

inst_40816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e003ffffffffff; valaddr_reg:x3; val_offset:122448*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122448*0 + 3*112*FLEN/8, x4, x1, x2)

inst_40817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e007ffffffffff; valaddr_reg:x3; val_offset:122451*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122451*0 + 3*113*FLEN/8, x4, x1, x2)

inst_40818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e00fffffffffff; valaddr_reg:x3; val_offset:122454*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122454*0 + 3*114*FLEN/8, x4, x1, x2)

inst_40819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e01fffffffffff; valaddr_reg:x3; val_offset:122457*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122457*0 + 3*115*FLEN/8, x4, x1, x2)

inst_40820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e03fffffffffff; valaddr_reg:x3; val_offset:122460*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122460*0 + 3*116*FLEN/8, x4, x1, x2)

inst_40821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e07fffffffffff; valaddr_reg:x3; val_offset:122463*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122463*0 + 3*117*FLEN/8, x4, x1, x2)

inst_40822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e0ffffffffffff; valaddr_reg:x3; val_offset:122466*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122466*0 + 3*118*FLEN/8, x4, x1, x2)

inst_40823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e1ffffffffffff; valaddr_reg:x3; val_offset:122469*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122469*0 + 3*119*FLEN/8, x4, x1, x2)

inst_40824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e3ffffffffffff; valaddr_reg:x3; val_offset:122472*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122472*0 + 3*120*FLEN/8, x4, x1, x2)

inst_40825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e7ffffffffffff; valaddr_reg:x3; val_offset:122475*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122475*0 + 3*121*FLEN/8, x4, x1, x2)

inst_40826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80e8000000000000; valaddr_reg:x3; val_offset:122478*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122478*0 + 3*122*FLEN/8, x4, x1, x2)

inst_40827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80ec000000000000; valaddr_reg:x3; val_offset:122481*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122481*0 + 3*123*FLEN/8, x4, x1, x2)

inst_40828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80ee000000000000; valaddr_reg:x3; val_offset:122484*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122484*0 + 3*124*FLEN/8, x4, x1, x2)

inst_40829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80ef000000000000; valaddr_reg:x3; val_offset:122487*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122487*0 + 3*125*FLEN/8, x4, x1, x2)

inst_40830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80ef800000000000; valaddr_reg:x3; val_offset:122490*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122490*0 + 3*126*FLEN/8, x4, x1, x2)

inst_40831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efc00000000000; valaddr_reg:x3; val_offset:122493*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122493*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_40832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efe00000000000; valaddr_reg:x3; val_offset:122496*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122496*0 + 3*128*FLEN/8, x4, x1, x2)

inst_40833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80eff00000000000; valaddr_reg:x3; val_offset:122499*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122499*0 + 3*129*FLEN/8, x4, x1, x2)

inst_40834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80eff80000000000; valaddr_reg:x3; val_offset:122502*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122502*0 + 3*130*FLEN/8, x4, x1, x2)

inst_40835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effc0000000000; valaddr_reg:x3; val_offset:122505*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122505*0 + 3*131*FLEN/8, x4, x1, x2)

inst_40836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effe0000000000; valaddr_reg:x3; val_offset:122508*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122508*0 + 3*132*FLEN/8, x4, x1, x2)

inst_40837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efff0000000000; valaddr_reg:x3; val_offset:122511*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122511*0 + 3*133*FLEN/8, x4, x1, x2)

inst_40838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efff8000000000; valaddr_reg:x3; val_offset:122514*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122514*0 + 3*134*FLEN/8, x4, x1, x2)

inst_40839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffc000000000; valaddr_reg:x3; val_offset:122517*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122517*0 + 3*135*FLEN/8, x4, x1, x2)

inst_40840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffe000000000; valaddr_reg:x3; val_offset:122520*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122520*0 + 3*136*FLEN/8, x4, x1, x2)

inst_40841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effff000000000; valaddr_reg:x3; val_offset:122523*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122523*0 + 3*137*FLEN/8, x4, x1, x2)

inst_40842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effff800000000; valaddr_reg:x3; val_offset:122526*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122526*0 + 3*138*FLEN/8, x4, x1, x2)

inst_40843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffc00000000; valaddr_reg:x3; val_offset:122529*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122529*0 + 3*139*FLEN/8, x4, x1, x2)

inst_40844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffe00000000; valaddr_reg:x3; val_offset:122532*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122532*0 + 3*140*FLEN/8, x4, x1, x2)

inst_40845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffff00000000; valaddr_reg:x3; val_offset:122535*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122535*0 + 3*141*FLEN/8, x4, x1, x2)

inst_40846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffff80000000; valaddr_reg:x3; val_offset:122538*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122538*0 + 3*142*FLEN/8, x4, x1, x2)

inst_40847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffc0000000; valaddr_reg:x3; val_offset:122541*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122541*0 + 3*143*FLEN/8, x4, x1, x2)

inst_40848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffe0000000; valaddr_reg:x3; val_offset:122544*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122544*0 + 3*144*FLEN/8, x4, x1, x2)

inst_40849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffff0000000; valaddr_reg:x3; val_offset:122547*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122547*0 + 3*145*FLEN/8, x4, x1, x2)

inst_40850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffff8000000; valaddr_reg:x3; val_offset:122550*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122550*0 + 3*146*FLEN/8, x4, x1, x2)

inst_40851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffc000000; valaddr_reg:x3; val_offset:122553*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122553*0 + 3*147*FLEN/8, x4, x1, x2)

inst_40852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffe000000; valaddr_reg:x3; val_offset:122556*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122556*0 + 3*148*FLEN/8, x4, x1, x2)

inst_40853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffff000000; valaddr_reg:x3; val_offset:122559*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122559*0 + 3*149*FLEN/8, x4, x1, x2)

inst_40854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffff800000; valaddr_reg:x3; val_offset:122562*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122562*0 + 3*150*FLEN/8, x4, x1, x2)

inst_40855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffc00000; valaddr_reg:x3; val_offset:122565*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122565*0 + 3*151*FLEN/8, x4, x1, x2)

inst_40856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffe00000; valaddr_reg:x3; val_offset:122568*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122568*0 + 3*152*FLEN/8, x4, x1, x2)

inst_40857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffff00000; valaddr_reg:x3; val_offset:122571*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122571*0 + 3*153*FLEN/8, x4, x1, x2)

inst_40858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffff80000; valaddr_reg:x3; val_offset:122574*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122574*0 + 3*154*FLEN/8, x4, x1, x2)

inst_40859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffc0000; valaddr_reg:x3; val_offset:122577*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122577*0 + 3*155*FLEN/8, x4, x1, x2)

inst_40860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffe0000; valaddr_reg:x3; val_offset:122580*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122580*0 + 3*156*FLEN/8, x4, x1, x2)

inst_40861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffff0000; valaddr_reg:x3; val_offset:122583*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122583*0 + 3*157*FLEN/8, x4, x1, x2)

inst_40862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffff8000; valaddr_reg:x3; val_offset:122586*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122586*0 + 3*158*FLEN/8, x4, x1, x2)

inst_40863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffffc000; valaddr_reg:x3; val_offset:122589*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122589*0 + 3*159*FLEN/8, x4, x1, x2)

inst_40864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffffe000; valaddr_reg:x3; val_offset:122592*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122592*0 + 3*160*FLEN/8, x4, x1, x2)

inst_40865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffff000; valaddr_reg:x3; val_offset:122595*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122595*0 + 3*161*FLEN/8, x4, x1, x2)

inst_40866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffff800; valaddr_reg:x3; val_offset:122598*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122598*0 + 3*162*FLEN/8, x4, x1, x2)

inst_40867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffffc00; valaddr_reg:x3; val_offset:122601*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122601*0 + 3*163*FLEN/8, x4, x1, x2)

inst_40868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffffe00; valaddr_reg:x3; val_offset:122604*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122604*0 + 3*164*FLEN/8, x4, x1, x2)

inst_40869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffffff00; valaddr_reg:x3; val_offset:122607*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122607*0 + 3*165*FLEN/8, x4, x1, x2)

inst_40870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffffff80; valaddr_reg:x3; val_offset:122610*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122610*0 + 3*166*FLEN/8, x4, x1, x2)

inst_40871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffffffc0; valaddr_reg:x3; val_offset:122613*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122613*0 + 3*167*FLEN/8, x4, x1, x2)

inst_40872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffffffe0; valaddr_reg:x3; val_offset:122616*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122616*0 + 3*168*FLEN/8, x4, x1, x2)

inst_40873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffffff0; valaddr_reg:x3; val_offset:122619*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122619*0 + 3*169*FLEN/8, x4, x1, x2)

inst_40874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffffff8; valaddr_reg:x3; val_offset:122622*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122622*0 + 3*170*FLEN/8, x4, x1, x2)

inst_40875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffffffc; valaddr_reg:x3; val_offset:122625*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122625*0 + 3*171*FLEN/8, x4, x1, x2)

inst_40876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80effffffffffffe; valaddr_reg:x3; val_offset:122628*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122628*0 + 3*172*FLEN/8, x4, x1, x2)

inst_40877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9d04dcb95faaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99d04dcb95faaf; op2val:0x8000;
op3val:0x80efffffffffffff; valaddr_reg:x3; val_offset:122631*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122631*0 + 3*173*FLEN/8, x4, x1, x2)

inst_40878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:122634*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122634*0 + 3*174*FLEN/8, x4, x1, x2)

inst_40879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:122637*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122637*0 + 3*175*FLEN/8, x4, x1, x2)

inst_40880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:122640*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122640*0 + 3*176*FLEN/8, x4, x1, x2)

inst_40881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:122643*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122643*0 + 3*177*FLEN/8, x4, x1, x2)

inst_40882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:122646*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122646*0 + 3*178*FLEN/8, x4, x1, x2)

inst_40883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:122649*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122649*0 + 3*179*FLEN/8, x4, x1, x2)

inst_40884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:122652*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122652*0 + 3*180*FLEN/8, x4, x1, x2)

inst_40885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:122655*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122655*0 + 3*181*FLEN/8, x4, x1, x2)

inst_40886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:122658*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122658*0 + 3*182*FLEN/8, x4, x1, x2)

inst_40887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:122661*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122661*0 + 3*183*FLEN/8, x4, x1, x2)

inst_40888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:122664*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122664*0 + 3*184*FLEN/8, x4, x1, x2)

inst_40889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:122667*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122667*0 + 3*185*FLEN/8, x4, x1, x2)

inst_40890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:122670*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122670*0 + 3*186*FLEN/8, x4, x1, x2)

inst_40891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:122673*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122673*0 + 3*187*FLEN/8, x4, x1, x2)

inst_40892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:122676*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122676*0 + 3*188*FLEN/8, x4, x1, x2)

inst_40893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:122679*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122679*0 + 3*189*FLEN/8, x4, x1, x2)

inst_40894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:122682*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122682*0 + 3*190*FLEN/8, x4, x1, x2)

inst_40895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:122685*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122685*0 + 3*191*FLEN/8, x4, x1, x2)

inst_40896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:122688*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122688*0 + 3*192*FLEN/8, x4, x1, x2)

inst_40897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:122691*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122691*0 + 3*193*FLEN/8, x4, x1, x2)

inst_40898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:122694*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122694*0 + 3*194*FLEN/8, x4, x1, x2)

inst_40899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:122697*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122697*0 + 3*195*FLEN/8, x4, x1, x2)

inst_40900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000000000000; valaddr_reg:x3; val_offset:122700*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122700*0 + 3*196*FLEN/8, x4, x1, x2)

inst_40901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000000000001; valaddr_reg:x3; val_offset:122703*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122703*0 + 3*197*FLEN/8, x4, x1, x2)

inst_40902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000000000003; valaddr_reg:x3; val_offset:122706*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122706*0 + 3*198*FLEN/8, x4, x1, x2)

inst_40903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000000000007; valaddr_reg:x3; val_offset:122709*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122709*0 + 3*199*FLEN/8, x4, x1, x2)

inst_40904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000000000000f; valaddr_reg:x3; val_offset:122712*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122712*0 + 3*200*FLEN/8, x4, x1, x2)

inst_40905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000000000001f; valaddr_reg:x3; val_offset:122715*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122715*0 + 3*201*FLEN/8, x4, x1, x2)

inst_40906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000000000003f; valaddr_reg:x3; val_offset:122718*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122718*0 + 3*202*FLEN/8, x4, x1, x2)

inst_40907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000000000007f; valaddr_reg:x3; val_offset:122721*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122721*0 + 3*203*FLEN/8, x4, x1, x2)

inst_40908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00000000000ff; valaddr_reg:x3; val_offset:122724*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122724*0 + 3*204*FLEN/8, x4, x1, x2)

inst_40909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00000000001ff; valaddr_reg:x3; val_offset:122727*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122727*0 + 3*205*FLEN/8, x4, x1, x2)

inst_40910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00000000003ff; valaddr_reg:x3; val_offset:122730*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122730*0 + 3*206*FLEN/8, x4, x1, x2)

inst_40911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00000000007ff; valaddr_reg:x3; val_offset:122733*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122733*0 + 3*207*FLEN/8, x4, x1, x2)

inst_40912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000000000fff; valaddr_reg:x3; val_offset:122736*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122736*0 + 3*208*FLEN/8, x4, x1, x2)

inst_40913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000000001fff; valaddr_reg:x3; val_offset:122739*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122739*0 + 3*209*FLEN/8, x4, x1, x2)

inst_40914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000000003fff; valaddr_reg:x3; val_offset:122742*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122742*0 + 3*210*FLEN/8, x4, x1, x2)

inst_40915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000000007fff; valaddr_reg:x3; val_offset:122745*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122745*0 + 3*211*FLEN/8, x4, x1, x2)

inst_40916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000000000ffff; valaddr_reg:x3; val_offset:122748*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122748*0 + 3*212*FLEN/8, x4, x1, x2)

inst_40917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000000001ffff; valaddr_reg:x3; val_offset:122751*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122751*0 + 3*213*FLEN/8, x4, x1, x2)

inst_40918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000000003ffff; valaddr_reg:x3; val_offset:122754*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122754*0 + 3*214*FLEN/8, x4, x1, x2)

inst_40919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000000007ffff; valaddr_reg:x3; val_offset:122757*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122757*0 + 3*215*FLEN/8, x4, x1, x2)

inst_40920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00000000fffff; valaddr_reg:x3; val_offset:122760*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122760*0 + 3*216*FLEN/8, x4, x1, x2)

inst_40921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00000001fffff; valaddr_reg:x3; val_offset:122763*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122763*0 + 3*217*FLEN/8, x4, x1, x2)

inst_40922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00000003fffff; valaddr_reg:x3; val_offset:122766*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122766*0 + 3*218*FLEN/8, x4, x1, x2)

inst_40923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00000007fffff; valaddr_reg:x3; val_offset:122769*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122769*0 + 3*219*FLEN/8, x4, x1, x2)

inst_40924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000000ffffff; valaddr_reg:x3; val_offset:122772*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122772*0 + 3*220*FLEN/8, x4, x1, x2)

inst_40925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000001ffffff; valaddr_reg:x3; val_offset:122775*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122775*0 + 3*221*FLEN/8, x4, x1, x2)

inst_40926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000003ffffff; valaddr_reg:x3; val_offset:122778*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122778*0 + 3*222*FLEN/8, x4, x1, x2)

inst_40927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000007ffffff; valaddr_reg:x3; val_offset:122781*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122781*0 + 3*223*FLEN/8, x4, x1, x2)

inst_40928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000000fffffff; valaddr_reg:x3; val_offset:122784*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122784*0 + 3*224*FLEN/8, x4, x1, x2)

inst_40929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000001fffffff; valaddr_reg:x3; val_offset:122787*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122787*0 + 3*225*FLEN/8, x4, x1, x2)

inst_40930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000003fffffff; valaddr_reg:x3; val_offset:122790*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122790*0 + 3*226*FLEN/8, x4, x1, x2)

inst_40931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000007fffffff; valaddr_reg:x3; val_offset:122793*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122793*0 + 3*227*FLEN/8, x4, x1, x2)

inst_40932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00000ffffffff; valaddr_reg:x3; val_offset:122796*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122796*0 + 3*228*FLEN/8, x4, x1, x2)

inst_40933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00001ffffffff; valaddr_reg:x3; val_offset:122799*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122799*0 + 3*229*FLEN/8, x4, x1, x2)

inst_40934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00003ffffffff; valaddr_reg:x3; val_offset:122802*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122802*0 + 3*230*FLEN/8, x4, x1, x2)

inst_40935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00007ffffffff; valaddr_reg:x3; val_offset:122805*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122805*0 + 3*231*FLEN/8, x4, x1, x2)

inst_40936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0000fffffffff; valaddr_reg:x3; val_offset:122808*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122808*0 + 3*232*FLEN/8, x4, x1, x2)

inst_40937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0001fffffffff; valaddr_reg:x3; val_offset:122811*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122811*0 + 3*233*FLEN/8, x4, x1, x2)

inst_40938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0003fffffffff; valaddr_reg:x3; val_offset:122814*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122814*0 + 3*234*FLEN/8, x4, x1, x2)

inst_40939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0007fffffffff; valaddr_reg:x3; val_offset:122817*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122817*0 + 3*235*FLEN/8, x4, x1, x2)

inst_40940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d000ffffffffff; valaddr_reg:x3; val_offset:122820*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122820*0 + 3*236*FLEN/8, x4, x1, x2)

inst_40941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d001ffffffffff; valaddr_reg:x3; val_offset:122823*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122823*0 + 3*237*FLEN/8, x4, x1, x2)

inst_40942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d003ffffffffff; valaddr_reg:x3; val_offset:122826*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122826*0 + 3*238*FLEN/8, x4, x1, x2)

inst_40943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d007ffffffffff; valaddr_reg:x3; val_offset:122829*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122829*0 + 3*239*FLEN/8, x4, x1, x2)

inst_40944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d00fffffffffff; valaddr_reg:x3; val_offset:122832*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122832*0 + 3*240*FLEN/8, x4, x1, x2)

inst_40945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d01fffffffffff; valaddr_reg:x3; val_offset:122835*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122835*0 + 3*241*FLEN/8, x4, x1, x2)

inst_40946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d03fffffffffff; valaddr_reg:x3; val_offset:122838*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122838*0 + 3*242*FLEN/8, x4, x1, x2)

inst_40947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d07fffffffffff; valaddr_reg:x3; val_offset:122841*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122841*0 + 3*243*FLEN/8, x4, x1, x2)

inst_40948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d0ffffffffffff; valaddr_reg:x3; val_offset:122844*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122844*0 + 3*244*FLEN/8, x4, x1, x2)

inst_40949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d1ffffffffffff; valaddr_reg:x3; val_offset:122847*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122847*0 + 3*245*FLEN/8, x4, x1, x2)

inst_40950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d3ffffffffffff; valaddr_reg:x3; val_offset:122850*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122850*0 + 3*246*FLEN/8, x4, x1, x2)

inst_40951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d7ffffffffffff; valaddr_reg:x3; val_offset:122853*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122853*0 + 3*247*FLEN/8, x4, x1, x2)

inst_40952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2d8000000000000; valaddr_reg:x3; val_offset:122856*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122856*0 + 3*248*FLEN/8, x4, x1, x2)

inst_40953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dc000000000000; valaddr_reg:x3; val_offset:122859*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122859*0 + 3*249*FLEN/8, x4, x1, x2)

inst_40954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2de000000000000; valaddr_reg:x3; val_offset:122862*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122862*0 + 3*250*FLEN/8, x4, x1, x2)

inst_40955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2df000000000000; valaddr_reg:x3; val_offset:122865*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122865*0 + 3*251*FLEN/8, x4, x1, x2)

inst_40956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2df800000000000; valaddr_reg:x3; val_offset:122868*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122868*0 + 3*252*FLEN/8, x4, x1, x2)

inst_40957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfc00000000000; valaddr_reg:x3; val_offset:122871*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122871*0 + 3*253*FLEN/8, x4, x1, x2)

inst_40958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfe00000000000; valaddr_reg:x3; val_offset:122874*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122874*0 + 3*254*FLEN/8, x4, x1, x2)

inst_40959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dff00000000000; valaddr_reg:x3; val_offset:122877*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122877*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_40960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dff80000000000; valaddr_reg:x3; val_offset:122880*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122880*0 + 3*256*FLEN/8, x4, x1, x2)

inst_40961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffc0000000000; valaddr_reg:x3; val_offset:122883*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122883*0 + 3*257*FLEN/8, x4, x1, x2)

inst_40962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffe0000000000; valaddr_reg:x3; val_offset:122886*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122886*0 + 3*258*FLEN/8, x4, x1, x2)

inst_40963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfff0000000000; valaddr_reg:x3; val_offset:122889*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122889*0 + 3*259*FLEN/8, x4, x1, x2)

inst_40964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfff8000000000; valaddr_reg:x3; val_offset:122892*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122892*0 + 3*260*FLEN/8, x4, x1, x2)

inst_40965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffc000000000; valaddr_reg:x3; val_offset:122895*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122895*0 + 3*261*FLEN/8, x4, x1, x2)

inst_40966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffe000000000; valaddr_reg:x3; val_offset:122898*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122898*0 + 3*262*FLEN/8, x4, x1, x2)

inst_40967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffff000000000; valaddr_reg:x3; val_offset:122901*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122901*0 + 3*263*FLEN/8, x4, x1, x2)

inst_40968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffff800000000; valaddr_reg:x3; val_offset:122904*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122904*0 + 3*264*FLEN/8, x4, x1, x2)

inst_40969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffc00000000; valaddr_reg:x3; val_offset:122907*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122907*0 + 3*265*FLEN/8, x4, x1, x2)

inst_40970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffe00000000; valaddr_reg:x3; val_offset:122910*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122910*0 + 3*266*FLEN/8, x4, x1, x2)

inst_40971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffff00000000; valaddr_reg:x3; val_offset:122913*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122913*0 + 3*267*FLEN/8, x4, x1, x2)

inst_40972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffff80000000; valaddr_reg:x3; val_offset:122916*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122916*0 + 3*268*FLEN/8, x4, x1, x2)

inst_40973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffc0000000; valaddr_reg:x3; val_offset:122919*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122919*0 + 3*269*FLEN/8, x4, x1, x2)

inst_40974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffe0000000; valaddr_reg:x3; val_offset:122922*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122922*0 + 3*270*FLEN/8, x4, x1, x2)

inst_40975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffff0000000; valaddr_reg:x3; val_offset:122925*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122925*0 + 3*271*FLEN/8, x4, x1, x2)

inst_40976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffff8000000; valaddr_reg:x3; val_offset:122928*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122928*0 + 3*272*FLEN/8, x4, x1, x2)

inst_40977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffc000000; valaddr_reg:x3; val_offset:122931*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122931*0 + 3*273*FLEN/8, x4, x1, x2)

inst_40978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffe000000; valaddr_reg:x3; val_offset:122934*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122934*0 + 3*274*FLEN/8, x4, x1, x2)

inst_40979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffff000000; valaddr_reg:x3; val_offset:122937*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122937*0 + 3*275*FLEN/8, x4, x1, x2)

inst_40980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffff800000; valaddr_reg:x3; val_offset:122940*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122940*0 + 3*276*FLEN/8, x4, x1, x2)

inst_40981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffc00000; valaddr_reg:x3; val_offset:122943*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122943*0 + 3*277*FLEN/8, x4, x1, x2)

inst_40982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffe00000; valaddr_reg:x3; val_offset:122946*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122946*0 + 3*278*FLEN/8, x4, x1, x2)

inst_40983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffff00000; valaddr_reg:x3; val_offset:122949*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122949*0 + 3*279*FLEN/8, x4, x1, x2)

inst_40984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffff80000; valaddr_reg:x3; val_offset:122952*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122952*0 + 3*280*FLEN/8, x4, x1, x2)

inst_40985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffc0000; valaddr_reg:x3; val_offset:122955*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122955*0 + 3*281*FLEN/8, x4, x1, x2)

inst_40986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffe0000; valaddr_reg:x3; val_offset:122958*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122958*0 + 3*282*FLEN/8, x4, x1, x2)

inst_40987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffff0000; valaddr_reg:x3; val_offset:122961*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122961*0 + 3*283*FLEN/8, x4, x1, x2)

inst_40988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffff8000; valaddr_reg:x3; val_offset:122964*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122964*0 + 3*284*FLEN/8, x4, x1, x2)

inst_40989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffffc000; valaddr_reg:x3; val_offset:122967*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122967*0 + 3*285*FLEN/8, x4, x1, x2)

inst_40990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffffe000; valaddr_reg:x3; val_offset:122970*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122970*0 + 3*286*FLEN/8, x4, x1, x2)

inst_40991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffff000; valaddr_reg:x3; val_offset:122973*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122973*0 + 3*287*FLEN/8, x4, x1, x2)

inst_40992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffff800; valaddr_reg:x3; val_offset:122976*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122976*0 + 3*288*FLEN/8, x4, x1, x2)

inst_40993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffffc00; valaddr_reg:x3; val_offset:122979*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122979*0 + 3*289*FLEN/8, x4, x1, x2)

inst_40994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffffe00; valaddr_reg:x3; val_offset:122982*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122982*0 + 3*290*FLEN/8, x4, x1, x2)

inst_40995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffffff00; valaddr_reg:x3; val_offset:122985*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122985*0 + 3*291*FLEN/8, x4, x1, x2)

inst_40996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffffff80; valaddr_reg:x3; val_offset:122988*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122988*0 + 3*292*FLEN/8, x4, x1, x2)

inst_40997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffffffc0; valaddr_reg:x3; val_offset:122991*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122991*0 + 3*293*FLEN/8, x4, x1, x2)

inst_40998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffffffe0; valaddr_reg:x3; val_offset:122994*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122994*0 + 3*294*FLEN/8, x4, x1, x2)

inst_40999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffffff0; valaddr_reg:x3; val_offset:122997*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122997*0 + 3*295*FLEN/8, x4, x1, x2)

inst_41000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffffff8; valaddr_reg:x3; val_offset:123000*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123000*0 + 3*296*FLEN/8, x4, x1, x2)

inst_41001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffffffc; valaddr_reg:x3; val_offset:123003*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123003*0 + 3*297*FLEN/8, x4, x1, x2)

inst_41002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dffffffffffffe; valaddr_reg:x3; val_offset:123006*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123006*0 + 3*298*FLEN/8, x4, x1, x2)

inst_41003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa15b914ac8c33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a15b914ac8c33; op2val:0x0;
op3val:0x2dfffffffffffff; valaddr_reg:x3; val_offset:123009*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123009*0 + 3*299*FLEN/8, x4, x1, x2)

inst_41004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:123012*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123012*0 + 3*300*FLEN/8, x4, x1, x2)

inst_41005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:123015*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123015*0 + 3*301*FLEN/8, x4, x1, x2)

inst_41006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:123018*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123018*0 + 3*302*FLEN/8, x4, x1, x2)

inst_41007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:123021*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123021*0 + 3*303*FLEN/8, x4, x1, x2)

inst_41008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:123024*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123024*0 + 3*304*FLEN/8, x4, x1, x2)

inst_41009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:123027*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123027*0 + 3*305*FLEN/8, x4, x1, x2)

inst_41010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:123030*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123030*0 + 3*306*FLEN/8, x4, x1, x2)

inst_41011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:123033*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123033*0 + 3*307*FLEN/8, x4, x1, x2)

inst_41012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:123036*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123036*0 + 3*308*FLEN/8, x4, x1, x2)

inst_41013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:123039*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123039*0 + 3*309*FLEN/8, x4, x1, x2)

inst_41014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:123042*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123042*0 + 3*310*FLEN/8, x4, x1, x2)

inst_41015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:123045*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123045*0 + 3*311*FLEN/8, x4, x1, x2)

inst_41016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:123048*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123048*0 + 3*312*FLEN/8, x4, x1, x2)

inst_41017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:123051*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123051*0 + 3*313*FLEN/8, x4, x1, x2)

inst_41018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:123054*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123054*0 + 3*314*FLEN/8, x4, x1, x2)

inst_41019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:123057*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123057*0 + 3*315*FLEN/8, x4, x1, x2)

inst_41020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:123060*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123060*0 + 3*316*FLEN/8, x4, x1, x2)

inst_41021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:123063*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123063*0 + 3*317*FLEN/8, x4, x1, x2)

inst_41022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:123066*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123066*0 + 3*318*FLEN/8, x4, x1, x2)

inst_41023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:123069*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123069*0 + 3*319*FLEN/8, x4, x1, x2)

inst_41024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:123072*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123072*0 + 3*320*FLEN/8, x4, x1, x2)

inst_41025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:123075*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123075*0 + 3*321*FLEN/8, x4, x1, x2)

inst_41026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000000000000; valaddr_reg:x3; val_offset:123078*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123078*0 + 3*322*FLEN/8, x4, x1, x2)

inst_41027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000000000001; valaddr_reg:x3; val_offset:123081*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123081*0 + 3*323*FLEN/8, x4, x1, x2)

inst_41028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000000000003; valaddr_reg:x3; val_offset:123084*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123084*0 + 3*324*FLEN/8, x4, x1, x2)

inst_41029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000000000007; valaddr_reg:x3; val_offset:123087*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123087*0 + 3*325*FLEN/8, x4, x1, x2)

inst_41030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000000000000f; valaddr_reg:x3; val_offset:123090*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123090*0 + 3*326*FLEN/8, x4, x1, x2)

inst_41031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000000000001f; valaddr_reg:x3; val_offset:123093*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123093*0 + 3*327*FLEN/8, x4, x1, x2)

inst_41032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000000000003f; valaddr_reg:x3; val_offset:123096*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123096*0 + 3*328*FLEN/8, x4, x1, x2)

inst_41033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000000000007f; valaddr_reg:x3; val_offset:123099*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123099*0 + 3*329*FLEN/8, x4, x1, x2)

inst_41034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600000000000ff; valaddr_reg:x3; val_offset:123102*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123102*0 + 3*330*FLEN/8, x4, x1, x2)

inst_41035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600000000001ff; valaddr_reg:x3; val_offset:123105*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123105*0 + 3*331*FLEN/8, x4, x1, x2)

inst_41036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600000000003ff; valaddr_reg:x3; val_offset:123108*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123108*0 + 3*332*FLEN/8, x4, x1, x2)

inst_41037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600000000007ff; valaddr_reg:x3; val_offset:123111*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123111*0 + 3*333*FLEN/8, x4, x1, x2)

inst_41038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000000000fff; valaddr_reg:x3; val_offset:123114*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123114*0 + 3*334*FLEN/8, x4, x1, x2)

inst_41039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000000001fff; valaddr_reg:x3; val_offset:123117*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123117*0 + 3*335*FLEN/8, x4, x1, x2)

inst_41040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000000003fff; valaddr_reg:x3; val_offset:123120*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123120*0 + 3*336*FLEN/8, x4, x1, x2)

inst_41041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000000007fff; valaddr_reg:x3; val_offset:123123*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123123*0 + 3*337*FLEN/8, x4, x1, x2)

inst_41042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000000000ffff; valaddr_reg:x3; val_offset:123126*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123126*0 + 3*338*FLEN/8, x4, x1, x2)

inst_41043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000000001ffff; valaddr_reg:x3; val_offset:123129*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123129*0 + 3*339*FLEN/8, x4, x1, x2)

inst_41044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000000003ffff; valaddr_reg:x3; val_offset:123132*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123132*0 + 3*340*FLEN/8, x4, x1, x2)

inst_41045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000000007ffff; valaddr_reg:x3; val_offset:123135*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123135*0 + 3*341*FLEN/8, x4, x1, x2)

inst_41046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600000000fffff; valaddr_reg:x3; val_offset:123138*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123138*0 + 3*342*FLEN/8, x4, x1, x2)

inst_41047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600000001fffff; valaddr_reg:x3; val_offset:123141*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123141*0 + 3*343*FLEN/8, x4, x1, x2)

inst_41048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600000003fffff; valaddr_reg:x3; val_offset:123144*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123144*0 + 3*344*FLEN/8, x4, x1, x2)

inst_41049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600000007fffff; valaddr_reg:x3; val_offset:123147*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123147*0 + 3*345*FLEN/8, x4, x1, x2)

inst_41050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000000ffffff; valaddr_reg:x3; val_offset:123150*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123150*0 + 3*346*FLEN/8, x4, x1, x2)

inst_41051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000001ffffff; valaddr_reg:x3; val_offset:123153*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123153*0 + 3*347*FLEN/8, x4, x1, x2)

inst_41052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000003ffffff; valaddr_reg:x3; val_offset:123156*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123156*0 + 3*348*FLEN/8, x4, x1, x2)

inst_41053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000007ffffff; valaddr_reg:x3; val_offset:123159*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123159*0 + 3*349*FLEN/8, x4, x1, x2)

inst_41054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000000fffffff; valaddr_reg:x3; val_offset:123162*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123162*0 + 3*350*FLEN/8, x4, x1, x2)

inst_41055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000001fffffff; valaddr_reg:x3; val_offset:123165*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123165*0 + 3*351*FLEN/8, x4, x1, x2)

inst_41056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000003fffffff; valaddr_reg:x3; val_offset:123168*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123168*0 + 3*352*FLEN/8, x4, x1, x2)

inst_41057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000007fffffff; valaddr_reg:x3; val_offset:123171*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123171*0 + 3*353*FLEN/8, x4, x1, x2)

inst_41058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600000ffffffff; valaddr_reg:x3; val_offset:123174*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123174*0 + 3*354*FLEN/8, x4, x1, x2)

inst_41059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600001ffffffff; valaddr_reg:x3; val_offset:123177*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123177*0 + 3*355*FLEN/8, x4, x1, x2)

inst_41060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600003ffffffff; valaddr_reg:x3; val_offset:123180*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123180*0 + 3*356*FLEN/8, x4, x1, x2)

inst_41061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600007ffffffff; valaddr_reg:x3; val_offset:123183*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123183*0 + 3*357*FLEN/8, x4, x1, x2)

inst_41062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860000fffffffff; valaddr_reg:x3; val_offset:123186*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123186*0 + 3*358*FLEN/8, x4, x1, x2)

inst_41063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860001fffffffff; valaddr_reg:x3; val_offset:123189*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123189*0 + 3*359*FLEN/8, x4, x1, x2)

inst_41064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860003fffffffff; valaddr_reg:x3; val_offset:123192*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123192*0 + 3*360*FLEN/8, x4, x1, x2)

inst_41065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860007fffffffff; valaddr_reg:x3; val_offset:123195*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123195*0 + 3*361*FLEN/8, x4, x1, x2)

inst_41066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986000ffffffffff; valaddr_reg:x3; val_offset:123198*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123198*0 + 3*362*FLEN/8, x4, x1, x2)

inst_41067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986001ffffffffff; valaddr_reg:x3; val_offset:123201*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123201*0 + 3*363*FLEN/8, x4, x1, x2)

inst_41068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986003ffffffffff; valaddr_reg:x3; val_offset:123204*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123204*0 + 3*364*FLEN/8, x4, x1, x2)

inst_41069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986007ffffffffff; valaddr_reg:x3; val_offset:123207*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123207*0 + 3*365*FLEN/8, x4, x1, x2)

inst_41070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98600fffffffffff; valaddr_reg:x3; val_offset:123210*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123210*0 + 3*366*FLEN/8, x4, x1, x2)

inst_41071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98601fffffffffff; valaddr_reg:x3; val_offset:123213*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123213*0 + 3*367*FLEN/8, x4, x1, x2)

inst_41072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98603fffffffffff; valaddr_reg:x3; val_offset:123216*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123216*0 + 3*368*FLEN/8, x4, x1, x2)

inst_41073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x98607fffffffffff; valaddr_reg:x3; val_offset:123219*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123219*0 + 3*369*FLEN/8, x4, x1, x2)

inst_41074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9860ffffffffffff; valaddr_reg:x3; val_offset:123222*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123222*0 + 3*370*FLEN/8, x4, x1, x2)

inst_41075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9861ffffffffffff; valaddr_reg:x3; val_offset:123225*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123225*0 + 3*371*FLEN/8, x4, x1, x2)

inst_41076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9863ffffffffffff; valaddr_reg:x3; val_offset:123228*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123228*0 + 3*372*FLEN/8, x4, x1, x2)

inst_41077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9867ffffffffffff; valaddr_reg:x3; val_offset:123231*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123231*0 + 3*373*FLEN/8, x4, x1, x2)

inst_41078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x9868000000000000; valaddr_reg:x3; val_offset:123234*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123234*0 + 3*374*FLEN/8, x4, x1, x2)

inst_41079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986c000000000000; valaddr_reg:x3; val_offset:123237*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123237*0 + 3*375*FLEN/8, x4, x1, x2)

inst_41080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986e000000000000; valaddr_reg:x3; val_offset:123240*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123240*0 + 3*376*FLEN/8, x4, x1, x2)

inst_41081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986f000000000000; valaddr_reg:x3; val_offset:123243*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123243*0 + 3*377*FLEN/8, x4, x1, x2)

inst_41082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986f800000000000; valaddr_reg:x3; val_offset:123246*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123246*0 + 3*378*FLEN/8, x4, x1, x2)

inst_41083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fc00000000000; valaddr_reg:x3; val_offset:123249*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123249*0 + 3*379*FLEN/8, x4, x1, x2)

inst_41084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fe00000000000; valaddr_reg:x3; val_offset:123252*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123252*0 + 3*380*FLEN/8, x4, x1, x2)

inst_41085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ff00000000000; valaddr_reg:x3; val_offset:123255*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123255*0 + 3*381*FLEN/8, x4, x1, x2)

inst_41086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ff80000000000; valaddr_reg:x3; val_offset:123258*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123258*0 + 3*382*FLEN/8, x4, x1, x2)

inst_41087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffc0000000000; valaddr_reg:x3; val_offset:123261*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123261*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_41088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffe0000000000; valaddr_reg:x3; val_offset:123264*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123264*0 + 3*384*FLEN/8, x4, x1, x2)

inst_41089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fff0000000000; valaddr_reg:x3; val_offset:123267*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123267*0 + 3*385*FLEN/8, x4, x1, x2)

inst_41090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fff8000000000; valaddr_reg:x3; val_offset:123270*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123270*0 + 3*386*FLEN/8, x4, x1, x2)

inst_41091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffc000000000; valaddr_reg:x3; val_offset:123273*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123273*0 + 3*387*FLEN/8, x4, x1, x2)

inst_41092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffe000000000; valaddr_reg:x3; val_offset:123276*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123276*0 + 3*388*FLEN/8, x4, x1, x2)

inst_41093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffff000000000; valaddr_reg:x3; val_offset:123279*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123279*0 + 3*389*FLEN/8, x4, x1, x2)

inst_41094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffff800000000; valaddr_reg:x3; val_offset:123282*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123282*0 + 3*390*FLEN/8, x4, x1, x2)

inst_41095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffc00000000; valaddr_reg:x3; val_offset:123285*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123285*0 + 3*391*FLEN/8, x4, x1, x2)

inst_41096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffe00000000; valaddr_reg:x3; val_offset:123288*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123288*0 + 3*392*FLEN/8, x4, x1, x2)

inst_41097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffff00000000; valaddr_reg:x3; val_offset:123291*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123291*0 + 3*393*FLEN/8, x4, x1, x2)

inst_41098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffff80000000; valaddr_reg:x3; val_offset:123294*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123294*0 + 3*394*FLEN/8, x4, x1, x2)

inst_41099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffc0000000; valaddr_reg:x3; val_offset:123297*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123297*0 + 3*395*FLEN/8, x4, x1, x2)

inst_41100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffe0000000; valaddr_reg:x3; val_offset:123300*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123300*0 + 3*396*FLEN/8, x4, x1, x2)

inst_41101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffff0000000; valaddr_reg:x3; val_offset:123303*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123303*0 + 3*397*FLEN/8, x4, x1, x2)

inst_41102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffff8000000; valaddr_reg:x3; val_offset:123306*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123306*0 + 3*398*FLEN/8, x4, x1, x2)

inst_41103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffc000000; valaddr_reg:x3; val_offset:123309*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123309*0 + 3*399*FLEN/8, x4, x1, x2)

inst_41104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffe000000; valaddr_reg:x3; val_offset:123312*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123312*0 + 3*400*FLEN/8, x4, x1, x2)

inst_41105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffff000000; valaddr_reg:x3; val_offset:123315*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123315*0 + 3*401*FLEN/8, x4, x1, x2)

inst_41106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffff800000; valaddr_reg:x3; val_offset:123318*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123318*0 + 3*402*FLEN/8, x4, x1, x2)

inst_41107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffc00000; valaddr_reg:x3; val_offset:123321*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123321*0 + 3*403*FLEN/8, x4, x1, x2)

inst_41108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffe00000; valaddr_reg:x3; val_offset:123324*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123324*0 + 3*404*FLEN/8, x4, x1, x2)

inst_41109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffff00000; valaddr_reg:x3; val_offset:123327*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123327*0 + 3*405*FLEN/8, x4, x1, x2)

inst_41110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffff80000; valaddr_reg:x3; val_offset:123330*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123330*0 + 3*406*FLEN/8, x4, x1, x2)

inst_41111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffc0000; valaddr_reg:x3; val_offset:123333*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123333*0 + 3*407*FLEN/8, x4, x1, x2)

inst_41112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffe0000; valaddr_reg:x3; val_offset:123336*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123336*0 + 3*408*FLEN/8, x4, x1, x2)

inst_41113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffff0000; valaddr_reg:x3; val_offset:123339*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123339*0 + 3*409*FLEN/8, x4, x1, x2)

inst_41114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffff8000; valaddr_reg:x3; val_offset:123342*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123342*0 + 3*410*FLEN/8, x4, x1, x2)

inst_41115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffffc000; valaddr_reg:x3; val_offset:123345*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123345*0 + 3*411*FLEN/8, x4, x1, x2)

inst_41116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffffe000; valaddr_reg:x3; val_offset:123348*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123348*0 + 3*412*FLEN/8, x4, x1, x2)

inst_41117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffff000; valaddr_reg:x3; val_offset:123351*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123351*0 + 3*413*FLEN/8, x4, x1, x2)

inst_41118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffff800; valaddr_reg:x3; val_offset:123354*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123354*0 + 3*414*FLEN/8, x4, x1, x2)

inst_41119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffffc00; valaddr_reg:x3; val_offset:123357*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123357*0 + 3*415*FLEN/8, x4, x1, x2)

inst_41120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffffe00; valaddr_reg:x3; val_offset:123360*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123360*0 + 3*416*FLEN/8, x4, x1, x2)

inst_41121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffffff00; valaddr_reg:x3; val_offset:123363*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123363*0 + 3*417*FLEN/8, x4, x1, x2)

inst_41122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffffff80; valaddr_reg:x3; val_offset:123366*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123366*0 + 3*418*FLEN/8, x4, x1, x2)

inst_41123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffffffc0; valaddr_reg:x3; val_offset:123369*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123369*0 + 3*419*FLEN/8, x4, x1, x2)

inst_41124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffffffe0; valaddr_reg:x3; val_offset:123372*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123372*0 + 3*420*FLEN/8, x4, x1, x2)

inst_41125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffffff0; valaddr_reg:x3; val_offset:123375*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123375*0 + 3*421*FLEN/8, x4, x1, x2)

inst_41126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffffff8; valaddr_reg:x3; val_offset:123378*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123378*0 + 3*422*FLEN/8, x4, x1, x2)

inst_41127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffffffc; valaddr_reg:x3; val_offset:123381*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123381*0 + 3*423*FLEN/8, x4, x1, x2)

inst_41128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986ffffffffffffe; valaddr_reg:x3; val_offset:123384*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123384*0 + 3*424*FLEN/8, x4, x1, x2)

inst_41129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1875f8434107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x186 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1875f8434107; op2val:0x8000;
op3val:0x986fffffffffffff; valaddr_reg:x3; val_offset:123387*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123387*0 + 3*425*FLEN/8, x4, x1, x2)

inst_41130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:123390*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123390*0 + 3*426*FLEN/8, x4, x1, x2)

inst_41131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:123393*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123393*0 + 3*427*FLEN/8, x4, x1, x2)

inst_41132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:123396*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123396*0 + 3*428*FLEN/8, x4, x1, x2)

inst_41133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:123399*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123399*0 + 3*429*FLEN/8, x4, x1, x2)

inst_41134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:123402*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123402*0 + 3*430*FLEN/8, x4, x1, x2)

inst_41135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:123405*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123405*0 + 3*431*FLEN/8, x4, x1, x2)

inst_41136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:123408*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123408*0 + 3*432*FLEN/8, x4, x1, x2)

inst_41137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:123411*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123411*0 + 3*433*FLEN/8, x4, x1, x2)

inst_41138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:123414*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123414*0 + 3*434*FLEN/8, x4, x1, x2)

inst_41139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:123417*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123417*0 + 3*435*FLEN/8, x4, x1, x2)

inst_41140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:123420*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123420*0 + 3*436*FLEN/8, x4, x1, x2)

inst_41141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:123423*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123423*0 + 3*437*FLEN/8, x4, x1, x2)

inst_41142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:123426*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123426*0 + 3*438*FLEN/8, x4, x1, x2)

inst_41143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:123429*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123429*0 + 3*439*FLEN/8, x4, x1, x2)

inst_41144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:123432*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123432*0 + 3*440*FLEN/8, x4, x1, x2)

inst_41145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:123435*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123435*0 + 3*441*FLEN/8, x4, x1, x2)

inst_41146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:123438*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123438*0 + 3*442*FLEN/8, x4, x1, x2)

inst_41147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:123441*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123441*0 + 3*443*FLEN/8, x4, x1, x2)

inst_41148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:123444*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123444*0 + 3*444*FLEN/8, x4, x1, x2)

inst_41149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:123447*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123447*0 + 3*445*FLEN/8, x4, x1, x2)

inst_41150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:123450*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123450*0 + 3*446*FLEN/8, x4, x1, x2)

inst_41151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:123453*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123453*0 + 3*447*FLEN/8, x4, x1, x2)

inst_41152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000000000000; valaddr_reg:x3; val_offset:123456*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123456*0 + 3*448*FLEN/8, x4, x1, x2)

inst_41153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000000000001; valaddr_reg:x3; val_offset:123459*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123459*0 + 3*449*FLEN/8, x4, x1, x2)

inst_41154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000000000003; valaddr_reg:x3; val_offset:123462*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123462*0 + 3*450*FLEN/8, x4, x1, x2)

inst_41155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000000000007; valaddr_reg:x3; val_offset:123465*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123465*0 + 3*451*FLEN/8, x4, x1, x2)

inst_41156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000000000000f; valaddr_reg:x3; val_offset:123468*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123468*0 + 3*452*FLEN/8, x4, x1, x2)

inst_41157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000000000001f; valaddr_reg:x3; val_offset:123471*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123471*0 + 3*453*FLEN/8, x4, x1, x2)

inst_41158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000000000003f; valaddr_reg:x3; val_offset:123474*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123474*0 + 3*454*FLEN/8, x4, x1, x2)

inst_41159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000000000007f; valaddr_reg:x3; val_offset:123477*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123477*0 + 3*455*FLEN/8, x4, x1, x2)

inst_41160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300000000000ff; valaddr_reg:x3; val_offset:123480*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123480*0 + 3*456*FLEN/8, x4, x1, x2)

inst_41161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300000000001ff; valaddr_reg:x3; val_offset:123483*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123483*0 + 3*457*FLEN/8, x4, x1, x2)

inst_41162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300000000003ff; valaddr_reg:x3; val_offset:123486*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123486*0 + 3*458*FLEN/8, x4, x1, x2)

inst_41163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300000000007ff; valaddr_reg:x3; val_offset:123489*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123489*0 + 3*459*FLEN/8, x4, x1, x2)

inst_41164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000000000fff; valaddr_reg:x3; val_offset:123492*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123492*0 + 3*460*FLEN/8, x4, x1, x2)

inst_41165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000000001fff; valaddr_reg:x3; val_offset:123495*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123495*0 + 3*461*FLEN/8, x4, x1, x2)

inst_41166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000000003fff; valaddr_reg:x3; val_offset:123498*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123498*0 + 3*462*FLEN/8, x4, x1, x2)

inst_41167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000000007fff; valaddr_reg:x3; val_offset:123501*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123501*0 + 3*463*FLEN/8, x4, x1, x2)

inst_41168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000000000ffff; valaddr_reg:x3; val_offset:123504*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123504*0 + 3*464*FLEN/8, x4, x1, x2)

inst_41169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000000001ffff; valaddr_reg:x3; val_offset:123507*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123507*0 + 3*465*FLEN/8, x4, x1, x2)

inst_41170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000000003ffff; valaddr_reg:x3; val_offset:123510*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123510*0 + 3*466*FLEN/8, x4, x1, x2)

inst_41171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000000007ffff; valaddr_reg:x3; val_offset:123513*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123513*0 + 3*467*FLEN/8, x4, x1, x2)

inst_41172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300000000fffff; valaddr_reg:x3; val_offset:123516*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123516*0 + 3*468*FLEN/8, x4, x1, x2)

inst_41173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300000001fffff; valaddr_reg:x3; val_offset:123519*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123519*0 + 3*469*FLEN/8, x4, x1, x2)

inst_41174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300000003fffff; valaddr_reg:x3; val_offset:123522*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123522*0 + 3*470*FLEN/8, x4, x1, x2)

inst_41175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300000007fffff; valaddr_reg:x3; val_offset:123525*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123525*0 + 3*471*FLEN/8, x4, x1, x2)

inst_41176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000000ffffff; valaddr_reg:x3; val_offset:123528*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123528*0 + 3*472*FLEN/8, x4, x1, x2)

inst_41177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000001ffffff; valaddr_reg:x3; val_offset:123531*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123531*0 + 3*473*FLEN/8, x4, x1, x2)

inst_41178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000003ffffff; valaddr_reg:x3; val_offset:123534*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123534*0 + 3*474*FLEN/8, x4, x1, x2)

inst_41179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000007ffffff; valaddr_reg:x3; val_offset:123537*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123537*0 + 3*475*FLEN/8, x4, x1, x2)

inst_41180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000000fffffff; valaddr_reg:x3; val_offset:123540*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123540*0 + 3*476*FLEN/8, x4, x1, x2)

inst_41181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000001fffffff; valaddr_reg:x3; val_offset:123543*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123543*0 + 3*477*FLEN/8, x4, x1, x2)

inst_41182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000003fffffff; valaddr_reg:x3; val_offset:123546*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123546*0 + 3*478*FLEN/8, x4, x1, x2)

inst_41183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000007fffffff; valaddr_reg:x3; val_offset:123549*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123549*0 + 3*479*FLEN/8, x4, x1, x2)

inst_41184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300000ffffffff; valaddr_reg:x3; val_offset:123552*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123552*0 + 3*480*FLEN/8, x4, x1, x2)

inst_41185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300001ffffffff; valaddr_reg:x3; val_offset:123555*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123555*0 + 3*481*FLEN/8, x4, x1, x2)

inst_41186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300003ffffffff; valaddr_reg:x3; val_offset:123558*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123558*0 + 3*482*FLEN/8, x4, x1, x2)

inst_41187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300007ffffffff; valaddr_reg:x3; val_offset:123561*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123561*0 + 3*483*FLEN/8, x4, x1, x2)

inst_41188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130000fffffffff; valaddr_reg:x3; val_offset:123564*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123564*0 + 3*484*FLEN/8, x4, x1, x2)

inst_41189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130001fffffffff; valaddr_reg:x3; val_offset:123567*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123567*0 + 3*485*FLEN/8, x4, x1, x2)

inst_41190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130003fffffffff; valaddr_reg:x3; val_offset:123570*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123570*0 + 3*486*FLEN/8, x4, x1, x2)

inst_41191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130007fffffffff; valaddr_reg:x3; val_offset:123573*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123573*0 + 3*487*FLEN/8, x4, x1, x2)

inst_41192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813000ffffffffff; valaddr_reg:x3; val_offset:123576*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123576*0 + 3*488*FLEN/8, x4, x1, x2)

inst_41193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813001ffffffffff; valaddr_reg:x3; val_offset:123579*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123579*0 + 3*489*FLEN/8, x4, x1, x2)

inst_41194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813003ffffffffff; valaddr_reg:x3; val_offset:123582*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123582*0 + 3*490*FLEN/8, x4, x1, x2)

inst_41195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813007ffffffffff; valaddr_reg:x3; val_offset:123585*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123585*0 + 3*491*FLEN/8, x4, x1, x2)

inst_41196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81300fffffffffff; valaddr_reg:x3; val_offset:123588*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123588*0 + 3*492*FLEN/8, x4, x1, x2)

inst_41197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81301fffffffffff; valaddr_reg:x3; val_offset:123591*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123591*0 + 3*493*FLEN/8, x4, x1, x2)

inst_41198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81303fffffffffff; valaddr_reg:x3; val_offset:123594*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123594*0 + 3*494*FLEN/8, x4, x1, x2)

inst_41199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x81307fffffffffff; valaddr_reg:x3; val_offset:123597*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123597*0 + 3*495*FLEN/8, x4, x1, x2)

inst_41200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8130ffffffffffff; valaddr_reg:x3; val_offset:123600*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123600*0 + 3*496*FLEN/8, x4, x1, x2)

inst_41201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8131ffffffffffff; valaddr_reg:x3; val_offset:123603*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123603*0 + 3*497*FLEN/8, x4, x1, x2)

inst_41202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8133ffffffffffff; valaddr_reg:x3; val_offset:123606*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123606*0 + 3*498*FLEN/8, x4, x1, x2)

inst_41203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8137ffffffffffff; valaddr_reg:x3; val_offset:123609*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123609*0 + 3*499*FLEN/8, x4, x1, x2)

inst_41204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x8138000000000000; valaddr_reg:x3; val_offset:123612*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123612*0 + 3*500*FLEN/8, x4, x1, x2)

inst_41205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813c000000000000; valaddr_reg:x3; val_offset:123615*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123615*0 + 3*501*FLEN/8, x4, x1, x2)

inst_41206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813e000000000000; valaddr_reg:x3; val_offset:123618*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123618*0 + 3*502*FLEN/8, x4, x1, x2)

inst_41207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813f000000000000; valaddr_reg:x3; val_offset:123621*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123621*0 + 3*503*FLEN/8, x4, x1, x2)

inst_41208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813f800000000000; valaddr_reg:x3; val_offset:123624*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123624*0 + 3*504*FLEN/8, x4, x1, x2)

inst_41209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fc00000000000; valaddr_reg:x3; val_offset:123627*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123627*0 + 3*505*FLEN/8, x4, x1, x2)

inst_41210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fe00000000000; valaddr_reg:x3; val_offset:123630*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123630*0 + 3*506*FLEN/8, x4, x1, x2)

inst_41211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ff00000000000; valaddr_reg:x3; val_offset:123633*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123633*0 + 3*507*FLEN/8, x4, x1, x2)

inst_41212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ff80000000000; valaddr_reg:x3; val_offset:123636*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123636*0 + 3*508*FLEN/8, x4, x1, x2)

inst_41213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffc0000000000; valaddr_reg:x3; val_offset:123639*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123639*0 + 3*509*FLEN/8, x4, x1, x2)

inst_41214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffe0000000000; valaddr_reg:x3; val_offset:123642*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123642*0 + 3*510*FLEN/8, x4, x1, x2)

inst_41215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fff0000000000; valaddr_reg:x3; val_offset:123645*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123645*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_41216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fff8000000000; valaddr_reg:x3; val_offset:123648*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123648*0 + 3*512*FLEN/8, x4, x1, x2)

inst_41217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffc000000000; valaddr_reg:x3; val_offset:123651*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123651*0 + 3*513*FLEN/8, x4, x1, x2)

inst_41218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffe000000000; valaddr_reg:x3; val_offset:123654*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123654*0 + 3*514*FLEN/8, x4, x1, x2)

inst_41219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffff000000000; valaddr_reg:x3; val_offset:123657*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123657*0 + 3*515*FLEN/8, x4, x1, x2)

inst_41220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffff800000000; valaddr_reg:x3; val_offset:123660*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123660*0 + 3*516*FLEN/8, x4, x1, x2)

inst_41221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffc00000000; valaddr_reg:x3; val_offset:123663*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123663*0 + 3*517*FLEN/8, x4, x1, x2)

inst_41222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffe00000000; valaddr_reg:x3; val_offset:123666*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123666*0 + 3*518*FLEN/8, x4, x1, x2)

inst_41223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffff00000000; valaddr_reg:x3; val_offset:123669*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123669*0 + 3*519*FLEN/8, x4, x1, x2)

inst_41224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffff80000000; valaddr_reg:x3; val_offset:123672*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123672*0 + 3*520*FLEN/8, x4, x1, x2)

inst_41225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffc0000000; valaddr_reg:x3; val_offset:123675*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123675*0 + 3*521*FLEN/8, x4, x1, x2)

inst_41226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffe0000000; valaddr_reg:x3; val_offset:123678*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123678*0 + 3*522*FLEN/8, x4, x1, x2)

inst_41227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffff0000000; valaddr_reg:x3; val_offset:123681*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123681*0 + 3*523*FLEN/8, x4, x1, x2)

inst_41228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffff8000000; valaddr_reg:x3; val_offset:123684*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123684*0 + 3*524*FLEN/8, x4, x1, x2)

inst_41229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffc000000; valaddr_reg:x3; val_offset:123687*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123687*0 + 3*525*FLEN/8, x4, x1, x2)

inst_41230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffe000000; valaddr_reg:x3; val_offset:123690*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123690*0 + 3*526*FLEN/8, x4, x1, x2)

inst_41231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffff000000; valaddr_reg:x3; val_offset:123693*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123693*0 + 3*527*FLEN/8, x4, x1, x2)

inst_41232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffff800000; valaddr_reg:x3; val_offset:123696*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123696*0 + 3*528*FLEN/8, x4, x1, x2)

inst_41233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffc00000; valaddr_reg:x3; val_offset:123699*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123699*0 + 3*529*FLEN/8, x4, x1, x2)

inst_41234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffe00000; valaddr_reg:x3; val_offset:123702*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123702*0 + 3*530*FLEN/8, x4, x1, x2)

inst_41235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffff00000; valaddr_reg:x3; val_offset:123705*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123705*0 + 3*531*FLEN/8, x4, x1, x2)

inst_41236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffff80000; valaddr_reg:x3; val_offset:123708*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123708*0 + 3*532*FLEN/8, x4, x1, x2)

inst_41237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffc0000; valaddr_reg:x3; val_offset:123711*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123711*0 + 3*533*FLEN/8, x4, x1, x2)

inst_41238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffe0000; valaddr_reg:x3; val_offset:123714*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123714*0 + 3*534*FLEN/8, x4, x1, x2)

inst_41239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffff0000; valaddr_reg:x3; val_offset:123717*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123717*0 + 3*535*FLEN/8, x4, x1, x2)

inst_41240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffff8000; valaddr_reg:x3; val_offset:123720*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123720*0 + 3*536*FLEN/8, x4, x1, x2)

inst_41241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffffc000; valaddr_reg:x3; val_offset:123723*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123723*0 + 3*537*FLEN/8, x4, x1, x2)

inst_41242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffffe000; valaddr_reg:x3; val_offset:123726*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123726*0 + 3*538*FLEN/8, x4, x1, x2)

inst_41243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffff000; valaddr_reg:x3; val_offset:123729*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123729*0 + 3*539*FLEN/8, x4, x1, x2)

inst_41244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffff800; valaddr_reg:x3; val_offset:123732*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123732*0 + 3*540*FLEN/8, x4, x1, x2)

inst_41245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffffc00; valaddr_reg:x3; val_offset:123735*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123735*0 + 3*541*FLEN/8, x4, x1, x2)

inst_41246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffffe00; valaddr_reg:x3; val_offset:123738*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123738*0 + 3*542*FLEN/8, x4, x1, x2)

inst_41247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffffff00; valaddr_reg:x3; val_offset:123741*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123741*0 + 3*543*FLEN/8, x4, x1, x2)

inst_41248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffffff80; valaddr_reg:x3; val_offset:123744*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123744*0 + 3*544*FLEN/8, x4, x1, x2)

inst_41249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffffffc0; valaddr_reg:x3; val_offset:123747*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123747*0 + 3*545*FLEN/8, x4, x1, x2)

inst_41250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffffffe0; valaddr_reg:x3; val_offset:123750*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123750*0 + 3*546*FLEN/8, x4, x1, x2)

inst_41251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffffff0; valaddr_reg:x3; val_offset:123753*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123753*0 + 3*547*FLEN/8, x4, x1, x2)

inst_41252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffffff8; valaddr_reg:x3; val_offset:123756*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123756*0 + 3*548*FLEN/8, x4, x1, x2)

inst_41253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffffffc; valaddr_reg:x3; val_offset:123759*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123759*0 + 3*549*FLEN/8, x4, x1, x2)

inst_41254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813ffffffffffffe; valaddr_reg:x3; val_offset:123762*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123762*0 + 3*550*FLEN/8, x4, x1, x2)

inst_41255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa1ba02a5538df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a1ba02a5538df; op2val:0x8000;
op3val:0x813fffffffffffff; valaddr_reg:x3; val_offset:123765*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123765*0 + 3*551*FLEN/8, x4, x1, x2)

inst_41256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:123768*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123768*0 + 3*552*FLEN/8, x4, x1, x2)

inst_41257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:123771*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123771*0 + 3*553*FLEN/8, x4, x1, x2)

inst_41258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:123774*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123774*0 + 3*554*FLEN/8, x4, x1, x2)

inst_41259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:123777*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123777*0 + 3*555*FLEN/8, x4, x1, x2)

inst_41260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:123780*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123780*0 + 3*556*FLEN/8, x4, x1, x2)

inst_41261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:123783*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123783*0 + 3*557*FLEN/8, x4, x1, x2)

inst_41262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:123786*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123786*0 + 3*558*FLEN/8, x4, x1, x2)

inst_41263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:123789*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123789*0 + 3*559*FLEN/8, x4, x1, x2)

inst_41264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:123792*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123792*0 + 3*560*FLEN/8, x4, x1, x2)

inst_41265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:123795*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123795*0 + 3*561*FLEN/8, x4, x1, x2)

inst_41266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:123798*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123798*0 + 3*562*FLEN/8, x4, x1, x2)

inst_41267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:123801*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123801*0 + 3*563*FLEN/8, x4, x1, x2)

inst_41268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:123804*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123804*0 + 3*564*FLEN/8, x4, x1, x2)

inst_41269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:123807*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123807*0 + 3*565*FLEN/8, x4, x1, x2)

inst_41270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:123810*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123810*0 + 3*566*FLEN/8, x4, x1, x2)

inst_41271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:123813*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123813*0 + 3*567*FLEN/8, x4, x1, x2)

inst_41272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:123816*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123816*0 + 3*568*FLEN/8, x4, x1, x2)

inst_41273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:123819*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123819*0 + 3*569*FLEN/8, x4, x1, x2)

inst_41274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:123822*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123822*0 + 3*570*FLEN/8, x4, x1, x2)

inst_41275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:123825*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123825*0 + 3*571*FLEN/8, x4, x1, x2)

inst_41276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:123828*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123828*0 + 3*572*FLEN/8, x4, x1, x2)

inst_41277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:123831*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123831*0 + 3*573*FLEN/8, x4, x1, x2)

inst_41278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000000000000; valaddr_reg:x3; val_offset:123834*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123834*0 + 3*574*FLEN/8, x4, x1, x2)

inst_41279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000000000001; valaddr_reg:x3; val_offset:123837*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123837*0 + 3*575*FLEN/8, x4, x1, x2)

inst_41280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000000000003; valaddr_reg:x3; val_offset:123840*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123840*0 + 3*576*FLEN/8, x4, x1, x2)

inst_41281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000000000007; valaddr_reg:x3; val_offset:123843*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123843*0 + 3*577*FLEN/8, x4, x1, x2)

inst_41282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000000000000f; valaddr_reg:x3; val_offset:123846*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123846*0 + 3*578*FLEN/8, x4, x1, x2)

inst_41283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000000000001f; valaddr_reg:x3; val_offset:123849*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123849*0 + 3*579*FLEN/8, x4, x1, x2)

inst_41284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000000000003f; valaddr_reg:x3; val_offset:123852*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123852*0 + 3*580*FLEN/8, x4, x1, x2)

inst_41285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000000000007f; valaddr_reg:x3; val_offset:123855*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123855*0 + 3*581*FLEN/8, x4, x1, x2)

inst_41286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00000000000ff; valaddr_reg:x3; val_offset:123858*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123858*0 + 3*582*FLEN/8, x4, x1, x2)

inst_41287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00000000001ff; valaddr_reg:x3; val_offset:123861*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123861*0 + 3*583*FLEN/8, x4, x1, x2)

inst_41288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00000000003ff; valaddr_reg:x3; val_offset:123864*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123864*0 + 3*584*FLEN/8, x4, x1, x2)

inst_41289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00000000007ff; valaddr_reg:x3; val_offset:123867*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123867*0 + 3*585*FLEN/8, x4, x1, x2)

inst_41290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000000000fff; valaddr_reg:x3; val_offset:123870*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123870*0 + 3*586*FLEN/8, x4, x1, x2)

inst_41291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000000001fff; valaddr_reg:x3; val_offset:123873*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123873*0 + 3*587*FLEN/8, x4, x1, x2)

inst_41292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000000003fff; valaddr_reg:x3; val_offset:123876*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123876*0 + 3*588*FLEN/8, x4, x1, x2)

inst_41293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000000007fff; valaddr_reg:x3; val_offset:123879*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123879*0 + 3*589*FLEN/8, x4, x1, x2)

inst_41294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000000000ffff; valaddr_reg:x3; val_offset:123882*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123882*0 + 3*590*FLEN/8, x4, x1, x2)

inst_41295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000000001ffff; valaddr_reg:x3; val_offset:123885*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123885*0 + 3*591*FLEN/8, x4, x1, x2)

inst_41296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000000003ffff; valaddr_reg:x3; val_offset:123888*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123888*0 + 3*592*FLEN/8, x4, x1, x2)

inst_41297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000000007ffff; valaddr_reg:x3; val_offset:123891*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123891*0 + 3*593*FLEN/8, x4, x1, x2)

inst_41298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00000000fffff; valaddr_reg:x3; val_offset:123894*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123894*0 + 3*594*FLEN/8, x4, x1, x2)

inst_41299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00000001fffff; valaddr_reg:x3; val_offset:123897*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123897*0 + 3*595*FLEN/8, x4, x1, x2)

inst_41300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00000003fffff; valaddr_reg:x3; val_offset:123900*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123900*0 + 3*596*FLEN/8, x4, x1, x2)

inst_41301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00000007fffff; valaddr_reg:x3; val_offset:123903*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123903*0 + 3*597*FLEN/8, x4, x1, x2)

inst_41302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000000ffffff; valaddr_reg:x3; val_offset:123906*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123906*0 + 3*598*FLEN/8, x4, x1, x2)

inst_41303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000001ffffff; valaddr_reg:x3; val_offset:123909*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123909*0 + 3*599*FLEN/8, x4, x1, x2)

inst_41304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000003ffffff; valaddr_reg:x3; val_offset:123912*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123912*0 + 3*600*FLEN/8, x4, x1, x2)

inst_41305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000007ffffff; valaddr_reg:x3; val_offset:123915*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123915*0 + 3*601*FLEN/8, x4, x1, x2)

inst_41306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000000fffffff; valaddr_reg:x3; val_offset:123918*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123918*0 + 3*602*FLEN/8, x4, x1, x2)

inst_41307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000001fffffff; valaddr_reg:x3; val_offset:123921*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123921*0 + 3*603*FLEN/8, x4, x1, x2)

inst_41308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000003fffffff; valaddr_reg:x3; val_offset:123924*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123924*0 + 3*604*FLEN/8, x4, x1, x2)

inst_41309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000007fffffff; valaddr_reg:x3; val_offset:123927*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123927*0 + 3*605*FLEN/8, x4, x1, x2)

inst_41310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00000ffffffff; valaddr_reg:x3; val_offset:123930*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123930*0 + 3*606*FLEN/8, x4, x1, x2)

inst_41311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00001ffffffff; valaddr_reg:x3; val_offset:123933*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123933*0 + 3*607*FLEN/8, x4, x1, x2)

inst_41312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00003ffffffff; valaddr_reg:x3; val_offset:123936*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123936*0 + 3*608*FLEN/8, x4, x1, x2)

inst_41313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00007ffffffff; valaddr_reg:x3; val_offset:123939*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123939*0 + 3*609*FLEN/8, x4, x1, x2)

inst_41314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0000fffffffff; valaddr_reg:x3; val_offset:123942*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123942*0 + 3*610*FLEN/8, x4, x1, x2)

inst_41315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0001fffffffff; valaddr_reg:x3; val_offset:123945*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123945*0 + 3*611*FLEN/8, x4, x1, x2)

inst_41316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0003fffffffff; valaddr_reg:x3; val_offset:123948*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123948*0 + 3*612*FLEN/8, x4, x1, x2)

inst_41317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0007fffffffff; valaddr_reg:x3; val_offset:123951*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123951*0 + 3*613*FLEN/8, x4, x1, x2)

inst_41318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d000ffffffffff; valaddr_reg:x3; val_offset:123954*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123954*0 + 3*614*FLEN/8, x4, x1, x2)

inst_41319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d001ffffffffff; valaddr_reg:x3; val_offset:123957*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123957*0 + 3*615*FLEN/8, x4, x1, x2)

inst_41320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d003ffffffffff; valaddr_reg:x3; val_offset:123960*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123960*0 + 3*616*FLEN/8, x4, x1, x2)

inst_41321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d007ffffffffff; valaddr_reg:x3; val_offset:123963*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123963*0 + 3*617*FLEN/8, x4, x1, x2)

inst_41322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d00fffffffffff; valaddr_reg:x3; val_offset:123966*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123966*0 + 3*618*FLEN/8, x4, x1, x2)

inst_41323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d01fffffffffff; valaddr_reg:x3; val_offset:123969*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123969*0 + 3*619*FLEN/8, x4, x1, x2)

inst_41324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d03fffffffffff; valaddr_reg:x3; val_offset:123972*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123972*0 + 3*620*FLEN/8, x4, x1, x2)

inst_41325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d07fffffffffff; valaddr_reg:x3; val_offset:123975*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123975*0 + 3*621*FLEN/8, x4, x1, x2)

inst_41326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d0ffffffffffff; valaddr_reg:x3; val_offset:123978*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123978*0 + 3*622*FLEN/8, x4, x1, x2)

inst_41327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d1ffffffffffff; valaddr_reg:x3; val_offset:123981*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123981*0 + 3*623*FLEN/8, x4, x1, x2)

inst_41328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d3ffffffffffff; valaddr_reg:x3; val_offset:123984*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123984*0 + 3*624*FLEN/8, x4, x1, x2)

inst_41329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d7ffffffffffff; valaddr_reg:x3; val_offset:123987*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123987*0 + 3*625*FLEN/8, x4, x1, x2)

inst_41330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1d8000000000000; valaddr_reg:x3; val_offset:123990*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123990*0 + 3*626*FLEN/8, x4, x1, x2)

inst_41331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dc000000000000; valaddr_reg:x3; val_offset:123993*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123993*0 + 3*627*FLEN/8, x4, x1, x2)

inst_41332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1de000000000000; valaddr_reg:x3; val_offset:123996*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123996*0 + 3*628*FLEN/8, x4, x1, x2)

inst_41333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1df000000000000; valaddr_reg:x3; val_offset:123999*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123999*0 + 3*629*FLEN/8, x4, x1, x2)

inst_41334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1df800000000000; valaddr_reg:x3; val_offset:124002*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124002*0 + 3*630*FLEN/8, x4, x1, x2)

inst_41335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfc00000000000; valaddr_reg:x3; val_offset:124005*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124005*0 + 3*631*FLEN/8, x4, x1, x2)

inst_41336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfe00000000000; valaddr_reg:x3; val_offset:124008*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124008*0 + 3*632*FLEN/8, x4, x1, x2)

inst_41337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dff00000000000; valaddr_reg:x3; val_offset:124011*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124011*0 + 3*633*FLEN/8, x4, x1, x2)

inst_41338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dff80000000000; valaddr_reg:x3; val_offset:124014*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124014*0 + 3*634*FLEN/8, x4, x1, x2)

inst_41339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffc0000000000; valaddr_reg:x3; val_offset:124017*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124017*0 + 3*635*FLEN/8, x4, x1, x2)

inst_41340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffe0000000000; valaddr_reg:x3; val_offset:124020*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124020*0 + 3*636*FLEN/8, x4, x1, x2)

inst_41341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfff0000000000; valaddr_reg:x3; val_offset:124023*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124023*0 + 3*637*FLEN/8, x4, x1, x2)

inst_41342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfff8000000000; valaddr_reg:x3; val_offset:124026*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124026*0 + 3*638*FLEN/8, x4, x1, x2)

inst_41343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffc000000000; valaddr_reg:x3; val_offset:124029*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124029*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_41344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffe000000000; valaddr_reg:x3; val_offset:124032*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124032*0 + 3*640*FLEN/8, x4, x1, x2)

inst_41345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffff000000000; valaddr_reg:x3; val_offset:124035*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124035*0 + 3*641*FLEN/8, x4, x1, x2)

inst_41346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffff800000000; valaddr_reg:x3; val_offset:124038*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124038*0 + 3*642*FLEN/8, x4, x1, x2)

inst_41347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffc00000000; valaddr_reg:x3; val_offset:124041*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124041*0 + 3*643*FLEN/8, x4, x1, x2)

inst_41348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffe00000000; valaddr_reg:x3; val_offset:124044*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124044*0 + 3*644*FLEN/8, x4, x1, x2)

inst_41349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffff00000000; valaddr_reg:x3; val_offset:124047*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124047*0 + 3*645*FLEN/8, x4, x1, x2)

inst_41350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffff80000000; valaddr_reg:x3; val_offset:124050*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124050*0 + 3*646*FLEN/8, x4, x1, x2)

inst_41351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffc0000000; valaddr_reg:x3; val_offset:124053*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124053*0 + 3*647*FLEN/8, x4, x1, x2)

inst_41352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffe0000000; valaddr_reg:x3; val_offset:124056*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124056*0 + 3*648*FLEN/8, x4, x1, x2)

inst_41353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffff0000000; valaddr_reg:x3; val_offset:124059*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124059*0 + 3*649*FLEN/8, x4, x1, x2)

inst_41354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffff8000000; valaddr_reg:x3; val_offset:124062*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124062*0 + 3*650*FLEN/8, x4, x1, x2)

inst_41355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffc000000; valaddr_reg:x3; val_offset:124065*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124065*0 + 3*651*FLEN/8, x4, x1, x2)

inst_41356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffe000000; valaddr_reg:x3; val_offset:124068*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124068*0 + 3*652*FLEN/8, x4, x1, x2)

inst_41357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffff000000; valaddr_reg:x3; val_offset:124071*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124071*0 + 3*653*FLEN/8, x4, x1, x2)

inst_41358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffff800000; valaddr_reg:x3; val_offset:124074*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124074*0 + 3*654*FLEN/8, x4, x1, x2)

inst_41359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffc00000; valaddr_reg:x3; val_offset:124077*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124077*0 + 3*655*FLEN/8, x4, x1, x2)

inst_41360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffe00000; valaddr_reg:x3; val_offset:124080*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124080*0 + 3*656*FLEN/8, x4, x1, x2)

inst_41361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffff00000; valaddr_reg:x3; val_offset:124083*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124083*0 + 3*657*FLEN/8, x4, x1, x2)

inst_41362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffff80000; valaddr_reg:x3; val_offset:124086*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124086*0 + 3*658*FLEN/8, x4, x1, x2)

inst_41363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffc0000; valaddr_reg:x3; val_offset:124089*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124089*0 + 3*659*FLEN/8, x4, x1, x2)

inst_41364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffe0000; valaddr_reg:x3; val_offset:124092*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124092*0 + 3*660*FLEN/8, x4, x1, x2)

inst_41365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffff0000; valaddr_reg:x3; val_offset:124095*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124095*0 + 3*661*FLEN/8, x4, x1, x2)

inst_41366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffff8000; valaddr_reg:x3; val_offset:124098*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124098*0 + 3*662*FLEN/8, x4, x1, x2)

inst_41367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffffc000; valaddr_reg:x3; val_offset:124101*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124101*0 + 3*663*FLEN/8, x4, x1, x2)

inst_41368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffffe000; valaddr_reg:x3; val_offset:124104*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124104*0 + 3*664*FLEN/8, x4, x1, x2)

inst_41369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffff000; valaddr_reg:x3; val_offset:124107*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124107*0 + 3*665*FLEN/8, x4, x1, x2)

inst_41370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffff800; valaddr_reg:x3; val_offset:124110*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124110*0 + 3*666*FLEN/8, x4, x1, x2)

inst_41371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffffc00; valaddr_reg:x3; val_offset:124113*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124113*0 + 3*667*FLEN/8, x4, x1, x2)

inst_41372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffffe00; valaddr_reg:x3; val_offset:124116*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124116*0 + 3*668*FLEN/8, x4, x1, x2)

inst_41373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffffff00; valaddr_reg:x3; val_offset:124119*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124119*0 + 3*669*FLEN/8, x4, x1, x2)

inst_41374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffffff80; valaddr_reg:x3; val_offset:124122*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124122*0 + 3*670*FLEN/8, x4, x1, x2)

inst_41375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffffffc0; valaddr_reg:x3; val_offset:124125*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124125*0 + 3*671*FLEN/8, x4, x1, x2)

inst_41376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffffffe0; valaddr_reg:x3; val_offset:124128*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124128*0 + 3*672*FLEN/8, x4, x1, x2)

inst_41377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffffff0; valaddr_reg:x3; val_offset:124131*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124131*0 + 3*673*FLEN/8, x4, x1, x2)

inst_41378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffffff8; valaddr_reg:x3; val_offset:124134*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124134*0 + 3*674*FLEN/8, x4, x1, x2)

inst_41379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffffffc; valaddr_reg:x3; val_offset:124137*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124137*0 + 3*675*FLEN/8, x4, x1, x2)

inst_41380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dffffffffffffe; valaddr_reg:x3; val_offset:124140*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124140*0 + 3*676*FLEN/8, x4, x1, x2)

inst_41381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa2479209fa035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a2479209fa035; op2val:0x0;
op3val:0x1dfffffffffffff; valaddr_reg:x3; val_offset:124143*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124143*0 + 3*677*FLEN/8, x4, x1, x2)

inst_41382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:124146*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124146*0 + 3*678*FLEN/8, x4, x1, x2)

inst_41383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:124149*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124149*0 + 3*679*FLEN/8, x4, x1, x2)

inst_41384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:124152*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124152*0 + 3*680*FLEN/8, x4, x1, x2)

inst_41385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:124155*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124155*0 + 3*681*FLEN/8, x4, x1, x2)

inst_41386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:124158*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124158*0 + 3*682*FLEN/8, x4, x1, x2)

inst_41387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:124161*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124161*0 + 3*683*FLEN/8, x4, x1, x2)

inst_41388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:124164*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124164*0 + 3*684*FLEN/8, x4, x1, x2)

inst_41389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:124167*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124167*0 + 3*685*FLEN/8, x4, x1, x2)

inst_41390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:124170*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124170*0 + 3*686*FLEN/8, x4, x1, x2)

inst_41391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:124173*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124173*0 + 3*687*FLEN/8, x4, x1, x2)

inst_41392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:124176*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124176*0 + 3*688*FLEN/8, x4, x1, x2)

inst_41393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:124179*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124179*0 + 3*689*FLEN/8, x4, x1, x2)

inst_41394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:124182*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124182*0 + 3*690*FLEN/8, x4, x1, x2)

inst_41395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:124185*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124185*0 + 3*691*FLEN/8, x4, x1, x2)

inst_41396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:124188*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124188*0 + 3*692*FLEN/8, x4, x1, x2)

inst_41397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:124191*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124191*0 + 3*693*FLEN/8, x4, x1, x2)

inst_41398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:124194*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124194*0 + 3*694*FLEN/8, x4, x1, x2)

inst_41399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:124197*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124197*0 + 3*695*FLEN/8, x4, x1, x2)

inst_41400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:124200*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124200*0 + 3*696*FLEN/8, x4, x1, x2)

inst_41401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:124203*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124203*0 + 3*697*FLEN/8, x4, x1, x2)

inst_41402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:124206*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124206*0 + 3*698*FLEN/8, x4, x1, x2)

inst_41403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:124209*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124209*0 + 3*699*FLEN/8, x4, x1, x2)

inst_41404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000000000000; valaddr_reg:x3; val_offset:124212*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124212*0 + 3*700*FLEN/8, x4, x1, x2)

inst_41405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000000000001; valaddr_reg:x3; val_offset:124215*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124215*0 + 3*701*FLEN/8, x4, x1, x2)

inst_41406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000000000003; valaddr_reg:x3; val_offset:124218*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124218*0 + 3*702*FLEN/8, x4, x1, x2)

inst_41407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000000000007; valaddr_reg:x3; val_offset:124221*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124221*0 + 3*703*FLEN/8, x4, x1, x2)

inst_41408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000000000000f; valaddr_reg:x3; val_offset:124224*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124224*0 + 3*704*FLEN/8, x4, x1, x2)

inst_41409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000000000001f; valaddr_reg:x3; val_offset:124227*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124227*0 + 3*705*FLEN/8, x4, x1, x2)

inst_41410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000000000003f; valaddr_reg:x3; val_offset:124230*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124230*0 + 3*706*FLEN/8, x4, x1, x2)

inst_41411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000000000007f; valaddr_reg:x3; val_offset:124233*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124233*0 + 3*707*FLEN/8, x4, x1, x2)

inst_41412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000000000000ff; valaddr_reg:x3; val_offset:124236*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124236*0 + 3*708*FLEN/8, x4, x1, x2)

inst_41413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000000000001ff; valaddr_reg:x3; val_offset:124239*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124239*0 + 3*709*FLEN/8, x4, x1, x2)

inst_41414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000000000003ff; valaddr_reg:x3; val_offset:124242*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124242*0 + 3*710*FLEN/8, x4, x1, x2)

inst_41415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000000000007ff; valaddr_reg:x3; val_offset:124245*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124245*0 + 3*711*FLEN/8, x4, x1, x2)

inst_41416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000000000fff; valaddr_reg:x3; val_offset:124248*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124248*0 + 3*712*FLEN/8, x4, x1, x2)

inst_41417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000000001fff; valaddr_reg:x3; val_offset:124251*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124251*0 + 3*713*FLEN/8, x4, x1, x2)

inst_41418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000000003fff; valaddr_reg:x3; val_offset:124254*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124254*0 + 3*714*FLEN/8, x4, x1, x2)

inst_41419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000000007fff; valaddr_reg:x3; val_offset:124257*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124257*0 + 3*715*FLEN/8, x4, x1, x2)

inst_41420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000000000ffff; valaddr_reg:x3; val_offset:124260*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124260*0 + 3*716*FLEN/8, x4, x1, x2)

inst_41421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000000001ffff; valaddr_reg:x3; val_offset:124263*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124263*0 + 3*717*FLEN/8, x4, x1, x2)

inst_41422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000000003ffff; valaddr_reg:x3; val_offset:124266*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124266*0 + 3*718*FLEN/8, x4, x1, x2)

inst_41423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000000007ffff; valaddr_reg:x3; val_offset:124269*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124269*0 + 3*719*FLEN/8, x4, x1, x2)

inst_41424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000000000fffff; valaddr_reg:x3; val_offset:124272*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124272*0 + 3*720*FLEN/8, x4, x1, x2)

inst_41425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000000001fffff; valaddr_reg:x3; val_offset:124275*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124275*0 + 3*721*FLEN/8, x4, x1, x2)

inst_41426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000000003fffff; valaddr_reg:x3; val_offset:124278*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124278*0 + 3*722*FLEN/8, x4, x1, x2)

inst_41427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000000007fffff; valaddr_reg:x3; val_offset:124281*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124281*0 + 3*723*FLEN/8, x4, x1, x2)

inst_41428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000000ffffff; valaddr_reg:x3; val_offset:124284*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124284*0 + 3*724*FLEN/8, x4, x1, x2)

inst_41429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000001ffffff; valaddr_reg:x3; val_offset:124287*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124287*0 + 3*725*FLEN/8, x4, x1, x2)

inst_41430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000003ffffff; valaddr_reg:x3; val_offset:124290*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124290*0 + 3*726*FLEN/8, x4, x1, x2)

inst_41431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000007ffffff; valaddr_reg:x3; val_offset:124293*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124293*0 + 3*727*FLEN/8, x4, x1, x2)

inst_41432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000000fffffff; valaddr_reg:x3; val_offset:124296*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124296*0 + 3*728*FLEN/8, x4, x1, x2)

inst_41433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000001fffffff; valaddr_reg:x3; val_offset:124299*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124299*0 + 3*729*FLEN/8, x4, x1, x2)

inst_41434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000003fffffff; valaddr_reg:x3; val_offset:124302*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124302*0 + 3*730*FLEN/8, x4, x1, x2)

inst_41435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000007fffffff; valaddr_reg:x3; val_offset:124305*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124305*0 + 3*731*FLEN/8, x4, x1, x2)

inst_41436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000000ffffffff; valaddr_reg:x3; val_offset:124308*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124308*0 + 3*732*FLEN/8, x4, x1, x2)

inst_41437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000001ffffffff; valaddr_reg:x3; val_offset:124311*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124311*0 + 3*733*FLEN/8, x4, x1, x2)

inst_41438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000003ffffffff; valaddr_reg:x3; val_offset:124314*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124314*0 + 3*734*FLEN/8, x4, x1, x2)

inst_41439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000007ffffffff; valaddr_reg:x3; val_offset:124317*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124317*0 + 3*735*FLEN/8, x4, x1, x2)

inst_41440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200000fffffffff; valaddr_reg:x3; val_offset:124320*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124320*0 + 3*736*FLEN/8, x4, x1, x2)

inst_41441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200001fffffffff; valaddr_reg:x3; val_offset:124323*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124323*0 + 3*737*FLEN/8, x4, x1, x2)

inst_41442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200003fffffffff; valaddr_reg:x3; val_offset:124326*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124326*0 + 3*738*FLEN/8, x4, x1, x2)

inst_41443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200007fffffffff; valaddr_reg:x3; val_offset:124329*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124329*0 + 3*739*FLEN/8, x4, x1, x2)

inst_41444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820000ffffffffff; valaddr_reg:x3; val_offset:124332*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124332*0 + 3*740*FLEN/8, x4, x1, x2)

inst_41445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820001ffffffffff; valaddr_reg:x3; val_offset:124335*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124335*0 + 3*741*FLEN/8, x4, x1, x2)

inst_41446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820003ffffffffff; valaddr_reg:x3; val_offset:124338*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124338*0 + 3*742*FLEN/8, x4, x1, x2)

inst_41447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820007ffffffffff; valaddr_reg:x3; val_offset:124341*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124341*0 + 3*743*FLEN/8, x4, x1, x2)

inst_41448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82000fffffffffff; valaddr_reg:x3; val_offset:124344*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124344*0 + 3*744*FLEN/8, x4, x1, x2)

inst_41449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82001fffffffffff; valaddr_reg:x3; val_offset:124347*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124347*0 + 3*745*FLEN/8, x4, x1, x2)

inst_41450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82003fffffffffff; valaddr_reg:x3; val_offset:124350*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124350*0 + 3*746*FLEN/8, x4, x1, x2)

inst_41451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x82007fffffffffff; valaddr_reg:x3; val_offset:124353*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124353*0 + 3*747*FLEN/8, x4, x1, x2)

inst_41452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8200ffffffffffff; valaddr_reg:x3; val_offset:124356*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124356*0 + 3*748*FLEN/8, x4, x1, x2)

inst_41453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8201ffffffffffff; valaddr_reg:x3; val_offset:124359*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124359*0 + 3*749*FLEN/8, x4, x1, x2)

inst_41454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8203ffffffffffff; valaddr_reg:x3; val_offset:124362*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124362*0 + 3*750*FLEN/8, x4, x1, x2)

inst_41455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8207ffffffffffff; valaddr_reg:x3; val_offset:124365*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124365*0 + 3*751*FLEN/8, x4, x1, x2)

inst_41456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x8208000000000000; valaddr_reg:x3; val_offset:124368*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124368*0 + 3*752*FLEN/8, x4, x1, x2)

inst_41457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820c000000000000; valaddr_reg:x3; val_offset:124371*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124371*0 + 3*753*FLEN/8, x4, x1, x2)

inst_41458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820e000000000000; valaddr_reg:x3; val_offset:124374*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124374*0 + 3*754*FLEN/8, x4, x1, x2)

inst_41459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820f000000000000; valaddr_reg:x3; val_offset:124377*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124377*0 + 3*755*FLEN/8, x4, x1, x2)

inst_41460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820f800000000000; valaddr_reg:x3; val_offset:124380*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124380*0 + 3*756*FLEN/8, x4, x1, x2)

inst_41461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820fc00000000000; valaddr_reg:x3; val_offset:124383*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124383*0 + 3*757*FLEN/8, x4, x1, x2)

inst_41462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820fe00000000000; valaddr_reg:x3; val_offset:124386*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124386*0 + 3*758*FLEN/8, x4, x1, x2)

inst_41463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820ff00000000000; valaddr_reg:x3; val_offset:124389*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124389*0 + 3*759*FLEN/8, x4, x1, x2)

inst_41464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820ff80000000000; valaddr_reg:x3; val_offset:124392*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124392*0 + 3*760*FLEN/8, x4, x1, x2)

inst_41465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820ffc0000000000; valaddr_reg:x3; val_offset:124395*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124395*0 + 3*761*FLEN/8, x4, x1, x2)

inst_41466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820ffe0000000000; valaddr_reg:x3; val_offset:124398*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124398*0 + 3*762*FLEN/8, x4, x1, x2)

inst_41467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820fff0000000000; valaddr_reg:x3; val_offset:124401*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124401*0 + 3*763*FLEN/8, x4, x1, x2)

inst_41468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820fff8000000000; valaddr_reg:x3; val_offset:124404*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124404*0 + 3*764*FLEN/8, x4, x1, x2)

inst_41469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820fffc000000000; valaddr_reg:x3; val_offset:124407*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124407*0 + 3*765*FLEN/8, x4, x1, x2)

inst_41470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820fffe000000000; valaddr_reg:x3; val_offset:124410*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124410*0 + 3*766*FLEN/8, x4, x1, x2)

inst_41471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xa318653df9f5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9a318653df9f5f; op2val:0x8000;
op3val:0x820ffff000000000; valaddr_reg:x3; val_offset:124413*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124413*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236742098248531968,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236812466992709632,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236847651364798464,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236865243550842880,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236874039643865088,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236878437690376192,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236880636713631744,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236881736225259520,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882285981073408,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882560858980352,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882698297933824,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882767017410560,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882801377148928,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882818557018112,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882827146952704,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882831441920000,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882833589403648,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882834663145472,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835200016384,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835468451840,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835602669568,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835669778432,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835703332864,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835720110080,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835728498688,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835732692992,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835734790144,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835735838720,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736363008,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736625152,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736756224,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736821760,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736854528,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736870912,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736879104,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736883200,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736885248,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736886272,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736886784,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887040,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887168,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887232,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887264,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887280,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887288,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887292,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887294,64,FLEN)
NAN_BOXED(6888765495702464135,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887295,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962752,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962753,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962755,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962759,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962767,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962783,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962815,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962879,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963007,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963263,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963775,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637964799,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637966847,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637970943,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637979135,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637995519,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638028287,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638093823,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638224895,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638487039,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431639011327,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431640059903,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431642157055,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431646351359,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431654739967,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431671517183,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431705071615,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431772180479,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431906398207,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432174833663,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432711704575,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422433785446399,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422435932930047,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422440227897343,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422448817831935,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422465997701119,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422500357439487,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422569076916223,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422706515869695,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422981393776639,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286423531149590527,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286424630661218303,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286426829684473855,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286431227730984959,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286440023824007167,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286457616010051583,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286492800382140415,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286563169126318079,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286703906614673407,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286985381591384063,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9287548331544805375,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451647999,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451648000,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9289800131358490624,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290363081311911936,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290644556288622592,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290785293776977920,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290855662521155584,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290890846893244416,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290908439079288832,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290917235172311040,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290921633218822144,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290923832242077696,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290924931753705472,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925481509519360,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925756387426304,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925893826379776,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925962545856512,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925996905594880,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926014085464064,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926022675398656,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926026970365952,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926029117849600,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030191591424,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030728462336,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030996897792,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031131115520,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031198224384,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031231778816,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031248556032,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031256944640,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031261138944,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031263236096,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264284672,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264808960,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265071104,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265202176,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265267712,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265300480,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265316864,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265325056,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265329152,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265331200,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332224,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332736,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332992,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333120,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333184,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333216,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333232,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333240,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333244,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333246,64,FLEN)
NAN_BOXED(6888766137586547375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333247,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672320,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672321,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672323,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672327,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672335,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672351,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672383,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672447,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672575,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672831,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231673343,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231674367,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231676415,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231680511,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231688703,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231705087,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231737855,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231803391,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231934463,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232196607,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232720895,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983233769471,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983235866623,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983240060927,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983248449535,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983265226751,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983298781183,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983365890047,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983500107775,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983768543231,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661984305414143,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661985379155967,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661987526639615,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661991821606911,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662000411541503,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662017591410687,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662051951149055,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662120670625791,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662258109579263,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662532987486207,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202663082743300095,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202664182254927871,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202666381278183423,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202670779324694527,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202679575417716735,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202697167603761151,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202732351975849983,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202802720720027647,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202943458208382975,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203224933185093631,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203787883138514943,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357567,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357568,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206039682952200192,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206602632905621504,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206884107882332160,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207024845370687488,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207095214114865152,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207130398486953984,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207147990672998400,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207156786766020608,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207161184812531712,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207163383835787264,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207164483347415040,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165033103228928,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165307981135872,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165445420089344,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165514139566080,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165548499304448,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165565679173632,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165574269108224,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165578564075520,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165580711559168,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165581785300992,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582322171904,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582590607360,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582724825088,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582791933952,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582825488384,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582842265600,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582850654208,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582854848512,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582856945664,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582857994240,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858518528,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858780672,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858911744,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858977280,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859010048,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859026432,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859034624,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859038720,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859040768,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859041792,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042304,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042560,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042688,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042752,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042784,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042800,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042808,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042812,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042814,64,FLEN)
NAN_BOXED(6888842464676580403,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042815,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269248,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269249,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269251,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269255,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269263,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269279,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269311,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269375,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269503,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529269759,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529270271,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529271295,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529273343,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529277439,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529285631,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529302015,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529334783,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529400319,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529531391,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891529793535,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891530317823,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891531366399,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891533463551,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891537657855,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891546046463,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891562823679,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891596378111,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891663486975,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775891797704703,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775892066140159,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775892603011071,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775893676752895,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775895824236543,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775900119203839,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775908709138431,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775925889007615,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979775960248745983,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979776028968222719,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979776166407176191,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979776441285083135,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979776991040897023,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979778090552524799,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979780289575780351,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979784687622291455,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979793483715313663,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979811075901358079,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979846260273446911,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10979916629017624575,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10980057366505979903,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10980338841482690559,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10980901791436111871,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10982027691342954495,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10982027691342954496,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10983153591249797120,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10983716541203218432,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10983998016179929088,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984138753668284416,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984209122412462080,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984244306784550912,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984261898970595328,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984270695063617536,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984275093110128640,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984277292133384192,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984278391645011968,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984278941400825856,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279216278732800,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279353717686272,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279422437163008,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279456796901376,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279473976770560,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279482566705152,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279486861672448,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279489009156096,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279490082897920,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279490619768832,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279490888204288,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491022422016,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491089530880,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491123085312,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491139862528,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491148251136,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491152445440,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491154542592,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491155591168,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156115456,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156377600,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156508672,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156574208,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156606976,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156623360,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156631552,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156635648,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156637696,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156638720,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639232,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639488,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639616,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639680,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639712,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639728,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639736,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639740,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639742,64,FLEN)
NAN_BOXED(6888845474971992327,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10984279491156639743,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815232,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815233,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815235,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815239,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815247,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815263,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815295,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815359,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815487,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815743,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774816255,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774817279,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774819327,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774823423,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774831615,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774847999,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774880767,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774946303,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775077375,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775339519,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775863807,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429776912383,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429779009535,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429783203839,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429791592447,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429808369663,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429841924095,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429909032959,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430043250687,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430311686143,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430848557055,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940431922298879,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940434069782527,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940438364749823,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940446954684415,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940464134553599,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940498494291967,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940567213768703,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940704652722175,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940979530629119,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308941529286443007,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308942628798070783,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308944827821326335,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308949225867837439,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308958021960859647,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308975614146904063,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309010798518992895,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309081167263170559,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309221904751525887,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309503379728236543,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9310066329681657855,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500479,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500480,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312318129495343104,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312881079448764416,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313162554425475072,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313303291913830400,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313373660658008064,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313408845030096896,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313426437216141312,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313435233309163520,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313439631355674624,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313441830378930176,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313442929890557952,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443479646371840,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443754524278784,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443891963232256,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443960682708992,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443995042447360,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444012222316544,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444020812251136,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444025107218432,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444027254702080,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028328443904,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028865314816,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029133750272,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029267968000,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029335076864,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029368631296,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029385408512,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029393797120,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029397991424,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029400088576,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401137152,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401661440,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401923584,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402054656,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402120192,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402152960,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402169344,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402177536,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402181632,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402183680,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402184704,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185216,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185472,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185600,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185664,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185696,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185712,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185720,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185724,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185726,64,FLEN)
NAN_BOXED(6888848954735540447,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185727,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744384,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744385,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744387,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744391,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744399,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744415,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744447,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744511,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744639,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744895,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193745407,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193746431,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193748479,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193752575,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193760767,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193777151,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193809919,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193875455,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389194006527,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389194268671,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389194792959,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389195841535,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389197938687,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389202132991,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389210521599,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389227298815,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389260853247,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389327962111,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389462179839,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389730615295,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604390267486207,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604391341228031,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604393488711679,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604397783678975,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604406373613567,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604423553482751,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604457913221119,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604526632697855,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604664071651327,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604938949558271,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130605488705372159,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130606588216999935,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130608787240255487,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130613185286766591,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130621981379788799,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130639573565833215,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130674757937922047,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130745126682099711,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130885864170455039,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131167339147165695,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131730289100587007,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(132856189007429631,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(132856189007429632,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(133982088914272256,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134545038867693568,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134826513844404224,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134967251332759552,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135037620076937216,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135072804449026048,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135090396635070464,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135099192728092672,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135103590774603776,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135105789797859328,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135106889309487104,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107439065300992,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107713943207936,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107851382161408,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107920101638144,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107954461376512,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107971641245696,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107980231180288,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107984526147584,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107986673631232,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107987747373056,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988284243968,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988552679424,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988686897152,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988754006016,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988787560448,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988804337664,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988812726272,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988816920576,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988819017728,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988820066304,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988820590592,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988820852736,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988820983808,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821049344,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821082112,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821098496,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821106688,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821110784,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821112832,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821113856,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114368,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114624,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114752,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114816,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114848,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114864,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114872,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114876,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114878,64,FLEN)
NAN_BOXED(6888858682673569845,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114879,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631680,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631681,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631683,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631687,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631695,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631711,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631743,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631807,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631935,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632191,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632703,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930633727,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930635775,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930639871,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930648063,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930664447,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930697215,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930762751,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930893823,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931155967,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931680255,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224932728831,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224934825983,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224939020287,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224947408895,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224964186111,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224997740543,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225064849407,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225199067135,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225467502591,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487226004373503,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487227078115327,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487229225598975,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487233520566271,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487242110500863,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487259290370047,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487293650108415,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487362369585151,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487499808538623,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487774686445567,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367488324442259455,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367489423953887231,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367491622977142783,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367496021023653887,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367504817116676095,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367522409302720511,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367557593674809343,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367627962418987007,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367768699907342335,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368050174884052991,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368613124837474303,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316927,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316928,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9370864924651159552,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371427874604580864,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371709349581291520,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371850087069646848,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371920455813824512,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371955640185913344,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371973232371957760,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371982028464979968,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371986426511491072,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371988625534746624,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371989725046374400,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990274802188288,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990549680095232,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990687119048704,64,FLEN)
NAN_BOXED(6888873033019137887,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990755838525440,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
