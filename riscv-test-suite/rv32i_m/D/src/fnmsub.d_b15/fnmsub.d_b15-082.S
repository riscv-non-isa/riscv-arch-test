
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_62208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cff80000000000; valaddr_reg:x3; val_offset:186624*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186624*0 + 3*0*FLEN/8, x4, x1, x2)

inst_62209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffc0000000000; valaddr_reg:x3; val_offset:186627*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186627*0 + 3*1*FLEN/8, x4, x1, x2)

inst_62210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffe0000000000; valaddr_reg:x3; val_offset:186630*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186630*0 + 3*2*FLEN/8, x4, x1, x2)

inst_62211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfff0000000000; valaddr_reg:x3; val_offset:186633*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186633*0 + 3*3*FLEN/8, x4, x1, x2)

inst_62212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfff8000000000; valaddr_reg:x3; val_offset:186636*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186636*0 + 3*4*FLEN/8, x4, x1, x2)

inst_62213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffc000000000; valaddr_reg:x3; val_offset:186639*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186639*0 + 3*5*FLEN/8, x4, x1, x2)

inst_62214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffe000000000; valaddr_reg:x3; val_offset:186642*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186642*0 + 3*6*FLEN/8, x4, x1, x2)

inst_62215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffff000000000; valaddr_reg:x3; val_offset:186645*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186645*0 + 3*7*FLEN/8, x4, x1, x2)

inst_62216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffff800000000; valaddr_reg:x3; val_offset:186648*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186648*0 + 3*8*FLEN/8, x4, x1, x2)

inst_62217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffc00000000; valaddr_reg:x3; val_offset:186651*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186651*0 + 3*9*FLEN/8, x4, x1, x2)

inst_62218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffe00000000; valaddr_reg:x3; val_offset:186654*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186654*0 + 3*10*FLEN/8, x4, x1, x2)

inst_62219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffff00000000; valaddr_reg:x3; val_offset:186657*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186657*0 + 3*11*FLEN/8, x4, x1, x2)

inst_62220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffff80000000; valaddr_reg:x3; val_offset:186660*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186660*0 + 3*12*FLEN/8, x4, x1, x2)

inst_62221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffc0000000; valaddr_reg:x3; val_offset:186663*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186663*0 + 3*13*FLEN/8, x4, x1, x2)

inst_62222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffe0000000; valaddr_reg:x3; val_offset:186666*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186666*0 + 3*14*FLEN/8, x4, x1, x2)

inst_62223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffff0000000; valaddr_reg:x3; val_offset:186669*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186669*0 + 3*15*FLEN/8, x4, x1, x2)

inst_62224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffff8000000; valaddr_reg:x3; val_offset:186672*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186672*0 + 3*16*FLEN/8, x4, x1, x2)

inst_62225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffc000000; valaddr_reg:x3; val_offset:186675*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186675*0 + 3*17*FLEN/8, x4, x1, x2)

inst_62226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffe000000; valaddr_reg:x3; val_offset:186678*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186678*0 + 3*18*FLEN/8, x4, x1, x2)

inst_62227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffff000000; valaddr_reg:x3; val_offset:186681*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186681*0 + 3*19*FLEN/8, x4, x1, x2)

inst_62228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffff800000; valaddr_reg:x3; val_offset:186684*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186684*0 + 3*20*FLEN/8, x4, x1, x2)

inst_62229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffc00000; valaddr_reg:x3; val_offset:186687*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186687*0 + 3*21*FLEN/8, x4, x1, x2)

inst_62230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffe00000; valaddr_reg:x3; val_offset:186690*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186690*0 + 3*22*FLEN/8, x4, x1, x2)

inst_62231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffff00000; valaddr_reg:x3; val_offset:186693*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186693*0 + 3*23*FLEN/8, x4, x1, x2)

inst_62232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffff80000; valaddr_reg:x3; val_offset:186696*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186696*0 + 3*24*FLEN/8, x4, x1, x2)

inst_62233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffc0000; valaddr_reg:x3; val_offset:186699*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186699*0 + 3*25*FLEN/8, x4, x1, x2)

inst_62234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffe0000; valaddr_reg:x3; val_offset:186702*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186702*0 + 3*26*FLEN/8, x4, x1, x2)

inst_62235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffff0000; valaddr_reg:x3; val_offset:186705*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186705*0 + 3*27*FLEN/8, x4, x1, x2)

inst_62236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffff8000; valaddr_reg:x3; val_offset:186708*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186708*0 + 3*28*FLEN/8, x4, x1, x2)

inst_62237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffffc000; valaddr_reg:x3; val_offset:186711*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186711*0 + 3*29*FLEN/8, x4, x1, x2)

inst_62238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffffe000; valaddr_reg:x3; val_offset:186714*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186714*0 + 3*30*FLEN/8, x4, x1, x2)

inst_62239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffff000; valaddr_reg:x3; val_offset:186717*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186717*0 + 3*31*FLEN/8, x4, x1, x2)

inst_62240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffff800; valaddr_reg:x3; val_offset:186720*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186720*0 + 3*32*FLEN/8, x4, x1, x2)

inst_62241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffffc00; valaddr_reg:x3; val_offset:186723*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186723*0 + 3*33*FLEN/8, x4, x1, x2)

inst_62242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffffe00; valaddr_reg:x3; val_offset:186726*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186726*0 + 3*34*FLEN/8, x4, x1, x2)

inst_62243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffffff00; valaddr_reg:x3; val_offset:186729*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186729*0 + 3*35*FLEN/8, x4, x1, x2)

inst_62244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffffff80; valaddr_reg:x3; val_offset:186732*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186732*0 + 3*36*FLEN/8, x4, x1, x2)

inst_62245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffffffc0; valaddr_reg:x3; val_offset:186735*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186735*0 + 3*37*FLEN/8, x4, x1, x2)

inst_62246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffffffe0; valaddr_reg:x3; val_offset:186738*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186738*0 + 3*38*FLEN/8, x4, x1, x2)

inst_62247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffffff0; valaddr_reg:x3; val_offset:186741*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186741*0 + 3*39*FLEN/8, x4, x1, x2)

inst_62248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffffff8; valaddr_reg:x3; val_offset:186744*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186744*0 + 3*40*FLEN/8, x4, x1, x2)

inst_62249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffffffc; valaddr_reg:x3; val_offset:186747*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186747*0 + 3*41*FLEN/8, x4, x1, x2)

inst_62250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cffffffffffffe; valaddr_reg:x3; val_offset:186750*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186750*0 + 3*42*FLEN/8, x4, x1, x2)

inst_62251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x38c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x38cfffffffffffff; valaddr_reg:x3; val_offset:186753*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186753*0 + 3*43*FLEN/8, x4, x1, x2)

inst_62252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:186756*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186756*0 + 3*44*FLEN/8, x4, x1, x2)

inst_62253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:186759*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186759*0 + 3*45*FLEN/8, x4, x1, x2)

inst_62254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:186762*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186762*0 + 3*46*FLEN/8, x4, x1, x2)

inst_62255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:186765*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186765*0 + 3*47*FLEN/8, x4, x1, x2)

inst_62256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:186768*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186768*0 + 3*48*FLEN/8, x4, x1, x2)

inst_62257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:186771*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186771*0 + 3*49*FLEN/8, x4, x1, x2)

inst_62258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:186774*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186774*0 + 3*50*FLEN/8, x4, x1, x2)

inst_62259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:186777*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186777*0 + 3*51*FLEN/8, x4, x1, x2)

inst_62260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:186780*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186780*0 + 3*52*FLEN/8, x4, x1, x2)

inst_62261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:186783*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186783*0 + 3*53*FLEN/8, x4, x1, x2)

inst_62262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:186786*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186786*0 + 3*54*FLEN/8, x4, x1, x2)

inst_62263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:186789*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186789*0 + 3*55*FLEN/8, x4, x1, x2)

inst_62264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:186792*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186792*0 + 3*56*FLEN/8, x4, x1, x2)

inst_62265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:186795*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186795*0 + 3*57*FLEN/8, x4, x1, x2)

inst_62266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:186798*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186798*0 + 3*58*FLEN/8, x4, x1, x2)

inst_62267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:186801*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186801*0 + 3*59*FLEN/8, x4, x1, x2)

inst_62268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:186804*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186804*0 + 3*60*FLEN/8, x4, x1, x2)

inst_62269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:186807*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186807*0 + 3*61*FLEN/8, x4, x1, x2)

inst_62270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:186810*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186810*0 + 3*62*FLEN/8, x4, x1, x2)

inst_62271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:186813*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186813*0 + 3*63*FLEN/8, x4, x1, x2)

inst_62272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:186816*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186816*0 + 3*64*FLEN/8, x4, x1, x2)

inst_62273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33921d149b172 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xaa27004a4f865 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33921d149b172; op2val:0x203aa27004a4f865;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:186819*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186819*0 + 3*65*FLEN/8, x4, x1, x2)

inst_62274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:186822*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186822*0 + 3*66*FLEN/8, x4, x1, x2)

inst_62275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:186825*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186825*0 + 3*67*FLEN/8, x4, x1, x2)

inst_62276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:186828*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186828*0 + 3*68*FLEN/8, x4, x1, x2)

inst_62277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:186831*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186831*0 + 3*69*FLEN/8, x4, x1, x2)

inst_62278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:186834*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186834*0 + 3*70*FLEN/8, x4, x1, x2)

inst_62279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:186837*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186837*0 + 3*71*FLEN/8, x4, x1, x2)

inst_62280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:186840*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186840*0 + 3*72*FLEN/8, x4, x1, x2)

inst_62281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:186843*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186843*0 + 3*73*FLEN/8, x4, x1, x2)

inst_62282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:186846*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186846*0 + 3*74*FLEN/8, x4, x1, x2)

inst_62283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:186849*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186849*0 + 3*75*FLEN/8, x4, x1, x2)

inst_62284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:186852*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186852*0 + 3*76*FLEN/8, x4, x1, x2)

inst_62285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:186855*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186855*0 + 3*77*FLEN/8, x4, x1, x2)

inst_62286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:186858*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186858*0 + 3*78*FLEN/8, x4, x1, x2)

inst_62287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:186861*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186861*0 + 3*79*FLEN/8, x4, x1, x2)

inst_62288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:186864*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186864*0 + 3*80*FLEN/8, x4, x1, x2)

inst_62289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:186867*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186867*0 + 3*81*FLEN/8, x4, x1, x2)

inst_62290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:186870*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186870*0 + 3*82*FLEN/8, x4, x1, x2)

inst_62291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:186873*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186873*0 + 3*83*FLEN/8, x4, x1, x2)

inst_62292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:186876*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186876*0 + 3*84*FLEN/8, x4, x1, x2)

inst_62293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:186879*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186879*0 + 3*85*FLEN/8, x4, x1, x2)

inst_62294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:186882*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186882*0 + 3*86*FLEN/8, x4, x1, x2)

inst_62295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:186885*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186885*0 + 3*87*FLEN/8, x4, x1, x2)

inst_62296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000000000000; valaddr_reg:x3; val_offset:186888*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186888*0 + 3*88*FLEN/8, x4, x1, x2)

inst_62297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000000000001; valaddr_reg:x3; val_offset:186891*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186891*0 + 3*89*FLEN/8, x4, x1, x2)

inst_62298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000000000003; valaddr_reg:x3; val_offset:186894*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186894*0 + 3*90*FLEN/8, x4, x1, x2)

inst_62299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000000000007; valaddr_reg:x3; val_offset:186897*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186897*0 + 3*91*FLEN/8, x4, x1, x2)

inst_62300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000000000000f; valaddr_reg:x3; val_offset:186900*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186900*0 + 3*92*FLEN/8, x4, x1, x2)

inst_62301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000000000001f; valaddr_reg:x3; val_offset:186903*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186903*0 + 3*93*FLEN/8, x4, x1, x2)

inst_62302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000000000003f; valaddr_reg:x3; val_offset:186906*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186906*0 + 3*94*FLEN/8, x4, x1, x2)

inst_62303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000000000007f; valaddr_reg:x3; val_offset:186909*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186909*0 + 3*95*FLEN/8, x4, x1, x2)

inst_62304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500000000000ff; valaddr_reg:x3; val_offset:186912*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186912*0 + 3*96*FLEN/8, x4, x1, x2)

inst_62305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500000000001ff; valaddr_reg:x3; val_offset:186915*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186915*0 + 3*97*FLEN/8, x4, x1, x2)

inst_62306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500000000003ff; valaddr_reg:x3; val_offset:186918*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186918*0 + 3*98*FLEN/8, x4, x1, x2)

inst_62307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500000000007ff; valaddr_reg:x3; val_offset:186921*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186921*0 + 3*99*FLEN/8, x4, x1, x2)

inst_62308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000000000fff; valaddr_reg:x3; val_offset:186924*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186924*0 + 3*100*FLEN/8, x4, x1, x2)

inst_62309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000000001fff; valaddr_reg:x3; val_offset:186927*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186927*0 + 3*101*FLEN/8, x4, x1, x2)

inst_62310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000000003fff; valaddr_reg:x3; val_offset:186930*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186930*0 + 3*102*FLEN/8, x4, x1, x2)

inst_62311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000000007fff; valaddr_reg:x3; val_offset:186933*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186933*0 + 3*103*FLEN/8, x4, x1, x2)

inst_62312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000000000ffff; valaddr_reg:x3; val_offset:186936*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186936*0 + 3*104*FLEN/8, x4, x1, x2)

inst_62313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000000001ffff; valaddr_reg:x3; val_offset:186939*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186939*0 + 3*105*FLEN/8, x4, x1, x2)

inst_62314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000000003ffff; valaddr_reg:x3; val_offset:186942*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186942*0 + 3*106*FLEN/8, x4, x1, x2)

inst_62315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000000007ffff; valaddr_reg:x3; val_offset:186945*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186945*0 + 3*107*FLEN/8, x4, x1, x2)

inst_62316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500000000fffff; valaddr_reg:x3; val_offset:186948*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186948*0 + 3*108*FLEN/8, x4, x1, x2)

inst_62317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500000001fffff; valaddr_reg:x3; val_offset:186951*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186951*0 + 3*109*FLEN/8, x4, x1, x2)

inst_62318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500000003fffff; valaddr_reg:x3; val_offset:186954*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186954*0 + 3*110*FLEN/8, x4, x1, x2)

inst_62319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500000007fffff; valaddr_reg:x3; val_offset:186957*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186957*0 + 3*111*FLEN/8, x4, x1, x2)

inst_62320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000000ffffff; valaddr_reg:x3; val_offset:186960*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186960*0 + 3*112*FLEN/8, x4, x1, x2)

inst_62321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000001ffffff; valaddr_reg:x3; val_offset:186963*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186963*0 + 3*113*FLEN/8, x4, x1, x2)

inst_62322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000003ffffff; valaddr_reg:x3; val_offset:186966*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186966*0 + 3*114*FLEN/8, x4, x1, x2)

inst_62323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000007ffffff; valaddr_reg:x3; val_offset:186969*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186969*0 + 3*115*FLEN/8, x4, x1, x2)

inst_62324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000000fffffff; valaddr_reg:x3; val_offset:186972*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186972*0 + 3*116*FLEN/8, x4, x1, x2)

inst_62325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000001fffffff; valaddr_reg:x3; val_offset:186975*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186975*0 + 3*117*FLEN/8, x4, x1, x2)

inst_62326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000003fffffff; valaddr_reg:x3; val_offset:186978*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186978*0 + 3*118*FLEN/8, x4, x1, x2)

inst_62327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000007fffffff; valaddr_reg:x3; val_offset:186981*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186981*0 + 3*119*FLEN/8, x4, x1, x2)

inst_62328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500000ffffffff; valaddr_reg:x3; val_offset:186984*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186984*0 + 3*120*FLEN/8, x4, x1, x2)

inst_62329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500001ffffffff; valaddr_reg:x3; val_offset:186987*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186987*0 + 3*121*FLEN/8, x4, x1, x2)

inst_62330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500003ffffffff; valaddr_reg:x3; val_offset:186990*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186990*0 + 3*122*FLEN/8, x4, x1, x2)

inst_62331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500007ffffffff; valaddr_reg:x3; val_offset:186993*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186993*0 + 3*123*FLEN/8, x4, x1, x2)

inst_62332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350000fffffffff; valaddr_reg:x3; val_offset:186996*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186996*0 + 3*124*FLEN/8, x4, x1, x2)

inst_62333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350001fffffffff; valaddr_reg:x3; val_offset:186999*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186999*0 + 3*125*FLEN/8, x4, x1, x2)

inst_62334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350003fffffffff; valaddr_reg:x3; val_offset:187002*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187002*0 + 3*126*FLEN/8, x4, x1, x2)

inst_62335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350007fffffffff; valaddr_reg:x3; val_offset:187005*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187005*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_62336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835000ffffffffff; valaddr_reg:x3; val_offset:187008*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187008*0 + 3*128*FLEN/8, x4, x1, x2)

inst_62337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835001ffffffffff; valaddr_reg:x3; val_offset:187011*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187011*0 + 3*129*FLEN/8, x4, x1, x2)

inst_62338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835003ffffffffff; valaddr_reg:x3; val_offset:187014*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187014*0 + 3*130*FLEN/8, x4, x1, x2)

inst_62339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835007ffffffffff; valaddr_reg:x3; val_offset:187017*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187017*0 + 3*131*FLEN/8, x4, x1, x2)

inst_62340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83500fffffffffff; valaddr_reg:x3; val_offset:187020*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187020*0 + 3*132*FLEN/8, x4, x1, x2)

inst_62341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83501fffffffffff; valaddr_reg:x3; val_offset:187023*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187023*0 + 3*133*FLEN/8, x4, x1, x2)

inst_62342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83503fffffffffff; valaddr_reg:x3; val_offset:187026*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187026*0 + 3*134*FLEN/8, x4, x1, x2)

inst_62343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x83507fffffffffff; valaddr_reg:x3; val_offset:187029*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187029*0 + 3*135*FLEN/8, x4, x1, x2)

inst_62344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8350ffffffffffff; valaddr_reg:x3; val_offset:187032*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187032*0 + 3*136*FLEN/8, x4, x1, x2)

inst_62345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8351ffffffffffff; valaddr_reg:x3; val_offset:187035*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187035*0 + 3*137*FLEN/8, x4, x1, x2)

inst_62346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8353ffffffffffff; valaddr_reg:x3; val_offset:187038*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187038*0 + 3*138*FLEN/8, x4, x1, x2)

inst_62347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8357ffffffffffff; valaddr_reg:x3; val_offset:187041*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187041*0 + 3*139*FLEN/8, x4, x1, x2)

inst_62348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x8358000000000000; valaddr_reg:x3; val_offset:187044*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187044*0 + 3*140*FLEN/8, x4, x1, x2)

inst_62349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835c000000000000; valaddr_reg:x3; val_offset:187047*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187047*0 + 3*141*FLEN/8, x4, x1, x2)

inst_62350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835e000000000000; valaddr_reg:x3; val_offset:187050*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187050*0 + 3*142*FLEN/8, x4, x1, x2)

inst_62351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835f000000000000; valaddr_reg:x3; val_offset:187053*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187053*0 + 3*143*FLEN/8, x4, x1, x2)

inst_62352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835f800000000000; valaddr_reg:x3; val_offset:187056*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187056*0 + 3*144*FLEN/8, x4, x1, x2)

inst_62353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fc00000000000; valaddr_reg:x3; val_offset:187059*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187059*0 + 3*145*FLEN/8, x4, x1, x2)

inst_62354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fe00000000000; valaddr_reg:x3; val_offset:187062*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187062*0 + 3*146*FLEN/8, x4, x1, x2)

inst_62355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ff00000000000; valaddr_reg:x3; val_offset:187065*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187065*0 + 3*147*FLEN/8, x4, x1, x2)

inst_62356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ff80000000000; valaddr_reg:x3; val_offset:187068*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187068*0 + 3*148*FLEN/8, x4, x1, x2)

inst_62357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffc0000000000; valaddr_reg:x3; val_offset:187071*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187071*0 + 3*149*FLEN/8, x4, x1, x2)

inst_62358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffe0000000000; valaddr_reg:x3; val_offset:187074*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187074*0 + 3*150*FLEN/8, x4, x1, x2)

inst_62359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fff0000000000; valaddr_reg:x3; val_offset:187077*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187077*0 + 3*151*FLEN/8, x4, x1, x2)

inst_62360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fff8000000000; valaddr_reg:x3; val_offset:187080*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187080*0 + 3*152*FLEN/8, x4, x1, x2)

inst_62361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffc000000000; valaddr_reg:x3; val_offset:187083*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187083*0 + 3*153*FLEN/8, x4, x1, x2)

inst_62362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffe000000000; valaddr_reg:x3; val_offset:187086*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187086*0 + 3*154*FLEN/8, x4, x1, x2)

inst_62363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffff000000000; valaddr_reg:x3; val_offset:187089*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187089*0 + 3*155*FLEN/8, x4, x1, x2)

inst_62364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffff800000000; valaddr_reg:x3; val_offset:187092*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187092*0 + 3*156*FLEN/8, x4, x1, x2)

inst_62365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffc00000000; valaddr_reg:x3; val_offset:187095*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187095*0 + 3*157*FLEN/8, x4, x1, x2)

inst_62366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffe00000000; valaddr_reg:x3; val_offset:187098*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187098*0 + 3*158*FLEN/8, x4, x1, x2)

inst_62367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffff00000000; valaddr_reg:x3; val_offset:187101*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187101*0 + 3*159*FLEN/8, x4, x1, x2)

inst_62368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffff80000000; valaddr_reg:x3; val_offset:187104*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187104*0 + 3*160*FLEN/8, x4, x1, x2)

inst_62369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffc0000000; valaddr_reg:x3; val_offset:187107*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187107*0 + 3*161*FLEN/8, x4, x1, x2)

inst_62370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffe0000000; valaddr_reg:x3; val_offset:187110*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187110*0 + 3*162*FLEN/8, x4, x1, x2)

inst_62371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffff0000000; valaddr_reg:x3; val_offset:187113*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187113*0 + 3*163*FLEN/8, x4, x1, x2)

inst_62372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffff8000000; valaddr_reg:x3; val_offset:187116*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187116*0 + 3*164*FLEN/8, x4, x1, x2)

inst_62373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffc000000; valaddr_reg:x3; val_offset:187119*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187119*0 + 3*165*FLEN/8, x4, x1, x2)

inst_62374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffe000000; valaddr_reg:x3; val_offset:187122*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187122*0 + 3*166*FLEN/8, x4, x1, x2)

inst_62375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffff000000; valaddr_reg:x3; val_offset:187125*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187125*0 + 3*167*FLEN/8, x4, x1, x2)

inst_62376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffff800000; valaddr_reg:x3; val_offset:187128*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187128*0 + 3*168*FLEN/8, x4, x1, x2)

inst_62377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffc00000; valaddr_reg:x3; val_offset:187131*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187131*0 + 3*169*FLEN/8, x4, x1, x2)

inst_62378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffe00000; valaddr_reg:x3; val_offset:187134*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187134*0 + 3*170*FLEN/8, x4, x1, x2)

inst_62379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffff00000; valaddr_reg:x3; val_offset:187137*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187137*0 + 3*171*FLEN/8, x4, x1, x2)

inst_62380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffff80000; valaddr_reg:x3; val_offset:187140*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187140*0 + 3*172*FLEN/8, x4, x1, x2)

inst_62381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffc0000; valaddr_reg:x3; val_offset:187143*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187143*0 + 3*173*FLEN/8, x4, x1, x2)

inst_62382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffe0000; valaddr_reg:x3; val_offset:187146*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187146*0 + 3*174*FLEN/8, x4, x1, x2)

inst_62383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffff0000; valaddr_reg:x3; val_offset:187149*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187149*0 + 3*175*FLEN/8, x4, x1, x2)

inst_62384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffff8000; valaddr_reg:x3; val_offset:187152*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187152*0 + 3*176*FLEN/8, x4, x1, x2)

inst_62385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffffc000; valaddr_reg:x3; val_offset:187155*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187155*0 + 3*177*FLEN/8, x4, x1, x2)

inst_62386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffffe000; valaddr_reg:x3; val_offset:187158*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187158*0 + 3*178*FLEN/8, x4, x1, x2)

inst_62387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffff000; valaddr_reg:x3; val_offset:187161*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187161*0 + 3*179*FLEN/8, x4, x1, x2)

inst_62388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffff800; valaddr_reg:x3; val_offset:187164*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187164*0 + 3*180*FLEN/8, x4, x1, x2)

inst_62389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffffc00; valaddr_reg:x3; val_offset:187167*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187167*0 + 3*181*FLEN/8, x4, x1, x2)

inst_62390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffffe00; valaddr_reg:x3; val_offset:187170*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187170*0 + 3*182*FLEN/8, x4, x1, x2)

inst_62391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffffff00; valaddr_reg:x3; val_offset:187173*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187173*0 + 3*183*FLEN/8, x4, x1, x2)

inst_62392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffffff80; valaddr_reg:x3; val_offset:187176*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187176*0 + 3*184*FLEN/8, x4, x1, x2)

inst_62393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffffffc0; valaddr_reg:x3; val_offset:187179*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187179*0 + 3*185*FLEN/8, x4, x1, x2)

inst_62394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffffffe0; valaddr_reg:x3; val_offset:187182*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187182*0 + 3*186*FLEN/8, x4, x1, x2)

inst_62395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffffff0; valaddr_reg:x3; val_offset:187185*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187185*0 + 3*187*FLEN/8, x4, x1, x2)

inst_62396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffffff8; valaddr_reg:x3; val_offset:187188*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187188*0 + 3*188*FLEN/8, x4, x1, x2)

inst_62397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffffffc; valaddr_reg:x3; val_offset:187191*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187191*0 + 3*189*FLEN/8, x4, x1, x2)

inst_62398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835ffffffffffffe; valaddr_reg:x3; val_offset:187194*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187194*0 + 3*190*FLEN/8, x4, x1, x2)

inst_62399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33e5fa8c30e93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33e5fa8c30e93; op2val:0x8000;
op3val:0x835fffffffffffff; valaddr_reg:x3; val_offset:187197*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187197*0 + 3*191*FLEN/8, x4, x1, x2)

inst_62400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000000000000; valaddr_reg:x3; val_offset:187200*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187200*0 + 3*192*FLEN/8, x4, x1, x2)

inst_62401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000000000001; valaddr_reg:x3; val_offset:187203*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187203*0 + 3*193*FLEN/8, x4, x1, x2)

inst_62402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000000000003; valaddr_reg:x3; val_offset:187206*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187206*0 + 3*194*FLEN/8, x4, x1, x2)

inst_62403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000000000007; valaddr_reg:x3; val_offset:187209*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187209*0 + 3*195*FLEN/8, x4, x1, x2)

inst_62404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000000000000f; valaddr_reg:x3; val_offset:187212*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187212*0 + 3*196*FLEN/8, x4, x1, x2)

inst_62405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000000000001f; valaddr_reg:x3; val_offset:187215*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187215*0 + 3*197*FLEN/8, x4, x1, x2)

inst_62406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000000000003f; valaddr_reg:x3; val_offset:187218*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187218*0 + 3*198*FLEN/8, x4, x1, x2)

inst_62407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000000000007f; valaddr_reg:x3; val_offset:187221*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187221*0 + 3*199*FLEN/8, x4, x1, x2)

inst_62408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700000000000ff; valaddr_reg:x3; val_offset:187224*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187224*0 + 3*200*FLEN/8, x4, x1, x2)

inst_62409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700000000001ff; valaddr_reg:x3; val_offset:187227*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187227*0 + 3*201*FLEN/8, x4, x1, x2)

inst_62410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700000000003ff; valaddr_reg:x3; val_offset:187230*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187230*0 + 3*202*FLEN/8, x4, x1, x2)

inst_62411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700000000007ff; valaddr_reg:x3; val_offset:187233*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187233*0 + 3*203*FLEN/8, x4, x1, x2)

inst_62412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000000000fff; valaddr_reg:x3; val_offset:187236*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187236*0 + 3*204*FLEN/8, x4, x1, x2)

inst_62413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000000001fff; valaddr_reg:x3; val_offset:187239*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187239*0 + 3*205*FLEN/8, x4, x1, x2)

inst_62414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000000003fff; valaddr_reg:x3; val_offset:187242*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187242*0 + 3*206*FLEN/8, x4, x1, x2)

inst_62415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000000007fff; valaddr_reg:x3; val_offset:187245*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187245*0 + 3*207*FLEN/8, x4, x1, x2)

inst_62416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000000000ffff; valaddr_reg:x3; val_offset:187248*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187248*0 + 3*208*FLEN/8, x4, x1, x2)

inst_62417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000000001ffff; valaddr_reg:x3; val_offset:187251*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187251*0 + 3*209*FLEN/8, x4, x1, x2)

inst_62418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000000003ffff; valaddr_reg:x3; val_offset:187254*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187254*0 + 3*210*FLEN/8, x4, x1, x2)

inst_62419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000000007ffff; valaddr_reg:x3; val_offset:187257*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187257*0 + 3*211*FLEN/8, x4, x1, x2)

inst_62420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700000000fffff; valaddr_reg:x3; val_offset:187260*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187260*0 + 3*212*FLEN/8, x4, x1, x2)

inst_62421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700000001fffff; valaddr_reg:x3; val_offset:187263*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187263*0 + 3*213*FLEN/8, x4, x1, x2)

inst_62422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700000003fffff; valaddr_reg:x3; val_offset:187266*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187266*0 + 3*214*FLEN/8, x4, x1, x2)

inst_62423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700000007fffff; valaddr_reg:x3; val_offset:187269*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187269*0 + 3*215*FLEN/8, x4, x1, x2)

inst_62424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000000ffffff; valaddr_reg:x3; val_offset:187272*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187272*0 + 3*216*FLEN/8, x4, x1, x2)

inst_62425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000001ffffff; valaddr_reg:x3; val_offset:187275*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187275*0 + 3*217*FLEN/8, x4, x1, x2)

inst_62426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000003ffffff; valaddr_reg:x3; val_offset:187278*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187278*0 + 3*218*FLEN/8, x4, x1, x2)

inst_62427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000007ffffff; valaddr_reg:x3; val_offset:187281*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187281*0 + 3*219*FLEN/8, x4, x1, x2)

inst_62428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000000fffffff; valaddr_reg:x3; val_offset:187284*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187284*0 + 3*220*FLEN/8, x4, x1, x2)

inst_62429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000001fffffff; valaddr_reg:x3; val_offset:187287*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187287*0 + 3*221*FLEN/8, x4, x1, x2)

inst_62430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000003fffffff; valaddr_reg:x3; val_offset:187290*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187290*0 + 3*222*FLEN/8, x4, x1, x2)

inst_62431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000007fffffff; valaddr_reg:x3; val_offset:187293*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187293*0 + 3*223*FLEN/8, x4, x1, x2)

inst_62432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700000ffffffff; valaddr_reg:x3; val_offset:187296*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187296*0 + 3*224*FLEN/8, x4, x1, x2)

inst_62433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700001ffffffff; valaddr_reg:x3; val_offset:187299*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187299*0 + 3*225*FLEN/8, x4, x1, x2)

inst_62434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700003ffffffff; valaddr_reg:x3; val_offset:187302*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187302*0 + 3*226*FLEN/8, x4, x1, x2)

inst_62435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700007ffffffff; valaddr_reg:x3; val_offset:187305*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187305*0 + 3*227*FLEN/8, x4, x1, x2)

inst_62436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70000fffffffff; valaddr_reg:x3; val_offset:187308*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187308*0 + 3*228*FLEN/8, x4, x1, x2)

inst_62437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70001fffffffff; valaddr_reg:x3; val_offset:187311*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187311*0 + 3*229*FLEN/8, x4, x1, x2)

inst_62438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70003fffffffff; valaddr_reg:x3; val_offset:187314*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187314*0 + 3*230*FLEN/8, x4, x1, x2)

inst_62439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70007fffffffff; valaddr_reg:x3; val_offset:187317*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187317*0 + 3*231*FLEN/8, x4, x1, x2)

inst_62440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7000ffffffffff; valaddr_reg:x3; val_offset:187320*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187320*0 + 3*232*FLEN/8, x4, x1, x2)

inst_62441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7001ffffffffff; valaddr_reg:x3; val_offset:187323*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187323*0 + 3*233*FLEN/8, x4, x1, x2)

inst_62442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7003ffffffffff; valaddr_reg:x3; val_offset:187326*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187326*0 + 3*234*FLEN/8, x4, x1, x2)

inst_62443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7007ffffffffff; valaddr_reg:x3; val_offset:187329*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187329*0 + 3*235*FLEN/8, x4, x1, x2)

inst_62444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d700fffffffffff; valaddr_reg:x3; val_offset:187332*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187332*0 + 3*236*FLEN/8, x4, x1, x2)

inst_62445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d701fffffffffff; valaddr_reg:x3; val_offset:187335*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187335*0 + 3*237*FLEN/8, x4, x1, x2)

inst_62446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d703fffffffffff; valaddr_reg:x3; val_offset:187338*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187338*0 + 3*238*FLEN/8, x4, x1, x2)

inst_62447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d707fffffffffff; valaddr_reg:x3; val_offset:187341*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187341*0 + 3*239*FLEN/8, x4, x1, x2)

inst_62448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d70ffffffffffff; valaddr_reg:x3; val_offset:187344*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187344*0 + 3*240*FLEN/8, x4, x1, x2)

inst_62449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d71ffffffffffff; valaddr_reg:x3; val_offset:187347*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187347*0 + 3*241*FLEN/8, x4, x1, x2)

inst_62450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d73ffffffffffff; valaddr_reg:x3; val_offset:187350*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187350*0 + 3*242*FLEN/8, x4, x1, x2)

inst_62451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d77ffffffffffff; valaddr_reg:x3; val_offset:187353*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187353*0 + 3*243*FLEN/8, x4, x1, x2)

inst_62452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d78000000000000; valaddr_reg:x3; val_offset:187356*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187356*0 + 3*244*FLEN/8, x4, x1, x2)

inst_62453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7c000000000000; valaddr_reg:x3; val_offset:187359*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187359*0 + 3*245*FLEN/8, x4, x1, x2)

inst_62454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7e000000000000; valaddr_reg:x3; val_offset:187362*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187362*0 + 3*246*FLEN/8, x4, x1, x2)

inst_62455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7f000000000000; valaddr_reg:x3; val_offset:187365*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187365*0 + 3*247*FLEN/8, x4, x1, x2)

inst_62456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7f800000000000; valaddr_reg:x3; val_offset:187368*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187368*0 + 3*248*FLEN/8, x4, x1, x2)

inst_62457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fc00000000000; valaddr_reg:x3; val_offset:187371*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187371*0 + 3*249*FLEN/8, x4, x1, x2)

inst_62458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fe00000000000; valaddr_reg:x3; val_offset:187374*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187374*0 + 3*250*FLEN/8, x4, x1, x2)

inst_62459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ff00000000000; valaddr_reg:x3; val_offset:187377*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187377*0 + 3*251*FLEN/8, x4, x1, x2)

inst_62460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ff80000000000; valaddr_reg:x3; val_offset:187380*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187380*0 + 3*252*FLEN/8, x4, x1, x2)

inst_62461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffc0000000000; valaddr_reg:x3; val_offset:187383*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187383*0 + 3*253*FLEN/8, x4, x1, x2)

inst_62462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffe0000000000; valaddr_reg:x3; val_offset:187386*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187386*0 + 3*254*FLEN/8, x4, x1, x2)

inst_62463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fff0000000000; valaddr_reg:x3; val_offset:187389*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187389*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_62464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fff8000000000; valaddr_reg:x3; val_offset:187392*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187392*0 + 3*256*FLEN/8, x4, x1, x2)

inst_62465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffc000000000; valaddr_reg:x3; val_offset:187395*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187395*0 + 3*257*FLEN/8, x4, x1, x2)

inst_62466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffe000000000; valaddr_reg:x3; val_offset:187398*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187398*0 + 3*258*FLEN/8, x4, x1, x2)

inst_62467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffff000000000; valaddr_reg:x3; val_offset:187401*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187401*0 + 3*259*FLEN/8, x4, x1, x2)

inst_62468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffff800000000; valaddr_reg:x3; val_offset:187404*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187404*0 + 3*260*FLEN/8, x4, x1, x2)

inst_62469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffc00000000; valaddr_reg:x3; val_offset:187407*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187407*0 + 3*261*FLEN/8, x4, x1, x2)

inst_62470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffe00000000; valaddr_reg:x3; val_offset:187410*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187410*0 + 3*262*FLEN/8, x4, x1, x2)

inst_62471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffff00000000; valaddr_reg:x3; val_offset:187413*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187413*0 + 3*263*FLEN/8, x4, x1, x2)

inst_62472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffff80000000; valaddr_reg:x3; val_offset:187416*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187416*0 + 3*264*FLEN/8, x4, x1, x2)

inst_62473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffc0000000; valaddr_reg:x3; val_offset:187419*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187419*0 + 3*265*FLEN/8, x4, x1, x2)

inst_62474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffe0000000; valaddr_reg:x3; val_offset:187422*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187422*0 + 3*266*FLEN/8, x4, x1, x2)

inst_62475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffff0000000; valaddr_reg:x3; val_offset:187425*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187425*0 + 3*267*FLEN/8, x4, x1, x2)

inst_62476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffff8000000; valaddr_reg:x3; val_offset:187428*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187428*0 + 3*268*FLEN/8, x4, x1, x2)

inst_62477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffc000000; valaddr_reg:x3; val_offset:187431*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187431*0 + 3*269*FLEN/8, x4, x1, x2)

inst_62478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffe000000; valaddr_reg:x3; val_offset:187434*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187434*0 + 3*270*FLEN/8, x4, x1, x2)

inst_62479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffff000000; valaddr_reg:x3; val_offset:187437*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187437*0 + 3*271*FLEN/8, x4, x1, x2)

inst_62480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffff800000; valaddr_reg:x3; val_offset:187440*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187440*0 + 3*272*FLEN/8, x4, x1, x2)

inst_62481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffc00000; valaddr_reg:x3; val_offset:187443*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187443*0 + 3*273*FLEN/8, x4, x1, x2)

inst_62482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffe00000; valaddr_reg:x3; val_offset:187446*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187446*0 + 3*274*FLEN/8, x4, x1, x2)

inst_62483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffff00000; valaddr_reg:x3; val_offset:187449*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187449*0 + 3*275*FLEN/8, x4, x1, x2)

inst_62484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffff80000; valaddr_reg:x3; val_offset:187452*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187452*0 + 3*276*FLEN/8, x4, x1, x2)

inst_62485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffc0000; valaddr_reg:x3; val_offset:187455*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187455*0 + 3*277*FLEN/8, x4, x1, x2)

inst_62486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffe0000; valaddr_reg:x3; val_offset:187458*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187458*0 + 3*278*FLEN/8, x4, x1, x2)

inst_62487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffff0000; valaddr_reg:x3; val_offset:187461*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187461*0 + 3*279*FLEN/8, x4, x1, x2)

inst_62488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffff8000; valaddr_reg:x3; val_offset:187464*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187464*0 + 3*280*FLEN/8, x4, x1, x2)

inst_62489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffffc000; valaddr_reg:x3; val_offset:187467*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187467*0 + 3*281*FLEN/8, x4, x1, x2)

inst_62490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffffe000; valaddr_reg:x3; val_offset:187470*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187470*0 + 3*282*FLEN/8, x4, x1, x2)

inst_62491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffff000; valaddr_reg:x3; val_offset:187473*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187473*0 + 3*283*FLEN/8, x4, x1, x2)

inst_62492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffff800; valaddr_reg:x3; val_offset:187476*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187476*0 + 3*284*FLEN/8, x4, x1, x2)

inst_62493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffffc00; valaddr_reg:x3; val_offset:187479*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187479*0 + 3*285*FLEN/8, x4, x1, x2)

inst_62494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffffe00; valaddr_reg:x3; val_offset:187482*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187482*0 + 3*286*FLEN/8, x4, x1, x2)

inst_62495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffffff00; valaddr_reg:x3; val_offset:187485*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187485*0 + 3*287*FLEN/8, x4, x1, x2)

inst_62496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffffff80; valaddr_reg:x3; val_offset:187488*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187488*0 + 3*288*FLEN/8, x4, x1, x2)

inst_62497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffffffc0; valaddr_reg:x3; val_offset:187491*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187491*0 + 3*289*FLEN/8, x4, x1, x2)

inst_62498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffffffe0; valaddr_reg:x3; val_offset:187494*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187494*0 + 3*290*FLEN/8, x4, x1, x2)

inst_62499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffffff0; valaddr_reg:x3; val_offset:187497*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187497*0 + 3*291*FLEN/8, x4, x1, x2)

inst_62500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffffff8; valaddr_reg:x3; val_offset:187500*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187500*0 + 3*292*FLEN/8, x4, x1, x2)

inst_62501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffffffc; valaddr_reg:x3; val_offset:187503*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187503*0 + 3*293*FLEN/8, x4, x1, x2)

inst_62502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7ffffffffffffe; valaddr_reg:x3; val_offset:187506*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187506*0 + 3*294*FLEN/8, x4, x1, x2)

inst_62503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x1d7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0x9d7fffffffffffff; valaddr_reg:x3; val_offset:187509*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187509*0 + 3*295*FLEN/8, x4, x1, x2)

inst_62504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:187512*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187512*0 + 3*296*FLEN/8, x4, x1, x2)

inst_62505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:187515*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187515*0 + 3*297*FLEN/8, x4, x1, x2)

inst_62506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:187518*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187518*0 + 3*298*FLEN/8, x4, x1, x2)

inst_62507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:187521*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187521*0 + 3*299*FLEN/8, x4, x1, x2)

inst_62508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:187524*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187524*0 + 3*300*FLEN/8, x4, x1, x2)

inst_62509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:187527*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187527*0 + 3*301*FLEN/8, x4, x1, x2)

inst_62510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:187530*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187530*0 + 3*302*FLEN/8, x4, x1, x2)

inst_62511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:187533*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187533*0 + 3*303*FLEN/8, x4, x1, x2)

inst_62512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:187536*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187536*0 + 3*304*FLEN/8, x4, x1, x2)

inst_62513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:187539*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187539*0 + 3*305*FLEN/8, x4, x1, x2)

inst_62514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:187542*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187542*0 + 3*306*FLEN/8, x4, x1, x2)

inst_62515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:187545*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187545*0 + 3*307*FLEN/8, x4, x1, x2)

inst_62516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:187548*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187548*0 + 3*308*FLEN/8, x4, x1, x2)

inst_62517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:187551*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187551*0 + 3*309*FLEN/8, x4, x1, x2)

inst_62518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:187554*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187554*0 + 3*310*FLEN/8, x4, x1, x2)

inst_62519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:187557*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187557*0 + 3*311*FLEN/8, x4, x1, x2)

inst_62520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:187560*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187560*0 + 3*312*FLEN/8, x4, x1, x2)

inst_62521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:187563*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187563*0 + 3*313*FLEN/8, x4, x1, x2)

inst_62522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:187566*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187566*0 + 3*314*FLEN/8, x4, x1, x2)

inst_62523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:187569*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187569*0 + 3*315*FLEN/8, x4, x1, x2)

inst_62524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:187572*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187572*0 + 3*316*FLEN/8, x4, x1, x2)

inst_62525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x35787ca99e0af and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xa7893f4fb7d4a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa35787ca99e0af; op2val:0x9fca7893f4fb7d4a;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:187575*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187575*0 + 3*317*FLEN/8, x4, x1, x2)

inst_62526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:187578*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187578*0 + 3*318*FLEN/8, x4, x1, x2)

inst_62527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:187581*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187581*0 + 3*319*FLEN/8, x4, x1, x2)

inst_62528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:187584*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187584*0 + 3*320*FLEN/8, x4, x1, x2)

inst_62529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:187587*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187587*0 + 3*321*FLEN/8, x4, x1, x2)

inst_62530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:187590*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187590*0 + 3*322*FLEN/8, x4, x1, x2)

inst_62531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:187593*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187593*0 + 3*323*FLEN/8, x4, x1, x2)

inst_62532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:187596*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187596*0 + 3*324*FLEN/8, x4, x1, x2)

inst_62533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:187599*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187599*0 + 3*325*FLEN/8, x4, x1, x2)

inst_62534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:187602*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187602*0 + 3*326*FLEN/8, x4, x1, x2)

inst_62535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:187605*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187605*0 + 3*327*FLEN/8, x4, x1, x2)

inst_62536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:187608*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187608*0 + 3*328*FLEN/8, x4, x1, x2)

inst_62537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:187611*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187611*0 + 3*329*FLEN/8, x4, x1, x2)

inst_62538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:187614*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187614*0 + 3*330*FLEN/8, x4, x1, x2)

inst_62539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:187617*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187617*0 + 3*331*FLEN/8, x4, x1, x2)

inst_62540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:187620*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187620*0 + 3*332*FLEN/8, x4, x1, x2)

inst_62541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:187623*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187623*0 + 3*333*FLEN/8, x4, x1, x2)

inst_62542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:187626*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187626*0 + 3*334*FLEN/8, x4, x1, x2)

inst_62543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:187629*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187629*0 + 3*335*FLEN/8, x4, x1, x2)

inst_62544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:187632*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187632*0 + 3*336*FLEN/8, x4, x1, x2)

inst_62545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:187635*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187635*0 + 3*337*FLEN/8, x4, x1, x2)

inst_62546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:187638*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187638*0 + 3*338*FLEN/8, x4, x1, x2)

inst_62547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:187641*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187641*0 + 3*339*FLEN/8, x4, x1, x2)

inst_62548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000000000000; valaddr_reg:x3; val_offset:187644*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187644*0 + 3*340*FLEN/8, x4, x1, x2)

inst_62549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000000000001; valaddr_reg:x3; val_offset:187647*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187647*0 + 3*341*FLEN/8, x4, x1, x2)

inst_62550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000000000003; valaddr_reg:x3; val_offset:187650*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187650*0 + 3*342*FLEN/8, x4, x1, x2)

inst_62551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000000000007; valaddr_reg:x3; val_offset:187653*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187653*0 + 3*343*FLEN/8, x4, x1, x2)

inst_62552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000000000000f; valaddr_reg:x3; val_offset:187656*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187656*0 + 3*344*FLEN/8, x4, x1, x2)

inst_62553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000000000001f; valaddr_reg:x3; val_offset:187659*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187659*0 + 3*345*FLEN/8, x4, x1, x2)

inst_62554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000000000003f; valaddr_reg:x3; val_offset:187662*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187662*0 + 3*346*FLEN/8, x4, x1, x2)

inst_62555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000000000007f; valaddr_reg:x3; val_offset:187665*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187665*0 + 3*347*FLEN/8, x4, x1, x2)

inst_62556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300000000000ff; valaddr_reg:x3; val_offset:187668*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187668*0 + 3*348*FLEN/8, x4, x1, x2)

inst_62557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300000000001ff; valaddr_reg:x3; val_offset:187671*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187671*0 + 3*349*FLEN/8, x4, x1, x2)

inst_62558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300000000003ff; valaddr_reg:x3; val_offset:187674*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187674*0 + 3*350*FLEN/8, x4, x1, x2)

inst_62559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300000000007ff; valaddr_reg:x3; val_offset:187677*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187677*0 + 3*351*FLEN/8, x4, x1, x2)

inst_62560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000000000fff; valaddr_reg:x3; val_offset:187680*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187680*0 + 3*352*FLEN/8, x4, x1, x2)

inst_62561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000000001fff; valaddr_reg:x3; val_offset:187683*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187683*0 + 3*353*FLEN/8, x4, x1, x2)

inst_62562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000000003fff; valaddr_reg:x3; val_offset:187686*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187686*0 + 3*354*FLEN/8, x4, x1, x2)

inst_62563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000000007fff; valaddr_reg:x3; val_offset:187689*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187689*0 + 3*355*FLEN/8, x4, x1, x2)

inst_62564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000000000ffff; valaddr_reg:x3; val_offset:187692*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187692*0 + 3*356*FLEN/8, x4, x1, x2)

inst_62565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000000001ffff; valaddr_reg:x3; val_offset:187695*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187695*0 + 3*357*FLEN/8, x4, x1, x2)

inst_62566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000000003ffff; valaddr_reg:x3; val_offset:187698*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187698*0 + 3*358*FLEN/8, x4, x1, x2)

inst_62567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000000007ffff; valaddr_reg:x3; val_offset:187701*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187701*0 + 3*359*FLEN/8, x4, x1, x2)

inst_62568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300000000fffff; valaddr_reg:x3; val_offset:187704*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187704*0 + 3*360*FLEN/8, x4, x1, x2)

inst_62569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300000001fffff; valaddr_reg:x3; val_offset:187707*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187707*0 + 3*361*FLEN/8, x4, x1, x2)

inst_62570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300000003fffff; valaddr_reg:x3; val_offset:187710*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187710*0 + 3*362*FLEN/8, x4, x1, x2)

inst_62571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300000007fffff; valaddr_reg:x3; val_offset:187713*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187713*0 + 3*363*FLEN/8, x4, x1, x2)

inst_62572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000000ffffff; valaddr_reg:x3; val_offset:187716*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187716*0 + 3*364*FLEN/8, x4, x1, x2)

inst_62573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000001ffffff; valaddr_reg:x3; val_offset:187719*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187719*0 + 3*365*FLEN/8, x4, x1, x2)

inst_62574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000003ffffff; valaddr_reg:x3; val_offset:187722*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187722*0 + 3*366*FLEN/8, x4, x1, x2)

inst_62575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000007ffffff; valaddr_reg:x3; val_offset:187725*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187725*0 + 3*367*FLEN/8, x4, x1, x2)

inst_62576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000000fffffff; valaddr_reg:x3; val_offset:187728*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187728*0 + 3*368*FLEN/8, x4, x1, x2)

inst_62577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000001fffffff; valaddr_reg:x3; val_offset:187731*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187731*0 + 3*369*FLEN/8, x4, x1, x2)

inst_62578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000003fffffff; valaddr_reg:x3; val_offset:187734*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187734*0 + 3*370*FLEN/8, x4, x1, x2)

inst_62579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000007fffffff; valaddr_reg:x3; val_offset:187737*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187737*0 + 3*371*FLEN/8, x4, x1, x2)

inst_62580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300000ffffffff; valaddr_reg:x3; val_offset:187740*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187740*0 + 3*372*FLEN/8, x4, x1, x2)

inst_62581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300001ffffffff; valaddr_reg:x3; val_offset:187743*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187743*0 + 3*373*FLEN/8, x4, x1, x2)

inst_62582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300003ffffffff; valaddr_reg:x3; val_offset:187746*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187746*0 + 3*374*FLEN/8, x4, x1, x2)

inst_62583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300007ffffffff; valaddr_reg:x3; val_offset:187749*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187749*0 + 3*375*FLEN/8, x4, x1, x2)

inst_62584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30000fffffffff; valaddr_reg:x3; val_offset:187752*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187752*0 + 3*376*FLEN/8, x4, x1, x2)

inst_62585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30001fffffffff; valaddr_reg:x3; val_offset:187755*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187755*0 + 3*377*FLEN/8, x4, x1, x2)

inst_62586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30003fffffffff; valaddr_reg:x3; val_offset:187758*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187758*0 + 3*378*FLEN/8, x4, x1, x2)

inst_62587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30007fffffffff; valaddr_reg:x3; val_offset:187761*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187761*0 + 3*379*FLEN/8, x4, x1, x2)

inst_62588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3000ffffffffff; valaddr_reg:x3; val_offset:187764*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187764*0 + 3*380*FLEN/8, x4, x1, x2)

inst_62589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3001ffffffffff; valaddr_reg:x3; val_offset:187767*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187767*0 + 3*381*FLEN/8, x4, x1, x2)

inst_62590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3003ffffffffff; valaddr_reg:x3; val_offset:187770*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187770*0 + 3*382*FLEN/8, x4, x1, x2)

inst_62591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3007ffffffffff; valaddr_reg:x3; val_offset:187773*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187773*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_62592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x300fffffffffff; valaddr_reg:x3; val_offset:187776*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187776*0 + 3*384*FLEN/8, x4, x1, x2)

inst_62593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x301fffffffffff; valaddr_reg:x3; val_offset:187779*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187779*0 + 3*385*FLEN/8, x4, x1, x2)

inst_62594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x303fffffffffff; valaddr_reg:x3; val_offset:187782*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187782*0 + 3*386*FLEN/8, x4, x1, x2)

inst_62595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x307fffffffffff; valaddr_reg:x3; val_offset:187785*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187785*0 + 3*387*FLEN/8, x4, x1, x2)

inst_62596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x30ffffffffffff; valaddr_reg:x3; val_offset:187788*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187788*0 + 3*388*FLEN/8, x4, x1, x2)

inst_62597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x31ffffffffffff; valaddr_reg:x3; val_offset:187791*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187791*0 + 3*389*FLEN/8, x4, x1, x2)

inst_62598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x33ffffffffffff; valaddr_reg:x3; val_offset:187794*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187794*0 + 3*390*FLEN/8, x4, x1, x2)

inst_62599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x37ffffffffffff; valaddr_reg:x3; val_offset:187797*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187797*0 + 3*391*FLEN/8, x4, x1, x2)

inst_62600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x38000000000000; valaddr_reg:x3; val_offset:187800*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187800*0 + 3*392*FLEN/8, x4, x1, x2)

inst_62601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3c000000000000; valaddr_reg:x3; val_offset:187803*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187803*0 + 3*393*FLEN/8, x4, x1, x2)

inst_62602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3e000000000000; valaddr_reg:x3; val_offset:187806*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187806*0 + 3*394*FLEN/8, x4, x1, x2)

inst_62603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3f000000000000; valaddr_reg:x3; val_offset:187809*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187809*0 + 3*395*FLEN/8, x4, x1, x2)

inst_62604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3f800000000000; valaddr_reg:x3; val_offset:187812*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187812*0 + 3*396*FLEN/8, x4, x1, x2)

inst_62605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fc00000000000; valaddr_reg:x3; val_offset:187815*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187815*0 + 3*397*FLEN/8, x4, x1, x2)

inst_62606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fe00000000000; valaddr_reg:x3; val_offset:187818*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187818*0 + 3*398*FLEN/8, x4, x1, x2)

inst_62607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ff00000000000; valaddr_reg:x3; val_offset:187821*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187821*0 + 3*399*FLEN/8, x4, x1, x2)

inst_62608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ff80000000000; valaddr_reg:x3; val_offset:187824*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187824*0 + 3*400*FLEN/8, x4, x1, x2)

inst_62609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffc0000000000; valaddr_reg:x3; val_offset:187827*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187827*0 + 3*401*FLEN/8, x4, x1, x2)

inst_62610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffe0000000000; valaddr_reg:x3; val_offset:187830*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187830*0 + 3*402*FLEN/8, x4, x1, x2)

inst_62611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fff0000000000; valaddr_reg:x3; val_offset:187833*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187833*0 + 3*403*FLEN/8, x4, x1, x2)

inst_62612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fff8000000000; valaddr_reg:x3; val_offset:187836*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187836*0 + 3*404*FLEN/8, x4, x1, x2)

inst_62613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffc000000000; valaddr_reg:x3; val_offset:187839*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187839*0 + 3*405*FLEN/8, x4, x1, x2)

inst_62614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffe000000000; valaddr_reg:x3; val_offset:187842*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187842*0 + 3*406*FLEN/8, x4, x1, x2)

inst_62615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffff000000000; valaddr_reg:x3; val_offset:187845*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187845*0 + 3*407*FLEN/8, x4, x1, x2)

inst_62616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffff800000000; valaddr_reg:x3; val_offset:187848*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187848*0 + 3*408*FLEN/8, x4, x1, x2)

inst_62617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffc00000000; valaddr_reg:x3; val_offset:187851*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187851*0 + 3*409*FLEN/8, x4, x1, x2)

inst_62618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffe00000000; valaddr_reg:x3; val_offset:187854*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187854*0 + 3*410*FLEN/8, x4, x1, x2)

inst_62619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffff00000000; valaddr_reg:x3; val_offset:187857*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187857*0 + 3*411*FLEN/8, x4, x1, x2)

inst_62620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffff80000000; valaddr_reg:x3; val_offset:187860*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187860*0 + 3*412*FLEN/8, x4, x1, x2)

inst_62621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffc0000000; valaddr_reg:x3; val_offset:187863*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187863*0 + 3*413*FLEN/8, x4, x1, x2)

inst_62622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffe0000000; valaddr_reg:x3; val_offset:187866*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187866*0 + 3*414*FLEN/8, x4, x1, x2)

inst_62623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffff0000000; valaddr_reg:x3; val_offset:187869*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187869*0 + 3*415*FLEN/8, x4, x1, x2)

inst_62624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffff8000000; valaddr_reg:x3; val_offset:187872*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187872*0 + 3*416*FLEN/8, x4, x1, x2)

inst_62625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffc000000; valaddr_reg:x3; val_offset:187875*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187875*0 + 3*417*FLEN/8, x4, x1, x2)

inst_62626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffe000000; valaddr_reg:x3; val_offset:187878*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187878*0 + 3*418*FLEN/8, x4, x1, x2)

inst_62627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffff000000; valaddr_reg:x3; val_offset:187881*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187881*0 + 3*419*FLEN/8, x4, x1, x2)

inst_62628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffff800000; valaddr_reg:x3; val_offset:187884*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187884*0 + 3*420*FLEN/8, x4, x1, x2)

inst_62629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffc00000; valaddr_reg:x3; val_offset:187887*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187887*0 + 3*421*FLEN/8, x4, x1, x2)

inst_62630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffe00000; valaddr_reg:x3; val_offset:187890*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187890*0 + 3*422*FLEN/8, x4, x1, x2)

inst_62631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffff00000; valaddr_reg:x3; val_offset:187893*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187893*0 + 3*423*FLEN/8, x4, x1, x2)

inst_62632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffff80000; valaddr_reg:x3; val_offset:187896*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187896*0 + 3*424*FLEN/8, x4, x1, x2)

inst_62633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffc0000; valaddr_reg:x3; val_offset:187899*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187899*0 + 3*425*FLEN/8, x4, x1, x2)

inst_62634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffe0000; valaddr_reg:x3; val_offset:187902*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187902*0 + 3*426*FLEN/8, x4, x1, x2)

inst_62635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffff0000; valaddr_reg:x3; val_offset:187905*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187905*0 + 3*427*FLEN/8, x4, x1, x2)

inst_62636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffff8000; valaddr_reg:x3; val_offset:187908*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187908*0 + 3*428*FLEN/8, x4, x1, x2)

inst_62637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffffc000; valaddr_reg:x3; val_offset:187911*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187911*0 + 3*429*FLEN/8, x4, x1, x2)

inst_62638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffffe000; valaddr_reg:x3; val_offset:187914*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187914*0 + 3*430*FLEN/8, x4, x1, x2)

inst_62639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffff000; valaddr_reg:x3; val_offset:187917*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187917*0 + 3*431*FLEN/8, x4, x1, x2)

inst_62640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffff800; valaddr_reg:x3; val_offset:187920*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187920*0 + 3*432*FLEN/8, x4, x1, x2)

inst_62641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffffc00; valaddr_reg:x3; val_offset:187923*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187923*0 + 3*433*FLEN/8, x4, x1, x2)

inst_62642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffffe00; valaddr_reg:x3; val_offset:187926*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187926*0 + 3*434*FLEN/8, x4, x1, x2)

inst_62643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffffff00; valaddr_reg:x3; val_offset:187929*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187929*0 + 3*435*FLEN/8, x4, x1, x2)

inst_62644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffffff80; valaddr_reg:x3; val_offset:187932*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187932*0 + 3*436*FLEN/8, x4, x1, x2)

inst_62645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffffffc0; valaddr_reg:x3; val_offset:187935*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187935*0 + 3*437*FLEN/8, x4, x1, x2)

inst_62646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffffffe0; valaddr_reg:x3; val_offset:187938*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187938*0 + 3*438*FLEN/8, x4, x1, x2)

inst_62647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffffff0; valaddr_reg:x3; val_offset:187941*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187941*0 + 3*439*FLEN/8, x4, x1, x2)

inst_62648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffffff8; valaddr_reg:x3; val_offset:187944*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187944*0 + 3*440*FLEN/8, x4, x1, x2)

inst_62649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffffffc; valaddr_reg:x3; val_offset:187947*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187947*0 + 3*441*FLEN/8, x4, x1, x2)

inst_62650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3ffffffffffffe; valaddr_reg:x3; val_offset:187950*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187950*0 + 3*442*FLEN/8, x4, x1, x2)

inst_62651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36112440d7be7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36112440d7be7; op2val:0x0;
op3val:0x3fffffffffffff; valaddr_reg:x3; val_offset:187953*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187953*0 + 3*443*FLEN/8, x4, x1, x2)

inst_62652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:187956*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187956*0 + 3*444*FLEN/8, x4, x1, x2)

inst_62653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:187959*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187959*0 + 3*445*FLEN/8, x4, x1, x2)

inst_62654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:187962*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187962*0 + 3*446*FLEN/8, x4, x1, x2)

inst_62655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:187965*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187965*0 + 3*447*FLEN/8, x4, x1, x2)

inst_62656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:187968*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187968*0 + 3*448*FLEN/8, x4, x1, x2)

inst_62657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:187971*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187971*0 + 3*449*FLEN/8, x4, x1, x2)

inst_62658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:187974*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187974*0 + 3*450*FLEN/8, x4, x1, x2)

inst_62659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:187977*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187977*0 + 3*451*FLEN/8, x4, x1, x2)

inst_62660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:187980*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187980*0 + 3*452*FLEN/8, x4, x1, x2)

inst_62661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:187983*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187983*0 + 3*453*FLEN/8, x4, x1, x2)

inst_62662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:187986*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187986*0 + 3*454*FLEN/8, x4, x1, x2)

inst_62663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:187989*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187989*0 + 3*455*FLEN/8, x4, x1, x2)

inst_62664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:187992*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187992*0 + 3*456*FLEN/8, x4, x1, x2)

inst_62665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:187995*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187995*0 + 3*457*FLEN/8, x4, x1, x2)

inst_62666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:187998*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 187998*0 + 3*458*FLEN/8, x4, x1, x2)

inst_62667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:188001*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188001*0 + 3*459*FLEN/8, x4, x1, x2)

inst_62668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:188004*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188004*0 + 3*460*FLEN/8, x4, x1, x2)

inst_62669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:188007*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188007*0 + 3*461*FLEN/8, x4, x1, x2)

inst_62670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:188010*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188010*0 + 3*462*FLEN/8, x4, x1, x2)

inst_62671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:188013*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188013*0 + 3*463*FLEN/8, x4, x1, x2)

inst_62672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:188016*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188016*0 + 3*464*FLEN/8, x4, x1, x2)

inst_62673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:188019*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188019*0 + 3*465*FLEN/8, x4, x1, x2)

inst_62674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000000000000; valaddr_reg:x3; val_offset:188022*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188022*0 + 3*466*FLEN/8, x4, x1, x2)

inst_62675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000000000001; valaddr_reg:x3; val_offset:188025*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188025*0 + 3*467*FLEN/8, x4, x1, x2)

inst_62676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000000000003; valaddr_reg:x3; val_offset:188028*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188028*0 + 3*468*FLEN/8, x4, x1, x2)

inst_62677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000000000007; valaddr_reg:x3; val_offset:188031*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188031*0 + 3*469*FLEN/8, x4, x1, x2)

inst_62678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000000000000f; valaddr_reg:x3; val_offset:188034*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188034*0 + 3*470*FLEN/8, x4, x1, x2)

inst_62679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000000000001f; valaddr_reg:x3; val_offset:188037*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188037*0 + 3*471*FLEN/8, x4, x1, x2)

inst_62680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000000000003f; valaddr_reg:x3; val_offset:188040*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188040*0 + 3*472*FLEN/8, x4, x1, x2)

inst_62681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000000000007f; valaddr_reg:x3; val_offset:188043*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188043*0 + 3*473*FLEN/8, x4, x1, x2)

inst_62682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300000000000ff; valaddr_reg:x3; val_offset:188046*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188046*0 + 3*474*FLEN/8, x4, x1, x2)

inst_62683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300000000001ff; valaddr_reg:x3; val_offset:188049*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188049*0 + 3*475*FLEN/8, x4, x1, x2)

inst_62684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300000000003ff; valaddr_reg:x3; val_offset:188052*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188052*0 + 3*476*FLEN/8, x4, x1, x2)

inst_62685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300000000007ff; valaddr_reg:x3; val_offset:188055*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188055*0 + 3*477*FLEN/8, x4, x1, x2)

inst_62686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000000000fff; valaddr_reg:x3; val_offset:188058*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188058*0 + 3*478*FLEN/8, x4, x1, x2)

inst_62687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000000001fff; valaddr_reg:x3; val_offset:188061*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188061*0 + 3*479*FLEN/8, x4, x1, x2)

inst_62688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000000003fff; valaddr_reg:x3; val_offset:188064*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188064*0 + 3*480*FLEN/8, x4, x1, x2)

inst_62689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000000007fff; valaddr_reg:x3; val_offset:188067*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188067*0 + 3*481*FLEN/8, x4, x1, x2)

inst_62690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000000000ffff; valaddr_reg:x3; val_offset:188070*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188070*0 + 3*482*FLEN/8, x4, x1, x2)

inst_62691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000000001ffff; valaddr_reg:x3; val_offset:188073*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188073*0 + 3*483*FLEN/8, x4, x1, x2)

inst_62692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000000003ffff; valaddr_reg:x3; val_offset:188076*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188076*0 + 3*484*FLEN/8, x4, x1, x2)

inst_62693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000000007ffff; valaddr_reg:x3; val_offset:188079*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188079*0 + 3*485*FLEN/8, x4, x1, x2)

inst_62694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300000000fffff; valaddr_reg:x3; val_offset:188082*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188082*0 + 3*486*FLEN/8, x4, x1, x2)

inst_62695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300000001fffff; valaddr_reg:x3; val_offset:188085*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188085*0 + 3*487*FLEN/8, x4, x1, x2)

inst_62696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300000003fffff; valaddr_reg:x3; val_offset:188088*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188088*0 + 3*488*FLEN/8, x4, x1, x2)

inst_62697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300000007fffff; valaddr_reg:x3; val_offset:188091*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188091*0 + 3*489*FLEN/8, x4, x1, x2)

inst_62698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000000ffffff; valaddr_reg:x3; val_offset:188094*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188094*0 + 3*490*FLEN/8, x4, x1, x2)

inst_62699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000001ffffff; valaddr_reg:x3; val_offset:188097*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188097*0 + 3*491*FLEN/8, x4, x1, x2)

inst_62700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000003ffffff; valaddr_reg:x3; val_offset:188100*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188100*0 + 3*492*FLEN/8, x4, x1, x2)

inst_62701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000007ffffff; valaddr_reg:x3; val_offset:188103*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188103*0 + 3*493*FLEN/8, x4, x1, x2)

inst_62702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000000fffffff; valaddr_reg:x3; val_offset:188106*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188106*0 + 3*494*FLEN/8, x4, x1, x2)

inst_62703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000001fffffff; valaddr_reg:x3; val_offset:188109*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188109*0 + 3*495*FLEN/8, x4, x1, x2)

inst_62704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000003fffffff; valaddr_reg:x3; val_offset:188112*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188112*0 + 3*496*FLEN/8, x4, x1, x2)

inst_62705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000007fffffff; valaddr_reg:x3; val_offset:188115*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188115*0 + 3*497*FLEN/8, x4, x1, x2)

inst_62706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300000ffffffff; valaddr_reg:x3; val_offset:188118*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188118*0 + 3*498*FLEN/8, x4, x1, x2)

inst_62707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300001ffffffff; valaddr_reg:x3; val_offset:188121*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188121*0 + 3*499*FLEN/8, x4, x1, x2)

inst_62708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300003ffffffff; valaddr_reg:x3; val_offset:188124*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188124*0 + 3*500*FLEN/8, x4, x1, x2)

inst_62709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300007ffffffff; valaddr_reg:x3; val_offset:188127*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188127*0 + 3*501*FLEN/8, x4, x1, x2)

inst_62710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330000fffffffff; valaddr_reg:x3; val_offset:188130*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188130*0 + 3*502*FLEN/8, x4, x1, x2)

inst_62711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330001fffffffff; valaddr_reg:x3; val_offset:188133*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188133*0 + 3*503*FLEN/8, x4, x1, x2)

inst_62712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330003fffffffff; valaddr_reg:x3; val_offset:188136*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188136*0 + 3*504*FLEN/8, x4, x1, x2)

inst_62713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330007fffffffff; valaddr_reg:x3; val_offset:188139*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188139*0 + 3*505*FLEN/8, x4, x1, x2)

inst_62714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33000ffffffffff; valaddr_reg:x3; val_offset:188142*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188142*0 + 3*506*FLEN/8, x4, x1, x2)

inst_62715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33001ffffffffff; valaddr_reg:x3; val_offset:188145*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188145*0 + 3*507*FLEN/8, x4, x1, x2)

inst_62716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33003ffffffffff; valaddr_reg:x3; val_offset:188148*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188148*0 + 3*508*FLEN/8, x4, x1, x2)

inst_62717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33007ffffffffff; valaddr_reg:x3; val_offset:188151*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188151*0 + 3*509*FLEN/8, x4, x1, x2)

inst_62718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3300fffffffffff; valaddr_reg:x3; val_offset:188154*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188154*0 + 3*510*FLEN/8, x4, x1, x2)

inst_62719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3301fffffffffff; valaddr_reg:x3; val_offset:188157*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188157*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_62720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3303fffffffffff; valaddr_reg:x3; val_offset:188160*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188160*0 + 3*512*FLEN/8, x4, x1, x2)

inst_62721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x3307fffffffffff; valaddr_reg:x3; val_offset:188163*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188163*0 + 3*513*FLEN/8, x4, x1, x2)

inst_62722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x330ffffffffffff; valaddr_reg:x3; val_offset:188166*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188166*0 + 3*514*FLEN/8, x4, x1, x2)

inst_62723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x331ffffffffffff; valaddr_reg:x3; val_offset:188169*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188169*0 + 3*515*FLEN/8, x4, x1, x2)

inst_62724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x333ffffffffffff; valaddr_reg:x3; val_offset:188172*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188172*0 + 3*516*FLEN/8, x4, x1, x2)

inst_62725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x337ffffffffffff; valaddr_reg:x3; val_offset:188175*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188175*0 + 3*517*FLEN/8, x4, x1, x2)

inst_62726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x338000000000000; valaddr_reg:x3; val_offset:188178*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188178*0 + 3*518*FLEN/8, x4, x1, x2)

inst_62727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33c000000000000; valaddr_reg:x3; val_offset:188181*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188181*0 + 3*519*FLEN/8, x4, x1, x2)

inst_62728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33e000000000000; valaddr_reg:x3; val_offset:188184*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188184*0 + 3*520*FLEN/8, x4, x1, x2)

inst_62729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33f000000000000; valaddr_reg:x3; val_offset:188187*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188187*0 + 3*521*FLEN/8, x4, x1, x2)

inst_62730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33f800000000000; valaddr_reg:x3; val_offset:188190*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188190*0 + 3*522*FLEN/8, x4, x1, x2)

inst_62731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fc00000000000; valaddr_reg:x3; val_offset:188193*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188193*0 + 3*523*FLEN/8, x4, x1, x2)

inst_62732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fe00000000000; valaddr_reg:x3; val_offset:188196*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188196*0 + 3*524*FLEN/8, x4, x1, x2)

inst_62733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ff00000000000; valaddr_reg:x3; val_offset:188199*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188199*0 + 3*525*FLEN/8, x4, x1, x2)

inst_62734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ff80000000000; valaddr_reg:x3; val_offset:188202*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188202*0 + 3*526*FLEN/8, x4, x1, x2)

inst_62735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffc0000000000; valaddr_reg:x3; val_offset:188205*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188205*0 + 3*527*FLEN/8, x4, x1, x2)

inst_62736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffe0000000000; valaddr_reg:x3; val_offset:188208*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188208*0 + 3*528*FLEN/8, x4, x1, x2)

inst_62737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fff0000000000; valaddr_reg:x3; val_offset:188211*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188211*0 + 3*529*FLEN/8, x4, x1, x2)

inst_62738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fff8000000000; valaddr_reg:x3; val_offset:188214*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188214*0 + 3*530*FLEN/8, x4, x1, x2)

inst_62739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffc000000000; valaddr_reg:x3; val_offset:188217*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188217*0 + 3*531*FLEN/8, x4, x1, x2)

inst_62740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffe000000000; valaddr_reg:x3; val_offset:188220*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188220*0 + 3*532*FLEN/8, x4, x1, x2)

inst_62741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffff000000000; valaddr_reg:x3; val_offset:188223*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188223*0 + 3*533*FLEN/8, x4, x1, x2)

inst_62742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffff800000000; valaddr_reg:x3; val_offset:188226*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188226*0 + 3*534*FLEN/8, x4, x1, x2)

inst_62743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffc00000000; valaddr_reg:x3; val_offset:188229*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188229*0 + 3*535*FLEN/8, x4, x1, x2)

inst_62744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffe00000000; valaddr_reg:x3; val_offset:188232*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188232*0 + 3*536*FLEN/8, x4, x1, x2)

inst_62745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffff00000000; valaddr_reg:x3; val_offset:188235*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188235*0 + 3*537*FLEN/8, x4, x1, x2)

inst_62746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffff80000000; valaddr_reg:x3; val_offset:188238*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188238*0 + 3*538*FLEN/8, x4, x1, x2)

inst_62747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffc0000000; valaddr_reg:x3; val_offset:188241*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188241*0 + 3*539*FLEN/8, x4, x1, x2)

inst_62748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffe0000000; valaddr_reg:x3; val_offset:188244*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188244*0 + 3*540*FLEN/8, x4, x1, x2)

inst_62749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffff0000000; valaddr_reg:x3; val_offset:188247*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188247*0 + 3*541*FLEN/8, x4, x1, x2)

inst_62750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffff8000000; valaddr_reg:x3; val_offset:188250*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188250*0 + 3*542*FLEN/8, x4, x1, x2)

inst_62751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffc000000; valaddr_reg:x3; val_offset:188253*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188253*0 + 3*543*FLEN/8, x4, x1, x2)

inst_62752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffe000000; valaddr_reg:x3; val_offset:188256*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188256*0 + 3*544*FLEN/8, x4, x1, x2)

inst_62753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffff000000; valaddr_reg:x3; val_offset:188259*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188259*0 + 3*545*FLEN/8, x4, x1, x2)

inst_62754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffff800000; valaddr_reg:x3; val_offset:188262*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188262*0 + 3*546*FLEN/8, x4, x1, x2)

inst_62755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffc00000; valaddr_reg:x3; val_offset:188265*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188265*0 + 3*547*FLEN/8, x4, x1, x2)

inst_62756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffe00000; valaddr_reg:x3; val_offset:188268*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188268*0 + 3*548*FLEN/8, x4, x1, x2)

inst_62757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffff00000; valaddr_reg:x3; val_offset:188271*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188271*0 + 3*549*FLEN/8, x4, x1, x2)

inst_62758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffff80000; valaddr_reg:x3; val_offset:188274*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188274*0 + 3*550*FLEN/8, x4, x1, x2)

inst_62759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffc0000; valaddr_reg:x3; val_offset:188277*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188277*0 + 3*551*FLEN/8, x4, x1, x2)

inst_62760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffe0000; valaddr_reg:x3; val_offset:188280*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188280*0 + 3*552*FLEN/8, x4, x1, x2)

inst_62761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffff0000; valaddr_reg:x3; val_offset:188283*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188283*0 + 3*553*FLEN/8, x4, x1, x2)

inst_62762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffff8000; valaddr_reg:x3; val_offset:188286*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188286*0 + 3*554*FLEN/8, x4, x1, x2)

inst_62763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffffc000; valaddr_reg:x3; val_offset:188289*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188289*0 + 3*555*FLEN/8, x4, x1, x2)

inst_62764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffffe000; valaddr_reg:x3; val_offset:188292*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188292*0 + 3*556*FLEN/8, x4, x1, x2)

inst_62765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffff000; valaddr_reg:x3; val_offset:188295*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188295*0 + 3*557*FLEN/8, x4, x1, x2)

inst_62766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffff800; valaddr_reg:x3; val_offset:188298*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188298*0 + 3*558*FLEN/8, x4, x1, x2)

inst_62767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffffc00; valaddr_reg:x3; val_offset:188301*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188301*0 + 3*559*FLEN/8, x4, x1, x2)

inst_62768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffffe00; valaddr_reg:x3; val_offset:188304*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188304*0 + 3*560*FLEN/8, x4, x1, x2)

inst_62769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffffff00; valaddr_reg:x3; val_offset:188307*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188307*0 + 3*561*FLEN/8, x4, x1, x2)

inst_62770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffffff80; valaddr_reg:x3; val_offset:188310*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188310*0 + 3*562*FLEN/8, x4, x1, x2)

inst_62771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffffffc0; valaddr_reg:x3; val_offset:188313*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188313*0 + 3*563*FLEN/8, x4, x1, x2)

inst_62772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffffffe0; valaddr_reg:x3; val_offset:188316*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188316*0 + 3*564*FLEN/8, x4, x1, x2)

inst_62773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffffff0; valaddr_reg:x3; val_offset:188319*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188319*0 + 3*565*FLEN/8, x4, x1, x2)

inst_62774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffffff8; valaddr_reg:x3; val_offset:188322*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188322*0 + 3*566*FLEN/8, x4, x1, x2)

inst_62775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffffffc; valaddr_reg:x3; val_offset:188325*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188325*0 + 3*567*FLEN/8, x4, x1, x2)

inst_62776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33ffffffffffffe; valaddr_reg:x3; val_offset:188328*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188328*0 + 3*568*FLEN/8, x4, x1, x2)

inst_62777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x362df02af6253 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa362df02af6253; op2val:0x0;
op3val:0x33fffffffffffff; valaddr_reg:x3; val_offset:188331*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188331*0 + 3*569*FLEN/8, x4, x1, x2)

inst_62778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:188334*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188334*0 + 3*570*FLEN/8, x4, x1, x2)

inst_62779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:188337*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188337*0 + 3*571*FLEN/8, x4, x1, x2)

inst_62780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:188340*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188340*0 + 3*572*FLEN/8, x4, x1, x2)

inst_62781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:188343*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188343*0 + 3*573*FLEN/8, x4, x1, x2)

inst_62782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:188346*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188346*0 + 3*574*FLEN/8, x4, x1, x2)

inst_62783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:188349*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188349*0 + 3*575*FLEN/8, x4, x1, x2)

inst_62784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:188352*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188352*0 + 3*576*FLEN/8, x4, x1, x2)

inst_62785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:188355*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188355*0 + 3*577*FLEN/8, x4, x1, x2)

inst_62786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:188358*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188358*0 + 3*578*FLEN/8, x4, x1, x2)

inst_62787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:188361*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188361*0 + 3*579*FLEN/8, x4, x1, x2)

inst_62788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:188364*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188364*0 + 3*580*FLEN/8, x4, x1, x2)

inst_62789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:188367*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188367*0 + 3*581*FLEN/8, x4, x1, x2)

inst_62790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:188370*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188370*0 + 3*582*FLEN/8, x4, x1, x2)

inst_62791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:188373*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188373*0 + 3*583*FLEN/8, x4, x1, x2)

inst_62792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:188376*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188376*0 + 3*584*FLEN/8, x4, x1, x2)

inst_62793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:188379*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188379*0 + 3*585*FLEN/8, x4, x1, x2)

inst_62794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:188382*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188382*0 + 3*586*FLEN/8, x4, x1, x2)

inst_62795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:188385*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188385*0 + 3*587*FLEN/8, x4, x1, x2)

inst_62796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:188388*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188388*0 + 3*588*FLEN/8, x4, x1, x2)

inst_62797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:188391*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188391*0 + 3*589*FLEN/8, x4, x1, x2)

inst_62798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:188394*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188394*0 + 3*590*FLEN/8, x4, x1, x2)

inst_62799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:188397*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188397*0 + 3*591*FLEN/8, x4, x1, x2)

inst_62800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000000000000; valaddr_reg:x3; val_offset:188400*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188400*0 + 3*592*FLEN/8, x4, x1, x2)

inst_62801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000000000001; valaddr_reg:x3; val_offset:188403*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188403*0 + 3*593*FLEN/8, x4, x1, x2)

inst_62802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000000000003; valaddr_reg:x3; val_offset:188406*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188406*0 + 3*594*FLEN/8, x4, x1, x2)

inst_62803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000000000007; valaddr_reg:x3; val_offset:188409*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188409*0 + 3*595*FLEN/8, x4, x1, x2)

inst_62804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000000000000f; valaddr_reg:x3; val_offset:188412*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188412*0 + 3*596*FLEN/8, x4, x1, x2)

inst_62805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000000000001f; valaddr_reg:x3; val_offset:188415*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188415*0 + 3*597*FLEN/8, x4, x1, x2)

inst_62806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000000000003f; valaddr_reg:x3; val_offset:188418*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188418*0 + 3*598*FLEN/8, x4, x1, x2)

inst_62807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000000000007f; valaddr_reg:x3; val_offset:188421*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188421*0 + 3*599*FLEN/8, x4, x1, x2)

inst_62808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00000000000ff; valaddr_reg:x3; val_offset:188424*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188424*0 + 3*600*FLEN/8, x4, x1, x2)

inst_62809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00000000001ff; valaddr_reg:x3; val_offset:188427*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188427*0 + 3*601*FLEN/8, x4, x1, x2)

inst_62810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00000000003ff; valaddr_reg:x3; val_offset:188430*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188430*0 + 3*602*FLEN/8, x4, x1, x2)

inst_62811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00000000007ff; valaddr_reg:x3; val_offset:188433*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188433*0 + 3*603*FLEN/8, x4, x1, x2)

inst_62812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000000000fff; valaddr_reg:x3; val_offset:188436*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188436*0 + 3*604*FLEN/8, x4, x1, x2)

inst_62813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000000001fff; valaddr_reg:x3; val_offset:188439*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188439*0 + 3*605*FLEN/8, x4, x1, x2)

inst_62814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000000003fff; valaddr_reg:x3; val_offset:188442*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188442*0 + 3*606*FLEN/8, x4, x1, x2)

inst_62815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000000007fff; valaddr_reg:x3; val_offset:188445*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188445*0 + 3*607*FLEN/8, x4, x1, x2)

inst_62816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000000000ffff; valaddr_reg:x3; val_offset:188448*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188448*0 + 3*608*FLEN/8, x4, x1, x2)

inst_62817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000000001ffff; valaddr_reg:x3; val_offset:188451*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188451*0 + 3*609*FLEN/8, x4, x1, x2)

inst_62818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000000003ffff; valaddr_reg:x3; val_offset:188454*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188454*0 + 3*610*FLEN/8, x4, x1, x2)

inst_62819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000000007ffff; valaddr_reg:x3; val_offset:188457*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188457*0 + 3*611*FLEN/8, x4, x1, x2)

inst_62820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00000000fffff; valaddr_reg:x3; val_offset:188460*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188460*0 + 3*612*FLEN/8, x4, x1, x2)

inst_62821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00000001fffff; valaddr_reg:x3; val_offset:188463*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188463*0 + 3*613*FLEN/8, x4, x1, x2)

inst_62822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00000003fffff; valaddr_reg:x3; val_offset:188466*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188466*0 + 3*614*FLEN/8, x4, x1, x2)

inst_62823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00000007fffff; valaddr_reg:x3; val_offset:188469*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188469*0 + 3*615*FLEN/8, x4, x1, x2)

inst_62824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000000ffffff; valaddr_reg:x3; val_offset:188472*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188472*0 + 3*616*FLEN/8, x4, x1, x2)

inst_62825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000001ffffff; valaddr_reg:x3; val_offset:188475*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188475*0 + 3*617*FLEN/8, x4, x1, x2)

inst_62826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000003ffffff; valaddr_reg:x3; val_offset:188478*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188478*0 + 3*618*FLEN/8, x4, x1, x2)

inst_62827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000007ffffff; valaddr_reg:x3; val_offset:188481*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188481*0 + 3*619*FLEN/8, x4, x1, x2)

inst_62828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000000fffffff; valaddr_reg:x3; val_offset:188484*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188484*0 + 3*620*FLEN/8, x4, x1, x2)

inst_62829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000001fffffff; valaddr_reg:x3; val_offset:188487*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188487*0 + 3*621*FLEN/8, x4, x1, x2)

inst_62830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000003fffffff; valaddr_reg:x3; val_offset:188490*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188490*0 + 3*622*FLEN/8, x4, x1, x2)

inst_62831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000007fffffff; valaddr_reg:x3; val_offset:188493*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188493*0 + 3*623*FLEN/8, x4, x1, x2)

inst_62832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00000ffffffff; valaddr_reg:x3; val_offset:188496*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188496*0 + 3*624*FLEN/8, x4, x1, x2)

inst_62833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00001ffffffff; valaddr_reg:x3; val_offset:188499*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188499*0 + 3*625*FLEN/8, x4, x1, x2)

inst_62834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00003ffffffff; valaddr_reg:x3; val_offset:188502*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188502*0 + 3*626*FLEN/8, x4, x1, x2)

inst_62835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00007ffffffff; valaddr_reg:x3; val_offset:188505*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188505*0 + 3*627*FLEN/8, x4, x1, x2)

inst_62836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0000fffffffff; valaddr_reg:x3; val_offset:188508*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188508*0 + 3*628*FLEN/8, x4, x1, x2)

inst_62837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0001fffffffff; valaddr_reg:x3; val_offset:188511*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188511*0 + 3*629*FLEN/8, x4, x1, x2)

inst_62838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0003fffffffff; valaddr_reg:x3; val_offset:188514*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188514*0 + 3*630*FLEN/8, x4, x1, x2)

inst_62839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0007fffffffff; valaddr_reg:x3; val_offset:188517*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188517*0 + 3*631*FLEN/8, x4, x1, x2)

inst_62840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d000ffffffffff; valaddr_reg:x3; val_offset:188520*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188520*0 + 3*632*FLEN/8, x4, x1, x2)

inst_62841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d001ffffffffff; valaddr_reg:x3; val_offset:188523*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188523*0 + 3*633*FLEN/8, x4, x1, x2)

inst_62842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d003ffffffffff; valaddr_reg:x3; val_offset:188526*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188526*0 + 3*634*FLEN/8, x4, x1, x2)

inst_62843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d007ffffffffff; valaddr_reg:x3; val_offset:188529*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188529*0 + 3*635*FLEN/8, x4, x1, x2)

inst_62844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d00fffffffffff; valaddr_reg:x3; val_offset:188532*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188532*0 + 3*636*FLEN/8, x4, x1, x2)

inst_62845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d01fffffffffff; valaddr_reg:x3; val_offset:188535*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188535*0 + 3*637*FLEN/8, x4, x1, x2)

inst_62846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d03fffffffffff; valaddr_reg:x3; val_offset:188538*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188538*0 + 3*638*FLEN/8, x4, x1, x2)

inst_62847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d07fffffffffff; valaddr_reg:x3; val_offset:188541*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188541*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_62848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d0ffffffffffff; valaddr_reg:x3; val_offset:188544*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188544*0 + 3*640*FLEN/8, x4, x1, x2)

inst_62849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d1ffffffffffff; valaddr_reg:x3; val_offset:188547*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188547*0 + 3*641*FLEN/8, x4, x1, x2)

inst_62850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d3ffffffffffff; valaddr_reg:x3; val_offset:188550*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188550*0 + 3*642*FLEN/8, x4, x1, x2)

inst_62851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d7ffffffffffff; valaddr_reg:x3; val_offset:188553*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188553*0 + 3*643*FLEN/8, x4, x1, x2)

inst_62852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82d8000000000000; valaddr_reg:x3; val_offset:188556*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188556*0 + 3*644*FLEN/8, x4, x1, x2)

inst_62853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dc000000000000; valaddr_reg:x3; val_offset:188559*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188559*0 + 3*645*FLEN/8, x4, x1, x2)

inst_62854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82de000000000000; valaddr_reg:x3; val_offset:188562*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188562*0 + 3*646*FLEN/8, x4, x1, x2)

inst_62855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82df000000000000; valaddr_reg:x3; val_offset:188565*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188565*0 + 3*647*FLEN/8, x4, x1, x2)

inst_62856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82df800000000000; valaddr_reg:x3; val_offset:188568*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188568*0 + 3*648*FLEN/8, x4, x1, x2)

inst_62857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfc00000000000; valaddr_reg:x3; val_offset:188571*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188571*0 + 3*649*FLEN/8, x4, x1, x2)

inst_62858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfe00000000000; valaddr_reg:x3; val_offset:188574*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188574*0 + 3*650*FLEN/8, x4, x1, x2)

inst_62859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dff00000000000; valaddr_reg:x3; val_offset:188577*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188577*0 + 3*651*FLEN/8, x4, x1, x2)

inst_62860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dff80000000000; valaddr_reg:x3; val_offset:188580*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188580*0 + 3*652*FLEN/8, x4, x1, x2)

inst_62861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffc0000000000; valaddr_reg:x3; val_offset:188583*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188583*0 + 3*653*FLEN/8, x4, x1, x2)

inst_62862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffe0000000000; valaddr_reg:x3; val_offset:188586*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188586*0 + 3*654*FLEN/8, x4, x1, x2)

inst_62863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfff0000000000; valaddr_reg:x3; val_offset:188589*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188589*0 + 3*655*FLEN/8, x4, x1, x2)

inst_62864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfff8000000000; valaddr_reg:x3; val_offset:188592*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188592*0 + 3*656*FLEN/8, x4, x1, x2)

inst_62865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffc000000000; valaddr_reg:x3; val_offset:188595*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188595*0 + 3*657*FLEN/8, x4, x1, x2)

inst_62866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffe000000000; valaddr_reg:x3; val_offset:188598*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188598*0 + 3*658*FLEN/8, x4, x1, x2)

inst_62867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffff000000000; valaddr_reg:x3; val_offset:188601*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188601*0 + 3*659*FLEN/8, x4, x1, x2)

inst_62868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffff800000000; valaddr_reg:x3; val_offset:188604*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188604*0 + 3*660*FLEN/8, x4, x1, x2)

inst_62869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffc00000000; valaddr_reg:x3; val_offset:188607*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188607*0 + 3*661*FLEN/8, x4, x1, x2)

inst_62870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffe00000000; valaddr_reg:x3; val_offset:188610*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188610*0 + 3*662*FLEN/8, x4, x1, x2)

inst_62871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffff00000000; valaddr_reg:x3; val_offset:188613*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188613*0 + 3*663*FLEN/8, x4, x1, x2)

inst_62872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffff80000000; valaddr_reg:x3; val_offset:188616*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188616*0 + 3*664*FLEN/8, x4, x1, x2)

inst_62873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffc0000000; valaddr_reg:x3; val_offset:188619*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188619*0 + 3*665*FLEN/8, x4, x1, x2)

inst_62874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffe0000000; valaddr_reg:x3; val_offset:188622*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188622*0 + 3*666*FLEN/8, x4, x1, x2)

inst_62875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffff0000000; valaddr_reg:x3; val_offset:188625*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188625*0 + 3*667*FLEN/8, x4, x1, x2)

inst_62876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffff8000000; valaddr_reg:x3; val_offset:188628*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188628*0 + 3*668*FLEN/8, x4, x1, x2)

inst_62877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffc000000; valaddr_reg:x3; val_offset:188631*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188631*0 + 3*669*FLEN/8, x4, x1, x2)

inst_62878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffe000000; valaddr_reg:x3; val_offset:188634*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188634*0 + 3*670*FLEN/8, x4, x1, x2)

inst_62879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffff000000; valaddr_reg:x3; val_offset:188637*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188637*0 + 3*671*FLEN/8, x4, x1, x2)

inst_62880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffff800000; valaddr_reg:x3; val_offset:188640*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188640*0 + 3*672*FLEN/8, x4, x1, x2)

inst_62881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffc00000; valaddr_reg:x3; val_offset:188643*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188643*0 + 3*673*FLEN/8, x4, x1, x2)

inst_62882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffe00000; valaddr_reg:x3; val_offset:188646*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188646*0 + 3*674*FLEN/8, x4, x1, x2)

inst_62883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffff00000; valaddr_reg:x3; val_offset:188649*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188649*0 + 3*675*FLEN/8, x4, x1, x2)

inst_62884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffff80000; valaddr_reg:x3; val_offset:188652*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188652*0 + 3*676*FLEN/8, x4, x1, x2)

inst_62885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffc0000; valaddr_reg:x3; val_offset:188655*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188655*0 + 3*677*FLEN/8, x4, x1, x2)

inst_62886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffe0000; valaddr_reg:x3; val_offset:188658*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188658*0 + 3*678*FLEN/8, x4, x1, x2)

inst_62887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffff0000; valaddr_reg:x3; val_offset:188661*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188661*0 + 3*679*FLEN/8, x4, x1, x2)

inst_62888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffff8000; valaddr_reg:x3; val_offset:188664*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188664*0 + 3*680*FLEN/8, x4, x1, x2)

inst_62889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffffc000; valaddr_reg:x3; val_offset:188667*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188667*0 + 3*681*FLEN/8, x4, x1, x2)

inst_62890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffffe000; valaddr_reg:x3; val_offset:188670*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188670*0 + 3*682*FLEN/8, x4, x1, x2)

inst_62891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffff000; valaddr_reg:x3; val_offset:188673*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188673*0 + 3*683*FLEN/8, x4, x1, x2)

inst_62892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffff800; valaddr_reg:x3; val_offset:188676*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188676*0 + 3*684*FLEN/8, x4, x1, x2)

inst_62893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffffc00; valaddr_reg:x3; val_offset:188679*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188679*0 + 3*685*FLEN/8, x4, x1, x2)

inst_62894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffffe00; valaddr_reg:x3; val_offset:188682*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188682*0 + 3*686*FLEN/8, x4, x1, x2)

inst_62895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffffff00; valaddr_reg:x3; val_offset:188685*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188685*0 + 3*687*FLEN/8, x4, x1, x2)

inst_62896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffffff80; valaddr_reg:x3; val_offset:188688*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188688*0 + 3*688*FLEN/8, x4, x1, x2)

inst_62897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffffffc0; valaddr_reg:x3; val_offset:188691*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188691*0 + 3*689*FLEN/8, x4, x1, x2)

inst_62898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffffffe0; valaddr_reg:x3; val_offset:188694*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188694*0 + 3*690*FLEN/8, x4, x1, x2)

inst_62899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffffff0; valaddr_reg:x3; val_offset:188697*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188697*0 + 3*691*FLEN/8, x4, x1, x2)

inst_62900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffffff8; valaddr_reg:x3; val_offset:188700*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188700*0 + 3*692*FLEN/8, x4, x1, x2)

inst_62901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffffffc; valaddr_reg:x3; val_offset:188703*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188703*0 + 3*693*FLEN/8, x4, x1, x2)

inst_62902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dffffffffffffe; valaddr_reg:x3; val_offset:188706*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188706*0 + 3*694*FLEN/8, x4, x1, x2)

inst_62903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36bfdb286a7ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa36bfdb286a7ce; op2val:0x8000;
op3val:0x82dfffffffffffff; valaddr_reg:x3; val_offset:188709*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188709*0 + 3*695*FLEN/8, x4, x1, x2)

inst_62904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:188712*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188712*0 + 3*696*FLEN/8, x4, x1, x2)

inst_62905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:188715*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188715*0 + 3*697*FLEN/8, x4, x1, x2)

inst_62906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:188718*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188718*0 + 3*698*FLEN/8, x4, x1, x2)

inst_62907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:188721*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188721*0 + 3*699*FLEN/8, x4, x1, x2)

inst_62908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:188724*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188724*0 + 3*700*FLEN/8, x4, x1, x2)

inst_62909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:188727*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188727*0 + 3*701*FLEN/8, x4, x1, x2)

inst_62910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:188730*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188730*0 + 3*702*FLEN/8, x4, x1, x2)

inst_62911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:188733*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188733*0 + 3*703*FLEN/8, x4, x1, x2)

inst_62912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:188736*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188736*0 + 3*704*FLEN/8, x4, x1, x2)

inst_62913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:188739*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188739*0 + 3*705*FLEN/8, x4, x1, x2)

inst_62914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:188742*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188742*0 + 3*706*FLEN/8, x4, x1, x2)

inst_62915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:188745*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188745*0 + 3*707*FLEN/8, x4, x1, x2)

inst_62916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:188748*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188748*0 + 3*708*FLEN/8, x4, x1, x2)

inst_62917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:188751*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188751*0 + 3*709*FLEN/8, x4, x1, x2)

inst_62918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:188754*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188754*0 + 3*710*FLEN/8, x4, x1, x2)

inst_62919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:188757*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188757*0 + 3*711*FLEN/8, x4, x1, x2)

inst_62920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:188760*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188760*0 + 3*712*FLEN/8, x4, x1, x2)

inst_62921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:188763*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188763*0 + 3*713*FLEN/8, x4, x1, x2)

inst_62922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:188766*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188766*0 + 3*714*FLEN/8, x4, x1, x2)

inst_62923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:188769*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188769*0 + 3*715*FLEN/8, x4, x1, x2)

inst_62924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:188772*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188772*0 + 3*716*FLEN/8, x4, x1, x2)

inst_62925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:188775*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188775*0 + 3*717*FLEN/8, x4, x1, x2)

inst_62926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000000000000; valaddr_reg:x3; val_offset:188778*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188778*0 + 3*718*FLEN/8, x4, x1, x2)

inst_62927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000000000001; valaddr_reg:x3; val_offset:188781*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188781*0 + 3*719*FLEN/8, x4, x1, x2)

inst_62928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000000000003; valaddr_reg:x3; val_offset:188784*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188784*0 + 3*720*FLEN/8, x4, x1, x2)

inst_62929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000000000007; valaddr_reg:x3; val_offset:188787*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188787*0 + 3*721*FLEN/8, x4, x1, x2)

inst_62930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000000000000f; valaddr_reg:x3; val_offset:188790*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188790*0 + 3*722*FLEN/8, x4, x1, x2)

inst_62931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000000000001f; valaddr_reg:x3; val_offset:188793*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188793*0 + 3*723*FLEN/8, x4, x1, x2)

inst_62932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000000000003f; valaddr_reg:x3; val_offset:188796*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188796*0 + 3*724*FLEN/8, x4, x1, x2)

inst_62933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000000000007f; valaddr_reg:x3; val_offset:188799*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188799*0 + 3*725*FLEN/8, x4, x1, x2)

inst_62934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00000000000ff; valaddr_reg:x3; val_offset:188802*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188802*0 + 3*726*FLEN/8, x4, x1, x2)

inst_62935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00000000001ff; valaddr_reg:x3; val_offset:188805*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188805*0 + 3*727*FLEN/8, x4, x1, x2)

inst_62936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00000000003ff; valaddr_reg:x3; val_offset:188808*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188808*0 + 3*728*FLEN/8, x4, x1, x2)

inst_62937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00000000007ff; valaddr_reg:x3; val_offset:188811*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188811*0 + 3*729*FLEN/8, x4, x1, x2)

inst_62938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000000000fff; valaddr_reg:x3; val_offset:188814*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188814*0 + 3*730*FLEN/8, x4, x1, x2)

inst_62939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000000001fff; valaddr_reg:x3; val_offset:188817*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188817*0 + 3*731*FLEN/8, x4, x1, x2)

inst_62940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000000003fff; valaddr_reg:x3; val_offset:188820*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188820*0 + 3*732*FLEN/8, x4, x1, x2)

inst_62941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000000007fff; valaddr_reg:x3; val_offset:188823*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188823*0 + 3*733*FLEN/8, x4, x1, x2)

inst_62942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000000000ffff; valaddr_reg:x3; val_offset:188826*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188826*0 + 3*734*FLEN/8, x4, x1, x2)

inst_62943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000000001ffff; valaddr_reg:x3; val_offset:188829*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188829*0 + 3*735*FLEN/8, x4, x1, x2)

inst_62944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000000003ffff; valaddr_reg:x3; val_offset:188832*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188832*0 + 3*736*FLEN/8, x4, x1, x2)

inst_62945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000000007ffff; valaddr_reg:x3; val_offset:188835*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188835*0 + 3*737*FLEN/8, x4, x1, x2)

inst_62946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00000000fffff; valaddr_reg:x3; val_offset:188838*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188838*0 + 3*738*FLEN/8, x4, x1, x2)

inst_62947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00000001fffff; valaddr_reg:x3; val_offset:188841*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188841*0 + 3*739*FLEN/8, x4, x1, x2)

inst_62948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00000003fffff; valaddr_reg:x3; val_offset:188844*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188844*0 + 3*740*FLEN/8, x4, x1, x2)

inst_62949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00000007fffff; valaddr_reg:x3; val_offset:188847*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188847*0 + 3*741*FLEN/8, x4, x1, x2)

inst_62950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000000ffffff; valaddr_reg:x3; val_offset:188850*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188850*0 + 3*742*FLEN/8, x4, x1, x2)

inst_62951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000001ffffff; valaddr_reg:x3; val_offset:188853*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188853*0 + 3*743*FLEN/8, x4, x1, x2)

inst_62952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000003ffffff; valaddr_reg:x3; val_offset:188856*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188856*0 + 3*744*FLEN/8, x4, x1, x2)

inst_62953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000007ffffff; valaddr_reg:x3; val_offset:188859*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188859*0 + 3*745*FLEN/8, x4, x1, x2)

inst_62954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000000fffffff; valaddr_reg:x3; val_offset:188862*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188862*0 + 3*746*FLEN/8, x4, x1, x2)

inst_62955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000001fffffff; valaddr_reg:x3; val_offset:188865*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188865*0 + 3*747*FLEN/8, x4, x1, x2)

inst_62956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000003fffffff; valaddr_reg:x3; val_offset:188868*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188868*0 + 3*748*FLEN/8, x4, x1, x2)

inst_62957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000007fffffff; valaddr_reg:x3; val_offset:188871*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188871*0 + 3*749*FLEN/8, x4, x1, x2)

inst_62958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00000ffffffff; valaddr_reg:x3; val_offset:188874*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188874*0 + 3*750*FLEN/8, x4, x1, x2)

inst_62959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00001ffffffff; valaddr_reg:x3; val_offset:188877*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188877*0 + 3*751*FLEN/8, x4, x1, x2)

inst_62960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00003ffffffff; valaddr_reg:x3; val_offset:188880*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188880*0 + 3*752*FLEN/8, x4, x1, x2)

inst_62961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00007ffffffff; valaddr_reg:x3; val_offset:188883*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188883*0 + 3*753*FLEN/8, x4, x1, x2)

inst_62962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0000fffffffff; valaddr_reg:x3; val_offset:188886*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188886*0 + 3*754*FLEN/8, x4, x1, x2)

inst_62963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0001fffffffff; valaddr_reg:x3; val_offset:188889*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188889*0 + 3*755*FLEN/8, x4, x1, x2)

inst_62964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0003fffffffff; valaddr_reg:x3; val_offset:188892*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188892*0 + 3*756*FLEN/8, x4, x1, x2)

inst_62965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0007fffffffff; valaddr_reg:x3; val_offset:188895*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188895*0 + 3*757*FLEN/8, x4, x1, x2)

inst_62966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d000ffffffffff; valaddr_reg:x3; val_offset:188898*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188898*0 + 3*758*FLEN/8, x4, x1, x2)

inst_62967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d001ffffffffff; valaddr_reg:x3; val_offset:188901*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188901*0 + 3*759*FLEN/8, x4, x1, x2)

inst_62968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d003ffffffffff; valaddr_reg:x3; val_offset:188904*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188904*0 + 3*760*FLEN/8, x4, x1, x2)

inst_62969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d007ffffffffff; valaddr_reg:x3; val_offset:188907*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188907*0 + 3*761*FLEN/8, x4, x1, x2)

inst_62970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d00fffffffffff; valaddr_reg:x3; val_offset:188910*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188910*0 + 3*762*FLEN/8, x4, x1, x2)

inst_62971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d01fffffffffff; valaddr_reg:x3; val_offset:188913*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188913*0 + 3*763*FLEN/8, x4, x1, x2)

inst_62972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d03fffffffffff; valaddr_reg:x3; val_offset:188916*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188916*0 + 3*764*FLEN/8, x4, x1, x2)

inst_62973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d07fffffffffff; valaddr_reg:x3; val_offset:188919*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188919*0 + 3*765*FLEN/8, x4, x1, x2)

inst_62974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d0ffffffffffff; valaddr_reg:x3; val_offset:188922*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188922*0 + 3*766*FLEN/8, x4, x1, x2)

inst_62975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37a515cac453f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37a515cac453f; op2val:0x0;
op3val:0x3d1ffffffffffff; valaddr_reg:x3; val_offset:188925*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188925*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093763265186758656,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093767663233269760,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093769862256525312,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093770961768153088,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093771511523966976,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093771786401873920,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093771923840827392,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093771992560304128,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772026920042496,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772044099911680,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772052689846272,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772056984813568,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772059132297216,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772060206039040,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772060742909952,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061011345408,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061145563136,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061212672000,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061246226432,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061263003648,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061271392256,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061275586560,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061277683712,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061278732288,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279256576,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279518720,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279649792,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279715328,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279748096,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279764480,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279772672,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279776768,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279778816,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279779840,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780352,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780608,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780736,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780800,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780832,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780848,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780856,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780860,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780862,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4093772061279780863,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891414672214962546,64,FLEN)
NAN_BOXED(2322347159860869221,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412096,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412097,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412099,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412103,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412111,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412127,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412159,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412223,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412351,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412607,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105413119,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105414143,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105416191,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105420287,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105428479,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105444863,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105477631,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105543167,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105674239,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105936383,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817106460671,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817107509247,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817109606399,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817113800703,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817122189311,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817138966527,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817172520959,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817239629823,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817373847551,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817642283007,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062818179153919,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062819252895743,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062821400379391,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062825695346687,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062834285281279,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062851465150463,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062885824888831,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062954544365567,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063091983319039,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063366861225983,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063916617039871,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462065016128667647,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462067215151923199,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462071613198434303,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462080409291456511,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462098001477500927,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462133185849589759,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462203554593767423,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462344292082122751,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462625767058833407,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9463188717012254719,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097343,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097344,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9465440516825939968,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466003466779361280,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466284941756071936,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466425679244427264,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466496047988604928,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466531232360693760,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466548824546738176,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466557620639760384,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466562018686271488,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466564217709527040,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565317221154816,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565866976968704,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566141854875648,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566279293829120,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566348013305856,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566382373044224,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566399552913408,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566408142848000,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566412437815296,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566414585298944,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566415659040768,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416195911680,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416464347136,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416598564864,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416665673728,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416699228160,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416716005376,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416724393984,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416728588288,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416730685440,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416731734016,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732258304,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732520448,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732651520,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732717056,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732749824,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732766208,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732774400,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732778496,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732780544,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732781568,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782080,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782336,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782464,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782528,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782560,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782576,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782584,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782588,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782590,64,FLEN)
NAN_BOXED(6891420435381161619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782591,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279424,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279425,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279427,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279431,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279439,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279455,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279487,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279551,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279679,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346279935,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346280447,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346281471,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346283519,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346287615,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346295807,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346312191,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346344959,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346410495,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346541567,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461346803711,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461347327999,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461348376575,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461350473727,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461354668031,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461363056639,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461379833855,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461413388287,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461480497151,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461614714879,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567461883150335,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567462420021247,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567463493763071,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567465641246719,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567469936214015,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567478526148607,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567495706017791,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567530065756159,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567598785232895,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344567736224186367,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344568011102093311,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344568560857907199,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344569660369534975,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344571859392790527,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344576257439301631,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344585053532323839,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344602645718368255,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344637830090457087,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344708198834634751,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11344848936322990079,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11345130411299700735,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11345693361253122047,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11346819261159964671,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11346819261159964672,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11347945161066807296,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11348508111020228608,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11348789585996939264,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11348930323485294592,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349000692229472256,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349035876601561088,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349053468787605504,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349062264880627712,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349066662927138816,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349068861950394368,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349069961462022144,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349070511217836032,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349070786095742976,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349070923534696448,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349070992254173184,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071026613911552,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071043793780736,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071052383715328,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071056678682624,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071058826166272,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071059899908096,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060436779008,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060705214464,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060839432192,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060906541056,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060940095488,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060956872704,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060965261312,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060969455616,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060971552768,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060972601344,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973125632,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973387776,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973518848,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973584384,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973617152,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973633536,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973641728,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973645824,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973647872,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973648896,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649408,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649664,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649792,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649856,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649888,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649904,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649912,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649916,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649918,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(11349071060973649919,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891448095538274479,64,FLEN)
NAN_BOXED(11514147974191742282,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111488,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111489,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111491,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111495,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111503,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111519,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111551,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111615,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111743,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111999,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882112511,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882113535,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882115583,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882119679,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882127871,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882144255,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882177023,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882242559,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882373631,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882635775,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798883160063,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798884208639,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798886305791,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798890500095,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798898888703,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798915665919,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798949220351,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799016329215,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799150546943,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799418982399,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799955853311,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510801029595135,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510803177078783,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510807472046079,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510816061980671,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510833241849855,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510867601588223,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510936321064959,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511073760018431,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511348637925375,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511898393739263,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13512997905367039,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13515196928622591,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13519594975133695,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13528391068155903,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13545983254200319,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13581167626289151,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13651536370466815,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13792273858822143,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14073748835532799,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14636698788954111,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15762598695796735,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15762598695796736,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16888498602639360,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17451448556060672,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17732923532771328,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17873661021126656,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17944029765304320,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17979214137393152,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17996806323437568,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18005602416459776,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18010000462970880,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18012199486226432,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18013298997854208,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18013848753668096,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014123631575040,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014261070528512,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014329790005248,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014364149743616,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014381329612800,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014389919547392,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014394214514688,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014396361998336,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014397435740160,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014397972611072,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398241046528,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398375264256,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398442373120,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398475927552,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398492704768,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398501093376,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398505287680,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398507384832,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398508433408,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398508957696,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509219840,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509350912,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509416448,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509449216,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509465600,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509473792,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509477888,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509479936,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509480960,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481472,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481728,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481856,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481920,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481952,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481968,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481976,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481980,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481982,64,FLEN)
NAN_BOXED(6891458585886030823,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481983,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895296,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895297,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895299,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895303,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895311,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895327,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895359,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895423,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895551,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895807,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995896319,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995897343,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995899391,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995903487,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995911679,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995928063,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995960831,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996026367,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996157439,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996419583,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996943871,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580997992447,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581000089599,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581004283903,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581012672511,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581029449727,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581063004159,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581130113023,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581264330751,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581532766207,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683582069637119,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683583143378943,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683585290862591,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683589585829887,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683598175764479,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683615355633663,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683649715372031,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683718434848767,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683855873802239,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684130751709183,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684680507523071,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229685780019150847,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229687979042406399,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229692377088917503,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229701173181939711,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229718765367984127,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229753949740072959,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229824318484250623,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229965055972605951,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230246530949316607,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230809480902737919,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580543,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580544,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233061280716423168,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233624230669844480,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233905705646555136,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234046443134910464,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234116811879088128,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234151996251176960,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234169588437221376,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234178384530243584,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234182782576754688,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234184981600010240,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186081111638016,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186630867451904,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186905745358848,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187043184312320,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187111903789056,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187146263527424,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187163443396608,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187172033331200,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187176328298496,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187178475782144,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187179549523968,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180086394880,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180354830336,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180489048064,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180556156928,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180589711360,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180606488576,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180614877184,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180619071488,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180621168640,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622217216,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622741504,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623003648,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623134720,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623200256,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623233024,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623249408,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623257600,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623261696,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623263744,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623264768,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265280,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265536,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265664,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265728,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265760,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265776,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265784,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265788,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265790,64,FLEN)
NAN_BOXED(6891460564769268307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265791,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448128,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448129,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448131,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448135,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448143,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448159,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448191,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448255,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448383,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448639,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086449151,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086450175,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086452223,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086456319,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086464511,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086480895,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086513663,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086579199,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086710271,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086972415,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020087496703,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020088545279,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020090642431,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020094836735,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020103225343,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020120002559,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020153556991,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020220665855,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020354883583,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020623319039,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034021160189951,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034022233931775,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034024381415423,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034028676382719,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034037266317311,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034054446186495,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034088805924863,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034157525401599,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034294964355071,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034569842262015,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426035119598075903,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426036219109703679,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426038418132959231,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426042816179470335,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426051612272492543,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426069204458536959,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426104388830625791,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426174757574803455,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426315495063158783,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426596970039869439,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9427159919993290751,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9428285819900133375,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9428285819900133376,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9429411719806976000,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9429974669760397312,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430256144737107968,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430396882225463296,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430467250969640960,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430502435341729792,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430520027527774208,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430528823620796416,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430533221667307520,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430535420690563072,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430536520202190848,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537069958004736,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537344835911680,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537482274865152,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537550994341888,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537585354080256,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537602533949440,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537611123884032,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537615418851328,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537617566334976,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537618640076800,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619176947712,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619445383168,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619579600896,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619646709760,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619680264192,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619697041408,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619705430016,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619709624320,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619711721472,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619712770048,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713294336,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713556480,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713687552,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713753088,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713785856,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713802240,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713810432,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713814528,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713816576,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713817600,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818112,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818368,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818496,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818560,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818592,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818608,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818616,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818620,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818622,64,FLEN)
NAN_BOXED(6891470592173057998,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9430537619713818623,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600256,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600257,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600259,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600263,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600271,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600287,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600319,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600383,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600511,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600767,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269601279,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269602303,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269604351,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269608447,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269616639,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269633023,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269665791,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269731327,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269862399,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270124543,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270648831,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577271697407,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577273794559,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577277988863,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577286377471,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577303154687,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577336709119,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577403817983,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577538035711,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577806471167,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719578343342079,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719579417083903,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719581564567551,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719585859534847,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719594449469439,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719611629338623,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719645989076991,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719714708553727,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719852147507199,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720127025414143,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720676781228031,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274721776292855807,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274723975316111359,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274728373362622463,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274737169455644671,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274754761641689087,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274789946013777919,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274860314757955583,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275001052246310911,64,FLEN)
NAN_BOXED(6891486344672724287,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275282527223021567,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
