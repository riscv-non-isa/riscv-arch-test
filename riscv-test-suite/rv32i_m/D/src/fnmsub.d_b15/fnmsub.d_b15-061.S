
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_46080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b50ffffffffffff; valaddr_reg:x3; val_offset:138240*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138240*0 + 3*0*FLEN/8, x4, x1, x2)

inst_46081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b51ffffffffffff; valaddr_reg:x3; val_offset:138243*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138243*0 + 3*1*FLEN/8, x4, x1, x2)

inst_46082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b53ffffffffffff; valaddr_reg:x3; val_offset:138246*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138246*0 + 3*2*FLEN/8, x4, x1, x2)

inst_46083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b57ffffffffffff; valaddr_reg:x3; val_offset:138249*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138249*0 + 3*3*FLEN/8, x4, x1, x2)

inst_46084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b58000000000000; valaddr_reg:x3; val_offset:138252*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138252*0 + 3*4*FLEN/8, x4, x1, x2)

inst_46085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5c000000000000; valaddr_reg:x3; val_offset:138255*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138255*0 + 3*5*FLEN/8, x4, x1, x2)

inst_46086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5e000000000000; valaddr_reg:x3; val_offset:138258*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138258*0 + 3*6*FLEN/8, x4, x1, x2)

inst_46087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5f000000000000; valaddr_reg:x3; val_offset:138261*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138261*0 + 3*7*FLEN/8, x4, x1, x2)

inst_46088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5f800000000000; valaddr_reg:x3; val_offset:138264*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138264*0 + 3*8*FLEN/8, x4, x1, x2)

inst_46089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fc00000000000; valaddr_reg:x3; val_offset:138267*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138267*0 + 3*9*FLEN/8, x4, x1, x2)

inst_46090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fe00000000000; valaddr_reg:x3; val_offset:138270*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138270*0 + 3*10*FLEN/8, x4, x1, x2)

inst_46091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ff00000000000; valaddr_reg:x3; val_offset:138273*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138273*0 + 3*11*FLEN/8, x4, x1, x2)

inst_46092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ff80000000000; valaddr_reg:x3; val_offset:138276*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138276*0 + 3*12*FLEN/8, x4, x1, x2)

inst_46093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffc0000000000; valaddr_reg:x3; val_offset:138279*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138279*0 + 3*13*FLEN/8, x4, x1, x2)

inst_46094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffe0000000000; valaddr_reg:x3; val_offset:138282*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138282*0 + 3*14*FLEN/8, x4, x1, x2)

inst_46095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fff0000000000; valaddr_reg:x3; val_offset:138285*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138285*0 + 3*15*FLEN/8, x4, x1, x2)

inst_46096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fff8000000000; valaddr_reg:x3; val_offset:138288*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138288*0 + 3*16*FLEN/8, x4, x1, x2)

inst_46097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffc000000000; valaddr_reg:x3; val_offset:138291*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138291*0 + 3*17*FLEN/8, x4, x1, x2)

inst_46098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffe000000000; valaddr_reg:x3; val_offset:138294*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138294*0 + 3*18*FLEN/8, x4, x1, x2)

inst_46099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffff000000000; valaddr_reg:x3; val_offset:138297*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138297*0 + 3*19*FLEN/8, x4, x1, x2)

inst_46100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffff800000000; valaddr_reg:x3; val_offset:138300*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138300*0 + 3*20*FLEN/8, x4, x1, x2)

inst_46101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffc00000000; valaddr_reg:x3; val_offset:138303*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138303*0 + 3*21*FLEN/8, x4, x1, x2)

inst_46102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffe00000000; valaddr_reg:x3; val_offset:138306*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138306*0 + 3*22*FLEN/8, x4, x1, x2)

inst_46103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffff00000000; valaddr_reg:x3; val_offset:138309*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138309*0 + 3*23*FLEN/8, x4, x1, x2)

inst_46104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffff80000000; valaddr_reg:x3; val_offset:138312*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138312*0 + 3*24*FLEN/8, x4, x1, x2)

inst_46105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffc0000000; valaddr_reg:x3; val_offset:138315*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138315*0 + 3*25*FLEN/8, x4, x1, x2)

inst_46106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffe0000000; valaddr_reg:x3; val_offset:138318*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138318*0 + 3*26*FLEN/8, x4, x1, x2)

inst_46107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffff0000000; valaddr_reg:x3; val_offset:138321*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138321*0 + 3*27*FLEN/8, x4, x1, x2)

inst_46108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffff8000000; valaddr_reg:x3; val_offset:138324*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138324*0 + 3*28*FLEN/8, x4, x1, x2)

inst_46109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffc000000; valaddr_reg:x3; val_offset:138327*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138327*0 + 3*29*FLEN/8, x4, x1, x2)

inst_46110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffe000000; valaddr_reg:x3; val_offset:138330*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138330*0 + 3*30*FLEN/8, x4, x1, x2)

inst_46111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffff000000; valaddr_reg:x3; val_offset:138333*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138333*0 + 3*31*FLEN/8, x4, x1, x2)

inst_46112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffff800000; valaddr_reg:x3; val_offset:138336*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138336*0 + 3*32*FLEN/8, x4, x1, x2)

inst_46113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffc00000; valaddr_reg:x3; val_offset:138339*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138339*0 + 3*33*FLEN/8, x4, x1, x2)

inst_46114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffe00000; valaddr_reg:x3; val_offset:138342*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138342*0 + 3*34*FLEN/8, x4, x1, x2)

inst_46115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffff00000; valaddr_reg:x3; val_offset:138345*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138345*0 + 3*35*FLEN/8, x4, x1, x2)

inst_46116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffff80000; valaddr_reg:x3; val_offset:138348*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138348*0 + 3*36*FLEN/8, x4, x1, x2)

inst_46117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffc0000; valaddr_reg:x3; val_offset:138351*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138351*0 + 3*37*FLEN/8, x4, x1, x2)

inst_46118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffe0000; valaddr_reg:x3; val_offset:138354*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138354*0 + 3*38*FLEN/8, x4, x1, x2)

inst_46119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffff0000; valaddr_reg:x3; val_offset:138357*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138357*0 + 3*39*FLEN/8, x4, x1, x2)

inst_46120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffff8000; valaddr_reg:x3; val_offset:138360*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138360*0 + 3*40*FLEN/8, x4, x1, x2)

inst_46121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffffc000; valaddr_reg:x3; val_offset:138363*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138363*0 + 3*41*FLEN/8, x4, x1, x2)

inst_46122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffffe000; valaddr_reg:x3; val_offset:138366*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138366*0 + 3*42*FLEN/8, x4, x1, x2)

inst_46123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffff000; valaddr_reg:x3; val_offset:138369*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138369*0 + 3*43*FLEN/8, x4, x1, x2)

inst_46124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffff800; valaddr_reg:x3; val_offset:138372*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138372*0 + 3*44*FLEN/8, x4, x1, x2)

inst_46125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffffc00; valaddr_reg:x3; val_offset:138375*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138375*0 + 3*45*FLEN/8, x4, x1, x2)

inst_46126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffffe00; valaddr_reg:x3; val_offset:138378*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138378*0 + 3*46*FLEN/8, x4, x1, x2)

inst_46127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffffff00; valaddr_reg:x3; val_offset:138381*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138381*0 + 3*47*FLEN/8, x4, x1, x2)

inst_46128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffffff80; valaddr_reg:x3; val_offset:138384*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138384*0 + 3*48*FLEN/8, x4, x1, x2)

inst_46129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffffffc0; valaddr_reg:x3; val_offset:138387*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138387*0 + 3*49*FLEN/8, x4, x1, x2)

inst_46130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffffffe0; valaddr_reg:x3; val_offset:138390*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138390*0 + 3*50*FLEN/8, x4, x1, x2)

inst_46131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffffff0; valaddr_reg:x3; val_offset:138393*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138393*0 + 3*51*FLEN/8, x4, x1, x2)

inst_46132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffffff8; valaddr_reg:x3; val_offset:138396*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138396*0 + 3*52*FLEN/8, x4, x1, x2)

inst_46133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffffffc; valaddr_reg:x3; val_offset:138399*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138399*0 + 3*53*FLEN/8, x4, x1, x2)

inst_46134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5ffffffffffffe; valaddr_reg:x3; val_offset:138402*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138402*0 + 3*54*FLEN/8, x4, x1, x2)

inst_46135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3b5 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3b5fffffffffffff; valaddr_reg:x3; val_offset:138405*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138405*0 + 3*55*FLEN/8, x4, x1, x2)

inst_46136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:138408*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138408*0 + 3*56*FLEN/8, x4, x1, x2)

inst_46137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:138411*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138411*0 + 3*57*FLEN/8, x4, x1, x2)

inst_46138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:138414*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138414*0 + 3*58*FLEN/8, x4, x1, x2)

inst_46139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:138417*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138417*0 + 3*59*FLEN/8, x4, x1, x2)

inst_46140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:138420*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138420*0 + 3*60*FLEN/8, x4, x1, x2)

inst_46141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:138423*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138423*0 + 3*61*FLEN/8, x4, x1, x2)

inst_46142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:138426*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138426*0 + 3*62*FLEN/8, x4, x1, x2)

inst_46143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:138429*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138429*0 + 3*63*FLEN/8, x4, x1, x2)

inst_46144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:138432*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138432*0 + 3*64*FLEN/8, x4, x1, x2)

inst_46145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:138435*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138435*0 + 3*65*FLEN/8, x4, x1, x2)

inst_46146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:138438*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138438*0 + 3*66*FLEN/8, x4, x1, x2)

inst_46147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:138441*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138441*0 + 3*67*FLEN/8, x4, x1, x2)

inst_46148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:138444*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138444*0 + 3*68*FLEN/8, x4, x1, x2)

inst_46149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:138447*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138447*0 + 3*69*FLEN/8, x4, x1, x2)

inst_46150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:138450*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138450*0 + 3*70*FLEN/8, x4, x1, x2)

inst_46151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:138453*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138453*0 + 3*71*FLEN/8, x4, x1, x2)

inst_46152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:138456*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138456*0 + 3*72*FLEN/8, x4, x1, x2)

inst_46153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:138459*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138459*0 + 3*73*FLEN/8, x4, x1, x2)

inst_46154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:138462*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138462*0 + 3*74*FLEN/8, x4, x1, x2)

inst_46155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:138465*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138465*0 + 3*75*FLEN/8, x4, x1, x2)

inst_46156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:138468*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138468*0 + 3*76*FLEN/8, x4, x1, x2)

inst_46157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd3a1a06b18f11 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x184a0678d2592 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d3a1a06b18f11; op2val:0x204184a0678d2592;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:138471*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138471*0 + 3*77*FLEN/8, x4, x1, x2)

inst_46158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:138474*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138474*0 + 3*78*FLEN/8, x4, x1, x2)

inst_46159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:138477*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138477*0 + 3*79*FLEN/8, x4, x1, x2)

inst_46160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:138480*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138480*0 + 3*80*FLEN/8, x4, x1, x2)

inst_46161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:138483*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138483*0 + 3*81*FLEN/8, x4, x1, x2)

inst_46162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:138486*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138486*0 + 3*82*FLEN/8, x4, x1, x2)

inst_46163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:138489*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138489*0 + 3*83*FLEN/8, x4, x1, x2)

inst_46164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:138492*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138492*0 + 3*84*FLEN/8, x4, x1, x2)

inst_46165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:138495*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138495*0 + 3*85*FLEN/8, x4, x1, x2)

inst_46166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:138498*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138498*0 + 3*86*FLEN/8, x4, x1, x2)

inst_46167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:138501*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138501*0 + 3*87*FLEN/8, x4, x1, x2)

inst_46168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:138504*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138504*0 + 3*88*FLEN/8, x4, x1, x2)

inst_46169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:138507*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138507*0 + 3*89*FLEN/8, x4, x1, x2)

inst_46170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:138510*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138510*0 + 3*90*FLEN/8, x4, x1, x2)

inst_46171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:138513*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138513*0 + 3*91*FLEN/8, x4, x1, x2)

inst_46172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:138516*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138516*0 + 3*92*FLEN/8, x4, x1, x2)

inst_46173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:138519*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138519*0 + 3*93*FLEN/8, x4, x1, x2)

inst_46174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:138522*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138522*0 + 3*94*FLEN/8, x4, x1, x2)

inst_46175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:138525*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138525*0 + 3*95*FLEN/8, x4, x1, x2)

inst_46176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:138528*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138528*0 + 3*96*FLEN/8, x4, x1, x2)

inst_46177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:138531*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138531*0 + 3*97*FLEN/8, x4, x1, x2)

inst_46178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:138534*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138534*0 + 3*98*FLEN/8, x4, x1, x2)

inst_46179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:138537*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138537*0 + 3*99*FLEN/8, x4, x1, x2)

inst_46180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000000000000; valaddr_reg:x3; val_offset:138540*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138540*0 + 3*100*FLEN/8, x4, x1, x2)

inst_46181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000000000001; valaddr_reg:x3; val_offset:138543*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138543*0 + 3*101*FLEN/8, x4, x1, x2)

inst_46182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000000000003; valaddr_reg:x3; val_offset:138546*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138546*0 + 3*102*FLEN/8, x4, x1, x2)

inst_46183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000000000007; valaddr_reg:x3; val_offset:138549*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138549*0 + 3*103*FLEN/8, x4, x1, x2)

inst_46184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000000000000f; valaddr_reg:x3; val_offset:138552*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138552*0 + 3*104*FLEN/8, x4, x1, x2)

inst_46185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000000000001f; valaddr_reg:x3; val_offset:138555*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138555*0 + 3*105*FLEN/8, x4, x1, x2)

inst_46186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000000000003f; valaddr_reg:x3; val_offset:138558*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138558*0 + 3*106*FLEN/8, x4, x1, x2)

inst_46187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000000000007f; valaddr_reg:x3; val_offset:138561*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138561*0 + 3*107*FLEN/8, x4, x1, x2)

inst_46188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700000000000ff; valaddr_reg:x3; val_offset:138564*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138564*0 + 3*108*FLEN/8, x4, x1, x2)

inst_46189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700000000001ff; valaddr_reg:x3; val_offset:138567*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138567*0 + 3*109*FLEN/8, x4, x1, x2)

inst_46190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700000000003ff; valaddr_reg:x3; val_offset:138570*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138570*0 + 3*110*FLEN/8, x4, x1, x2)

inst_46191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700000000007ff; valaddr_reg:x3; val_offset:138573*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138573*0 + 3*111*FLEN/8, x4, x1, x2)

inst_46192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000000000fff; valaddr_reg:x3; val_offset:138576*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138576*0 + 3*112*FLEN/8, x4, x1, x2)

inst_46193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000000001fff; valaddr_reg:x3; val_offset:138579*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138579*0 + 3*113*FLEN/8, x4, x1, x2)

inst_46194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000000003fff; valaddr_reg:x3; val_offset:138582*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138582*0 + 3*114*FLEN/8, x4, x1, x2)

inst_46195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000000007fff; valaddr_reg:x3; val_offset:138585*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138585*0 + 3*115*FLEN/8, x4, x1, x2)

inst_46196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000000000ffff; valaddr_reg:x3; val_offset:138588*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138588*0 + 3*116*FLEN/8, x4, x1, x2)

inst_46197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000000001ffff; valaddr_reg:x3; val_offset:138591*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138591*0 + 3*117*FLEN/8, x4, x1, x2)

inst_46198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000000003ffff; valaddr_reg:x3; val_offset:138594*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138594*0 + 3*118*FLEN/8, x4, x1, x2)

inst_46199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000000007ffff; valaddr_reg:x3; val_offset:138597*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138597*0 + 3*119*FLEN/8, x4, x1, x2)

inst_46200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700000000fffff; valaddr_reg:x3; val_offset:138600*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138600*0 + 3*120*FLEN/8, x4, x1, x2)

inst_46201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700000001fffff; valaddr_reg:x3; val_offset:138603*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138603*0 + 3*121*FLEN/8, x4, x1, x2)

inst_46202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700000003fffff; valaddr_reg:x3; val_offset:138606*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138606*0 + 3*122*FLEN/8, x4, x1, x2)

inst_46203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700000007fffff; valaddr_reg:x3; val_offset:138609*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138609*0 + 3*123*FLEN/8, x4, x1, x2)

inst_46204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000000ffffff; valaddr_reg:x3; val_offset:138612*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138612*0 + 3*124*FLEN/8, x4, x1, x2)

inst_46205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000001ffffff; valaddr_reg:x3; val_offset:138615*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138615*0 + 3*125*FLEN/8, x4, x1, x2)

inst_46206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000003ffffff; valaddr_reg:x3; val_offset:138618*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138618*0 + 3*126*FLEN/8, x4, x1, x2)

inst_46207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000007ffffff; valaddr_reg:x3; val_offset:138621*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138621*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_46208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000000fffffff; valaddr_reg:x3; val_offset:138624*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138624*0 + 3*128*FLEN/8, x4, x1, x2)

inst_46209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000001fffffff; valaddr_reg:x3; val_offset:138627*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138627*0 + 3*129*FLEN/8, x4, x1, x2)

inst_46210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000003fffffff; valaddr_reg:x3; val_offset:138630*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138630*0 + 3*130*FLEN/8, x4, x1, x2)

inst_46211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000007fffffff; valaddr_reg:x3; val_offset:138633*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138633*0 + 3*131*FLEN/8, x4, x1, x2)

inst_46212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700000ffffffff; valaddr_reg:x3; val_offset:138636*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138636*0 + 3*132*FLEN/8, x4, x1, x2)

inst_46213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700001ffffffff; valaddr_reg:x3; val_offset:138639*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138639*0 + 3*133*FLEN/8, x4, x1, x2)

inst_46214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700003ffffffff; valaddr_reg:x3; val_offset:138642*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138642*0 + 3*134*FLEN/8, x4, x1, x2)

inst_46215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700007ffffffff; valaddr_reg:x3; val_offset:138645*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138645*0 + 3*135*FLEN/8, x4, x1, x2)

inst_46216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270000fffffffff; valaddr_reg:x3; val_offset:138648*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138648*0 + 3*136*FLEN/8, x4, x1, x2)

inst_46217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270001fffffffff; valaddr_reg:x3; val_offset:138651*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138651*0 + 3*137*FLEN/8, x4, x1, x2)

inst_46218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270003fffffffff; valaddr_reg:x3; val_offset:138654*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138654*0 + 3*138*FLEN/8, x4, x1, x2)

inst_46219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270007fffffffff; valaddr_reg:x3; val_offset:138657*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138657*0 + 3*139*FLEN/8, x4, x1, x2)

inst_46220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27000ffffffffff; valaddr_reg:x3; val_offset:138660*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138660*0 + 3*140*FLEN/8, x4, x1, x2)

inst_46221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27001ffffffffff; valaddr_reg:x3; val_offset:138663*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138663*0 + 3*141*FLEN/8, x4, x1, x2)

inst_46222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27003ffffffffff; valaddr_reg:x3; val_offset:138666*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138666*0 + 3*142*FLEN/8, x4, x1, x2)

inst_46223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27007ffffffffff; valaddr_reg:x3; val_offset:138669*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138669*0 + 3*143*FLEN/8, x4, x1, x2)

inst_46224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2700fffffffffff; valaddr_reg:x3; val_offset:138672*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138672*0 + 3*144*FLEN/8, x4, x1, x2)

inst_46225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2701fffffffffff; valaddr_reg:x3; val_offset:138675*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138675*0 + 3*145*FLEN/8, x4, x1, x2)

inst_46226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2703fffffffffff; valaddr_reg:x3; val_offset:138678*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138678*0 + 3*146*FLEN/8, x4, x1, x2)

inst_46227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x2707fffffffffff; valaddr_reg:x3; val_offset:138681*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138681*0 + 3*147*FLEN/8, x4, x1, x2)

inst_46228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x270ffffffffffff; valaddr_reg:x3; val_offset:138684*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138684*0 + 3*148*FLEN/8, x4, x1, x2)

inst_46229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x271ffffffffffff; valaddr_reg:x3; val_offset:138687*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138687*0 + 3*149*FLEN/8, x4, x1, x2)

inst_46230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x273ffffffffffff; valaddr_reg:x3; val_offset:138690*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138690*0 + 3*150*FLEN/8, x4, x1, x2)

inst_46231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x277ffffffffffff; valaddr_reg:x3; val_offset:138693*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138693*0 + 3*151*FLEN/8, x4, x1, x2)

inst_46232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x278000000000000; valaddr_reg:x3; val_offset:138696*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138696*0 + 3*152*FLEN/8, x4, x1, x2)

inst_46233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27c000000000000; valaddr_reg:x3; val_offset:138699*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138699*0 + 3*153*FLEN/8, x4, x1, x2)

inst_46234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27e000000000000; valaddr_reg:x3; val_offset:138702*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138702*0 + 3*154*FLEN/8, x4, x1, x2)

inst_46235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27f000000000000; valaddr_reg:x3; val_offset:138705*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138705*0 + 3*155*FLEN/8, x4, x1, x2)

inst_46236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27f800000000000; valaddr_reg:x3; val_offset:138708*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138708*0 + 3*156*FLEN/8, x4, x1, x2)

inst_46237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fc00000000000; valaddr_reg:x3; val_offset:138711*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138711*0 + 3*157*FLEN/8, x4, x1, x2)

inst_46238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fe00000000000; valaddr_reg:x3; val_offset:138714*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138714*0 + 3*158*FLEN/8, x4, x1, x2)

inst_46239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ff00000000000; valaddr_reg:x3; val_offset:138717*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138717*0 + 3*159*FLEN/8, x4, x1, x2)

inst_46240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ff80000000000; valaddr_reg:x3; val_offset:138720*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138720*0 + 3*160*FLEN/8, x4, x1, x2)

inst_46241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffc0000000000; valaddr_reg:x3; val_offset:138723*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138723*0 + 3*161*FLEN/8, x4, x1, x2)

inst_46242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffe0000000000; valaddr_reg:x3; val_offset:138726*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138726*0 + 3*162*FLEN/8, x4, x1, x2)

inst_46243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fff0000000000; valaddr_reg:x3; val_offset:138729*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138729*0 + 3*163*FLEN/8, x4, x1, x2)

inst_46244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fff8000000000; valaddr_reg:x3; val_offset:138732*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138732*0 + 3*164*FLEN/8, x4, x1, x2)

inst_46245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffc000000000; valaddr_reg:x3; val_offset:138735*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138735*0 + 3*165*FLEN/8, x4, x1, x2)

inst_46246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffe000000000; valaddr_reg:x3; val_offset:138738*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138738*0 + 3*166*FLEN/8, x4, x1, x2)

inst_46247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffff000000000; valaddr_reg:x3; val_offset:138741*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138741*0 + 3*167*FLEN/8, x4, x1, x2)

inst_46248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffff800000000; valaddr_reg:x3; val_offset:138744*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138744*0 + 3*168*FLEN/8, x4, x1, x2)

inst_46249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffc00000000; valaddr_reg:x3; val_offset:138747*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138747*0 + 3*169*FLEN/8, x4, x1, x2)

inst_46250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffe00000000; valaddr_reg:x3; val_offset:138750*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138750*0 + 3*170*FLEN/8, x4, x1, x2)

inst_46251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffff00000000; valaddr_reg:x3; val_offset:138753*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138753*0 + 3*171*FLEN/8, x4, x1, x2)

inst_46252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffff80000000; valaddr_reg:x3; val_offset:138756*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138756*0 + 3*172*FLEN/8, x4, x1, x2)

inst_46253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffc0000000; valaddr_reg:x3; val_offset:138759*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138759*0 + 3*173*FLEN/8, x4, x1, x2)

inst_46254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffe0000000; valaddr_reg:x3; val_offset:138762*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138762*0 + 3*174*FLEN/8, x4, x1, x2)

inst_46255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffff0000000; valaddr_reg:x3; val_offset:138765*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138765*0 + 3*175*FLEN/8, x4, x1, x2)

inst_46256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffff8000000; valaddr_reg:x3; val_offset:138768*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138768*0 + 3*176*FLEN/8, x4, x1, x2)

inst_46257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffc000000; valaddr_reg:x3; val_offset:138771*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138771*0 + 3*177*FLEN/8, x4, x1, x2)

inst_46258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffe000000; valaddr_reg:x3; val_offset:138774*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138774*0 + 3*178*FLEN/8, x4, x1, x2)

inst_46259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffff000000; valaddr_reg:x3; val_offset:138777*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138777*0 + 3*179*FLEN/8, x4, x1, x2)

inst_46260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffff800000; valaddr_reg:x3; val_offset:138780*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138780*0 + 3*180*FLEN/8, x4, x1, x2)

inst_46261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffc00000; valaddr_reg:x3; val_offset:138783*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138783*0 + 3*181*FLEN/8, x4, x1, x2)

inst_46262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffe00000; valaddr_reg:x3; val_offset:138786*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138786*0 + 3*182*FLEN/8, x4, x1, x2)

inst_46263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffff00000; valaddr_reg:x3; val_offset:138789*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138789*0 + 3*183*FLEN/8, x4, x1, x2)

inst_46264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffff80000; valaddr_reg:x3; val_offset:138792*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138792*0 + 3*184*FLEN/8, x4, x1, x2)

inst_46265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffc0000; valaddr_reg:x3; val_offset:138795*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138795*0 + 3*185*FLEN/8, x4, x1, x2)

inst_46266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffe0000; valaddr_reg:x3; val_offset:138798*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138798*0 + 3*186*FLEN/8, x4, x1, x2)

inst_46267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffff0000; valaddr_reg:x3; val_offset:138801*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138801*0 + 3*187*FLEN/8, x4, x1, x2)

inst_46268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffff8000; valaddr_reg:x3; val_offset:138804*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138804*0 + 3*188*FLEN/8, x4, x1, x2)

inst_46269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffffc000; valaddr_reg:x3; val_offset:138807*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138807*0 + 3*189*FLEN/8, x4, x1, x2)

inst_46270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffffe000; valaddr_reg:x3; val_offset:138810*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138810*0 + 3*190*FLEN/8, x4, x1, x2)

inst_46271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffff000; valaddr_reg:x3; val_offset:138813*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138813*0 + 3*191*FLEN/8, x4, x1, x2)

inst_46272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffff800; valaddr_reg:x3; val_offset:138816*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138816*0 + 3*192*FLEN/8, x4, x1, x2)

inst_46273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffffc00; valaddr_reg:x3; val_offset:138819*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138819*0 + 3*193*FLEN/8, x4, x1, x2)

inst_46274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffffe00; valaddr_reg:x3; val_offset:138822*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138822*0 + 3*194*FLEN/8, x4, x1, x2)

inst_46275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffffff00; valaddr_reg:x3; val_offset:138825*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138825*0 + 3*195*FLEN/8, x4, x1, x2)

inst_46276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffffff80; valaddr_reg:x3; val_offset:138828*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138828*0 + 3*196*FLEN/8, x4, x1, x2)

inst_46277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffffffc0; valaddr_reg:x3; val_offset:138831*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138831*0 + 3*197*FLEN/8, x4, x1, x2)

inst_46278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffffffe0; valaddr_reg:x3; val_offset:138834*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138834*0 + 3*198*FLEN/8, x4, x1, x2)

inst_46279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffffff0; valaddr_reg:x3; val_offset:138837*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138837*0 + 3*199*FLEN/8, x4, x1, x2)

inst_46280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffffff8; valaddr_reg:x3; val_offset:138840*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138840*0 + 3*200*FLEN/8, x4, x1, x2)

inst_46281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffffffc; valaddr_reg:x3; val_offset:138843*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138843*0 + 3*201*FLEN/8, x4, x1, x2)

inst_46282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27ffffffffffffe; valaddr_reg:x3; val_offset:138846*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138846*0 + 3*202*FLEN/8, x4, x1, x2)

inst_46283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd4904360e89c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d4904360e89c9; op2val:0x0;
op3val:0x27fffffffffffff; valaddr_reg:x3; val_offset:138849*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138849*0 + 3*203*FLEN/8, x4, x1, x2)

inst_46284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:138852*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138852*0 + 3*204*FLEN/8, x4, x1, x2)

inst_46285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:138855*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138855*0 + 3*205*FLEN/8, x4, x1, x2)

inst_46286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:138858*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138858*0 + 3*206*FLEN/8, x4, x1, x2)

inst_46287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:138861*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138861*0 + 3*207*FLEN/8, x4, x1, x2)

inst_46288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:138864*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138864*0 + 3*208*FLEN/8, x4, x1, x2)

inst_46289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:138867*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138867*0 + 3*209*FLEN/8, x4, x1, x2)

inst_46290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:138870*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138870*0 + 3*210*FLEN/8, x4, x1, x2)

inst_46291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:138873*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138873*0 + 3*211*FLEN/8, x4, x1, x2)

inst_46292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:138876*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138876*0 + 3*212*FLEN/8, x4, x1, x2)

inst_46293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:138879*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138879*0 + 3*213*FLEN/8, x4, x1, x2)

inst_46294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:138882*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138882*0 + 3*214*FLEN/8, x4, x1, x2)

inst_46295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:138885*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138885*0 + 3*215*FLEN/8, x4, x1, x2)

inst_46296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:138888*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138888*0 + 3*216*FLEN/8, x4, x1, x2)

inst_46297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:138891*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138891*0 + 3*217*FLEN/8, x4, x1, x2)

inst_46298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:138894*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138894*0 + 3*218*FLEN/8, x4, x1, x2)

inst_46299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:138897*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138897*0 + 3*219*FLEN/8, x4, x1, x2)

inst_46300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:138900*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138900*0 + 3*220*FLEN/8, x4, x1, x2)

inst_46301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:138903*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138903*0 + 3*221*FLEN/8, x4, x1, x2)

inst_46302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:138906*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138906*0 + 3*222*FLEN/8, x4, x1, x2)

inst_46303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:138909*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138909*0 + 3*223*FLEN/8, x4, x1, x2)

inst_46304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:138912*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138912*0 + 3*224*FLEN/8, x4, x1, x2)

inst_46305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:138915*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138915*0 + 3*225*FLEN/8, x4, x1, x2)

inst_46306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000000000000; valaddr_reg:x3; val_offset:138918*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138918*0 + 3*226*FLEN/8, x4, x1, x2)

inst_46307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000000000001; valaddr_reg:x3; val_offset:138921*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138921*0 + 3*227*FLEN/8, x4, x1, x2)

inst_46308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000000000003; valaddr_reg:x3; val_offset:138924*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138924*0 + 3*228*FLEN/8, x4, x1, x2)

inst_46309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000000000007; valaddr_reg:x3; val_offset:138927*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138927*0 + 3*229*FLEN/8, x4, x1, x2)

inst_46310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000000000000f; valaddr_reg:x3; val_offset:138930*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138930*0 + 3*230*FLEN/8, x4, x1, x2)

inst_46311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000000000001f; valaddr_reg:x3; val_offset:138933*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138933*0 + 3*231*FLEN/8, x4, x1, x2)

inst_46312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000000000003f; valaddr_reg:x3; val_offset:138936*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138936*0 + 3*232*FLEN/8, x4, x1, x2)

inst_46313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000000000007f; valaddr_reg:x3; val_offset:138939*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138939*0 + 3*233*FLEN/8, x4, x1, x2)

inst_46314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00000000000ff; valaddr_reg:x3; val_offset:138942*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138942*0 + 3*234*FLEN/8, x4, x1, x2)

inst_46315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00000000001ff; valaddr_reg:x3; val_offset:138945*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138945*0 + 3*235*FLEN/8, x4, x1, x2)

inst_46316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00000000003ff; valaddr_reg:x3; val_offset:138948*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138948*0 + 3*236*FLEN/8, x4, x1, x2)

inst_46317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00000000007ff; valaddr_reg:x3; val_offset:138951*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138951*0 + 3*237*FLEN/8, x4, x1, x2)

inst_46318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000000000fff; valaddr_reg:x3; val_offset:138954*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138954*0 + 3*238*FLEN/8, x4, x1, x2)

inst_46319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000000001fff; valaddr_reg:x3; val_offset:138957*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138957*0 + 3*239*FLEN/8, x4, x1, x2)

inst_46320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000000003fff; valaddr_reg:x3; val_offset:138960*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138960*0 + 3*240*FLEN/8, x4, x1, x2)

inst_46321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000000007fff; valaddr_reg:x3; val_offset:138963*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138963*0 + 3*241*FLEN/8, x4, x1, x2)

inst_46322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000000000ffff; valaddr_reg:x3; val_offset:138966*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138966*0 + 3*242*FLEN/8, x4, x1, x2)

inst_46323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000000001ffff; valaddr_reg:x3; val_offset:138969*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138969*0 + 3*243*FLEN/8, x4, x1, x2)

inst_46324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000000003ffff; valaddr_reg:x3; val_offset:138972*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138972*0 + 3*244*FLEN/8, x4, x1, x2)

inst_46325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000000007ffff; valaddr_reg:x3; val_offset:138975*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138975*0 + 3*245*FLEN/8, x4, x1, x2)

inst_46326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00000000fffff; valaddr_reg:x3; val_offset:138978*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138978*0 + 3*246*FLEN/8, x4, x1, x2)

inst_46327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00000001fffff; valaddr_reg:x3; val_offset:138981*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138981*0 + 3*247*FLEN/8, x4, x1, x2)

inst_46328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00000003fffff; valaddr_reg:x3; val_offset:138984*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138984*0 + 3*248*FLEN/8, x4, x1, x2)

inst_46329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00000007fffff; valaddr_reg:x3; val_offset:138987*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138987*0 + 3*249*FLEN/8, x4, x1, x2)

inst_46330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000000ffffff; valaddr_reg:x3; val_offset:138990*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138990*0 + 3*250*FLEN/8, x4, x1, x2)

inst_46331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000001ffffff; valaddr_reg:x3; val_offset:138993*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138993*0 + 3*251*FLEN/8, x4, x1, x2)

inst_46332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000003ffffff; valaddr_reg:x3; val_offset:138996*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138996*0 + 3*252*FLEN/8, x4, x1, x2)

inst_46333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000007ffffff; valaddr_reg:x3; val_offset:138999*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138999*0 + 3*253*FLEN/8, x4, x1, x2)

inst_46334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000000fffffff; valaddr_reg:x3; val_offset:139002*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139002*0 + 3*254*FLEN/8, x4, x1, x2)

inst_46335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000001fffffff; valaddr_reg:x3; val_offset:139005*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139005*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_46336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000003fffffff; valaddr_reg:x3; val_offset:139008*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139008*0 + 3*256*FLEN/8, x4, x1, x2)

inst_46337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000007fffffff; valaddr_reg:x3; val_offset:139011*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139011*0 + 3*257*FLEN/8, x4, x1, x2)

inst_46338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00000ffffffff; valaddr_reg:x3; val_offset:139014*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139014*0 + 3*258*FLEN/8, x4, x1, x2)

inst_46339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00001ffffffff; valaddr_reg:x3; val_offset:139017*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139017*0 + 3*259*FLEN/8, x4, x1, x2)

inst_46340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00003ffffffff; valaddr_reg:x3; val_offset:139020*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139020*0 + 3*260*FLEN/8, x4, x1, x2)

inst_46341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00007ffffffff; valaddr_reg:x3; val_offset:139023*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139023*0 + 3*261*FLEN/8, x4, x1, x2)

inst_46342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0000fffffffff; valaddr_reg:x3; val_offset:139026*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139026*0 + 3*262*FLEN/8, x4, x1, x2)

inst_46343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0001fffffffff; valaddr_reg:x3; val_offset:139029*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139029*0 + 3*263*FLEN/8, x4, x1, x2)

inst_46344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0003fffffffff; valaddr_reg:x3; val_offset:139032*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139032*0 + 3*264*FLEN/8, x4, x1, x2)

inst_46345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0007fffffffff; valaddr_reg:x3; val_offset:139035*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139035*0 + 3*265*FLEN/8, x4, x1, x2)

inst_46346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c000ffffffffff; valaddr_reg:x3; val_offset:139038*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139038*0 + 3*266*FLEN/8, x4, x1, x2)

inst_46347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c001ffffffffff; valaddr_reg:x3; val_offset:139041*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139041*0 + 3*267*FLEN/8, x4, x1, x2)

inst_46348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c003ffffffffff; valaddr_reg:x3; val_offset:139044*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139044*0 + 3*268*FLEN/8, x4, x1, x2)

inst_46349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c007ffffffffff; valaddr_reg:x3; val_offset:139047*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139047*0 + 3*269*FLEN/8, x4, x1, x2)

inst_46350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c00fffffffffff; valaddr_reg:x3; val_offset:139050*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139050*0 + 3*270*FLEN/8, x4, x1, x2)

inst_46351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c01fffffffffff; valaddr_reg:x3; val_offset:139053*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139053*0 + 3*271*FLEN/8, x4, x1, x2)

inst_46352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c03fffffffffff; valaddr_reg:x3; val_offset:139056*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139056*0 + 3*272*FLEN/8, x4, x1, x2)

inst_46353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c07fffffffffff; valaddr_reg:x3; val_offset:139059*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139059*0 + 3*273*FLEN/8, x4, x1, x2)

inst_46354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c0ffffffffffff; valaddr_reg:x3; val_offset:139062*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139062*0 + 3*274*FLEN/8, x4, x1, x2)

inst_46355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c1ffffffffffff; valaddr_reg:x3; val_offset:139065*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139065*0 + 3*275*FLEN/8, x4, x1, x2)

inst_46356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c3ffffffffffff; valaddr_reg:x3; val_offset:139068*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139068*0 + 3*276*FLEN/8, x4, x1, x2)

inst_46357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c7ffffffffffff; valaddr_reg:x3; val_offset:139071*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139071*0 + 3*277*FLEN/8, x4, x1, x2)

inst_46358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81c8000000000000; valaddr_reg:x3; val_offset:139074*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139074*0 + 3*278*FLEN/8, x4, x1, x2)

inst_46359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cc000000000000; valaddr_reg:x3; val_offset:139077*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139077*0 + 3*279*FLEN/8, x4, x1, x2)

inst_46360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81ce000000000000; valaddr_reg:x3; val_offset:139080*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139080*0 + 3*280*FLEN/8, x4, x1, x2)

inst_46361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cf000000000000; valaddr_reg:x3; val_offset:139083*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139083*0 + 3*281*FLEN/8, x4, x1, x2)

inst_46362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cf800000000000; valaddr_reg:x3; val_offset:139086*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139086*0 + 3*282*FLEN/8, x4, x1, x2)

inst_46363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfc00000000000; valaddr_reg:x3; val_offset:139089*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139089*0 + 3*283*FLEN/8, x4, x1, x2)

inst_46364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfe00000000000; valaddr_reg:x3; val_offset:139092*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139092*0 + 3*284*FLEN/8, x4, x1, x2)

inst_46365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cff00000000000; valaddr_reg:x3; val_offset:139095*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139095*0 + 3*285*FLEN/8, x4, x1, x2)

inst_46366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cff80000000000; valaddr_reg:x3; val_offset:139098*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139098*0 + 3*286*FLEN/8, x4, x1, x2)

inst_46367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffc0000000000; valaddr_reg:x3; val_offset:139101*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139101*0 + 3*287*FLEN/8, x4, x1, x2)

inst_46368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffe0000000000; valaddr_reg:x3; val_offset:139104*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139104*0 + 3*288*FLEN/8, x4, x1, x2)

inst_46369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfff0000000000; valaddr_reg:x3; val_offset:139107*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139107*0 + 3*289*FLEN/8, x4, x1, x2)

inst_46370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfff8000000000; valaddr_reg:x3; val_offset:139110*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139110*0 + 3*290*FLEN/8, x4, x1, x2)

inst_46371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffc000000000; valaddr_reg:x3; val_offset:139113*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139113*0 + 3*291*FLEN/8, x4, x1, x2)

inst_46372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffe000000000; valaddr_reg:x3; val_offset:139116*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139116*0 + 3*292*FLEN/8, x4, x1, x2)

inst_46373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffff000000000; valaddr_reg:x3; val_offset:139119*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139119*0 + 3*293*FLEN/8, x4, x1, x2)

inst_46374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffff800000000; valaddr_reg:x3; val_offset:139122*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139122*0 + 3*294*FLEN/8, x4, x1, x2)

inst_46375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffc00000000; valaddr_reg:x3; val_offset:139125*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139125*0 + 3*295*FLEN/8, x4, x1, x2)

inst_46376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffe00000000; valaddr_reg:x3; val_offset:139128*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139128*0 + 3*296*FLEN/8, x4, x1, x2)

inst_46377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffff00000000; valaddr_reg:x3; val_offset:139131*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139131*0 + 3*297*FLEN/8, x4, x1, x2)

inst_46378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffff80000000; valaddr_reg:x3; val_offset:139134*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139134*0 + 3*298*FLEN/8, x4, x1, x2)

inst_46379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffc0000000; valaddr_reg:x3; val_offset:139137*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139137*0 + 3*299*FLEN/8, x4, x1, x2)

inst_46380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffe0000000; valaddr_reg:x3; val_offset:139140*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139140*0 + 3*300*FLEN/8, x4, x1, x2)

inst_46381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffff0000000; valaddr_reg:x3; val_offset:139143*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139143*0 + 3*301*FLEN/8, x4, x1, x2)

inst_46382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffff8000000; valaddr_reg:x3; val_offset:139146*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139146*0 + 3*302*FLEN/8, x4, x1, x2)

inst_46383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffc000000; valaddr_reg:x3; val_offset:139149*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139149*0 + 3*303*FLEN/8, x4, x1, x2)

inst_46384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffe000000; valaddr_reg:x3; val_offset:139152*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139152*0 + 3*304*FLEN/8, x4, x1, x2)

inst_46385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffff000000; valaddr_reg:x3; val_offset:139155*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139155*0 + 3*305*FLEN/8, x4, x1, x2)

inst_46386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffff800000; valaddr_reg:x3; val_offset:139158*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139158*0 + 3*306*FLEN/8, x4, x1, x2)

inst_46387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffc00000; valaddr_reg:x3; val_offset:139161*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139161*0 + 3*307*FLEN/8, x4, x1, x2)

inst_46388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffe00000; valaddr_reg:x3; val_offset:139164*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139164*0 + 3*308*FLEN/8, x4, x1, x2)

inst_46389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffff00000; valaddr_reg:x3; val_offset:139167*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139167*0 + 3*309*FLEN/8, x4, x1, x2)

inst_46390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffff80000; valaddr_reg:x3; val_offset:139170*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139170*0 + 3*310*FLEN/8, x4, x1, x2)

inst_46391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffc0000; valaddr_reg:x3; val_offset:139173*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139173*0 + 3*311*FLEN/8, x4, x1, x2)

inst_46392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffe0000; valaddr_reg:x3; val_offset:139176*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139176*0 + 3*312*FLEN/8, x4, x1, x2)

inst_46393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffff0000; valaddr_reg:x3; val_offset:139179*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139179*0 + 3*313*FLEN/8, x4, x1, x2)

inst_46394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffff8000; valaddr_reg:x3; val_offset:139182*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139182*0 + 3*314*FLEN/8, x4, x1, x2)

inst_46395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffffc000; valaddr_reg:x3; val_offset:139185*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139185*0 + 3*315*FLEN/8, x4, x1, x2)

inst_46396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffffe000; valaddr_reg:x3; val_offset:139188*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139188*0 + 3*316*FLEN/8, x4, x1, x2)

inst_46397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffff000; valaddr_reg:x3; val_offset:139191*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139191*0 + 3*317*FLEN/8, x4, x1, x2)

inst_46398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffff800; valaddr_reg:x3; val_offset:139194*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139194*0 + 3*318*FLEN/8, x4, x1, x2)

inst_46399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffffc00; valaddr_reg:x3; val_offset:139197*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139197*0 + 3*319*FLEN/8, x4, x1, x2)

inst_46400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffffe00; valaddr_reg:x3; val_offset:139200*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139200*0 + 3*320*FLEN/8, x4, x1, x2)

inst_46401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffffff00; valaddr_reg:x3; val_offset:139203*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139203*0 + 3*321*FLEN/8, x4, x1, x2)

inst_46402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffffff80; valaddr_reg:x3; val_offset:139206*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139206*0 + 3*322*FLEN/8, x4, x1, x2)

inst_46403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffffffc0; valaddr_reg:x3; val_offset:139209*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139209*0 + 3*323*FLEN/8, x4, x1, x2)

inst_46404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffffffe0; valaddr_reg:x3; val_offset:139212*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139212*0 + 3*324*FLEN/8, x4, x1, x2)

inst_46405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffffff0; valaddr_reg:x3; val_offset:139215*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139215*0 + 3*325*FLEN/8, x4, x1, x2)

inst_46406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffffff8; valaddr_reg:x3; val_offset:139218*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139218*0 + 3*326*FLEN/8, x4, x1, x2)

inst_46407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffffffc; valaddr_reg:x3; val_offset:139221*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139221*0 + 3*327*FLEN/8, x4, x1, x2)

inst_46408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cffffffffffffe; valaddr_reg:x3; val_offset:139224*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139224*0 + 3*328*FLEN/8, x4, x1, x2)

inst_46409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7759f6f589ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7759f6f589ad; op2val:0x8000;
op3val:0x81cfffffffffffff; valaddr_reg:x3; val_offset:139227*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139227*0 + 3*329*FLEN/8, x4, x1, x2)

inst_46410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:139230*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139230*0 + 3*330*FLEN/8, x4, x1, x2)

inst_46411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:139233*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139233*0 + 3*331*FLEN/8, x4, x1, x2)

inst_46412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:139236*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139236*0 + 3*332*FLEN/8, x4, x1, x2)

inst_46413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:139239*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139239*0 + 3*333*FLEN/8, x4, x1, x2)

inst_46414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:139242*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139242*0 + 3*334*FLEN/8, x4, x1, x2)

inst_46415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:139245*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139245*0 + 3*335*FLEN/8, x4, x1, x2)

inst_46416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:139248*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139248*0 + 3*336*FLEN/8, x4, x1, x2)

inst_46417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:139251*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139251*0 + 3*337*FLEN/8, x4, x1, x2)

inst_46418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:139254*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139254*0 + 3*338*FLEN/8, x4, x1, x2)

inst_46419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:139257*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139257*0 + 3*339*FLEN/8, x4, x1, x2)

inst_46420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:139260*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139260*0 + 3*340*FLEN/8, x4, x1, x2)

inst_46421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:139263*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139263*0 + 3*341*FLEN/8, x4, x1, x2)

inst_46422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:139266*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139266*0 + 3*342*FLEN/8, x4, x1, x2)

inst_46423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:139269*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139269*0 + 3*343*FLEN/8, x4, x1, x2)

inst_46424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:139272*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139272*0 + 3*344*FLEN/8, x4, x1, x2)

inst_46425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:139275*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139275*0 + 3*345*FLEN/8, x4, x1, x2)

inst_46426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:139278*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139278*0 + 3*346*FLEN/8, x4, x1, x2)

inst_46427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:139281*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139281*0 + 3*347*FLEN/8, x4, x1, x2)

inst_46428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:139284*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139284*0 + 3*348*FLEN/8, x4, x1, x2)

inst_46429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:139287*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139287*0 + 3*349*FLEN/8, x4, x1, x2)

inst_46430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:139290*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139290*0 + 3*350*FLEN/8, x4, x1, x2)

inst_46431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:139293*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139293*0 + 3*351*FLEN/8, x4, x1, x2)

inst_46432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000000000000; valaddr_reg:x3; val_offset:139296*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139296*0 + 3*352*FLEN/8, x4, x1, x2)

inst_46433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000000000001; valaddr_reg:x3; val_offset:139299*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139299*0 + 3*353*FLEN/8, x4, x1, x2)

inst_46434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000000000003; valaddr_reg:x3; val_offset:139302*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139302*0 + 3*354*FLEN/8, x4, x1, x2)

inst_46435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000000000007; valaddr_reg:x3; val_offset:139305*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139305*0 + 3*355*FLEN/8, x4, x1, x2)

inst_46436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000000000000f; valaddr_reg:x3; val_offset:139308*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139308*0 + 3*356*FLEN/8, x4, x1, x2)

inst_46437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000000000001f; valaddr_reg:x3; val_offset:139311*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139311*0 + 3*357*FLEN/8, x4, x1, x2)

inst_46438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000000000003f; valaddr_reg:x3; val_offset:139314*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139314*0 + 3*358*FLEN/8, x4, x1, x2)

inst_46439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000000000007f; valaddr_reg:x3; val_offset:139317*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139317*0 + 3*359*FLEN/8, x4, x1, x2)

inst_46440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00000000000ff; valaddr_reg:x3; val_offset:139320*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139320*0 + 3*360*FLEN/8, x4, x1, x2)

inst_46441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00000000001ff; valaddr_reg:x3; val_offset:139323*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139323*0 + 3*361*FLEN/8, x4, x1, x2)

inst_46442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00000000003ff; valaddr_reg:x3; val_offset:139326*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139326*0 + 3*362*FLEN/8, x4, x1, x2)

inst_46443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00000000007ff; valaddr_reg:x3; val_offset:139329*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139329*0 + 3*363*FLEN/8, x4, x1, x2)

inst_46444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000000000fff; valaddr_reg:x3; val_offset:139332*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139332*0 + 3*364*FLEN/8, x4, x1, x2)

inst_46445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000000001fff; valaddr_reg:x3; val_offset:139335*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139335*0 + 3*365*FLEN/8, x4, x1, x2)

inst_46446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000000003fff; valaddr_reg:x3; val_offset:139338*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139338*0 + 3*366*FLEN/8, x4, x1, x2)

inst_46447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000000007fff; valaddr_reg:x3; val_offset:139341*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139341*0 + 3*367*FLEN/8, x4, x1, x2)

inst_46448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000000000ffff; valaddr_reg:x3; val_offset:139344*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139344*0 + 3*368*FLEN/8, x4, x1, x2)

inst_46449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000000001ffff; valaddr_reg:x3; val_offset:139347*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139347*0 + 3*369*FLEN/8, x4, x1, x2)

inst_46450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000000003ffff; valaddr_reg:x3; val_offset:139350*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139350*0 + 3*370*FLEN/8, x4, x1, x2)

inst_46451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000000007ffff; valaddr_reg:x3; val_offset:139353*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139353*0 + 3*371*FLEN/8, x4, x1, x2)

inst_46452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00000000fffff; valaddr_reg:x3; val_offset:139356*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139356*0 + 3*372*FLEN/8, x4, x1, x2)

inst_46453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00000001fffff; valaddr_reg:x3; val_offset:139359*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139359*0 + 3*373*FLEN/8, x4, x1, x2)

inst_46454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00000003fffff; valaddr_reg:x3; val_offset:139362*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139362*0 + 3*374*FLEN/8, x4, x1, x2)

inst_46455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00000007fffff; valaddr_reg:x3; val_offset:139365*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139365*0 + 3*375*FLEN/8, x4, x1, x2)

inst_46456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000000ffffff; valaddr_reg:x3; val_offset:139368*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139368*0 + 3*376*FLEN/8, x4, x1, x2)

inst_46457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000001ffffff; valaddr_reg:x3; val_offset:139371*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139371*0 + 3*377*FLEN/8, x4, x1, x2)

inst_46458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000003ffffff; valaddr_reg:x3; val_offset:139374*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139374*0 + 3*378*FLEN/8, x4, x1, x2)

inst_46459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000007ffffff; valaddr_reg:x3; val_offset:139377*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139377*0 + 3*379*FLEN/8, x4, x1, x2)

inst_46460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000000fffffff; valaddr_reg:x3; val_offset:139380*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139380*0 + 3*380*FLEN/8, x4, x1, x2)

inst_46461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000001fffffff; valaddr_reg:x3; val_offset:139383*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139383*0 + 3*381*FLEN/8, x4, x1, x2)

inst_46462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000003fffffff; valaddr_reg:x3; val_offset:139386*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139386*0 + 3*382*FLEN/8, x4, x1, x2)

inst_46463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000007fffffff; valaddr_reg:x3; val_offset:139389*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139389*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_46464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00000ffffffff; valaddr_reg:x3; val_offset:139392*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139392*0 + 3*384*FLEN/8, x4, x1, x2)

inst_46465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00001ffffffff; valaddr_reg:x3; val_offset:139395*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139395*0 + 3*385*FLEN/8, x4, x1, x2)

inst_46466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00003ffffffff; valaddr_reg:x3; val_offset:139398*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139398*0 + 3*386*FLEN/8, x4, x1, x2)

inst_46467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00007ffffffff; valaddr_reg:x3; val_offset:139401*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139401*0 + 3*387*FLEN/8, x4, x1, x2)

inst_46468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0000fffffffff; valaddr_reg:x3; val_offset:139404*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139404*0 + 3*388*FLEN/8, x4, x1, x2)

inst_46469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0001fffffffff; valaddr_reg:x3; val_offset:139407*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139407*0 + 3*389*FLEN/8, x4, x1, x2)

inst_46470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0003fffffffff; valaddr_reg:x3; val_offset:139410*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139410*0 + 3*390*FLEN/8, x4, x1, x2)

inst_46471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0007fffffffff; valaddr_reg:x3; val_offset:139413*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139413*0 + 3*391*FLEN/8, x4, x1, x2)

inst_46472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c000ffffffffff; valaddr_reg:x3; val_offset:139416*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139416*0 + 3*392*FLEN/8, x4, x1, x2)

inst_46473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c001ffffffffff; valaddr_reg:x3; val_offset:139419*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139419*0 + 3*393*FLEN/8, x4, x1, x2)

inst_46474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c003ffffffffff; valaddr_reg:x3; val_offset:139422*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139422*0 + 3*394*FLEN/8, x4, x1, x2)

inst_46475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c007ffffffffff; valaddr_reg:x3; val_offset:139425*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139425*0 + 3*395*FLEN/8, x4, x1, x2)

inst_46476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c00fffffffffff; valaddr_reg:x3; val_offset:139428*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139428*0 + 3*396*FLEN/8, x4, x1, x2)

inst_46477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c01fffffffffff; valaddr_reg:x3; val_offset:139431*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139431*0 + 3*397*FLEN/8, x4, x1, x2)

inst_46478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c03fffffffffff; valaddr_reg:x3; val_offset:139434*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139434*0 + 3*398*FLEN/8, x4, x1, x2)

inst_46479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c07fffffffffff; valaddr_reg:x3; val_offset:139437*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139437*0 + 3*399*FLEN/8, x4, x1, x2)

inst_46480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c0ffffffffffff; valaddr_reg:x3; val_offset:139440*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139440*0 + 3*400*FLEN/8, x4, x1, x2)

inst_46481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c1ffffffffffff; valaddr_reg:x3; val_offset:139443*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139443*0 + 3*401*FLEN/8, x4, x1, x2)

inst_46482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c3ffffffffffff; valaddr_reg:x3; val_offset:139446*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139446*0 + 3*402*FLEN/8, x4, x1, x2)

inst_46483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c7ffffffffffff; valaddr_reg:x3; val_offset:139449*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139449*0 + 3*403*FLEN/8, x4, x1, x2)

inst_46484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83c8000000000000; valaddr_reg:x3; val_offset:139452*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139452*0 + 3*404*FLEN/8, x4, x1, x2)

inst_46485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cc000000000000; valaddr_reg:x3; val_offset:139455*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139455*0 + 3*405*FLEN/8, x4, x1, x2)

inst_46486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83ce000000000000; valaddr_reg:x3; val_offset:139458*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139458*0 + 3*406*FLEN/8, x4, x1, x2)

inst_46487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cf000000000000; valaddr_reg:x3; val_offset:139461*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139461*0 + 3*407*FLEN/8, x4, x1, x2)

inst_46488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cf800000000000; valaddr_reg:x3; val_offset:139464*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139464*0 + 3*408*FLEN/8, x4, x1, x2)

inst_46489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfc00000000000; valaddr_reg:x3; val_offset:139467*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139467*0 + 3*409*FLEN/8, x4, x1, x2)

inst_46490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfe00000000000; valaddr_reg:x3; val_offset:139470*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139470*0 + 3*410*FLEN/8, x4, x1, x2)

inst_46491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cff00000000000; valaddr_reg:x3; val_offset:139473*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139473*0 + 3*411*FLEN/8, x4, x1, x2)

inst_46492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cff80000000000; valaddr_reg:x3; val_offset:139476*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139476*0 + 3*412*FLEN/8, x4, x1, x2)

inst_46493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffc0000000000; valaddr_reg:x3; val_offset:139479*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139479*0 + 3*413*FLEN/8, x4, x1, x2)

inst_46494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffe0000000000; valaddr_reg:x3; val_offset:139482*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139482*0 + 3*414*FLEN/8, x4, x1, x2)

inst_46495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfff0000000000; valaddr_reg:x3; val_offset:139485*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139485*0 + 3*415*FLEN/8, x4, x1, x2)

inst_46496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfff8000000000; valaddr_reg:x3; val_offset:139488*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139488*0 + 3*416*FLEN/8, x4, x1, x2)

inst_46497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffc000000000; valaddr_reg:x3; val_offset:139491*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139491*0 + 3*417*FLEN/8, x4, x1, x2)

inst_46498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffe000000000; valaddr_reg:x3; val_offset:139494*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139494*0 + 3*418*FLEN/8, x4, x1, x2)

inst_46499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffff000000000; valaddr_reg:x3; val_offset:139497*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139497*0 + 3*419*FLEN/8, x4, x1, x2)

inst_46500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffff800000000; valaddr_reg:x3; val_offset:139500*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139500*0 + 3*420*FLEN/8, x4, x1, x2)

inst_46501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffc00000000; valaddr_reg:x3; val_offset:139503*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139503*0 + 3*421*FLEN/8, x4, x1, x2)

inst_46502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffe00000000; valaddr_reg:x3; val_offset:139506*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139506*0 + 3*422*FLEN/8, x4, x1, x2)

inst_46503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffff00000000; valaddr_reg:x3; val_offset:139509*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139509*0 + 3*423*FLEN/8, x4, x1, x2)

inst_46504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffff80000000; valaddr_reg:x3; val_offset:139512*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139512*0 + 3*424*FLEN/8, x4, x1, x2)

inst_46505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffc0000000; valaddr_reg:x3; val_offset:139515*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139515*0 + 3*425*FLEN/8, x4, x1, x2)

inst_46506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffe0000000; valaddr_reg:x3; val_offset:139518*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139518*0 + 3*426*FLEN/8, x4, x1, x2)

inst_46507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffff0000000; valaddr_reg:x3; val_offset:139521*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139521*0 + 3*427*FLEN/8, x4, x1, x2)

inst_46508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffff8000000; valaddr_reg:x3; val_offset:139524*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139524*0 + 3*428*FLEN/8, x4, x1, x2)

inst_46509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffc000000; valaddr_reg:x3; val_offset:139527*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139527*0 + 3*429*FLEN/8, x4, x1, x2)

inst_46510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffe000000; valaddr_reg:x3; val_offset:139530*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139530*0 + 3*430*FLEN/8, x4, x1, x2)

inst_46511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffff000000; valaddr_reg:x3; val_offset:139533*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139533*0 + 3*431*FLEN/8, x4, x1, x2)

inst_46512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffff800000; valaddr_reg:x3; val_offset:139536*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139536*0 + 3*432*FLEN/8, x4, x1, x2)

inst_46513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffc00000; valaddr_reg:x3; val_offset:139539*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139539*0 + 3*433*FLEN/8, x4, x1, x2)

inst_46514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffe00000; valaddr_reg:x3; val_offset:139542*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139542*0 + 3*434*FLEN/8, x4, x1, x2)

inst_46515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffff00000; valaddr_reg:x3; val_offset:139545*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139545*0 + 3*435*FLEN/8, x4, x1, x2)

inst_46516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffff80000; valaddr_reg:x3; val_offset:139548*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139548*0 + 3*436*FLEN/8, x4, x1, x2)

inst_46517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffc0000; valaddr_reg:x3; val_offset:139551*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139551*0 + 3*437*FLEN/8, x4, x1, x2)

inst_46518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffe0000; valaddr_reg:x3; val_offset:139554*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139554*0 + 3*438*FLEN/8, x4, x1, x2)

inst_46519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffff0000; valaddr_reg:x3; val_offset:139557*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139557*0 + 3*439*FLEN/8, x4, x1, x2)

inst_46520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffff8000; valaddr_reg:x3; val_offset:139560*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139560*0 + 3*440*FLEN/8, x4, x1, x2)

inst_46521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffffc000; valaddr_reg:x3; val_offset:139563*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139563*0 + 3*441*FLEN/8, x4, x1, x2)

inst_46522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffffe000; valaddr_reg:x3; val_offset:139566*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139566*0 + 3*442*FLEN/8, x4, x1, x2)

inst_46523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffff000; valaddr_reg:x3; val_offset:139569*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139569*0 + 3*443*FLEN/8, x4, x1, x2)

inst_46524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffff800; valaddr_reg:x3; val_offset:139572*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139572*0 + 3*444*FLEN/8, x4, x1, x2)

inst_46525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffffc00; valaddr_reg:x3; val_offset:139575*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139575*0 + 3*445*FLEN/8, x4, x1, x2)

inst_46526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffffe00; valaddr_reg:x3; val_offset:139578*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139578*0 + 3*446*FLEN/8, x4, x1, x2)

inst_46527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffffff00; valaddr_reg:x3; val_offset:139581*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139581*0 + 3*447*FLEN/8, x4, x1, x2)

inst_46528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffffff80; valaddr_reg:x3; val_offset:139584*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139584*0 + 3*448*FLEN/8, x4, x1, x2)

inst_46529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffffffc0; valaddr_reg:x3; val_offset:139587*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139587*0 + 3*449*FLEN/8, x4, x1, x2)

inst_46530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffffffe0; valaddr_reg:x3; val_offset:139590*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139590*0 + 3*450*FLEN/8, x4, x1, x2)

inst_46531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffffff0; valaddr_reg:x3; val_offset:139593*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139593*0 + 3*451*FLEN/8, x4, x1, x2)

inst_46532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffffff8; valaddr_reg:x3; val_offset:139596*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139596*0 + 3*452*FLEN/8, x4, x1, x2)

inst_46533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffffffc; valaddr_reg:x3; val_offset:139599*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139599*0 + 3*453*FLEN/8, x4, x1, x2)

inst_46534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cffffffffffffe; valaddr_reg:x3; val_offset:139602*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139602*0 + 3*454*FLEN/8, x4, x1, x2)

inst_46535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd796149975c91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d796149975c91; op2val:0x8000;
op3val:0x83cfffffffffffff; valaddr_reg:x3; val_offset:139605*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139605*0 + 3*455*FLEN/8, x4, x1, x2)

inst_46536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000000000000; valaddr_reg:x3; val_offset:139608*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139608*0 + 3*456*FLEN/8, x4, x1, x2)

inst_46537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000000000001; valaddr_reg:x3; val_offset:139611*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139611*0 + 3*457*FLEN/8, x4, x1, x2)

inst_46538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000000000003; valaddr_reg:x3; val_offset:139614*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139614*0 + 3*458*FLEN/8, x4, x1, x2)

inst_46539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000000000007; valaddr_reg:x3; val_offset:139617*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139617*0 + 3*459*FLEN/8, x4, x1, x2)

inst_46540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000000000000f; valaddr_reg:x3; val_offset:139620*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139620*0 + 3*460*FLEN/8, x4, x1, x2)

inst_46541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000000000001f; valaddr_reg:x3; val_offset:139623*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139623*0 + 3*461*FLEN/8, x4, x1, x2)

inst_46542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000000000003f; valaddr_reg:x3; val_offset:139626*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139626*0 + 3*462*FLEN/8, x4, x1, x2)

inst_46543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000000000007f; valaddr_reg:x3; val_offset:139629*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139629*0 + 3*463*FLEN/8, x4, x1, x2)

inst_46544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000000000000ff; valaddr_reg:x3; val_offset:139632*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139632*0 + 3*464*FLEN/8, x4, x1, x2)

inst_46545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000000000001ff; valaddr_reg:x3; val_offset:139635*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139635*0 + 3*465*FLEN/8, x4, x1, x2)

inst_46546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000000000003ff; valaddr_reg:x3; val_offset:139638*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139638*0 + 3*466*FLEN/8, x4, x1, x2)

inst_46547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000000000007ff; valaddr_reg:x3; val_offset:139641*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139641*0 + 3*467*FLEN/8, x4, x1, x2)

inst_46548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000000000fff; valaddr_reg:x3; val_offset:139644*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139644*0 + 3*468*FLEN/8, x4, x1, x2)

inst_46549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000000001fff; valaddr_reg:x3; val_offset:139647*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139647*0 + 3*469*FLEN/8, x4, x1, x2)

inst_46550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000000003fff; valaddr_reg:x3; val_offset:139650*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139650*0 + 3*470*FLEN/8, x4, x1, x2)

inst_46551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000000007fff; valaddr_reg:x3; val_offset:139653*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139653*0 + 3*471*FLEN/8, x4, x1, x2)

inst_46552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000000000ffff; valaddr_reg:x3; val_offset:139656*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139656*0 + 3*472*FLEN/8, x4, x1, x2)

inst_46553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000000001ffff; valaddr_reg:x3; val_offset:139659*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139659*0 + 3*473*FLEN/8, x4, x1, x2)

inst_46554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000000003ffff; valaddr_reg:x3; val_offset:139662*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139662*0 + 3*474*FLEN/8, x4, x1, x2)

inst_46555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000000007ffff; valaddr_reg:x3; val_offset:139665*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139665*0 + 3*475*FLEN/8, x4, x1, x2)

inst_46556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000000000fffff; valaddr_reg:x3; val_offset:139668*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139668*0 + 3*476*FLEN/8, x4, x1, x2)

inst_46557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000000001fffff; valaddr_reg:x3; val_offset:139671*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139671*0 + 3*477*FLEN/8, x4, x1, x2)

inst_46558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000000003fffff; valaddr_reg:x3; val_offset:139674*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139674*0 + 3*478*FLEN/8, x4, x1, x2)

inst_46559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000000007fffff; valaddr_reg:x3; val_offset:139677*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139677*0 + 3*479*FLEN/8, x4, x1, x2)

inst_46560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000000ffffff; valaddr_reg:x3; val_offset:139680*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139680*0 + 3*480*FLEN/8, x4, x1, x2)

inst_46561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000001ffffff; valaddr_reg:x3; val_offset:139683*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139683*0 + 3*481*FLEN/8, x4, x1, x2)

inst_46562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000003ffffff; valaddr_reg:x3; val_offset:139686*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139686*0 + 3*482*FLEN/8, x4, x1, x2)

inst_46563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000007ffffff; valaddr_reg:x3; val_offset:139689*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139689*0 + 3*483*FLEN/8, x4, x1, x2)

inst_46564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000000fffffff; valaddr_reg:x3; val_offset:139692*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139692*0 + 3*484*FLEN/8, x4, x1, x2)

inst_46565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000001fffffff; valaddr_reg:x3; val_offset:139695*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139695*0 + 3*485*FLEN/8, x4, x1, x2)

inst_46566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000003fffffff; valaddr_reg:x3; val_offset:139698*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139698*0 + 3*486*FLEN/8, x4, x1, x2)

inst_46567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000007fffffff; valaddr_reg:x3; val_offset:139701*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139701*0 + 3*487*FLEN/8, x4, x1, x2)

inst_46568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000000ffffffff; valaddr_reg:x3; val_offset:139704*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139704*0 + 3*488*FLEN/8, x4, x1, x2)

inst_46569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000001ffffffff; valaddr_reg:x3; val_offset:139707*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139707*0 + 3*489*FLEN/8, x4, x1, x2)

inst_46570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000003ffffffff; valaddr_reg:x3; val_offset:139710*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139710*0 + 3*490*FLEN/8, x4, x1, x2)

inst_46571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000007ffffffff; valaddr_reg:x3; val_offset:139713*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139713*0 + 3*491*FLEN/8, x4, x1, x2)

inst_46572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800000fffffffff; valaddr_reg:x3; val_offset:139716*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139716*0 + 3*492*FLEN/8, x4, x1, x2)

inst_46573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800001fffffffff; valaddr_reg:x3; val_offset:139719*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139719*0 + 3*493*FLEN/8, x4, x1, x2)

inst_46574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800003fffffffff; valaddr_reg:x3; val_offset:139722*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139722*0 + 3*494*FLEN/8, x4, x1, x2)

inst_46575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800007fffffffff; valaddr_reg:x3; val_offset:139725*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139725*0 + 3*495*FLEN/8, x4, x1, x2)

inst_46576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80000ffffffffff; valaddr_reg:x3; val_offset:139728*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139728*0 + 3*496*FLEN/8, x4, x1, x2)

inst_46577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80001ffffffffff; valaddr_reg:x3; val_offset:139731*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139731*0 + 3*497*FLEN/8, x4, x1, x2)

inst_46578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80003ffffffffff; valaddr_reg:x3; val_offset:139734*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139734*0 + 3*498*FLEN/8, x4, x1, x2)

inst_46579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80007ffffffffff; valaddr_reg:x3; val_offset:139737*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139737*0 + 3*499*FLEN/8, x4, x1, x2)

inst_46580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8000fffffffffff; valaddr_reg:x3; val_offset:139740*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139740*0 + 3*500*FLEN/8, x4, x1, x2)

inst_46581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8001fffffffffff; valaddr_reg:x3; val_offset:139743*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139743*0 + 3*501*FLEN/8, x4, x1, x2)

inst_46582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8003fffffffffff; valaddr_reg:x3; val_offset:139746*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139746*0 + 3*502*FLEN/8, x4, x1, x2)

inst_46583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb8007fffffffffff; valaddr_reg:x3; val_offset:139749*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139749*0 + 3*503*FLEN/8, x4, x1, x2)

inst_46584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb800ffffffffffff; valaddr_reg:x3; val_offset:139752*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139752*0 + 3*504*FLEN/8, x4, x1, x2)

inst_46585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb801ffffffffffff; valaddr_reg:x3; val_offset:139755*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139755*0 + 3*505*FLEN/8, x4, x1, x2)

inst_46586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb803ffffffffffff; valaddr_reg:x3; val_offset:139758*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139758*0 + 3*506*FLEN/8, x4, x1, x2)

inst_46587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb807ffffffffffff; valaddr_reg:x3; val_offset:139761*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139761*0 + 3*507*FLEN/8, x4, x1, x2)

inst_46588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb808000000000000; valaddr_reg:x3; val_offset:139764*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139764*0 + 3*508*FLEN/8, x4, x1, x2)

inst_46589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80c000000000000; valaddr_reg:x3; val_offset:139767*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139767*0 + 3*509*FLEN/8, x4, x1, x2)

inst_46590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80e000000000000; valaddr_reg:x3; val_offset:139770*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139770*0 + 3*510*FLEN/8, x4, x1, x2)

inst_46591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80f000000000000; valaddr_reg:x3; val_offset:139773*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139773*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_46592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80f800000000000; valaddr_reg:x3; val_offset:139776*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139776*0 + 3*512*FLEN/8, x4, x1, x2)

inst_46593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fc00000000000; valaddr_reg:x3; val_offset:139779*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139779*0 + 3*513*FLEN/8, x4, x1, x2)

inst_46594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fe00000000000; valaddr_reg:x3; val_offset:139782*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139782*0 + 3*514*FLEN/8, x4, x1, x2)

inst_46595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ff00000000000; valaddr_reg:x3; val_offset:139785*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139785*0 + 3*515*FLEN/8, x4, x1, x2)

inst_46596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ff80000000000; valaddr_reg:x3; val_offset:139788*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139788*0 + 3*516*FLEN/8, x4, x1, x2)

inst_46597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffc0000000000; valaddr_reg:x3; val_offset:139791*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139791*0 + 3*517*FLEN/8, x4, x1, x2)

inst_46598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffe0000000000; valaddr_reg:x3; val_offset:139794*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139794*0 + 3*518*FLEN/8, x4, x1, x2)

inst_46599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fff0000000000; valaddr_reg:x3; val_offset:139797*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139797*0 + 3*519*FLEN/8, x4, x1, x2)

inst_46600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fff8000000000; valaddr_reg:x3; val_offset:139800*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139800*0 + 3*520*FLEN/8, x4, x1, x2)

inst_46601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffc000000000; valaddr_reg:x3; val_offset:139803*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139803*0 + 3*521*FLEN/8, x4, x1, x2)

inst_46602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffe000000000; valaddr_reg:x3; val_offset:139806*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139806*0 + 3*522*FLEN/8, x4, x1, x2)

inst_46603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffff000000000; valaddr_reg:x3; val_offset:139809*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139809*0 + 3*523*FLEN/8, x4, x1, x2)

inst_46604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffff800000000; valaddr_reg:x3; val_offset:139812*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139812*0 + 3*524*FLEN/8, x4, x1, x2)

inst_46605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffc00000000; valaddr_reg:x3; val_offset:139815*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139815*0 + 3*525*FLEN/8, x4, x1, x2)

inst_46606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffe00000000; valaddr_reg:x3; val_offset:139818*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139818*0 + 3*526*FLEN/8, x4, x1, x2)

inst_46607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffff00000000; valaddr_reg:x3; val_offset:139821*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139821*0 + 3*527*FLEN/8, x4, x1, x2)

inst_46608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffff80000000; valaddr_reg:x3; val_offset:139824*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139824*0 + 3*528*FLEN/8, x4, x1, x2)

inst_46609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffc0000000; valaddr_reg:x3; val_offset:139827*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139827*0 + 3*529*FLEN/8, x4, x1, x2)

inst_46610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffe0000000; valaddr_reg:x3; val_offset:139830*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139830*0 + 3*530*FLEN/8, x4, x1, x2)

inst_46611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffff0000000; valaddr_reg:x3; val_offset:139833*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139833*0 + 3*531*FLEN/8, x4, x1, x2)

inst_46612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffff8000000; valaddr_reg:x3; val_offset:139836*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139836*0 + 3*532*FLEN/8, x4, x1, x2)

inst_46613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffc000000; valaddr_reg:x3; val_offset:139839*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139839*0 + 3*533*FLEN/8, x4, x1, x2)

inst_46614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffe000000; valaddr_reg:x3; val_offset:139842*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139842*0 + 3*534*FLEN/8, x4, x1, x2)

inst_46615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffff000000; valaddr_reg:x3; val_offset:139845*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139845*0 + 3*535*FLEN/8, x4, x1, x2)

inst_46616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffff800000; valaddr_reg:x3; val_offset:139848*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139848*0 + 3*536*FLEN/8, x4, x1, x2)

inst_46617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffc00000; valaddr_reg:x3; val_offset:139851*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139851*0 + 3*537*FLEN/8, x4, x1, x2)

inst_46618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffe00000; valaddr_reg:x3; val_offset:139854*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139854*0 + 3*538*FLEN/8, x4, x1, x2)

inst_46619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffff00000; valaddr_reg:x3; val_offset:139857*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139857*0 + 3*539*FLEN/8, x4, x1, x2)

inst_46620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffff80000; valaddr_reg:x3; val_offset:139860*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139860*0 + 3*540*FLEN/8, x4, x1, x2)

inst_46621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffc0000; valaddr_reg:x3; val_offset:139863*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139863*0 + 3*541*FLEN/8, x4, x1, x2)

inst_46622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffe0000; valaddr_reg:x3; val_offset:139866*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139866*0 + 3*542*FLEN/8, x4, x1, x2)

inst_46623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffff0000; valaddr_reg:x3; val_offset:139869*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139869*0 + 3*543*FLEN/8, x4, x1, x2)

inst_46624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffff8000; valaddr_reg:x3; val_offset:139872*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139872*0 + 3*544*FLEN/8, x4, x1, x2)

inst_46625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffffc000; valaddr_reg:x3; val_offset:139875*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139875*0 + 3*545*FLEN/8, x4, x1, x2)

inst_46626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffffe000; valaddr_reg:x3; val_offset:139878*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139878*0 + 3*546*FLEN/8, x4, x1, x2)

inst_46627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffff000; valaddr_reg:x3; val_offset:139881*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139881*0 + 3*547*FLEN/8, x4, x1, x2)

inst_46628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffff800; valaddr_reg:x3; val_offset:139884*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139884*0 + 3*548*FLEN/8, x4, x1, x2)

inst_46629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffffc00; valaddr_reg:x3; val_offset:139887*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139887*0 + 3*549*FLEN/8, x4, x1, x2)

inst_46630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffffe00; valaddr_reg:x3; val_offset:139890*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139890*0 + 3*550*FLEN/8, x4, x1, x2)

inst_46631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffffff00; valaddr_reg:x3; val_offset:139893*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139893*0 + 3*551*FLEN/8, x4, x1, x2)

inst_46632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffffff80; valaddr_reg:x3; val_offset:139896*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139896*0 + 3*552*FLEN/8, x4, x1, x2)

inst_46633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffffffc0; valaddr_reg:x3; val_offset:139899*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139899*0 + 3*553*FLEN/8, x4, x1, x2)

inst_46634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffffffe0; valaddr_reg:x3; val_offset:139902*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139902*0 + 3*554*FLEN/8, x4, x1, x2)

inst_46635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffffff0; valaddr_reg:x3; val_offset:139905*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139905*0 + 3*555*FLEN/8, x4, x1, x2)

inst_46636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffffff8; valaddr_reg:x3; val_offset:139908*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139908*0 + 3*556*FLEN/8, x4, x1, x2)

inst_46637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffffffc; valaddr_reg:x3; val_offset:139911*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139911*0 + 3*557*FLEN/8, x4, x1, x2)

inst_46638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80ffffffffffffe; valaddr_reg:x3; val_offset:139914*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139914*0 + 3*558*FLEN/8, x4, x1, x2)

inst_46639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x380 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xb80fffffffffffff; valaddr_reg:x3; val_offset:139917*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139917*0 + 3*559*FLEN/8, x4, x1, x2)

inst_46640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:139920*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139920*0 + 3*560*FLEN/8, x4, x1, x2)

inst_46641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:139923*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139923*0 + 3*561*FLEN/8, x4, x1, x2)

inst_46642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:139926*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139926*0 + 3*562*FLEN/8, x4, x1, x2)

inst_46643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:139929*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139929*0 + 3*563*FLEN/8, x4, x1, x2)

inst_46644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:139932*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139932*0 + 3*564*FLEN/8, x4, x1, x2)

inst_46645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:139935*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139935*0 + 3*565*FLEN/8, x4, x1, x2)

inst_46646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:139938*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139938*0 + 3*566*FLEN/8, x4, x1, x2)

inst_46647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:139941*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139941*0 + 3*567*FLEN/8, x4, x1, x2)

inst_46648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:139944*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139944*0 + 3*568*FLEN/8, x4, x1, x2)

inst_46649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:139947*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139947*0 + 3*569*FLEN/8, x4, x1, x2)

inst_46650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:139950*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139950*0 + 3*570*FLEN/8, x4, x1, x2)

inst_46651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:139953*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139953*0 + 3*571*FLEN/8, x4, x1, x2)

inst_46652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:139956*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139956*0 + 3*572*FLEN/8, x4, x1, x2)

inst_46653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:139959*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139959*0 + 3*573*FLEN/8, x4, x1, x2)

inst_46654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:139962*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139962*0 + 3*574*FLEN/8, x4, x1, x2)

inst_46655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:139965*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139965*0 + 3*575*FLEN/8, x4, x1, x2)

inst_46656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:139968*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139968*0 + 3*576*FLEN/8, x4, x1, x2)

inst_46657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:139971*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139971*0 + 3*577*FLEN/8, x4, x1, x2)

inst_46658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:139974*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139974*0 + 3*578*FLEN/8, x4, x1, x2)

inst_46659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:139977*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139977*0 + 3*579*FLEN/8, x4, x1, x2)

inst_46660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:139980*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139980*0 + 3*580*FLEN/8, x4, x1, x2)

inst_46661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd7e66b024b5ef and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x15c0f3cb2f6ee and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d7e66b024b5ef; op2val:0x9fd15c0f3cb2f6ee;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:139983*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139983*0 + 3*581*FLEN/8, x4, x1, x2)

inst_46662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:139986*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139986*0 + 3*582*FLEN/8, x4, x1, x2)

inst_46663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:139989*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139989*0 + 3*583*FLEN/8, x4, x1, x2)

inst_46664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:139992*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139992*0 + 3*584*FLEN/8, x4, x1, x2)

inst_46665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:139995*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139995*0 + 3*585*FLEN/8, x4, x1, x2)

inst_46666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:139998*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139998*0 + 3*586*FLEN/8, x4, x1, x2)

inst_46667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:140001*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140001*0 + 3*587*FLEN/8, x4, x1, x2)

inst_46668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:140004*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140004*0 + 3*588*FLEN/8, x4, x1, x2)

inst_46669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:140007*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140007*0 + 3*589*FLEN/8, x4, x1, x2)

inst_46670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:140010*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140010*0 + 3*590*FLEN/8, x4, x1, x2)

inst_46671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:140013*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140013*0 + 3*591*FLEN/8, x4, x1, x2)

inst_46672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:140016*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140016*0 + 3*592*FLEN/8, x4, x1, x2)

inst_46673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:140019*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140019*0 + 3*593*FLEN/8, x4, x1, x2)

inst_46674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:140022*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140022*0 + 3*594*FLEN/8, x4, x1, x2)

inst_46675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:140025*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140025*0 + 3*595*FLEN/8, x4, x1, x2)

inst_46676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:140028*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140028*0 + 3*596*FLEN/8, x4, x1, x2)

inst_46677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:140031*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140031*0 + 3*597*FLEN/8, x4, x1, x2)

inst_46678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:140034*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140034*0 + 3*598*FLEN/8, x4, x1, x2)

inst_46679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:140037*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140037*0 + 3*599*FLEN/8, x4, x1, x2)

inst_46680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:140040*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140040*0 + 3*600*FLEN/8, x4, x1, x2)

inst_46681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:140043*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140043*0 + 3*601*FLEN/8, x4, x1, x2)

inst_46682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:140046*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140046*0 + 3*602*FLEN/8, x4, x1, x2)

inst_46683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:140049*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140049*0 + 3*603*FLEN/8, x4, x1, x2)

inst_46684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000000000000; valaddr_reg:x3; val_offset:140052*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140052*0 + 3*604*FLEN/8, x4, x1, x2)

inst_46685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000000000001; valaddr_reg:x3; val_offset:140055*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140055*0 + 3*605*FLEN/8, x4, x1, x2)

inst_46686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000000000003; valaddr_reg:x3; val_offset:140058*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140058*0 + 3*606*FLEN/8, x4, x1, x2)

inst_46687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000000000007; valaddr_reg:x3; val_offset:140061*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140061*0 + 3*607*FLEN/8, x4, x1, x2)

inst_46688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000000000000f; valaddr_reg:x3; val_offset:140064*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140064*0 + 3*608*FLEN/8, x4, x1, x2)

inst_46689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000000000001f; valaddr_reg:x3; val_offset:140067*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140067*0 + 3*609*FLEN/8, x4, x1, x2)

inst_46690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000000000003f; valaddr_reg:x3; val_offset:140070*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140070*0 + 3*610*FLEN/8, x4, x1, x2)

inst_46691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000000000007f; valaddr_reg:x3; val_offset:140073*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140073*0 + 3*611*FLEN/8, x4, x1, x2)

inst_46692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00000000000ff; valaddr_reg:x3; val_offset:140076*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140076*0 + 3*612*FLEN/8, x4, x1, x2)

inst_46693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00000000001ff; valaddr_reg:x3; val_offset:140079*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140079*0 + 3*613*FLEN/8, x4, x1, x2)

inst_46694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00000000003ff; valaddr_reg:x3; val_offset:140082*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140082*0 + 3*614*FLEN/8, x4, x1, x2)

inst_46695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00000000007ff; valaddr_reg:x3; val_offset:140085*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140085*0 + 3*615*FLEN/8, x4, x1, x2)

inst_46696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000000000fff; valaddr_reg:x3; val_offset:140088*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140088*0 + 3*616*FLEN/8, x4, x1, x2)

inst_46697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000000001fff; valaddr_reg:x3; val_offset:140091*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140091*0 + 3*617*FLEN/8, x4, x1, x2)

inst_46698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000000003fff; valaddr_reg:x3; val_offset:140094*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140094*0 + 3*618*FLEN/8, x4, x1, x2)

inst_46699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000000007fff; valaddr_reg:x3; val_offset:140097*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140097*0 + 3*619*FLEN/8, x4, x1, x2)

inst_46700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000000000ffff; valaddr_reg:x3; val_offset:140100*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140100*0 + 3*620*FLEN/8, x4, x1, x2)

inst_46701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000000001ffff; valaddr_reg:x3; val_offset:140103*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140103*0 + 3*621*FLEN/8, x4, x1, x2)

inst_46702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000000003ffff; valaddr_reg:x3; val_offset:140106*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140106*0 + 3*622*FLEN/8, x4, x1, x2)

inst_46703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000000007ffff; valaddr_reg:x3; val_offset:140109*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140109*0 + 3*623*FLEN/8, x4, x1, x2)

inst_46704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00000000fffff; valaddr_reg:x3; val_offset:140112*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140112*0 + 3*624*FLEN/8, x4, x1, x2)

inst_46705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00000001fffff; valaddr_reg:x3; val_offset:140115*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140115*0 + 3*625*FLEN/8, x4, x1, x2)

inst_46706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00000003fffff; valaddr_reg:x3; val_offset:140118*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140118*0 + 3*626*FLEN/8, x4, x1, x2)

inst_46707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00000007fffff; valaddr_reg:x3; val_offset:140121*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140121*0 + 3*627*FLEN/8, x4, x1, x2)

inst_46708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000000ffffff; valaddr_reg:x3; val_offset:140124*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140124*0 + 3*628*FLEN/8, x4, x1, x2)

inst_46709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000001ffffff; valaddr_reg:x3; val_offset:140127*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140127*0 + 3*629*FLEN/8, x4, x1, x2)

inst_46710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000003ffffff; valaddr_reg:x3; val_offset:140130*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140130*0 + 3*630*FLEN/8, x4, x1, x2)

inst_46711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000007ffffff; valaddr_reg:x3; val_offset:140133*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140133*0 + 3*631*FLEN/8, x4, x1, x2)

inst_46712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000000fffffff; valaddr_reg:x3; val_offset:140136*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140136*0 + 3*632*FLEN/8, x4, x1, x2)

inst_46713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000001fffffff; valaddr_reg:x3; val_offset:140139*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140139*0 + 3*633*FLEN/8, x4, x1, x2)

inst_46714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000003fffffff; valaddr_reg:x3; val_offset:140142*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140142*0 + 3*634*FLEN/8, x4, x1, x2)

inst_46715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000007fffffff; valaddr_reg:x3; val_offset:140145*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140145*0 + 3*635*FLEN/8, x4, x1, x2)

inst_46716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00000ffffffff; valaddr_reg:x3; val_offset:140148*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140148*0 + 3*636*FLEN/8, x4, x1, x2)

inst_46717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00001ffffffff; valaddr_reg:x3; val_offset:140151*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140151*0 + 3*637*FLEN/8, x4, x1, x2)

inst_46718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00003ffffffff; valaddr_reg:x3; val_offset:140154*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140154*0 + 3*638*FLEN/8, x4, x1, x2)

inst_46719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00007ffffffff; valaddr_reg:x3; val_offset:140157*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140157*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_46720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0000fffffffff; valaddr_reg:x3; val_offset:140160*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140160*0 + 3*640*FLEN/8, x4, x1, x2)

inst_46721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0001fffffffff; valaddr_reg:x3; val_offset:140163*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140163*0 + 3*641*FLEN/8, x4, x1, x2)

inst_46722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0003fffffffff; valaddr_reg:x3; val_offset:140166*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140166*0 + 3*642*FLEN/8, x4, x1, x2)

inst_46723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0007fffffffff; valaddr_reg:x3; val_offset:140169*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140169*0 + 3*643*FLEN/8, x4, x1, x2)

inst_46724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a000ffffffffff; valaddr_reg:x3; val_offset:140172*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140172*0 + 3*644*FLEN/8, x4, x1, x2)

inst_46725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a001ffffffffff; valaddr_reg:x3; val_offset:140175*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140175*0 + 3*645*FLEN/8, x4, x1, x2)

inst_46726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a003ffffffffff; valaddr_reg:x3; val_offset:140178*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140178*0 + 3*646*FLEN/8, x4, x1, x2)

inst_46727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a007ffffffffff; valaddr_reg:x3; val_offset:140181*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140181*0 + 3*647*FLEN/8, x4, x1, x2)

inst_46728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a00fffffffffff; valaddr_reg:x3; val_offset:140184*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140184*0 + 3*648*FLEN/8, x4, x1, x2)

inst_46729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a01fffffffffff; valaddr_reg:x3; val_offset:140187*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140187*0 + 3*649*FLEN/8, x4, x1, x2)

inst_46730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a03fffffffffff; valaddr_reg:x3; val_offset:140190*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140190*0 + 3*650*FLEN/8, x4, x1, x2)

inst_46731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a07fffffffffff; valaddr_reg:x3; val_offset:140193*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140193*0 + 3*651*FLEN/8, x4, x1, x2)

inst_46732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a0ffffffffffff; valaddr_reg:x3; val_offset:140196*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140196*0 + 3*652*FLEN/8, x4, x1, x2)

inst_46733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a1ffffffffffff; valaddr_reg:x3; val_offset:140199*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140199*0 + 3*653*FLEN/8, x4, x1, x2)

inst_46734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a3ffffffffffff; valaddr_reg:x3; val_offset:140202*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140202*0 + 3*654*FLEN/8, x4, x1, x2)

inst_46735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a7ffffffffffff; valaddr_reg:x3; val_offset:140205*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140205*0 + 3*655*FLEN/8, x4, x1, x2)

inst_46736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81a8000000000000; valaddr_reg:x3; val_offset:140208*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140208*0 + 3*656*FLEN/8, x4, x1, x2)

inst_46737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81ac000000000000; valaddr_reg:x3; val_offset:140211*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140211*0 + 3*657*FLEN/8, x4, x1, x2)

inst_46738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81ae000000000000; valaddr_reg:x3; val_offset:140214*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140214*0 + 3*658*FLEN/8, x4, x1, x2)

inst_46739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81af000000000000; valaddr_reg:x3; val_offset:140217*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140217*0 + 3*659*FLEN/8, x4, x1, x2)

inst_46740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81af800000000000; valaddr_reg:x3; val_offset:140220*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140220*0 + 3*660*FLEN/8, x4, x1, x2)

inst_46741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afc00000000000; valaddr_reg:x3; val_offset:140223*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140223*0 + 3*661*FLEN/8, x4, x1, x2)

inst_46742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afe00000000000; valaddr_reg:x3; val_offset:140226*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140226*0 + 3*662*FLEN/8, x4, x1, x2)

inst_46743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81aff00000000000; valaddr_reg:x3; val_offset:140229*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140229*0 + 3*663*FLEN/8, x4, x1, x2)

inst_46744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81aff80000000000; valaddr_reg:x3; val_offset:140232*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140232*0 + 3*664*FLEN/8, x4, x1, x2)

inst_46745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affc0000000000; valaddr_reg:x3; val_offset:140235*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140235*0 + 3*665*FLEN/8, x4, x1, x2)

inst_46746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affe0000000000; valaddr_reg:x3; val_offset:140238*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140238*0 + 3*666*FLEN/8, x4, x1, x2)

inst_46747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afff0000000000; valaddr_reg:x3; val_offset:140241*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140241*0 + 3*667*FLEN/8, x4, x1, x2)

inst_46748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afff8000000000; valaddr_reg:x3; val_offset:140244*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140244*0 + 3*668*FLEN/8, x4, x1, x2)

inst_46749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffc000000000; valaddr_reg:x3; val_offset:140247*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140247*0 + 3*669*FLEN/8, x4, x1, x2)

inst_46750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffe000000000; valaddr_reg:x3; val_offset:140250*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140250*0 + 3*670*FLEN/8, x4, x1, x2)

inst_46751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affff000000000; valaddr_reg:x3; val_offset:140253*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140253*0 + 3*671*FLEN/8, x4, x1, x2)

inst_46752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affff800000000; valaddr_reg:x3; val_offset:140256*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140256*0 + 3*672*FLEN/8, x4, x1, x2)

inst_46753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffc00000000; valaddr_reg:x3; val_offset:140259*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140259*0 + 3*673*FLEN/8, x4, x1, x2)

inst_46754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffe00000000; valaddr_reg:x3; val_offset:140262*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140262*0 + 3*674*FLEN/8, x4, x1, x2)

inst_46755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffff00000000; valaddr_reg:x3; val_offset:140265*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140265*0 + 3*675*FLEN/8, x4, x1, x2)

inst_46756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffff80000000; valaddr_reg:x3; val_offset:140268*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140268*0 + 3*676*FLEN/8, x4, x1, x2)

inst_46757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffc0000000; valaddr_reg:x3; val_offset:140271*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140271*0 + 3*677*FLEN/8, x4, x1, x2)

inst_46758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffe0000000; valaddr_reg:x3; val_offset:140274*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140274*0 + 3*678*FLEN/8, x4, x1, x2)

inst_46759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffff0000000; valaddr_reg:x3; val_offset:140277*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140277*0 + 3*679*FLEN/8, x4, x1, x2)

inst_46760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffff8000000; valaddr_reg:x3; val_offset:140280*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140280*0 + 3*680*FLEN/8, x4, x1, x2)

inst_46761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffc000000; valaddr_reg:x3; val_offset:140283*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140283*0 + 3*681*FLEN/8, x4, x1, x2)

inst_46762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffe000000; valaddr_reg:x3; val_offset:140286*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140286*0 + 3*682*FLEN/8, x4, x1, x2)

inst_46763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffff000000; valaddr_reg:x3; val_offset:140289*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140289*0 + 3*683*FLEN/8, x4, x1, x2)

inst_46764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffff800000; valaddr_reg:x3; val_offset:140292*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140292*0 + 3*684*FLEN/8, x4, x1, x2)

inst_46765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffc00000; valaddr_reg:x3; val_offset:140295*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140295*0 + 3*685*FLEN/8, x4, x1, x2)

inst_46766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffe00000; valaddr_reg:x3; val_offset:140298*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140298*0 + 3*686*FLEN/8, x4, x1, x2)

inst_46767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffff00000; valaddr_reg:x3; val_offset:140301*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140301*0 + 3*687*FLEN/8, x4, x1, x2)

inst_46768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffff80000; valaddr_reg:x3; val_offset:140304*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140304*0 + 3*688*FLEN/8, x4, x1, x2)

inst_46769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffc0000; valaddr_reg:x3; val_offset:140307*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140307*0 + 3*689*FLEN/8, x4, x1, x2)

inst_46770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffe0000; valaddr_reg:x3; val_offset:140310*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140310*0 + 3*690*FLEN/8, x4, x1, x2)

inst_46771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffff0000; valaddr_reg:x3; val_offset:140313*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140313*0 + 3*691*FLEN/8, x4, x1, x2)

inst_46772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffff8000; valaddr_reg:x3; val_offset:140316*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140316*0 + 3*692*FLEN/8, x4, x1, x2)

inst_46773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffffc000; valaddr_reg:x3; val_offset:140319*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140319*0 + 3*693*FLEN/8, x4, x1, x2)

inst_46774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffffe000; valaddr_reg:x3; val_offset:140322*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140322*0 + 3*694*FLEN/8, x4, x1, x2)

inst_46775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffff000; valaddr_reg:x3; val_offset:140325*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140325*0 + 3*695*FLEN/8, x4, x1, x2)

inst_46776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffff800; valaddr_reg:x3; val_offset:140328*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140328*0 + 3*696*FLEN/8, x4, x1, x2)

inst_46777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffffc00; valaddr_reg:x3; val_offset:140331*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140331*0 + 3*697*FLEN/8, x4, x1, x2)

inst_46778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffffe00; valaddr_reg:x3; val_offset:140334*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140334*0 + 3*698*FLEN/8, x4, x1, x2)

inst_46779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffffff00; valaddr_reg:x3; val_offset:140337*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140337*0 + 3*699*FLEN/8, x4, x1, x2)

inst_46780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffffff80; valaddr_reg:x3; val_offset:140340*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140340*0 + 3*700*FLEN/8, x4, x1, x2)

inst_46781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffffffc0; valaddr_reg:x3; val_offset:140343*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140343*0 + 3*701*FLEN/8, x4, x1, x2)

inst_46782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffffffe0; valaddr_reg:x3; val_offset:140346*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140346*0 + 3*702*FLEN/8, x4, x1, x2)

inst_46783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffffff0; valaddr_reg:x3; val_offset:140349*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140349*0 + 3*703*FLEN/8, x4, x1, x2)

inst_46784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffffff8; valaddr_reg:x3; val_offset:140352*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140352*0 + 3*704*FLEN/8, x4, x1, x2)

inst_46785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffffffc; valaddr_reg:x3; val_offset:140355*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140355*0 + 3*705*FLEN/8, x4, x1, x2)

inst_46786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81affffffffffffe; valaddr_reg:x3; val_offset:140358*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140358*0 + 3*706*FLEN/8, x4, x1, x2)

inst_46787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdab05ef736549 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dab05ef736549; op2val:0x8000;
op3val:0x81afffffffffffff; valaddr_reg:x3; val_offset:140361*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140361*0 + 3*707*FLEN/8, x4, x1, x2)

inst_46788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000000000000; valaddr_reg:x3; val_offset:140364*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140364*0 + 3*708*FLEN/8, x4, x1, x2)

inst_46789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000000000001; valaddr_reg:x3; val_offset:140367*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140367*0 + 3*709*FLEN/8, x4, x1, x2)

inst_46790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000000000003; valaddr_reg:x3; val_offset:140370*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140370*0 + 3*710*FLEN/8, x4, x1, x2)

inst_46791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000000000007; valaddr_reg:x3; val_offset:140373*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140373*0 + 3*711*FLEN/8, x4, x1, x2)

inst_46792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000000000000f; valaddr_reg:x3; val_offset:140376*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140376*0 + 3*712*FLEN/8, x4, x1, x2)

inst_46793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000000000001f; valaddr_reg:x3; val_offset:140379*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140379*0 + 3*713*FLEN/8, x4, x1, x2)

inst_46794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000000000003f; valaddr_reg:x3; val_offset:140382*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140382*0 + 3*714*FLEN/8, x4, x1, x2)

inst_46795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000000000007f; valaddr_reg:x3; val_offset:140385*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140385*0 + 3*715*FLEN/8, x4, x1, x2)

inst_46796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00000000000ff; valaddr_reg:x3; val_offset:140388*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140388*0 + 3*716*FLEN/8, x4, x1, x2)

inst_46797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00000000001ff; valaddr_reg:x3; val_offset:140391*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140391*0 + 3*717*FLEN/8, x4, x1, x2)

inst_46798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00000000003ff; valaddr_reg:x3; val_offset:140394*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140394*0 + 3*718*FLEN/8, x4, x1, x2)

inst_46799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00000000007ff; valaddr_reg:x3; val_offset:140397*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140397*0 + 3*719*FLEN/8, x4, x1, x2)

inst_46800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000000000fff; valaddr_reg:x3; val_offset:140400*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140400*0 + 3*720*FLEN/8, x4, x1, x2)

inst_46801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000000001fff; valaddr_reg:x3; val_offset:140403*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140403*0 + 3*721*FLEN/8, x4, x1, x2)

inst_46802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000000003fff; valaddr_reg:x3; val_offset:140406*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140406*0 + 3*722*FLEN/8, x4, x1, x2)

inst_46803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000000007fff; valaddr_reg:x3; val_offset:140409*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140409*0 + 3*723*FLEN/8, x4, x1, x2)

inst_46804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000000000ffff; valaddr_reg:x3; val_offset:140412*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140412*0 + 3*724*FLEN/8, x4, x1, x2)

inst_46805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000000001ffff; valaddr_reg:x3; val_offset:140415*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140415*0 + 3*725*FLEN/8, x4, x1, x2)

inst_46806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000000003ffff; valaddr_reg:x3; val_offset:140418*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140418*0 + 3*726*FLEN/8, x4, x1, x2)

inst_46807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000000007ffff; valaddr_reg:x3; val_offset:140421*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140421*0 + 3*727*FLEN/8, x4, x1, x2)

inst_46808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00000000fffff; valaddr_reg:x3; val_offset:140424*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140424*0 + 3*728*FLEN/8, x4, x1, x2)

inst_46809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00000001fffff; valaddr_reg:x3; val_offset:140427*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140427*0 + 3*729*FLEN/8, x4, x1, x2)

inst_46810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00000003fffff; valaddr_reg:x3; val_offset:140430*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140430*0 + 3*730*FLEN/8, x4, x1, x2)

inst_46811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00000007fffff; valaddr_reg:x3; val_offset:140433*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140433*0 + 3*731*FLEN/8, x4, x1, x2)

inst_46812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000000ffffff; valaddr_reg:x3; val_offset:140436*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140436*0 + 3*732*FLEN/8, x4, x1, x2)

inst_46813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000001ffffff; valaddr_reg:x3; val_offset:140439*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140439*0 + 3*733*FLEN/8, x4, x1, x2)

inst_46814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000003ffffff; valaddr_reg:x3; val_offset:140442*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140442*0 + 3*734*FLEN/8, x4, x1, x2)

inst_46815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000007ffffff; valaddr_reg:x3; val_offset:140445*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140445*0 + 3*735*FLEN/8, x4, x1, x2)

inst_46816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000000fffffff; valaddr_reg:x3; val_offset:140448*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140448*0 + 3*736*FLEN/8, x4, x1, x2)

inst_46817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000001fffffff; valaddr_reg:x3; val_offset:140451*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140451*0 + 3*737*FLEN/8, x4, x1, x2)

inst_46818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000003fffffff; valaddr_reg:x3; val_offset:140454*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140454*0 + 3*738*FLEN/8, x4, x1, x2)

inst_46819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000007fffffff; valaddr_reg:x3; val_offset:140457*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140457*0 + 3*739*FLEN/8, x4, x1, x2)

inst_46820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00000ffffffff; valaddr_reg:x3; val_offset:140460*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140460*0 + 3*740*FLEN/8, x4, x1, x2)

inst_46821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00001ffffffff; valaddr_reg:x3; val_offset:140463*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140463*0 + 3*741*FLEN/8, x4, x1, x2)

inst_46822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00003ffffffff; valaddr_reg:x3; val_offset:140466*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140466*0 + 3*742*FLEN/8, x4, x1, x2)

inst_46823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00007ffffffff; valaddr_reg:x3; val_offset:140469*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140469*0 + 3*743*FLEN/8, x4, x1, x2)

inst_46824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0000fffffffff; valaddr_reg:x3; val_offset:140472*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140472*0 + 3*744*FLEN/8, x4, x1, x2)

inst_46825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0001fffffffff; valaddr_reg:x3; val_offset:140475*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140475*0 + 3*745*FLEN/8, x4, x1, x2)

inst_46826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0003fffffffff; valaddr_reg:x3; val_offset:140478*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140478*0 + 3*746*FLEN/8, x4, x1, x2)

inst_46827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0007fffffffff; valaddr_reg:x3; val_offset:140481*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140481*0 + 3*747*FLEN/8, x4, x1, x2)

inst_46828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d000ffffffffff; valaddr_reg:x3; val_offset:140484*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140484*0 + 3*748*FLEN/8, x4, x1, x2)

inst_46829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d001ffffffffff; valaddr_reg:x3; val_offset:140487*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140487*0 + 3*749*FLEN/8, x4, x1, x2)

inst_46830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d003ffffffffff; valaddr_reg:x3; val_offset:140490*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140490*0 + 3*750*FLEN/8, x4, x1, x2)

inst_46831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d007ffffffffff; valaddr_reg:x3; val_offset:140493*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140493*0 + 3*751*FLEN/8, x4, x1, x2)

inst_46832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d00fffffffffff; valaddr_reg:x3; val_offset:140496*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140496*0 + 3*752*FLEN/8, x4, x1, x2)

inst_46833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d01fffffffffff; valaddr_reg:x3; val_offset:140499*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140499*0 + 3*753*FLEN/8, x4, x1, x2)

inst_46834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d03fffffffffff; valaddr_reg:x3; val_offset:140502*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140502*0 + 3*754*FLEN/8, x4, x1, x2)

inst_46835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d07fffffffffff; valaddr_reg:x3; val_offset:140505*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140505*0 + 3*755*FLEN/8, x4, x1, x2)

inst_46836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d0ffffffffffff; valaddr_reg:x3; val_offset:140508*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140508*0 + 3*756*FLEN/8, x4, x1, x2)

inst_46837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d1ffffffffffff; valaddr_reg:x3; val_offset:140511*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140511*0 + 3*757*FLEN/8, x4, x1, x2)

inst_46838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d3ffffffffffff; valaddr_reg:x3; val_offset:140514*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140514*0 + 3*758*FLEN/8, x4, x1, x2)

inst_46839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d7ffffffffffff; valaddr_reg:x3; val_offset:140517*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140517*0 + 3*759*FLEN/8, x4, x1, x2)

inst_46840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8d8000000000000; valaddr_reg:x3; val_offset:140520*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140520*0 + 3*760*FLEN/8, x4, x1, x2)

inst_46841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dc000000000000; valaddr_reg:x3; val_offset:140523*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140523*0 + 3*761*FLEN/8, x4, x1, x2)

inst_46842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8de000000000000; valaddr_reg:x3; val_offset:140526*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140526*0 + 3*762*FLEN/8, x4, x1, x2)

inst_46843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8df000000000000; valaddr_reg:x3; val_offset:140529*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140529*0 + 3*763*FLEN/8, x4, x1, x2)

inst_46844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8df800000000000; valaddr_reg:x3; val_offset:140532*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140532*0 + 3*764*FLEN/8, x4, x1, x2)

inst_46845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfc00000000000; valaddr_reg:x3; val_offset:140535*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140535*0 + 3*765*FLEN/8, x4, x1, x2)

inst_46846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfe00000000000; valaddr_reg:x3; val_offset:140538*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140538*0 + 3*766*FLEN/8, x4, x1, x2)

inst_46847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dff00000000000; valaddr_reg:x3; val_offset:140541*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140541*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4274197521351311359,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4274478996328022015,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4275041946281443327,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4276167846188285951,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4276167846188285952,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4277293746095128576,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4277856696048549888,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278138171025260544,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278278908513615872,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278349277257793536,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278384461629882368,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278402053815926784,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278410849908948992,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278415247955460096,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278417446978715648,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278418546490343424,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419096246157312,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419371124064256,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419508563017728,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419577282494464,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419611642232832,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419628822102016,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419637412036608,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419641707003904,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419643854487552,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419644928229376,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419645465100288,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419645733535744,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419645867753472,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419645934862336,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419645968416768,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419645985193984,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419645993582592,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419645997776896,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419645999874048,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646000922624,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001446912,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001709056,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001840128,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001905664,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001938432,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001954816,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001963008,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001967104,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001969152,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001970176,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001970688,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001970944,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001971072,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001971136,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001971168,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001971184,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001971192,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001971196,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001971198,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4278419646001971199,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889726888402587409,64,FLEN)
NAN_BOXED(2324284707166823826,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449344,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449345,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449347,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449351,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449359,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449375,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449407,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449471,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449599,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449855,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467450367,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467451391,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467453439,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467457535,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467465727,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467482111,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467514879,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467580415,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467711487,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467973631,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385468497919,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385469546495,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385471643647,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385475837951,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385484226559,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385501003775,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385534558207,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385601667071,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385735884799,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640386004320255,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640386541191167,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640387614932991,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640389762416639,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640394057383935,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640402647318527,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640419827187711,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640454186926079,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640522906402815,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640660345356287,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640935223263231,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175641484979077119,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175642584490704895,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175644783513960447,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175649181560471551,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175657977653493759,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175675569839538175,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175710754211627007,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175781122955804671,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175921860444159999,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(176203335420870655,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(176766285374291967,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(177892185281134591,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(177892185281134592,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(179018085187977216,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(179581035141398528,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(179862510118109184,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180003247606464512,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180073616350642176,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180108800722731008,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180126392908775424,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180135189001797632,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180139587048308736,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180141786071564288,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180142885583192064,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143435339005952,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143710216912896,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143847655866368,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143916375343104,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143950735081472,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143967914950656,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143976504885248,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143980799852544,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143982947336192,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143984021078016,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143984557948928,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143984826384384,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143984960602112,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985027710976,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985061265408,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985078042624,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985086431232,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985090625536,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985092722688,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985093771264,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094295552,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094557696,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094688768,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094754304,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094787072,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094803456,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094811648,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094815744,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094817792,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094818816,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819328,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819584,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819712,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819776,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819808,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819824,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819832,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819836,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819838,64,FLEN)
NAN_BOXED(6889743287382346185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819839,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149696,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149697,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149699,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149703,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149711,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149727,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149759,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149823,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149951,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421150207,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421150719,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421151743,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421153791,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421157887,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421166079,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421182463,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421215231,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421280767,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421411839,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421673983,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826422198271,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826423246847,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826425343999,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826429538303,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826437926911,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826454704127,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826488258559,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826555367423,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826689585151,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826958020607,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472827494891519,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472828568633343,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472830716116991,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472835011084287,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472843601018879,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472860780888063,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472895140626431,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472963860103167,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349473101299056639,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349473376176963583,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349473925932777471,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349475025444405247,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349477224467660799,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349481622514171903,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349490418607194111,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349508010793238527,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349543195165327359,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349613563909505023,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349754301397860351,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9350035776374571007,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9350598726327992319,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9351724626234834943,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9351724626234834944,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9352850526141677568,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353413476095098880,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353694951071809536,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353835688560164864,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353906057304342528,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353941241676431360,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353958833862475776,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353967629955497984,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353972028002009088,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353974227025264640,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353975326536892416,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353975876292706304,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976151170613248,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976288609566720,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976357329043456,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976391688781824,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976408868651008,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976417458585600,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976421753552896,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976423901036544,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976424974778368,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425511649280,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425780084736,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425914302464,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425981411328,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426014965760,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426031742976,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426040131584,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426044325888,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426046423040,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426047471616,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426047995904,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048258048,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048389120,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048454656,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048487424,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048503808,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048512000,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048516096,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048518144,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048519168,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048519680,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048519936,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520064,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520128,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520160,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520176,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520184,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520188,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520190,64,FLEN)
NAN_BOXED(6889794233225808301,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520191,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005568,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005569,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005571,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005575,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005583,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005599,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005631,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005695,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005823,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006079,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006591,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497007615,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497009663,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497013759,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497021951,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497038335,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497071103,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497136639,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497267711,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497529855,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014498054143,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014499102719,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014501199871,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014505394175,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014513782783,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014530559999,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014564114431,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014631223295,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014765441023,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015033876479,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015570747391,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588016644489215,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588018791972863,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588023086940159,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588031676874751,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588048856743935,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588083216482303,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588151935959039,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588289374912511,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588564252819455,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493589114008633343,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493590213520261119,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493592412543516671,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493596810590027775,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493605606683049983,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493623198869094399,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493658383241183231,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493728751985360895,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493869489473716223,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494150964450426879,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494713914403848191,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690815,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690816,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9496965714217533440,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497528664170954752,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497810139147665408,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497950876636020736,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498021245380198400,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498056429752287232,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498074021938331648,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498082818031353856,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498087216077864960,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498089415101120512,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498090514612748288,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091064368562176,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091339246469120,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091476685422592,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091545404899328,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091579764637696,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091596944506880,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091605534441472,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091609829408768,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091611976892416,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613050634240,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613587505152,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613855940608,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613990158336,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614057267200,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614090821632,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614107598848,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614115987456,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614120181760,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614122278912,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123327488,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123851776,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124113920,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124244992,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124310528,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124343296,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124359680,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124367872,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124371968,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124374016,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375040,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375552,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375808,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375936,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376000,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376032,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376048,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376056,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376060,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376062,64,FLEN)
NAN_BOXED(6889796463700171921,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376063,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740224,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740225,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740227,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740231,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740239,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740255,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740287,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740351,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740479,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978740735,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978741247,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978742271,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978744319,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978748415,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978756607,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978772991,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978805759,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302978871295,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302979002367,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302979264511,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302979788799,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302980837375,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302982934527,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302987128831,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597302995517439,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597303012294655,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597303045849087,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597303112957951,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597303247175679,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597303515611135,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597304052482047,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597305126223871,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597307273707519,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597311568674815,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597320158609407,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597337338478591,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597371698216959,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597440417693695,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597577856647167,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258597852734554111,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258598402490367999,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258599502001995775,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258601701025251327,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258606099071762431,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258614895164784639,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258632487350829055,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258667671722917887,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258738040467095551,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13258878777955450879,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13259160252932161535,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13259723202885582847,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13260849102792425471,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13260849102792425472,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13261975002699268096,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13262537952652689408,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13262819427629400064,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13262960165117755392,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263030533861933056,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263065718234021888,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263083310420066304,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263092106513088512,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263096504559599616,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263098703582855168,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263099803094482944,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100352850296832,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100627728203776,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100765167157248,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100833886633984,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100868246372352,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100885426241536,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100894016176128,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100898311143424,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100900458627072,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100901532368896,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902069239808,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902337675264,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902471892992,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902539001856,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902572556288,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902589333504,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902597722112,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902601916416,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902604013568,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902605062144,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902605586432,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902605848576,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902605979648,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606045184,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606077952,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606094336,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606102528,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606106624,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606108672,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606109696,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110208,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110464,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110592,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110656,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110688,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110704,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110712,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110716,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110718,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13263100902606110719,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6889801984453686767,64,FLEN)
NAN_BOXED(11516086942675695342,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408704,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408705,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408707,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408711,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408719,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408735,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408767,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408831,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408959,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409215,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409727,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166410751,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166412799,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166416895,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166425087,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166441471,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166474239,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166539775,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166670847,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166932991,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627167457279,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627168505855,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627170603007,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627174797311,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627183185919,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627199963135,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627233517567,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627300626431,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627434844159,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627703279615,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465628240150527,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465629313892351,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465631461375999,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465635756343295,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465644346277887,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465661526147071,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465695885885439,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465764605362175,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465902044315647,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466176922222591,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466726678036479,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340467826189664255,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340470025212919807,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340474423259430911,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340483219352453119,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340500811538497535,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340535995910586367,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340606364654764031,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340747102143119359,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341028577119830015,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341591527073251327,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093951,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093952,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9343843326886936576,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344406276840357888,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344687751817068544,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344828489305423872,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344898858049601536,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344934042421690368,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344951634607734784,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344960430700756992,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344964828747268096,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344967027770523648,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968127282151424,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968677037965312,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968951915872256,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969089354825728,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969158074302464,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969192434040832,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969209613910016,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969218203844608,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969222498811904,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969224646295552,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969225720037376,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226256908288,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226525343744,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226659561472,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226726670336,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226760224768,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226777001984,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226785390592,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226789584896,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226791682048,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226792730624,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793254912,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793517056,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793648128,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793713664,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793746432,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793762816,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793771008,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793775104,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793777152,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778176,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778688,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778944,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779072,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779136,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779168,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779184,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779192,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779196,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779198,64,FLEN)
NAN_BOXED(6889851046927230281,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779199,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134556672,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134556673,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134556675,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134556679,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134556687,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134556703,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134556735,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134556799,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134556927,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134557183,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134557695,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134558719,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134560767,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134564863,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134573055,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134589439,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134622207,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134687743,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098134818815,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098135080959,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098135605247,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098136653823,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098138750975,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098142945279,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098151333887,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098168111103,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098201665535,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098268774399,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098402992127,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144098671427583,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144099208298495,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144100282040319,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144102429523967,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144106724491263,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144115314425855,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144132494295039,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144166854033407,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144235573510143,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144373012463615,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317144647890370559,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317145197646184447,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317146297157812223,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317148496181067775,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317152894227578879,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317161690320601087,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317179282506645503,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317214466878734335,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317284835622911999,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317425573111267327,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13317707048087977983,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13318269998041399295,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13319395897948241919,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13319395897948241920,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13320521797855084544,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321084747808505856,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321366222785216512,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321506960273571840,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321577329017749504,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321612513389838336,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321630105575882752,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
