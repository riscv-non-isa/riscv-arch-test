
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_53760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabe000000000000; valaddr_reg:x3; val_offset:161280*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161280*0 + 3*0*FLEN/8, x4, x1, x2)

inst_53761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabf000000000000; valaddr_reg:x3; val_offset:161283*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161283*0 + 3*1*FLEN/8, x4, x1, x2)

inst_53762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabf800000000000; valaddr_reg:x3; val_offset:161286*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161286*0 + 3*2*FLEN/8, x4, x1, x2)

inst_53763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfc00000000000; valaddr_reg:x3; val_offset:161289*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161289*0 + 3*3*FLEN/8, x4, x1, x2)

inst_53764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfe00000000000; valaddr_reg:x3; val_offset:161292*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161292*0 + 3*4*FLEN/8, x4, x1, x2)

inst_53765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabff00000000000; valaddr_reg:x3; val_offset:161295*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161295*0 + 3*5*FLEN/8, x4, x1, x2)

inst_53766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabff80000000000; valaddr_reg:x3; val_offset:161298*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161298*0 + 3*6*FLEN/8, x4, x1, x2)

inst_53767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffc0000000000; valaddr_reg:x3; val_offset:161301*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161301*0 + 3*7*FLEN/8, x4, x1, x2)

inst_53768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffe0000000000; valaddr_reg:x3; val_offset:161304*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161304*0 + 3*8*FLEN/8, x4, x1, x2)

inst_53769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfff0000000000; valaddr_reg:x3; val_offset:161307*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161307*0 + 3*9*FLEN/8, x4, x1, x2)

inst_53770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfff8000000000; valaddr_reg:x3; val_offset:161310*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161310*0 + 3*10*FLEN/8, x4, x1, x2)

inst_53771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffc000000000; valaddr_reg:x3; val_offset:161313*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161313*0 + 3*11*FLEN/8, x4, x1, x2)

inst_53772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffe000000000; valaddr_reg:x3; val_offset:161316*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161316*0 + 3*12*FLEN/8, x4, x1, x2)

inst_53773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffff000000000; valaddr_reg:x3; val_offset:161319*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161319*0 + 3*13*FLEN/8, x4, x1, x2)

inst_53774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffff800000000; valaddr_reg:x3; val_offset:161322*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161322*0 + 3*14*FLEN/8, x4, x1, x2)

inst_53775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffc00000000; valaddr_reg:x3; val_offset:161325*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161325*0 + 3*15*FLEN/8, x4, x1, x2)

inst_53776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffe00000000; valaddr_reg:x3; val_offset:161328*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161328*0 + 3*16*FLEN/8, x4, x1, x2)

inst_53777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffff00000000; valaddr_reg:x3; val_offset:161331*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161331*0 + 3*17*FLEN/8, x4, x1, x2)

inst_53778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffff80000000; valaddr_reg:x3; val_offset:161334*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161334*0 + 3*18*FLEN/8, x4, x1, x2)

inst_53779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffc0000000; valaddr_reg:x3; val_offset:161337*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161337*0 + 3*19*FLEN/8, x4, x1, x2)

inst_53780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffe0000000; valaddr_reg:x3; val_offset:161340*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161340*0 + 3*20*FLEN/8, x4, x1, x2)

inst_53781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffff0000000; valaddr_reg:x3; val_offset:161343*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161343*0 + 3*21*FLEN/8, x4, x1, x2)

inst_53782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffff8000000; valaddr_reg:x3; val_offset:161346*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161346*0 + 3*22*FLEN/8, x4, x1, x2)

inst_53783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffc000000; valaddr_reg:x3; val_offset:161349*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161349*0 + 3*23*FLEN/8, x4, x1, x2)

inst_53784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffe000000; valaddr_reg:x3; val_offset:161352*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161352*0 + 3*24*FLEN/8, x4, x1, x2)

inst_53785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffff000000; valaddr_reg:x3; val_offset:161355*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161355*0 + 3*25*FLEN/8, x4, x1, x2)

inst_53786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffff800000; valaddr_reg:x3; val_offset:161358*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161358*0 + 3*26*FLEN/8, x4, x1, x2)

inst_53787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffc00000; valaddr_reg:x3; val_offset:161361*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161361*0 + 3*27*FLEN/8, x4, x1, x2)

inst_53788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffe00000; valaddr_reg:x3; val_offset:161364*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161364*0 + 3*28*FLEN/8, x4, x1, x2)

inst_53789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffff00000; valaddr_reg:x3; val_offset:161367*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161367*0 + 3*29*FLEN/8, x4, x1, x2)

inst_53790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffff80000; valaddr_reg:x3; val_offset:161370*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161370*0 + 3*30*FLEN/8, x4, x1, x2)

inst_53791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffc0000; valaddr_reg:x3; val_offset:161373*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161373*0 + 3*31*FLEN/8, x4, x1, x2)

inst_53792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffe0000; valaddr_reg:x3; val_offset:161376*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161376*0 + 3*32*FLEN/8, x4, x1, x2)

inst_53793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffff0000; valaddr_reg:x3; val_offset:161379*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161379*0 + 3*33*FLEN/8, x4, x1, x2)

inst_53794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffff8000; valaddr_reg:x3; val_offset:161382*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161382*0 + 3*34*FLEN/8, x4, x1, x2)

inst_53795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffffc000; valaddr_reg:x3; val_offset:161385*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161385*0 + 3*35*FLEN/8, x4, x1, x2)

inst_53796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffffe000; valaddr_reg:x3; val_offset:161388*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161388*0 + 3*36*FLEN/8, x4, x1, x2)

inst_53797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffff000; valaddr_reg:x3; val_offset:161391*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161391*0 + 3*37*FLEN/8, x4, x1, x2)

inst_53798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffff800; valaddr_reg:x3; val_offset:161394*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161394*0 + 3*38*FLEN/8, x4, x1, x2)

inst_53799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffffc00; valaddr_reg:x3; val_offset:161397*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161397*0 + 3*39*FLEN/8, x4, x1, x2)

inst_53800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffffe00; valaddr_reg:x3; val_offset:161400*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161400*0 + 3*40*FLEN/8, x4, x1, x2)

inst_53801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffffff00; valaddr_reg:x3; val_offset:161403*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161403*0 + 3*41*FLEN/8, x4, x1, x2)

inst_53802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffffff80; valaddr_reg:x3; val_offset:161406*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161406*0 + 3*42*FLEN/8, x4, x1, x2)

inst_53803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffffffc0; valaddr_reg:x3; val_offset:161409*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161409*0 + 3*43*FLEN/8, x4, x1, x2)

inst_53804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffffffe0; valaddr_reg:x3; val_offset:161412*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161412*0 + 3*44*FLEN/8, x4, x1, x2)

inst_53805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffffff0; valaddr_reg:x3; val_offset:161415*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161415*0 + 3*45*FLEN/8, x4, x1, x2)

inst_53806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffffff8; valaddr_reg:x3; val_offset:161418*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161418*0 + 3*46*FLEN/8, x4, x1, x2)

inst_53807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffffffc; valaddr_reg:x3; val_offset:161421*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161421*0 + 3*47*FLEN/8, x4, x1, x2)

inst_53808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabffffffffffffe; valaddr_reg:x3; val_offset:161424*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161424*0 + 3*48*FLEN/8, x4, x1, x2)

inst_53809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabfffffffffffff; valaddr_reg:x3; val_offset:161427*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161427*0 + 3*49*FLEN/8, x4, x1, x2)

inst_53810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:161430*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161430*0 + 3*50*FLEN/8, x4, x1, x2)

inst_53811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:161433*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161433*0 + 3*51*FLEN/8, x4, x1, x2)

inst_53812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:161436*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161436*0 + 3*52*FLEN/8, x4, x1, x2)

inst_53813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:161439*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161439*0 + 3*53*FLEN/8, x4, x1, x2)

inst_53814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:161442*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161442*0 + 3*54*FLEN/8, x4, x1, x2)

inst_53815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:161445*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161445*0 + 3*55*FLEN/8, x4, x1, x2)

inst_53816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:161448*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161448*0 + 3*56*FLEN/8, x4, x1, x2)

inst_53817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:161451*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161451*0 + 3*57*FLEN/8, x4, x1, x2)

inst_53818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:161454*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161454*0 + 3*58*FLEN/8, x4, x1, x2)

inst_53819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:161457*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161457*0 + 3*59*FLEN/8, x4, x1, x2)

inst_53820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:161460*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161460*0 + 3*60*FLEN/8, x4, x1, x2)

inst_53821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:161463*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161463*0 + 3*61*FLEN/8, x4, x1, x2)

inst_53822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:161466*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161466*0 + 3*62*FLEN/8, x4, x1, x2)

inst_53823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:161469*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161469*0 + 3*63*FLEN/8, x4, x1, x2)

inst_53824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:161472*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161472*0 + 3*64*FLEN/8, x4, x1, x2)

inst_53825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:161475*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161475*0 + 3*65*FLEN/8, x4, x1, x2)

inst_53826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:161478*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161478*0 + 3*66*FLEN/8, x4, x1, x2)

inst_53827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:161481*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161481*0 + 3*67*FLEN/8, x4, x1, x2)

inst_53828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:161484*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161484*0 + 3*68*FLEN/8, x4, x1, x2)

inst_53829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:161487*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161487*0 + 3*69*FLEN/8, x4, x1, x2)

inst_53830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:161490*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161490*0 + 3*70*FLEN/8, x4, x1, x2)

inst_53831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:161493*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161493*0 + 3*71*FLEN/8, x4, x1, x2)

inst_53832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000000000000; valaddr_reg:x3; val_offset:161496*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161496*0 + 3*72*FLEN/8, x4, x1, x2)

inst_53833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000000000001; valaddr_reg:x3; val_offset:161499*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161499*0 + 3*73*FLEN/8, x4, x1, x2)

inst_53834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000000000003; valaddr_reg:x3; val_offset:161502*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161502*0 + 3*74*FLEN/8, x4, x1, x2)

inst_53835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000000000007; valaddr_reg:x3; val_offset:161505*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161505*0 + 3*75*FLEN/8, x4, x1, x2)

inst_53836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000000000000f; valaddr_reg:x3; val_offset:161508*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161508*0 + 3*76*FLEN/8, x4, x1, x2)

inst_53837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000000000001f; valaddr_reg:x3; val_offset:161511*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161511*0 + 3*77*FLEN/8, x4, x1, x2)

inst_53838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000000000003f; valaddr_reg:x3; val_offset:161514*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161514*0 + 3*78*FLEN/8, x4, x1, x2)

inst_53839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000000000007f; valaddr_reg:x3; val_offset:161517*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161517*0 + 3*79*FLEN/8, x4, x1, x2)

inst_53840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200000000000ff; valaddr_reg:x3; val_offset:161520*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161520*0 + 3*80*FLEN/8, x4, x1, x2)

inst_53841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200000000001ff; valaddr_reg:x3; val_offset:161523*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161523*0 + 3*81*FLEN/8, x4, x1, x2)

inst_53842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200000000003ff; valaddr_reg:x3; val_offset:161526*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161526*0 + 3*82*FLEN/8, x4, x1, x2)

inst_53843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200000000007ff; valaddr_reg:x3; val_offset:161529*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161529*0 + 3*83*FLEN/8, x4, x1, x2)

inst_53844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000000000fff; valaddr_reg:x3; val_offset:161532*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161532*0 + 3*84*FLEN/8, x4, x1, x2)

inst_53845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000000001fff; valaddr_reg:x3; val_offset:161535*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161535*0 + 3*85*FLEN/8, x4, x1, x2)

inst_53846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000000003fff; valaddr_reg:x3; val_offset:161538*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161538*0 + 3*86*FLEN/8, x4, x1, x2)

inst_53847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000000007fff; valaddr_reg:x3; val_offset:161541*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161541*0 + 3*87*FLEN/8, x4, x1, x2)

inst_53848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000000000ffff; valaddr_reg:x3; val_offset:161544*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161544*0 + 3*88*FLEN/8, x4, x1, x2)

inst_53849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000000001ffff; valaddr_reg:x3; val_offset:161547*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161547*0 + 3*89*FLEN/8, x4, x1, x2)

inst_53850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000000003ffff; valaddr_reg:x3; val_offset:161550*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161550*0 + 3*90*FLEN/8, x4, x1, x2)

inst_53851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000000007ffff; valaddr_reg:x3; val_offset:161553*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161553*0 + 3*91*FLEN/8, x4, x1, x2)

inst_53852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200000000fffff; valaddr_reg:x3; val_offset:161556*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161556*0 + 3*92*FLEN/8, x4, x1, x2)

inst_53853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200000001fffff; valaddr_reg:x3; val_offset:161559*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161559*0 + 3*93*FLEN/8, x4, x1, x2)

inst_53854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200000003fffff; valaddr_reg:x3; val_offset:161562*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161562*0 + 3*94*FLEN/8, x4, x1, x2)

inst_53855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200000007fffff; valaddr_reg:x3; val_offset:161565*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161565*0 + 3*95*FLEN/8, x4, x1, x2)

inst_53856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000000ffffff; valaddr_reg:x3; val_offset:161568*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161568*0 + 3*96*FLEN/8, x4, x1, x2)

inst_53857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000001ffffff; valaddr_reg:x3; val_offset:161571*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161571*0 + 3*97*FLEN/8, x4, x1, x2)

inst_53858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000003ffffff; valaddr_reg:x3; val_offset:161574*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161574*0 + 3*98*FLEN/8, x4, x1, x2)

inst_53859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000007ffffff; valaddr_reg:x3; val_offset:161577*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161577*0 + 3*99*FLEN/8, x4, x1, x2)

inst_53860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000000fffffff; valaddr_reg:x3; val_offset:161580*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161580*0 + 3*100*FLEN/8, x4, x1, x2)

inst_53861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000001fffffff; valaddr_reg:x3; val_offset:161583*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161583*0 + 3*101*FLEN/8, x4, x1, x2)

inst_53862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000003fffffff; valaddr_reg:x3; val_offset:161586*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161586*0 + 3*102*FLEN/8, x4, x1, x2)

inst_53863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000007fffffff; valaddr_reg:x3; val_offset:161589*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161589*0 + 3*103*FLEN/8, x4, x1, x2)

inst_53864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200000ffffffff; valaddr_reg:x3; val_offset:161592*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161592*0 + 3*104*FLEN/8, x4, x1, x2)

inst_53865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200001ffffffff; valaddr_reg:x3; val_offset:161595*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161595*0 + 3*105*FLEN/8, x4, x1, x2)

inst_53866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200003ffffffff; valaddr_reg:x3; val_offset:161598*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161598*0 + 3*106*FLEN/8, x4, x1, x2)

inst_53867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200007ffffffff; valaddr_reg:x3; val_offset:161601*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161601*0 + 3*107*FLEN/8, x4, x1, x2)

inst_53868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20000fffffffff; valaddr_reg:x3; val_offset:161604*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161604*0 + 3*108*FLEN/8, x4, x1, x2)

inst_53869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20001fffffffff; valaddr_reg:x3; val_offset:161607*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161607*0 + 3*109*FLEN/8, x4, x1, x2)

inst_53870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20003fffffffff; valaddr_reg:x3; val_offset:161610*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161610*0 + 3*110*FLEN/8, x4, x1, x2)

inst_53871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20007fffffffff; valaddr_reg:x3; val_offset:161613*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161613*0 + 3*111*FLEN/8, x4, x1, x2)

inst_53872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2000ffffffffff; valaddr_reg:x3; val_offset:161616*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161616*0 + 3*112*FLEN/8, x4, x1, x2)

inst_53873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2001ffffffffff; valaddr_reg:x3; val_offset:161619*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161619*0 + 3*113*FLEN/8, x4, x1, x2)

inst_53874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2003ffffffffff; valaddr_reg:x3; val_offset:161622*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161622*0 + 3*114*FLEN/8, x4, x1, x2)

inst_53875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2007ffffffffff; valaddr_reg:x3; val_offset:161625*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161625*0 + 3*115*FLEN/8, x4, x1, x2)

inst_53876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c200fffffffffff; valaddr_reg:x3; val_offset:161628*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161628*0 + 3*116*FLEN/8, x4, x1, x2)

inst_53877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c201fffffffffff; valaddr_reg:x3; val_offset:161631*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161631*0 + 3*117*FLEN/8, x4, x1, x2)

inst_53878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c203fffffffffff; valaddr_reg:x3; val_offset:161634*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161634*0 + 3*118*FLEN/8, x4, x1, x2)

inst_53879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c207fffffffffff; valaddr_reg:x3; val_offset:161637*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161637*0 + 3*119*FLEN/8, x4, x1, x2)

inst_53880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c20ffffffffffff; valaddr_reg:x3; val_offset:161640*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161640*0 + 3*120*FLEN/8, x4, x1, x2)

inst_53881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c21ffffffffffff; valaddr_reg:x3; val_offset:161643*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161643*0 + 3*121*FLEN/8, x4, x1, x2)

inst_53882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c23ffffffffffff; valaddr_reg:x3; val_offset:161646*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161646*0 + 3*122*FLEN/8, x4, x1, x2)

inst_53883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c27ffffffffffff; valaddr_reg:x3; val_offset:161649*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161649*0 + 3*123*FLEN/8, x4, x1, x2)

inst_53884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c28000000000000; valaddr_reg:x3; val_offset:161652*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161652*0 + 3*124*FLEN/8, x4, x1, x2)

inst_53885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2c000000000000; valaddr_reg:x3; val_offset:161655*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161655*0 + 3*125*FLEN/8, x4, x1, x2)

inst_53886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2e000000000000; valaddr_reg:x3; val_offset:161658*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161658*0 + 3*126*FLEN/8, x4, x1, x2)

inst_53887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2f000000000000; valaddr_reg:x3; val_offset:161661*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161661*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_53888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2f800000000000; valaddr_reg:x3; val_offset:161664*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161664*0 + 3*128*FLEN/8, x4, x1, x2)

inst_53889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fc00000000000; valaddr_reg:x3; val_offset:161667*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161667*0 + 3*129*FLEN/8, x4, x1, x2)

inst_53890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fe00000000000; valaddr_reg:x3; val_offset:161670*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161670*0 + 3*130*FLEN/8, x4, x1, x2)

inst_53891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ff00000000000; valaddr_reg:x3; val_offset:161673*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161673*0 + 3*131*FLEN/8, x4, x1, x2)

inst_53892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ff80000000000; valaddr_reg:x3; val_offset:161676*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161676*0 + 3*132*FLEN/8, x4, x1, x2)

inst_53893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffc0000000000; valaddr_reg:x3; val_offset:161679*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161679*0 + 3*133*FLEN/8, x4, x1, x2)

inst_53894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffe0000000000; valaddr_reg:x3; val_offset:161682*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161682*0 + 3*134*FLEN/8, x4, x1, x2)

inst_53895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fff0000000000; valaddr_reg:x3; val_offset:161685*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161685*0 + 3*135*FLEN/8, x4, x1, x2)

inst_53896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fff8000000000; valaddr_reg:x3; val_offset:161688*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161688*0 + 3*136*FLEN/8, x4, x1, x2)

inst_53897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffc000000000; valaddr_reg:x3; val_offset:161691*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161691*0 + 3*137*FLEN/8, x4, x1, x2)

inst_53898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffe000000000; valaddr_reg:x3; val_offset:161694*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161694*0 + 3*138*FLEN/8, x4, x1, x2)

inst_53899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffff000000000; valaddr_reg:x3; val_offset:161697*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161697*0 + 3*139*FLEN/8, x4, x1, x2)

inst_53900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffff800000000; valaddr_reg:x3; val_offset:161700*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161700*0 + 3*140*FLEN/8, x4, x1, x2)

inst_53901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffc00000000; valaddr_reg:x3; val_offset:161703*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161703*0 + 3*141*FLEN/8, x4, x1, x2)

inst_53902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffe00000000; valaddr_reg:x3; val_offset:161706*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161706*0 + 3*142*FLEN/8, x4, x1, x2)

inst_53903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffff00000000; valaddr_reg:x3; val_offset:161709*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161709*0 + 3*143*FLEN/8, x4, x1, x2)

inst_53904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffff80000000; valaddr_reg:x3; val_offset:161712*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161712*0 + 3*144*FLEN/8, x4, x1, x2)

inst_53905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffc0000000; valaddr_reg:x3; val_offset:161715*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161715*0 + 3*145*FLEN/8, x4, x1, x2)

inst_53906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffe0000000; valaddr_reg:x3; val_offset:161718*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161718*0 + 3*146*FLEN/8, x4, x1, x2)

inst_53907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffff0000000; valaddr_reg:x3; val_offset:161721*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161721*0 + 3*147*FLEN/8, x4, x1, x2)

inst_53908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffff8000000; valaddr_reg:x3; val_offset:161724*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161724*0 + 3*148*FLEN/8, x4, x1, x2)

inst_53909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffc000000; valaddr_reg:x3; val_offset:161727*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161727*0 + 3*149*FLEN/8, x4, x1, x2)

inst_53910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffe000000; valaddr_reg:x3; val_offset:161730*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161730*0 + 3*150*FLEN/8, x4, x1, x2)

inst_53911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffff000000; valaddr_reg:x3; val_offset:161733*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161733*0 + 3*151*FLEN/8, x4, x1, x2)

inst_53912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffff800000; valaddr_reg:x3; val_offset:161736*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161736*0 + 3*152*FLEN/8, x4, x1, x2)

inst_53913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffc00000; valaddr_reg:x3; val_offset:161739*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161739*0 + 3*153*FLEN/8, x4, x1, x2)

inst_53914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffe00000; valaddr_reg:x3; val_offset:161742*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161742*0 + 3*154*FLEN/8, x4, x1, x2)

inst_53915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffff00000; valaddr_reg:x3; val_offset:161745*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161745*0 + 3*155*FLEN/8, x4, x1, x2)

inst_53916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffff80000; valaddr_reg:x3; val_offset:161748*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161748*0 + 3*156*FLEN/8, x4, x1, x2)

inst_53917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffc0000; valaddr_reg:x3; val_offset:161751*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161751*0 + 3*157*FLEN/8, x4, x1, x2)

inst_53918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffe0000; valaddr_reg:x3; val_offset:161754*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161754*0 + 3*158*FLEN/8, x4, x1, x2)

inst_53919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffff0000; valaddr_reg:x3; val_offset:161757*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161757*0 + 3*159*FLEN/8, x4, x1, x2)

inst_53920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffff8000; valaddr_reg:x3; val_offset:161760*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161760*0 + 3*160*FLEN/8, x4, x1, x2)

inst_53921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffffc000; valaddr_reg:x3; val_offset:161763*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161763*0 + 3*161*FLEN/8, x4, x1, x2)

inst_53922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffffe000; valaddr_reg:x3; val_offset:161766*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161766*0 + 3*162*FLEN/8, x4, x1, x2)

inst_53923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffff000; valaddr_reg:x3; val_offset:161769*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161769*0 + 3*163*FLEN/8, x4, x1, x2)

inst_53924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffff800; valaddr_reg:x3; val_offset:161772*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161772*0 + 3*164*FLEN/8, x4, x1, x2)

inst_53925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffffc00; valaddr_reg:x3; val_offset:161775*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161775*0 + 3*165*FLEN/8, x4, x1, x2)

inst_53926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffffe00; valaddr_reg:x3; val_offset:161778*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161778*0 + 3*166*FLEN/8, x4, x1, x2)

inst_53927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffffff00; valaddr_reg:x3; val_offset:161781*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161781*0 + 3*167*FLEN/8, x4, x1, x2)

inst_53928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffffff80; valaddr_reg:x3; val_offset:161784*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161784*0 + 3*168*FLEN/8, x4, x1, x2)

inst_53929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffffffc0; valaddr_reg:x3; val_offset:161787*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161787*0 + 3*169*FLEN/8, x4, x1, x2)

inst_53930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffffffe0; valaddr_reg:x3; val_offset:161790*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161790*0 + 3*170*FLEN/8, x4, x1, x2)

inst_53931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffffff0; valaddr_reg:x3; val_offset:161793*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161793*0 + 3*171*FLEN/8, x4, x1, x2)

inst_53932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffffff8; valaddr_reg:x3; val_offset:161796*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161796*0 + 3*172*FLEN/8, x4, x1, x2)

inst_53933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffffffc; valaddr_reg:x3; val_offset:161799*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161799*0 + 3*173*FLEN/8, x4, x1, x2)

inst_53934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2ffffffffffffe; valaddr_reg:x3; val_offset:161802*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161802*0 + 3*174*FLEN/8, x4, x1, x2)

inst_53935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3c2fffffffffffff; valaddr_reg:x3; val_offset:161805*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161805*0 + 3*175*FLEN/8, x4, x1, x2)

inst_53936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:161808*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161808*0 + 3*176*FLEN/8, x4, x1, x2)

inst_53937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:161811*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161811*0 + 3*177*FLEN/8, x4, x1, x2)

inst_53938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:161814*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161814*0 + 3*178*FLEN/8, x4, x1, x2)

inst_53939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:161817*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161817*0 + 3*179*FLEN/8, x4, x1, x2)

inst_53940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:161820*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161820*0 + 3*180*FLEN/8, x4, x1, x2)

inst_53941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:161823*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161823*0 + 3*181*FLEN/8, x4, x1, x2)

inst_53942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:161826*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161826*0 + 3*182*FLEN/8, x4, x1, x2)

inst_53943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:161829*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161829*0 + 3*183*FLEN/8, x4, x1, x2)

inst_53944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:161832*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161832*0 + 3*184*FLEN/8, x4, x1, x2)

inst_53945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:161835*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161835*0 + 3*185*FLEN/8, x4, x1, x2)

inst_53946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:161838*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161838*0 + 3*186*FLEN/8, x4, x1, x2)

inst_53947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:161841*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161841*0 + 3*187*FLEN/8, x4, x1, x2)

inst_53948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:161844*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161844*0 + 3*188*FLEN/8, x4, x1, x2)

inst_53949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:161847*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161847*0 + 3*189*FLEN/8, x4, x1, x2)

inst_53950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:161850*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161850*0 + 3*190*FLEN/8, x4, x1, x2)

inst_53951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:161853*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161853*0 + 3*191*FLEN/8, x4, x1, x2)

inst_53952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:161856*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161856*0 + 3*192*FLEN/8, x4, x1, x2)

inst_53953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:161859*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161859*0 + 3*193*FLEN/8, x4, x1, x2)

inst_53954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:161862*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161862*0 + 3*194*FLEN/8, x4, x1, x2)

inst_53955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:161865*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161865*0 + 3*195*FLEN/8, x4, x1, x2)

inst_53956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:161868*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161868*0 + 3*196*FLEN/8, x4, x1, x2)

inst_53957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x064be4fb206fd and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf3b5993cbfdc5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa064be4fb206fd; op2val:0x203f3b5993cbfdc5;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:161871*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161871*0 + 3*197*FLEN/8, x4, x1, x2)

inst_53958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000000000000; valaddr_reg:x3; val_offset:161874*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161874*0 + 3*198*FLEN/8, x4, x1, x2)

inst_53959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000000000001; valaddr_reg:x3; val_offset:161877*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161877*0 + 3*199*FLEN/8, x4, x1, x2)

inst_53960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000000000003; valaddr_reg:x3; val_offset:161880*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161880*0 + 3*200*FLEN/8, x4, x1, x2)

inst_53961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000000000007; valaddr_reg:x3; val_offset:161883*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161883*0 + 3*201*FLEN/8, x4, x1, x2)

inst_53962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000000000000f; valaddr_reg:x3; val_offset:161886*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161886*0 + 3*202*FLEN/8, x4, x1, x2)

inst_53963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000000000001f; valaddr_reg:x3; val_offset:161889*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161889*0 + 3*203*FLEN/8, x4, x1, x2)

inst_53964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000000000003f; valaddr_reg:x3; val_offset:161892*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161892*0 + 3*204*FLEN/8, x4, x1, x2)

inst_53965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000000000007f; valaddr_reg:x3; val_offset:161895*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161895*0 + 3*205*FLEN/8, x4, x1, x2)

inst_53966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00000000000ff; valaddr_reg:x3; val_offset:161898*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161898*0 + 3*206*FLEN/8, x4, x1, x2)

inst_53967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00000000001ff; valaddr_reg:x3; val_offset:161901*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161901*0 + 3*207*FLEN/8, x4, x1, x2)

inst_53968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00000000003ff; valaddr_reg:x3; val_offset:161904*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161904*0 + 3*208*FLEN/8, x4, x1, x2)

inst_53969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00000000007ff; valaddr_reg:x3; val_offset:161907*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161907*0 + 3*209*FLEN/8, x4, x1, x2)

inst_53970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000000000fff; valaddr_reg:x3; val_offset:161910*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161910*0 + 3*210*FLEN/8, x4, x1, x2)

inst_53971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000000001fff; valaddr_reg:x3; val_offset:161913*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161913*0 + 3*211*FLEN/8, x4, x1, x2)

inst_53972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000000003fff; valaddr_reg:x3; val_offset:161916*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161916*0 + 3*212*FLEN/8, x4, x1, x2)

inst_53973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000000007fff; valaddr_reg:x3; val_offset:161919*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161919*0 + 3*213*FLEN/8, x4, x1, x2)

inst_53974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000000000ffff; valaddr_reg:x3; val_offset:161922*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161922*0 + 3*214*FLEN/8, x4, x1, x2)

inst_53975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000000001ffff; valaddr_reg:x3; val_offset:161925*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161925*0 + 3*215*FLEN/8, x4, x1, x2)

inst_53976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000000003ffff; valaddr_reg:x3; val_offset:161928*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161928*0 + 3*216*FLEN/8, x4, x1, x2)

inst_53977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000000007ffff; valaddr_reg:x3; val_offset:161931*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161931*0 + 3*217*FLEN/8, x4, x1, x2)

inst_53978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00000000fffff; valaddr_reg:x3; val_offset:161934*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161934*0 + 3*218*FLEN/8, x4, x1, x2)

inst_53979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00000001fffff; valaddr_reg:x3; val_offset:161937*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161937*0 + 3*219*FLEN/8, x4, x1, x2)

inst_53980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00000003fffff; valaddr_reg:x3; val_offset:161940*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161940*0 + 3*220*FLEN/8, x4, x1, x2)

inst_53981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00000007fffff; valaddr_reg:x3; val_offset:161943*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161943*0 + 3*221*FLEN/8, x4, x1, x2)

inst_53982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000000ffffff; valaddr_reg:x3; val_offset:161946*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161946*0 + 3*222*FLEN/8, x4, x1, x2)

inst_53983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000001ffffff; valaddr_reg:x3; val_offset:161949*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161949*0 + 3*223*FLEN/8, x4, x1, x2)

inst_53984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000003ffffff; valaddr_reg:x3; val_offset:161952*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161952*0 + 3*224*FLEN/8, x4, x1, x2)

inst_53985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000007ffffff; valaddr_reg:x3; val_offset:161955*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161955*0 + 3*225*FLEN/8, x4, x1, x2)

inst_53986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000000fffffff; valaddr_reg:x3; val_offset:161958*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161958*0 + 3*226*FLEN/8, x4, x1, x2)

inst_53987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000001fffffff; valaddr_reg:x3; val_offset:161961*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161961*0 + 3*227*FLEN/8, x4, x1, x2)

inst_53988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000003fffffff; valaddr_reg:x3; val_offset:161964*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161964*0 + 3*228*FLEN/8, x4, x1, x2)

inst_53989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000007fffffff; valaddr_reg:x3; val_offset:161967*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161967*0 + 3*229*FLEN/8, x4, x1, x2)

inst_53990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00000ffffffff; valaddr_reg:x3; val_offset:161970*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161970*0 + 3*230*FLEN/8, x4, x1, x2)

inst_53991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00001ffffffff; valaddr_reg:x3; val_offset:161973*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161973*0 + 3*231*FLEN/8, x4, x1, x2)

inst_53992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00003ffffffff; valaddr_reg:x3; val_offset:161976*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161976*0 + 3*232*FLEN/8, x4, x1, x2)

inst_53993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00007ffffffff; valaddr_reg:x3; val_offset:161979*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161979*0 + 3*233*FLEN/8, x4, x1, x2)

inst_53994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0000fffffffff; valaddr_reg:x3; val_offset:161982*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161982*0 + 3*234*FLEN/8, x4, x1, x2)

inst_53995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0001fffffffff; valaddr_reg:x3; val_offset:161985*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161985*0 + 3*235*FLEN/8, x4, x1, x2)

inst_53996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0003fffffffff; valaddr_reg:x3; val_offset:161988*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161988*0 + 3*236*FLEN/8, x4, x1, x2)

inst_53997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0007fffffffff; valaddr_reg:x3; val_offset:161991*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161991*0 + 3*237*FLEN/8, x4, x1, x2)

inst_53998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef000ffffffffff; valaddr_reg:x3; val_offset:161994*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161994*0 + 3*238*FLEN/8, x4, x1, x2)

inst_53999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef001ffffffffff; valaddr_reg:x3; val_offset:161997*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161997*0 + 3*239*FLEN/8, x4, x1, x2)

inst_54000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef003ffffffffff; valaddr_reg:x3; val_offset:162000*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162000*0 + 3*240*FLEN/8, x4, x1, x2)

inst_54001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef007ffffffffff; valaddr_reg:x3; val_offset:162003*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162003*0 + 3*241*FLEN/8, x4, x1, x2)

inst_54002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef00fffffffffff; valaddr_reg:x3; val_offset:162006*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162006*0 + 3*242*FLEN/8, x4, x1, x2)

inst_54003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef01fffffffffff; valaddr_reg:x3; val_offset:162009*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162009*0 + 3*243*FLEN/8, x4, x1, x2)

inst_54004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef03fffffffffff; valaddr_reg:x3; val_offset:162012*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162012*0 + 3*244*FLEN/8, x4, x1, x2)

inst_54005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef07fffffffffff; valaddr_reg:x3; val_offset:162015*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162015*0 + 3*245*FLEN/8, x4, x1, x2)

inst_54006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef0ffffffffffff; valaddr_reg:x3; val_offset:162018*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162018*0 + 3*246*FLEN/8, x4, x1, x2)

inst_54007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef1ffffffffffff; valaddr_reg:x3; val_offset:162021*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162021*0 + 3*247*FLEN/8, x4, x1, x2)

inst_54008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef3ffffffffffff; valaddr_reg:x3; val_offset:162024*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162024*0 + 3*248*FLEN/8, x4, x1, x2)

inst_54009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef7ffffffffffff; valaddr_reg:x3; val_offset:162027*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162027*0 + 3*249*FLEN/8, x4, x1, x2)

inst_54010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ef8000000000000; valaddr_reg:x3; val_offset:162030*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162030*0 + 3*250*FLEN/8, x4, x1, x2)

inst_54011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efc000000000000; valaddr_reg:x3; val_offset:162033*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162033*0 + 3*251*FLEN/8, x4, x1, x2)

inst_54012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efe000000000000; valaddr_reg:x3; val_offset:162036*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162036*0 + 3*252*FLEN/8, x4, x1, x2)

inst_54013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3eff000000000000; valaddr_reg:x3; val_offset:162039*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162039*0 + 3*253*FLEN/8, x4, x1, x2)

inst_54014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3eff800000000000; valaddr_reg:x3; val_offset:162042*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162042*0 + 3*254*FLEN/8, x4, x1, x2)

inst_54015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effc00000000000; valaddr_reg:x3; val_offset:162045*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162045*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_54016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effe00000000000; valaddr_reg:x3; val_offset:162048*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162048*0 + 3*256*FLEN/8, x4, x1, x2)

inst_54017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efff00000000000; valaddr_reg:x3; val_offset:162051*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162051*0 + 3*257*FLEN/8, x4, x1, x2)

inst_54018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efff80000000000; valaddr_reg:x3; val_offset:162054*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162054*0 + 3*258*FLEN/8, x4, x1, x2)

inst_54019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffc0000000000; valaddr_reg:x3; val_offset:162057*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162057*0 + 3*259*FLEN/8, x4, x1, x2)

inst_54020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffe0000000000; valaddr_reg:x3; val_offset:162060*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162060*0 + 3*260*FLEN/8, x4, x1, x2)

inst_54021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effff0000000000; valaddr_reg:x3; val_offset:162063*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162063*0 + 3*261*FLEN/8, x4, x1, x2)

inst_54022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effff8000000000; valaddr_reg:x3; val_offset:162066*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162066*0 + 3*262*FLEN/8, x4, x1, x2)

inst_54023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffc000000000; valaddr_reg:x3; val_offset:162069*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162069*0 + 3*263*FLEN/8, x4, x1, x2)

inst_54024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffe000000000; valaddr_reg:x3; val_offset:162072*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162072*0 + 3*264*FLEN/8, x4, x1, x2)

inst_54025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffff000000000; valaddr_reg:x3; val_offset:162075*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162075*0 + 3*265*FLEN/8, x4, x1, x2)

inst_54026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffff800000000; valaddr_reg:x3; val_offset:162078*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162078*0 + 3*266*FLEN/8, x4, x1, x2)

inst_54027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffc00000000; valaddr_reg:x3; val_offset:162081*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162081*0 + 3*267*FLEN/8, x4, x1, x2)

inst_54028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffe00000000; valaddr_reg:x3; val_offset:162084*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162084*0 + 3*268*FLEN/8, x4, x1, x2)

inst_54029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffff00000000; valaddr_reg:x3; val_offset:162087*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162087*0 + 3*269*FLEN/8, x4, x1, x2)

inst_54030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffff80000000; valaddr_reg:x3; val_offset:162090*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162090*0 + 3*270*FLEN/8, x4, x1, x2)

inst_54031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffc0000000; valaddr_reg:x3; val_offset:162093*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162093*0 + 3*271*FLEN/8, x4, x1, x2)

inst_54032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffe0000000; valaddr_reg:x3; val_offset:162096*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162096*0 + 3*272*FLEN/8, x4, x1, x2)

inst_54033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffff0000000; valaddr_reg:x3; val_offset:162099*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162099*0 + 3*273*FLEN/8, x4, x1, x2)

inst_54034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffff8000000; valaddr_reg:x3; val_offset:162102*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162102*0 + 3*274*FLEN/8, x4, x1, x2)

inst_54035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffc000000; valaddr_reg:x3; val_offset:162105*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162105*0 + 3*275*FLEN/8, x4, x1, x2)

inst_54036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffe000000; valaddr_reg:x3; val_offset:162108*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162108*0 + 3*276*FLEN/8, x4, x1, x2)

inst_54037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffff000000; valaddr_reg:x3; val_offset:162111*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162111*0 + 3*277*FLEN/8, x4, x1, x2)

inst_54038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffff800000; valaddr_reg:x3; val_offset:162114*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162114*0 + 3*278*FLEN/8, x4, x1, x2)

inst_54039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffc00000; valaddr_reg:x3; val_offset:162117*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162117*0 + 3*279*FLEN/8, x4, x1, x2)

inst_54040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffe00000; valaddr_reg:x3; val_offset:162120*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162120*0 + 3*280*FLEN/8, x4, x1, x2)

inst_54041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffff00000; valaddr_reg:x3; val_offset:162123*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162123*0 + 3*281*FLEN/8, x4, x1, x2)

inst_54042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffff80000; valaddr_reg:x3; val_offset:162126*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162126*0 + 3*282*FLEN/8, x4, x1, x2)

inst_54043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffc0000; valaddr_reg:x3; val_offset:162129*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162129*0 + 3*283*FLEN/8, x4, x1, x2)

inst_54044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffe0000; valaddr_reg:x3; val_offset:162132*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162132*0 + 3*284*FLEN/8, x4, x1, x2)

inst_54045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffff0000; valaddr_reg:x3; val_offset:162135*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162135*0 + 3*285*FLEN/8, x4, x1, x2)

inst_54046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffff8000; valaddr_reg:x3; val_offset:162138*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162138*0 + 3*286*FLEN/8, x4, x1, x2)

inst_54047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffffc000; valaddr_reg:x3; val_offset:162141*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162141*0 + 3*287*FLEN/8, x4, x1, x2)

inst_54048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffffe000; valaddr_reg:x3; val_offset:162144*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162144*0 + 3*288*FLEN/8, x4, x1, x2)

inst_54049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffff000; valaddr_reg:x3; val_offset:162147*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162147*0 + 3*289*FLEN/8, x4, x1, x2)

inst_54050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffff800; valaddr_reg:x3; val_offset:162150*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162150*0 + 3*290*FLEN/8, x4, x1, x2)

inst_54051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffffc00; valaddr_reg:x3; val_offset:162153*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162153*0 + 3*291*FLEN/8, x4, x1, x2)

inst_54052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffffe00; valaddr_reg:x3; val_offset:162156*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162156*0 + 3*292*FLEN/8, x4, x1, x2)

inst_54053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffffff00; valaddr_reg:x3; val_offset:162159*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162159*0 + 3*293*FLEN/8, x4, x1, x2)

inst_54054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffffff80; valaddr_reg:x3; val_offset:162162*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162162*0 + 3*294*FLEN/8, x4, x1, x2)

inst_54055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffffffc0; valaddr_reg:x3; val_offset:162165*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162165*0 + 3*295*FLEN/8, x4, x1, x2)

inst_54056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffffffe0; valaddr_reg:x3; val_offset:162168*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162168*0 + 3*296*FLEN/8, x4, x1, x2)

inst_54057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffffff0; valaddr_reg:x3; val_offset:162171*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162171*0 + 3*297*FLEN/8, x4, x1, x2)

inst_54058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffffff8; valaddr_reg:x3; val_offset:162174*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162174*0 + 3*298*FLEN/8, x4, x1, x2)

inst_54059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffffffc; valaddr_reg:x3; val_offset:162177*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162177*0 + 3*299*FLEN/8, x4, x1, x2)

inst_54060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3efffffffffffffe; valaddr_reg:x3; val_offset:162180*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162180*0 + 3*300*FLEN/8, x4, x1, x2)

inst_54061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ef and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3effffffffffffff; valaddr_reg:x3; val_offset:162183*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162183*0 + 3*301*FLEN/8, x4, x1, x2)

inst_54062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:162186*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162186*0 + 3*302*FLEN/8, x4, x1, x2)

inst_54063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:162189*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162189*0 + 3*303*FLEN/8, x4, x1, x2)

inst_54064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:162192*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162192*0 + 3*304*FLEN/8, x4, x1, x2)

inst_54065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:162195*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162195*0 + 3*305*FLEN/8, x4, x1, x2)

inst_54066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:162198*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162198*0 + 3*306*FLEN/8, x4, x1, x2)

inst_54067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:162201*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162201*0 + 3*307*FLEN/8, x4, x1, x2)

inst_54068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:162204*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162204*0 + 3*308*FLEN/8, x4, x1, x2)

inst_54069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:162207*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162207*0 + 3*309*FLEN/8, x4, x1, x2)

inst_54070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:162210*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162210*0 + 3*310*FLEN/8, x4, x1, x2)

inst_54071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:162213*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162213*0 + 3*311*FLEN/8, x4, x1, x2)

inst_54072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:162216*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162216*0 + 3*312*FLEN/8, x4, x1, x2)

inst_54073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:162219*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162219*0 + 3*313*FLEN/8, x4, x1, x2)

inst_54074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:162222*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162222*0 + 3*314*FLEN/8, x4, x1, x2)

inst_54075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:162225*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162225*0 + 3*315*FLEN/8, x4, x1, x2)

inst_54076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:162228*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162228*0 + 3*316*FLEN/8, x4, x1, x2)

inst_54077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:162231*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162231*0 + 3*317*FLEN/8, x4, x1, x2)

inst_54078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:162234*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162234*0 + 3*318*FLEN/8, x4, x1, x2)

inst_54079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:162237*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162237*0 + 3*319*FLEN/8, x4, x1, x2)

inst_54080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:162240*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162240*0 + 3*320*FLEN/8, x4, x1, x2)

inst_54081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:162243*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162243*0 + 3*321*FLEN/8, x4, x1, x2)

inst_54082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:162246*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162246*0 + 3*322*FLEN/8, x4, x1, x2)

inst_54083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07e31ae022bbe and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf0b27c3185441 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07e31ae022bbe; op2val:0x203f0b27c3185441;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:162249*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162249*0 + 3*323*FLEN/8, x4, x1, x2)

inst_54084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:162252*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162252*0 + 3*324*FLEN/8, x4, x1, x2)

inst_54085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:162255*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162255*0 + 3*325*FLEN/8, x4, x1, x2)

inst_54086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:162258*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162258*0 + 3*326*FLEN/8, x4, x1, x2)

inst_54087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:162261*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162261*0 + 3*327*FLEN/8, x4, x1, x2)

inst_54088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:162264*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162264*0 + 3*328*FLEN/8, x4, x1, x2)

inst_54089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:162267*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162267*0 + 3*329*FLEN/8, x4, x1, x2)

inst_54090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:162270*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162270*0 + 3*330*FLEN/8, x4, x1, x2)

inst_54091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:162273*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162273*0 + 3*331*FLEN/8, x4, x1, x2)

inst_54092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:162276*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162276*0 + 3*332*FLEN/8, x4, x1, x2)

inst_54093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:162279*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162279*0 + 3*333*FLEN/8, x4, x1, x2)

inst_54094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:162282*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162282*0 + 3*334*FLEN/8, x4, x1, x2)

inst_54095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:162285*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162285*0 + 3*335*FLEN/8, x4, x1, x2)

inst_54096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:162288*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162288*0 + 3*336*FLEN/8, x4, x1, x2)

inst_54097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:162291*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162291*0 + 3*337*FLEN/8, x4, x1, x2)

inst_54098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:162294*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162294*0 + 3*338*FLEN/8, x4, x1, x2)

inst_54099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:162297*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162297*0 + 3*339*FLEN/8, x4, x1, x2)

inst_54100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:162300*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162300*0 + 3*340*FLEN/8, x4, x1, x2)

inst_54101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:162303*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162303*0 + 3*341*FLEN/8, x4, x1, x2)

inst_54102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:162306*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162306*0 + 3*342*FLEN/8, x4, x1, x2)

inst_54103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:162309*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162309*0 + 3*343*FLEN/8, x4, x1, x2)

inst_54104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:162312*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162312*0 + 3*344*FLEN/8, x4, x1, x2)

inst_54105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:162315*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162315*0 + 3*345*FLEN/8, x4, x1, x2)

inst_54106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000000000000; valaddr_reg:x3; val_offset:162318*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162318*0 + 3*346*FLEN/8, x4, x1, x2)

inst_54107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000000000001; valaddr_reg:x3; val_offset:162321*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162321*0 + 3*347*FLEN/8, x4, x1, x2)

inst_54108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000000000003; valaddr_reg:x3; val_offset:162324*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162324*0 + 3*348*FLEN/8, x4, x1, x2)

inst_54109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000000000007; valaddr_reg:x3; val_offset:162327*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162327*0 + 3*349*FLEN/8, x4, x1, x2)

inst_54110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000000000000f; valaddr_reg:x3; val_offset:162330*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162330*0 + 3*350*FLEN/8, x4, x1, x2)

inst_54111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000000000001f; valaddr_reg:x3; val_offset:162333*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162333*0 + 3*351*FLEN/8, x4, x1, x2)

inst_54112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000000000003f; valaddr_reg:x3; val_offset:162336*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162336*0 + 3*352*FLEN/8, x4, x1, x2)

inst_54113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000000000007f; valaddr_reg:x3; val_offset:162339*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162339*0 + 3*353*FLEN/8, x4, x1, x2)

inst_54114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800000000000ff; valaddr_reg:x3; val_offset:162342*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162342*0 + 3*354*FLEN/8, x4, x1, x2)

inst_54115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800000000001ff; valaddr_reg:x3; val_offset:162345*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162345*0 + 3*355*FLEN/8, x4, x1, x2)

inst_54116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800000000003ff; valaddr_reg:x3; val_offset:162348*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162348*0 + 3*356*FLEN/8, x4, x1, x2)

inst_54117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800000000007ff; valaddr_reg:x3; val_offset:162351*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162351*0 + 3*357*FLEN/8, x4, x1, x2)

inst_54118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000000000fff; valaddr_reg:x3; val_offset:162354*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162354*0 + 3*358*FLEN/8, x4, x1, x2)

inst_54119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000000001fff; valaddr_reg:x3; val_offset:162357*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162357*0 + 3*359*FLEN/8, x4, x1, x2)

inst_54120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000000003fff; valaddr_reg:x3; val_offset:162360*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162360*0 + 3*360*FLEN/8, x4, x1, x2)

inst_54121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000000007fff; valaddr_reg:x3; val_offset:162363*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162363*0 + 3*361*FLEN/8, x4, x1, x2)

inst_54122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000000000ffff; valaddr_reg:x3; val_offset:162366*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162366*0 + 3*362*FLEN/8, x4, x1, x2)

inst_54123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000000001ffff; valaddr_reg:x3; val_offset:162369*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162369*0 + 3*363*FLEN/8, x4, x1, x2)

inst_54124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000000003ffff; valaddr_reg:x3; val_offset:162372*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162372*0 + 3*364*FLEN/8, x4, x1, x2)

inst_54125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000000007ffff; valaddr_reg:x3; val_offset:162375*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162375*0 + 3*365*FLEN/8, x4, x1, x2)

inst_54126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800000000fffff; valaddr_reg:x3; val_offset:162378*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162378*0 + 3*366*FLEN/8, x4, x1, x2)

inst_54127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800000001fffff; valaddr_reg:x3; val_offset:162381*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162381*0 + 3*367*FLEN/8, x4, x1, x2)

inst_54128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800000003fffff; valaddr_reg:x3; val_offset:162384*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162384*0 + 3*368*FLEN/8, x4, x1, x2)

inst_54129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800000007fffff; valaddr_reg:x3; val_offset:162387*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162387*0 + 3*369*FLEN/8, x4, x1, x2)

inst_54130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000000ffffff; valaddr_reg:x3; val_offset:162390*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162390*0 + 3*370*FLEN/8, x4, x1, x2)

inst_54131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000001ffffff; valaddr_reg:x3; val_offset:162393*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162393*0 + 3*371*FLEN/8, x4, x1, x2)

inst_54132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000003ffffff; valaddr_reg:x3; val_offset:162396*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162396*0 + 3*372*FLEN/8, x4, x1, x2)

inst_54133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000007ffffff; valaddr_reg:x3; val_offset:162399*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162399*0 + 3*373*FLEN/8, x4, x1, x2)

inst_54134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000000fffffff; valaddr_reg:x3; val_offset:162402*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162402*0 + 3*374*FLEN/8, x4, x1, x2)

inst_54135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000001fffffff; valaddr_reg:x3; val_offset:162405*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162405*0 + 3*375*FLEN/8, x4, x1, x2)

inst_54136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000003fffffff; valaddr_reg:x3; val_offset:162408*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162408*0 + 3*376*FLEN/8, x4, x1, x2)

inst_54137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000007fffffff; valaddr_reg:x3; val_offset:162411*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162411*0 + 3*377*FLEN/8, x4, x1, x2)

inst_54138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800000ffffffff; valaddr_reg:x3; val_offset:162414*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162414*0 + 3*378*FLEN/8, x4, x1, x2)

inst_54139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800001ffffffff; valaddr_reg:x3; val_offset:162417*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162417*0 + 3*379*FLEN/8, x4, x1, x2)

inst_54140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800003ffffffff; valaddr_reg:x3; val_offset:162420*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162420*0 + 3*380*FLEN/8, x4, x1, x2)

inst_54141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800007ffffffff; valaddr_reg:x3; val_offset:162423*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162423*0 + 3*381*FLEN/8, x4, x1, x2)

inst_54142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280000fffffffff; valaddr_reg:x3; val_offset:162426*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162426*0 + 3*382*FLEN/8, x4, x1, x2)

inst_54143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280001fffffffff; valaddr_reg:x3; val_offset:162429*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162429*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_54144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280003fffffffff; valaddr_reg:x3; val_offset:162432*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162432*0 + 3*384*FLEN/8, x4, x1, x2)

inst_54145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280007fffffffff; valaddr_reg:x3; val_offset:162435*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162435*0 + 3*385*FLEN/8, x4, x1, x2)

inst_54146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28000ffffffffff; valaddr_reg:x3; val_offset:162438*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162438*0 + 3*386*FLEN/8, x4, x1, x2)

inst_54147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28001ffffffffff; valaddr_reg:x3; val_offset:162441*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162441*0 + 3*387*FLEN/8, x4, x1, x2)

inst_54148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28003ffffffffff; valaddr_reg:x3; val_offset:162444*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162444*0 + 3*388*FLEN/8, x4, x1, x2)

inst_54149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28007ffffffffff; valaddr_reg:x3; val_offset:162447*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162447*0 + 3*389*FLEN/8, x4, x1, x2)

inst_54150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2800fffffffffff; valaddr_reg:x3; val_offset:162450*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162450*0 + 3*390*FLEN/8, x4, x1, x2)

inst_54151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2801fffffffffff; valaddr_reg:x3; val_offset:162453*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162453*0 + 3*391*FLEN/8, x4, x1, x2)

inst_54152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2803fffffffffff; valaddr_reg:x3; val_offset:162456*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162456*0 + 3*392*FLEN/8, x4, x1, x2)

inst_54153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x2807fffffffffff; valaddr_reg:x3; val_offset:162459*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162459*0 + 3*393*FLEN/8, x4, x1, x2)

inst_54154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x280ffffffffffff; valaddr_reg:x3; val_offset:162462*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162462*0 + 3*394*FLEN/8, x4, x1, x2)

inst_54155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x281ffffffffffff; valaddr_reg:x3; val_offset:162465*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162465*0 + 3*395*FLEN/8, x4, x1, x2)

inst_54156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x283ffffffffffff; valaddr_reg:x3; val_offset:162468*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162468*0 + 3*396*FLEN/8, x4, x1, x2)

inst_54157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x287ffffffffffff; valaddr_reg:x3; val_offset:162471*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162471*0 + 3*397*FLEN/8, x4, x1, x2)

inst_54158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x288000000000000; valaddr_reg:x3; val_offset:162474*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162474*0 + 3*398*FLEN/8, x4, x1, x2)

inst_54159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28c000000000000; valaddr_reg:x3; val_offset:162477*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162477*0 + 3*399*FLEN/8, x4, x1, x2)

inst_54160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28e000000000000; valaddr_reg:x3; val_offset:162480*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162480*0 + 3*400*FLEN/8, x4, x1, x2)

inst_54161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28f000000000000; valaddr_reg:x3; val_offset:162483*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162483*0 + 3*401*FLEN/8, x4, x1, x2)

inst_54162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28f800000000000; valaddr_reg:x3; val_offset:162486*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162486*0 + 3*402*FLEN/8, x4, x1, x2)

inst_54163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fc00000000000; valaddr_reg:x3; val_offset:162489*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162489*0 + 3*403*FLEN/8, x4, x1, x2)

inst_54164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fe00000000000; valaddr_reg:x3; val_offset:162492*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162492*0 + 3*404*FLEN/8, x4, x1, x2)

inst_54165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ff00000000000; valaddr_reg:x3; val_offset:162495*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162495*0 + 3*405*FLEN/8, x4, x1, x2)

inst_54166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ff80000000000; valaddr_reg:x3; val_offset:162498*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162498*0 + 3*406*FLEN/8, x4, x1, x2)

inst_54167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffc0000000000; valaddr_reg:x3; val_offset:162501*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162501*0 + 3*407*FLEN/8, x4, x1, x2)

inst_54168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffe0000000000; valaddr_reg:x3; val_offset:162504*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162504*0 + 3*408*FLEN/8, x4, x1, x2)

inst_54169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fff0000000000; valaddr_reg:x3; val_offset:162507*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162507*0 + 3*409*FLEN/8, x4, x1, x2)

inst_54170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fff8000000000; valaddr_reg:x3; val_offset:162510*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162510*0 + 3*410*FLEN/8, x4, x1, x2)

inst_54171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffc000000000; valaddr_reg:x3; val_offset:162513*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162513*0 + 3*411*FLEN/8, x4, x1, x2)

inst_54172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffe000000000; valaddr_reg:x3; val_offset:162516*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162516*0 + 3*412*FLEN/8, x4, x1, x2)

inst_54173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffff000000000; valaddr_reg:x3; val_offset:162519*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162519*0 + 3*413*FLEN/8, x4, x1, x2)

inst_54174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffff800000000; valaddr_reg:x3; val_offset:162522*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162522*0 + 3*414*FLEN/8, x4, x1, x2)

inst_54175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffc00000000; valaddr_reg:x3; val_offset:162525*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162525*0 + 3*415*FLEN/8, x4, x1, x2)

inst_54176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffe00000000; valaddr_reg:x3; val_offset:162528*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162528*0 + 3*416*FLEN/8, x4, x1, x2)

inst_54177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffff00000000; valaddr_reg:x3; val_offset:162531*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162531*0 + 3*417*FLEN/8, x4, x1, x2)

inst_54178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffff80000000; valaddr_reg:x3; val_offset:162534*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162534*0 + 3*418*FLEN/8, x4, x1, x2)

inst_54179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffc0000000; valaddr_reg:x3; val_offset:162537*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162537*0 + 3*419*FLEN/8, x4, x1, x2)

inst_54180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffe0000000; valaddr_reg:x3; val_offset:162540*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162540*0 + 3*420*FLEN/8, x4, x1, x2)

inst_54181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffff0000000; valaddr_reg:x3; val_offset:162543*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162543*0 + 3*421*FLEN/8, x4, x1, x2)

inst_54182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffff8000000; valaddr_reg:x3; val_offset:162546*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162546*0 + 3*422*FLEN/8, x4, x1, x2)

inst_54183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffc000000; valaddr_reg:x3; val_offset:162549*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162549*0 + 3*423*FLEN/8, x4, x1, x2)

inst_54184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffe000000; valaddr_reg:x3; val_offset:162552*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162552*0 + 3*424*FLEN/8, x4, x1, x2)

inst_54185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffff000000; valaddr_reg:x3; val_offset:162555*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162555*0 + 3*425*FLEN/8, x4, x1, x2)

inst_54186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffff800000; valaddr_reg:x3; val_offset:162558*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162558*0 + 3*426*FLEN/8, x4, x1, x2)

inst_54187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffc00000; valaddr_reg:x3; val_offset:162561*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162561*0 + 3*427*FLEN/8, x4, x1, x2)

inst_54188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffe00000; valaddr_reg:x3; val_offset:162564*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162564*0 + 3*428*FLEN/8, x4, x1, x2)

inst_54189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffff00000; valaddr_reg:x3; val_offset:162567*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162567*0 + 3*429*FLEN/8, x4, x1, x2)

inst_54190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffff80000; valaddr_reg:x3; val_offset:162570*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162570*0 + 3*430*FLEN/8, x4, x1, x2)

inst_54191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffc0000; valaddr_reg:x3; val_offset:162573*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162573*0 + 3*431*FLEN/8, x4, x1, x2)

inst_54192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffe0000; valaddr_reg:x3; val_offset:162576*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162576*0 + 3*432*FLEN/8, x4, x1, x2)

inst_54193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffff0000; valaddr_reg:x3; val_offset:162579*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162579*0 + 3*433*FLEN/8, x4, x1, x2)

inst_54194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffff8000; valaddr_reg:x3; val_offset:162582*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162582*0 + 3*434*FLEN/8, x4, x1, x2)

inst_54195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffffc000; valaddr_reg:x3; val_offset:162585*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162585*0 + 3*435*FLEN/8, x4, x1, x2)

inst_54196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffffe000; valaddr_reg:x3; val_offset:162588*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162588*0 + 3*436*FLEN/8, x4, x1, x2)

inst_54197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffff000; valaddr_reg:x3; val_offset:162591*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162591*0 + 3*437*FLEN/8, x4, x1, x2)

inst_54198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffff800; valaddr_reg:x3; val_offset:162594*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162594*0 + 3*438*FLEN/8, x4, x1, x2)

inst_54199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffffc00; valaddr_reg:x3; val_offset:162597*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162597*0 + 3*439*FLEN/8, x4, x1, x2)

inst_54200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffffe00; valaddr_reg:x3; val_offset:162600*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162600*0 + 3*440*FLEN/8, x4, x1, x2)

inst_54201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffffff00; valaddr_reg:x3; val_offset:162603*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162603*0 + 3*441*FLEN/8, x4, x1, x2)

inst_54202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffffff80; valaddr_reg:x3; val_offset:162606*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162606*0 + 3*442*FLEN/8, x4, x1, x2)

inst_54203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffffffc0; valaddr_reg:x3; val_offset:162609*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162609*0 + 3*443*FLEN/8, x4, x1, x2)

inst_54204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffffffe0; valaddr_reg:x3; val_offset:162612*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162612*0 + 3*444*FLEN/8, x4, x1, x2)

inst_54205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffffff0; valaddr_reg:x3; val_offset:162615*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162615*0 + 3*445*FLEN/8, x4, x1, x2)

inst_54206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffffff8; valaddr_reg:x3; val_offset:162618*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162618*0 + 3*446*FLEN/8, x4, x1, x2)

inst_54207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffffffc; valaddr_reg:x3; val_offset:162621*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162621*0 + 3*447*FLEN/8, x4, x1, x2)

inst_54208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28ffffffffffffe; valaddr_reg:x3; val_offset:162624*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162624*0 + 3*448*FLEN/8, x4, x1, x2)

inst_54209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07f8581adb144 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07f8581adb144; op2val:0x0;
op3val:0x28fffffffffffff; valaddr_reg:x3; val_offset:162627*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162627*0 + 3*449*FLEN/8, x4, x1, x2)

inst_54210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000000000000; valaddr_reg:x3; val_offset:162630*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162630*0 + 3*450*FLEN/8, x4, x1, x2)

inst_54211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000000000001; valaddr_reg:x3; val_offset:162633*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162633*0 + 3*451*FLEN/8, x4, x1, x2)

inst_54212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000000000003; valaddr_reg:x3; val_offset:162636*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162636*0 + 3*452*FLEN/8, x4, x1, x2)

inst_54213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000000000007; valaddr_reg:x3; val_offset:162639*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162639*0 + 3*453*FLEN/8, x4, x1, x2)

inst_54214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000000000000f; valaddr_reg:x3; val_offset:162642*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162642*0 + 3*454*FLEN/8, x4, x1, x2)

inst_54215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000000000001f; valaddr_reg:x3; val_offset:162645*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162645*0 + 3*455*FLEN/8, x4, x1, x2)

inst_54216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000000000003f; valaddr_reg:x3; val_offset:162648*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162648*0 + 3*456*FLEN/8, x4, x1, x2)

inst_54217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000000000007f; valaddr_reg:x3; val_offset:162651*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162651*0 + 3*457*FLEN/8, x4, x1, x2)

inst_54218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700000000000ff; valaddr_reg:x3; val_offset:162654*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162654*0 + 3*458*FLEN/8, x4, x1, x2)

inst_54219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700000000001ff; valaddr_reg:x3; val_offset:162657*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162657*0 + 3*459*FLEN/8, x4, x1, x2)

inst_54220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700000000003ff; valaddr_reg:x3; val_offset:162660*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162660*0 + 3*460*FLEN/8, x4, x1, x2)

inst_54221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700000000007ff; valaddr_reg:x3; val_offset:162663*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162663*0 + 3*461*FLEN/8, x4, x1, x2)

inst_54222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000000000fff; valaddr_reg:x3; val_offset:162666*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162666*0 + 3*462*FLEN/8, x4, x1, x2)

inst_54223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000000001fff; valaddr_reg:x3; val_offset:162669*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162669*0 + 3*463*FLEN/8, x4, x1, x2)

inst_54224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000000003fff; valaddr_reg:x3; val_offset:162672*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162672*0 + 3*464*FLEN/8, x4, x1, x2)

inst_54225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000000007fff; valaddr_reg:x3; val_offset:162675*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162675*0 + 3*465*FLEN/8, x4, x1, x2)

inst_54226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000000000ffff; valaddr_reg:x3; val_offset:162678*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162678*0 + 3*466*FLEN/8, x4, x1, x2)

inst_54227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000000001ffff; valaddr_reg:x3; val_offset:162681*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162681*0 + 3*467*FLEN/8, x4, x1, x2)

inst_54228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000000003ffff; valaddr_reg:x3; val_offset:162684*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162684*0 + 3*468*FLEN/8, x4, x1, x2)

inst_54229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000000007ffff; valaddr_reg:x3; val_offset:162687*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162687*0 + 3*469*FLEN/8, x4, x1, x2)

inst_54230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700000000fffff; valaddr_reg:x3; val_offset:162690*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162690*0 + 3*470*FLEN/8, x4, x1, x2)

inst_54231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700000001fffff; valaddr_reg:x3; val_offset:162693*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162693*0 + 3*471*FLEN/8, x4, x1, x2)

inst_54232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700000003fffff; valaddr_reg:x3; val_offset:162696*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162696*0 + 3*472*FLEN/8, x4, x1, x2)

inst_54233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700000007fffff; valaddr_reg:x3; val_offset:162699*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162699*0 + 3*473*FLEN/8, x4, x1, x2)

inst_54234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000000ffffff; valaddr_reg:x3; val_offset:162702*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162702*0 + 3*474*FLEN/8, x4, x1, x2)

inst_54235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000001ffffff; valaddr_reg:x3; val_offset:162705*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162705*0 + 3*475*FLEN/8, x4, x1, x2)

inst_54236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000003ffffff; valaddr_reg:x3; val_offset:162708*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162708*0 + 3*476*FLEN/8, x4, x1, x2)

inst_54237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000007ffffff; valaddr_reg:x3; val_offset:162711*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162711*0 + 3*477*FLEN/8, x4, x1, x2)

inst_54238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000000fffffff; valaddr_reg:x3; val_offset:162714*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162714*0 + 3*478*FLEN/8, x4, x1, x2)

inst_54239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000001fffffff; valaddr_reg:x3; val_offset:162717*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162717*0 + 3*479*FLEN/8, x4, x1, x2)

inst_54240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000003fffffff; valaddr_reg:x3; val_offset:162720*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162720*0 + 3*480*FLEN/8, x4, x1, x2)

inst_54241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000007fffffff; valaddr_reg:x3; val_offset:162723*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162723*0 + 3*481*FLEN/8, x4, x1, x2)

inst_54242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700000ffffffff; valaddr_reg:x3; val_offset:162726*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162726*0 + 3*482*FLEN/8, x4, x1, x2)

inst_54243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700001ffffffff; valaddr_reg:x3; val_offset:162729*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162729*0 + 3*483*FLEN/8, x4, x1, x2)

inst_54244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700003ffffffff; valaddr_reg:x3; val_offset:162732*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162732*0 + 3*484*FLEN/8, x4, x1, x2)

inst_54245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700007ffffffff; valaddr_reg:x3; val_offset:162735*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162735*0 + 3*485*FLEN/8, x4, x1, x2)

inst_54246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70000fffffffff; valaddr_reg:x3; val_offset:162738*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162738*0 + 3*486*FLEN/8, x4, x1, x2)

inst_54247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70001fffffffff; valaddr_reg:x3; val_offset:162741*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162741*0 + 3*487*FLEN/8, x4, x1, x2)

inst_54248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70003fffffffff; valaddr_reg:x3; val_offset:162744*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162744*0 + 3*488*FLEN/8, x4, x1, x2)

inst_54249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70007fffffffff; valaddr_reg:x3; val_offset:162747*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162747*0 + 3*489*FLEN/8, x4, x1, x2)

inst_54250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7000ffffffffff; valaddr_reg:x3; val_offset:162750*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162750*0 + 3*490*FLEN/8, x4, x1, x2)

inst_54251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7001ffffffffff; valaddr_reg:x3; val_offset:162753*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162753*0 + 3*491*FLEN/8, x4, x1, x2)

inst_54252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7003ffffffffff; valaddr_reg:x3; val_offset:162756*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162756*0 + 3*492*FLEN/8, x4, x1, x2)

inst_54253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7007ffffffffff; valaddr_reg:x3; val_offset:162759*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162759*0 + 3*493*FLEN/8, x4, x1, x2)

inst_54254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc700fffffffffff; valaddr_reg:x3; val_offset:162762*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162762*0 + 3*494*FLEN/8, x4, x1, x2)

inst_54255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc701fffffffffff; valaddr_reg:x3; val_offset:162765*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162765*0 + 3*495*FLEN/8, x4, x1, x2)

inst_54256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc703fffffffffff; valaddr_reg:x3; val_offset:162768*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162768*0 + 3*496*FLEN/8, x4, x1, x2)

inst_54257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc707fffffffffff; valaddr_reg:x3; val_offset:162771*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162771*0 + 3*497*FLEN/8, x4, x1, x2)

inst_54258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc70ffffffffffff; valaddr_reg:x3; val_offset:162774*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162774*0 + 3*498*FLEN/8, x4, x1, x2)

inst_54259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc71ffffffffffff; valaddr_reg:x3; val_offset:162777*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162777*0 + 3*499*FLEN/8, x4, x1, x2)

inst_54260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc73ffffffffffff; valaddr_reg:x3; val_offset:162780*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162780*0 + 3*500*FLEN/8, x4, x1, x2)

inst_54261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc77ffffffffffff; valaddr_reg:x3; val_offset:162783*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162783*0 + 3*501*FLEN/8, x4, x1, x2)

inst_54262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc78000000000000; valaddr_reg:x3; val_offset:162786*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162786*0 + 3*502*FLEN/8, x4, x1, x2)

inst_54263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7c000000000000; valaddr_reg:x3; val_offset:162789*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162789*0 + 3*503*FLEN/8, x4, x1, x2)

inst_54264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7e000000000000; valaddr_reg:x3; val_offset:162792*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162792*0 + 3*504*FLEN/8, x4, x1, x2)

inst_54265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7f000000000000; valaddr_reg:x3; val_offset:162795*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162795*0 + 3*505*FLEN/8, x4, x1, x2)

inst_54266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7f800000000000; valaddr_reg:x3; val_offset:162798*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162798*0 + 3*506*FLEN/8, x4, x1, x2)

inst_54267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fc00000000000; valaddr_reg:x3; val_offset:162801*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162801*0 + 3*507*FLEN/8, x4, x1, x2)

inst_54268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fe00000000000; valaddr_reg:x3; val_offset:162804*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162804*0 + 3*508*FLEN/8, x4, x1, x2)

inst_54269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ff00000000000; valaddr_reg:x3; val_offset:162807*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162807*0 + 3*509*FLEN/8, x4, x1, x2)

inst_54270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ff80000000000; valaddr_reg:x3; val_offset:162810*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162810*0 + 3*510*FLEN/8, x4, x1, x2)

inst_54271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffc0000000000; valaddr_reg:x3; val_offset:162813*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162813*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_54272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffe0000000000; valaddr_reg:x3; val_offset:162816*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162816*0 + 3*512*FLEN/8, x4, x1, x2)

inst_54273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fff0000000000; valaddr_reg:x3; val_offset:162819*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162819*0 + 3*513*FLEN/8, x4, x1, x2)

inst_54274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fff8000000000; valaddr_reg:x3; val_offset:162822*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162822*0 + 3*514*FLEN/8, x4, x1, x2)

inst_54275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffc000000000; valaddr_reg:x3; val_offset:162825*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162825*0 + 3*515*FLEN/8, x4, x1, x2)

inst_54276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffe000000000; valaddr_reg:x3; val_offset:162828*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162828*0 + 3*516*FLEN/8, x4, x1, x2)

inst_54277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffff000000000; valaddr_reg:x3; val_offset:162831*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162831*0 + 3*517*FLEN/8, x4, x1, x2)

inst_54278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffff800000000; valaddr_reg:x3; val_offset:162834*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162834*0 + 3*518*FLEN/8, x4, x1, x2)

inst_54279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffc00000000; valaddr_reg:x3; val_offset:162837*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162837*0 + 3*519*FLEN/8, x4, x1, x2)

inst_54280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffe00000000; valaddr_reg:x3; val_offset:162840*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162840*0 + 3*520*FLEN/8, x4, x1, x2)

inst_54281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffff00000000; valaddr_reg:x3; val_offset:162843*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162843*0 + 3*521*FLEN/8, x4, x1, x2)

inst_54282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffff80000000; valaddr_reg:x3; val_offset:162846*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162846*0 + 3*522*FLEN/8, x4, x1, x2)

inst_54283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffc0000000; valaddr_reg:x3; val_offset:162849*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162849*0 + 3*523*FLEN/8, x4, x1, x2)

inst_54284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffe0000000; valaddr_reg:x3; val_offset:162852*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162852*0 + 3*524*FLEN/8, x4, x1, x2)

inst_54285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffff0000000; valaddr_reg:x3; val_offset:162855*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162855*0 + 3*525*FLEN/8, x4, x1, x2)

inst_54286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffff8000000; valaddr_reg:x3; val_offset:162858*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162858*0 + 3*526*FLEN/8, x4, x1, x2)

inst_54287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffc000000; valaddr_reg:x3; val_offset:162861*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162861*0 + 3*527*FLEN/8, x4, x1, x2)

inst_54288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffe000000; valaddr_reg:x3; val_offset:162864*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162864*0 + 3*528*FLEN/8, x4, x1, x2)

inst_54289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffff000000; valaddr_reg:x3; val_offset:162867*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162867*0 + 3*529*FLEN/8, x4, x1, x2)

inst_54290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffff800000; valaddr_reg:x3; val_offset:162870*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162870*0 + 3*530*FLEN/8, x4, x1, x2)

inst_54291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffc00000; valaddr_reg:x3; val_offset:162873*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162873*0 + 3*531*FLEN/8, x4, x1, x2)

inst_54292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffe00000; valaddr_reg:x3; val_offset:162876*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162876*0 + 3*532*FLEN/8, x4, x1, x2)

inst_54293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffff00000; valaddr_reg:x3; val_offset:162879*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162879*0 + 3*533*FLEN/8, x4, x1, x2)

inst_54294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffff80000; valaddr_reg:x3; val_offset:162882*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162882*0 + 3*534*FLEN/8, x4, x1, x2)

inst_54295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffc0000; valaddr_reg:x3; val_offset:162885*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162885*0 + 3*535*FLEN/8, x4, x1, x2)

inst_54296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffe0000; valaddr_reg:x3; val_offset:162888*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162888*0 + 3*536*FLEN/8, x4, x1, x2)

inst_54297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffff0000; valaddr_reg:x3; val_offset:162891*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162891*0 + 3*537*FLEN/8, x4, x1, x2)

inst_54298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffff8000; valaddr_reg:x3; val_offset:162894*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162894*0 + 3*538*FLEN/8, x4, x1, x2)

inst_54299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffffc000; valaddr_reg:x3; val_offset:162897*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162897*0 + 3*539*FLEN/8, x4, x1, x2)

inst_54300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffffe000; valaddr_reg:x3; val_offset:162900*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162900*0 + 3*540*FLEN/8, x4, x1, x2)

inst_54301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffff000; valaddr_reg:x3; val_offset:162903*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162903*0 + 3*541*FLEN/8, x4, x1, x2)

inst_54302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffff800; valaddr_reg:x3; val_offset:162906*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162906*0 + 3*542*FLEN/8, x4, x1, x2)

inst_54303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffffc00; valaddr_reg:x3; val_offset:162909*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162909*0 + 3*543*FLEN/8, x4, x1, x2)

inst_54304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffffe00; valaddr_reg:x3; val_offset:162912*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162912*0 + 3*544*FLEN/8, x4, x1, x2)

inst_54305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffffff00; valaddr_reg:x3; val_offset:162915*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162915*0 + 3*545*FLEN/8, x4, x1, x2)

inst_54306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffffff80; valaddr_reg:x3; val_offset:162918*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162918*0 + 3*546*FLEN/8, x4, x1, x2)

inst_54307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffffffc0; valaddr_reg:x3; val_offset:162921*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162921*0 + 3*547*FLEN/8, x4, x1, x2)

inst_54308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffffffe0; valaddr_reg:x3; val_offset:162924*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162924*0 + 3*548*FLEN/8, x4, x1, x2)

inst_54309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffffff0; valaddr_reg:x3; val_offset:162927*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162927*0 + 3*549*FLEN/8, x4, x1, x2)

inst_54310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffffff8; valaddr_reg:x3; val_offset:162930*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162930*0 + 3*550*FLEN/8, x4, x1, x2)

inst_54311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffffffc; valaddr_reg:x3; val_offset:162933*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162933*0 + 3*551*FLEN/8, x4, x1, x2)

inst_54312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7ffffffffffffe; valaddr_reg:x3; val_offset:162936*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162936*0 + 3*552*FLEN/8, x4, x1, x2)

inst_54313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3c7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbc7fffffffffffff; valaddr_reg:x3; val_offset:162939*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162939*0 + 3*553*FLEN/8, x4, x1, x2)

inst_54314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:162942*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162942*0 + 3*554*FLEN/8, x4, x1, x2)

inst_54315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:162945*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162945*0 + 3*555*FLEN/8, x4, x1, x2)

inst_54316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:162948*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162948*0 + 3*556*FLEN/8, x4, x1, x2)

inst_54317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:162951*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162951*0 + 3*557*FLEN/8, x4, x1, x2)

inst_54318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:162954*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162954*0 + 3*558*FLEN/8, x4, x1, x2)

inst_54319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:162957*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162957*0 + 3*559*FLEN/8, x4, x1, x2)

inst_54320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:162960*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162960*0 + 3*560*FLEN/8, x4, x1, x2)

inst_54321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:162963*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162963*0 + 3*561*FLEN/8, x4, x1, x2)

inst_54322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:162966*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162966*0 + 3*562*FLEN/8, x4, x1, x2)

inst_54323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:162969*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162969*0 + 3*563*FLEN/8, x4, x1, x2)

inst_54324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:162972*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162972*0 + 3*564*FLEN/8, x4, x1, x2)

inst_54325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:162975*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162975*0 + 3*565*FLEN/8, x4, x1, x2)

inst_54326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:162978*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162978*0 + 3*566*FLEN/8, x4, x1, x2)

inst_54327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:162981*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162981*0 + 3*567*FLEN/8, x4, x1, x2)

inst_54328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:162984*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162984*0 + 3*568*FLEN/8, x4, x1, x2)

inst_54329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:162987*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162987*0 + 3*569*FLEN/8, x4, x1, x2)

inst_54330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:162990*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162990*0 + 3*570*FLEN/8, x4, x1, x2)

inst_54331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:162993*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162993*0 + 3*571*FLEN/8, x4, x1, x2)

inst_54332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:162996*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162996*0 + 3*572*FLEN/8, x4, x1, x2)

inst_54333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:162999*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162999*0 + 3*573*FLEN/8, x4, x1, x2)

inst_54334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:163002*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163002*0 + 3*574*FLEN/8, x4, x1, x2)

inst_54335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08c04aebe0346 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xef13845640898 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08c04aebe0346; op2val:0x9fcef13845640898;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:163005*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163005*0 + 3*575*FLEN/8, x4, x1, x2)

inst_54336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000000000000; valaddr_reg:x3; val_offset:163008*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163008*0 + 3*576*FLEN/8, x4, x1, x2)

inst_54337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000000000001; valaddr_reg:x3; val_offset:163011*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163011*0 + 3*577*FLEN/8, x4, x1, x2)

inst_54338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000000000003; valaddr_reg:x3; val_offset:163014*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163014*0 + 3*578*FLEN/8, x4, x1, x2)

inst_54339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000000000007; valaddr_reg:x3; val_offset:163017*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163017*0 + 3*579*FLEN/8, x4, x1, x2)

inst_54340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000000000000f; valaddr_reg:x3; val_offset:163020*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163020*0 + 3*580*FLEN/8, x4, x1, x2)

inst_54341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000000000001f; valaddr_reg:x3; val_offset:163023*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163023*0 + 3*581*FLEN/8, x4, x1, x2)

inst_54342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000000000003f; valaddr_reg:x3; val_offset:163026*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163026*0 + 3*582*FLEN/8, x4, x1, x2)

inst_54343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000000000007f; valaddr_reg:x3; val_offset:163029*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163029*0 + 3*583*FLEN/8, x4, x1, x2)

inst_54344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00000000000ff; valaddr_reg:x3; val_offset:163032*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163032*0 + 3*584*FLEN/8, x4, x1, x2)

inst_54345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00000000001ff; valaddr_reg:x3; val_offset:163035*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163035*0 + 3*585*FLEN/8, x4, x1, x2)

inst_54346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00000000003ff; valaddr_reg:x3; val_offset:163038*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163038*0 + 3*586*FLEN/8, x4, x1, x2)

inst_54347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00000000007ff; valaddr_reg:x3; val_offset:163041*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163041*0 + 3*587*FLEN/8, x4, x1, x2)

inst_54348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000000000fff; valaddr_reg:x3; val_offset:163044*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163044*0 + 3*588*FLEN/8, x4, x1, x2)

inst_54349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000000001fff; valaddr_reg:x3; val_offset:163047*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163047*0 + 3*589*FLEN/8, x4, x1, x2)

inst_54350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000000003fff; valaddr_reg:x3; val_offset:163050*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163050*0 + 3*590*FLEN/8, x4, x1, x2)

inst_54351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000000007fff; valaddr_reg:x3; val_offset:163053*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163053*0 + 3*591*FLEN/8, x4, x1, x2)

inst_54352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000000000ffff; valaddr_reg:x3; val_offset:163056*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163056*0 + 3*592*FLEN/8, x4, x1, x2)

inst_54353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000000001ffff; valaddr_reg:x3; val_offset:163059*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163059*0 + 3*593*FLEN/8, x4, x1, x2)

inst_54354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000000003ffff; valaddr_reg:x3; val_offset:163062*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163062*0 + 3*594*FLEN/8, x4, x1, x2)

inst_54355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000000007ffff; valaddr_reg:x3; val_offset:163065*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163065*0 + 3*595*FLEN/8, x4, x1, x2)

inst_54356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00000000fffff; valaddr_reg:x3; val_offset:163068*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163068*0 + 3*596*FLEN/8, x4, x1, x2)

inst_54357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00000001fffff; valaddr_reg:x3; val_offset:163071*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163071*0 + 3*597*FLEN/8, x4, x1, x2)

inst_54358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00000003fffff; valaddr_reg:x3; val_offset:163074*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163074*0 + 3*598*FLEN/8, x4, x1, x2)

inst_54359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00000007fffff; valaddr_reg:x3; val_offset:163077*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163077*0 + 3*599*FLEN/8, x4, x1, x2)

inst_54360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000000ffffff; valaddr_reg:x3; val_offset:163080*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163080*0 + 3*600*FLEN/8, x4, x1, x2)

inst_54361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000001ffffff; valaddr_reg:x3; val_offset:163083*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163083*0 + 3*601*FLEN/8, x4, x1, x2)

inst_54362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000003ffffff; valaddr_reg:x3; val_offset:163086*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163086*0 + 3*602*FLEN/8, x4, x1, x2)

inst_54363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000007ffffff; valaddr_reg:x3; val_offset:163089*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163089*0 + 3*603*FLEN/8, x4, x1, x2)

inst_54364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000000fffffff; valaddr_reg:x3; val_offset:163092*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163092*0 + 3*604*FLEN/8, x4, x1, x2)

inst_54365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000001fffffff; valaddr_reg:x3; val_offset:163095*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163095*0 + 3*605*FLEN/8, x4, x1, x2)

inst_54366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000003fffffff; valaddr_reg:x3; val_offset:163098*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163098*0 + 3*606*FLEN/8, x4, x1, x2)

inst_54367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000007fffffff; valaddr_reg:x3; val_offset:163101*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163101*0 + 3*607*FLEN/8, x4, x1, x2)

inst_54368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00000ffffffff; valaddr_reg:x3; val_offset:163104*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163104*0 + 3*608*FLEN/8, x4, x1, x2)

inst_54369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00001ffffffff; valaddr_reg:x3; val_offset:163107*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163107*0 + 3*609*FLEN/8, x4, x1, x2)

inst_54370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00003ffffffff; valaddr_reg:x3; val_offset:163110*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163110*0 + 3*610*FLEN/8, x4, x1, x2)

inst_54371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00007ffffffff; valaddr_reg:x3; val_offset:163113*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163113*0 + 3*611*FLEN/8, x4, x1, x2)

inst_54372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0000fffffffff; valaddr_reg:x3; val_offset:163116*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163116*0 + 3*612*FLEN/8, x4, x1, x2)

inst_54373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0001fffffffff; valaddr_reg:x3; val_offset:163119*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163119*0 + 3*613*FLEN/8, x4, x1, x2)

inst_54374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0003fffffffff; valaddr_reg:x3; val_offset:163122*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163122*0 + 3*614*FLEN/8, x4, x1, x2)

inst_54375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0007fffffffff; valaddr_reg:x3; val_offset:163125*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163125*0 + 3*615*FLEN/8, x4, x1, x2)

inst_54376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf000ffffffffff; valaddr_reg:x3; val_offset:163128*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163128*0 + 3*616*FLEN/8, x4, x1, x2)

inst_54377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf001ffffffffff; valaddr_reg:x3; val_offset:163131*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163131*0 + 3*617*FLEN/8, x4, x1, x2)

inst_54378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf003ffffffffff; valaddr_reg:x3; val_offset:163134*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163134*0 + 3*618*FLEN/8, x4, x1, x2)

inst_54379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf007ffffffffff; valaddr_reg:x3; val_offset:163137*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163137*0 + 3*619*FLEN/8, x4, x1, x2)

inst_54380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf00fffffffffff; valaddr_reg:x3; val_offset:163140*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163140*0 + 3*620*FLEN/8, x4, x1, x2)

inst_54381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf01fffffffffff; valaddr_reg:x3; val_offset:163143*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163143*0 + 3*621*FLEN/8, x4, x1, x2)

inst_54382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf03fffffffffff; valaddr_reg:x3; val_offset:163146*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163146*0 + 3*622*FLEN/8, x4, x1, x2)

inst_54383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf07fffffffffff; valaddr_reg:x3; val_offset:163149*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163149*0 + 3*623*FLEN/8, x4, x1, x2)

inst_54384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf0ffffffffffff; valaddr_reg:x3; val_offset:163152*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163152*0 + 3*624*FLEN/8, x4, x1, x2)

inst_54385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf1ffffffffffff; valaddr_reg:x3; val_offset:163155*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163155*0 + 3*625*FLEN/8, x4, x1, x2)

inst_54386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf3ffffffffffff; valaddr_reg:x3; val_offset:163158*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163158*0 + 3*626*FLEN/8, x4, x1, x2)

inst_54387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf7ffffffffffff; valaddr_reg:x3; val_offset:163161*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163161*0 + 3*627*FLEN/8, x4, x1, x2)

inst_54388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcf8000000000000; valaddr_reg:x3; val_offset:163164*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163164*0 + 3*628*FLEN/8, x4, x1, x2)

inst_54389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfc000000000000; valaddr_reg:x3; val_offset:163167*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163167*0 + 3*629*FLEN/8, x4, x1, x2)

inst_54390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfe000000000000; valaddr_reg:x3; val_offset:163170*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163170*0 + 3*630*FLEN/8, x4, x1, x2)

inst_54391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcff000000000000; valaddr_reg:x3; val_offset:163173*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163173*0 + 3*631*FLEN/8, x4, x1, x2)

inst_54392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcff800000000000; valaddr_reg:x3; val_offset:163176*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163176*0 + 3*632*FLEN/8, x4, x1, x2)

inst_54393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffc00000000000; valaddr_reg:x3; val_offset:163179*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163179*0 + 3*633*FLEN/8, x4, x1, x2)

inst_54394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffe00000000000; valaddr_reg:x3; val_offset:163182*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163182*0 + 3*634*FLEN/8, x4, x1, x2)

inst_54395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfff00000000000; valaddr_reg:x3; val_offset:163185*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163185*0 + 3*635*FLEN/8, x4, x1, x2)

inst_54396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfff80000000000; valaddr_reg:x3; val_offset:163188*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163188*0 + 3*636*FLEN/8, x4, x1, x2)

inst_54397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffc0000000000; valaddr_reg:x3; val_offset:163191*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163191*0 + 3*637*FLEN/8, x4, x1, x2)

inst_54398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffe0000000000; valaddr_reg:x3; val_offset:163194*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163194*0 + 3*638*FLEN/8, x4, x1, x2)

inst_54399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffff0000000000; valaddr_reg:x3; val_offset:163197*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163197*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_54400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffff8000000000; valaddr_reg:x3; val_offset:163200*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163200*0 + 3*640*FLEN/8, x4, x1, x2)

inst_54401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffc000000000; valaddr_reg:x3; val_offset:163203*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163203*0 + 3*641*FLEN/8, x4, x1, x2)

inst_54402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffe000000000; valaddr_reg:x3; val_offset:163206*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163206*0 + 3*642*FLEN/8, x4, x1, x2)

inst_54403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffff000000000; valaddr_reg:x3; val_offset:163209*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163209*0 + 3*643*FLEN/8, x4, x1, x2)

inst_54404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffff800000000; valaddr_reg:x3; val_offset:163212*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163212*0 + 3*644*FLEN/8, x4, x1, x2)

inst_54405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffc00000000; valaddr_reg:x3; val_offset:163215*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163215*0 + 3*645*FLEN/8, x4, x1, x2)

inst_54406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffe00000000; valaddr_reg:x3; val_offset:163218*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163218*0 + 3*646*FLEN/8, x4, x1, x2)

inst_54407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffff00000000; valaddr_reg:x3; val_offset:163221*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163221*0 + 3*647*FLEN/8, x4, x1, x2)

inst_54408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffff80000000; valaddr_reg:x3; val_offset:163224*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163224*0 + 3*648*FLEN/8, x4, x1, x2)

inst_54409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffc0000000; valaddr_reg:x3; val_offset:163227*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163227*0 + 3*649*FLEN/8, x4, x1, x2)

inst_54410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffe0000000; valaddr_reg:x3; val_offset:163230*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163230*0 + 3*650*FLEN/8, x4, x1, x2)

inst_54411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffff0000000; valaddr_reg:x3; val_offset:163233*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163233*0 + 3*651*FLEN/8, x4, x1, x2)

inst_54412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffff8000000; valaddr_reg:x3; val_offset:163236*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163236*0 + 3*652*FLEN/8, x4, x1, x2)

inst_54413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffc000000; valaddr_reg:x3; val_offset:163239*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163239*0 + 3*653*FLEN/8, x4, x1, x2)

inst_54414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffe000000; valaddr_reg:x3; val_offset:163242*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163242*0 + 3*654*FLEN/8, x4, x1, x2)

inst_54415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffff000000; valaddr_reg:x3; val_offset:163245*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163245*0 + 3*655*FLEN/8, x4, x1, x2)

inst_54416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffff800000; valaddr_reg:x3; val_offset:163248*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163248*0 + 3*656*FLEN/8, x4, x1, x2)

inst_54417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffc00000; valaddr_reg:x3; val_offset:163251*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163251*0 + 3*657*FLEN/8, x4, x1, x2)

inst_54418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffe00000; valaddr_reg:x3; val_offset:163254*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163254*0 + 3*658*FLEN/8, x4, x1, x2)

inst_54419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffff00000; valaddr_reg:x3; val_offset:163257*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163257*0 + 3*659*FLEN/8, x4, x1, x2)

inst_54420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffff80000; valaddr_reg:x3; val_offset:163260*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163260*0 + 3*660*FLEN/8, x4, x1, x2)

inst_54421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffc0000; valaddr_reg:x3; val_offset:163263*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163263*0 + 3*661*FLEN/8, x4, x1, x2)

inst_54422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffe0000; valaddr_reg:x3; val_offset:163266*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163266*0 + 3*662*FLEN/8, x4, x1, x2)

inst_54423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffff0000; valaddr_reg:x3; val_offset:163269*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163269*0 + 3*663*FLEN/8, x4, x1, x2)

inst_54424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffff8000; valaddr_reg:x3; val_offset:163272*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163272*0 + 3*664*FLEN/8, x4, x1, x2)

inst_54425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffffc000; valaddr_reg:x3; val_offset:163275*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163275*0 + 3*665*FLEN/8, x4, x1, x2)

inst_54426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffffe000; valaddr_reg:x3; val_offset:163278*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163278*0 + 3*666*FLEN/8, x4, x1, x2)

inst_54427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffff000; valaddr_reg:x3; val_offset:163281*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163281*0 + 3*667*FLEN/8, x4, x1, x2)

inst_54428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffff800; valaddr_reg:x3; val_offset:163284*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163284*0 + 3*668*FLEN/8, x4, x1, x2)

inst_54429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffffc00; valaddr_reg:x3; val_offset:163287*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163287*0 + 3*669*FLEN/8, x4, x1, x2)

inst_54430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffffe00; valaddr_reg:x3; val_offset:163290*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163290*0 + 3*670*FLEN/8, x4, x1, x2)

inst_54431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffffff00; valaddr_reg:x3; val_offset:163293*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163293*0 + 3*671*FLEN/8, x4, x1, x2)

inst_54432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffffff80; valaddr_reg:x3; val_offset:163296*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163296*0 + 3*672*FLEN/8, x4, x1, x2)

inst_54433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffffffc0; valaddr_reg:x3; val_offset:163299*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163299*0 + 3*673*FLEN/8, x4, x1, x2)

inst_54434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffffffe0; valaddr_reg:x3; val_offset:163302*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163302*0 + 3*674*FLEN/8, x4, x1, x2)

inst_54435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffffff0; valaddr_reg:x3; val_offset:163305*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163305*0 + 3*675*FLEN/8, x4, x1, x2)

inst_54436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffffff8; valaddr_reg:x3; val_offset:163308*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163308*0 + 3*676*FLEN/8, x4, x1, x2)

inst_54437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffffffc; valaddr_reg:x3; val_offset:163311*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163311*0 + 3*677*FLEN/8, x4, x1, x2)

inst_54438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcfffffffffffffe; valaddr_reg:x3; val_offset:163314*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163314*0 + 3*678*FLEN/8, x4, x1, x2)

inst_54439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3cf and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbcffffffffffffff; valaddr_reg:x3; val_offset:163317*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163317*0 + 3*679*FLEN/8, x4, x1, x2)

inst_54440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:163320*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163320*0 + 3*680*FLEN/8, x4, x1, x2)

inst_54441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:163323*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163323*0 + 3*681*FLEN/8, x4, x1, x2)

inst_54442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:163326*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163326*0 + 3*682*FLEN/8, x4, x1, x2)

inst_54443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:163329*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163329*0 + 3*683*FLEN/8, x4, x1, x2)

inst_54444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:163332*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163332*0 + 3*684*FLEN/8, x4, x1, x2)

inst_54445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:163335*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163335*0 + 3*685*FLEN/8, x4, x1, x2)

inst_54446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:163338*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163338*0 + 3*686*FLEN/8, x4, x1, x2)

inst_54447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:163341*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163341*0 + 3*687*FLEN/8, x4, x1, x2)

inst_54448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:163344*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163344*0 + 3*688*FLEN/8, x4, x1, x2)

inst_54449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:163347*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163347*0 + 3*689*FLEN/8, x4, x1, x2)

inst_54450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:163350*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163350*0 + 3*690*FLEN/8, x4, x1, x2)

inst_54451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:163353*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163353*0 + 3*691*FLEN/8, x4, x1, x2)

inst_54452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:163356*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163356*0 + 3*692*FLEN/8, x4, x1, x2)

inst_54453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:163359*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163359*0 + 3*693*FLEN/8, x4, x1, x2)

inst_54454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:163362*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163362*0 + 3*694*FLEN/8, x4, x1, x2)

inst_54455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:163365*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163365*0 + 3*695*FLEN/8, x4, x1, x2)

inst_54456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:163368*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163368*0 + 3*696*FLEN/8, x4, x1, x2)

inst_54457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:163371*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163371*0 + 3*697*FLEN/8, x4, x1, x2)

inst_54458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:163374*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163374*0 + 3*698*FLEN/8, x4, x1, x2)

inst_54459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:163377*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163377*0 + 3*699*FLEN/8, x4, x1, x2)

inst_54460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:163380*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163380*0 + 3*700*FLEN/8, x4, x1, x2)

inst_54461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x08d5803cd8234 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xeeebdedd18b2f and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa08d5803cd8234; op2val:0x9fceeebdedd18b2f;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:163383*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163383*0 + 3*701*FLEN/8, x4, x1, x2)

inst_54462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000000000000; valaddr_reg:x3; val_offset:163386*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163386*0 + 3*702*FLEN/8, x4, x1, x2)

inst_54463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000000000001; valaddr_reg:x3; val_offset:163389*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163389*0 + 3*703*FLEN/8, x4, x1, x2)

inst_54464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000000000003; valaddr_reg:x3; val_offset:163392*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163392*0 + 3*704*FLEN/8, x4, x1, x2)

inst_54465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000000000007; valaddr_reg:x3; val_offset:163395*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163395*0 + 3*705*FLEN/8, x4, x1, x2)

inst_54466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000000000000f; valaddr_reg:x3; val_offset:163398*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163398*0 + 3*706*FLEN/8, x4, x1, x2)

inst_54467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000000000001f; valaddr_reg:x3; val_offset:163401*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163401*0 + 3*707*FLEN/8, x4, x1, x2)

inst_54468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000000000003f; valaddr_reg:x3; val_offset:163404*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163404*0 + 3*708*FLEN/8, x4, x1, x2)

inst_54469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000000000007f; valaddr_reg:x3; val_offset:163407*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163407*0 + 3*709*FLEN/8, x4, x1, x2)

inst_54470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400000000000ff; valaddr_reg:x3; val_offset:163410*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163410*0 + 3*710*FLEN/8, x4, x1, x2)

inst_54471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400000000001ff; valaddr_reg:x3; val_offset:163413*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163413*0 + 3*711*FLEN/8, x4, x1, x2)

inst_54472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400000000003ff; valaddr_reg:x3; val_offset:163416*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163416*0 + 3*712*FLEN/8, x4, x1, x2)

inst_54473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400000000007ff; valaddr_reg:x3; val_offset:163419*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163419*0 + 3*713*FLEN/8, x4, x1, x2)

inst_54474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000000000fff; valaddr_reg:x3; val_offset:163422*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163422*0 + 3*714*FLEN/8, x4, x1, x2)

inst_54475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000000001fff; valaddr_reg:x3; val_offset:163425*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163425*0 + 3*715*FLEN/8, x4, x1, x2)

inst_54476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000000003fff; valaddr_reg:x3; val_offset:163428*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163428*0 + 3*716*FLEN/8, x4, x1, x2)

inst_54477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000000007fff; valaddr_reg:x3; val_offset:163431*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163431*0 + 3*717*FLEN/8, x4, x1, x2)

inst_54478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000000000ffff; valaddr_reg:x3; val_offset:163434*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163434*0 + 3*718*FLEN/8, x4, x1, x2)

inst_54479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000000001ffff; valaddr_reg:x3; val_offset:163437*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163437*0 + 3*719*FLEN/8, x4, x1, x2)

inst_54480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000000003ffff; valaddr_reg:x3; val_offset:163440*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163440*0 + 3*720*FLEN/8, x4, x1, x2)

inst_54481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000000007ffff; valaddr_reg:x3; val_offset:163443*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163443*0 + 3*721*FLEN/8, x4, x1, x2)

inst_54482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400000000fffff; valaddr_reg:x3; val_offset:163446*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163446*0 + 3*722*FLEN/8, x4, x1, x2)

inst_54483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400000001fffff; valaddr_reg:x3; val_offset:163449*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163449*0 + 3*723*FLEN/8, x4, x1, x2)

inst_54484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400000003fffff; valaddr_reg:x3; val_offset:163452*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163452*0 + 3*724*FLEN/8, x4, x1, x2)

inst_54485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400000007fffff; valaddr_reg:x3; val_offset:163455*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163455*0 + 3*725*FLEN/8, x4, x1, x2)

inst_54486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000000ffffff; valaddr_reg:x3; val_offset:163458*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163458*0 + 3*726*FLEN/8, x4, x1, x2)

inst_54487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000001ffffff; valaddr_reg:x3; val_offset:163461*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163461*0 + 3*727*FLEN/8, x4, x1, x2)

inst_54488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000003ffffff; valaddr_reg:x3; val_offset:163464*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163464*0 + 3*728*FLEN/8, x4, x1, x2)

inst_54489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000007ffffff; valaddr_reg:x3; val_offset:163467*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163467*0 + 3*729*FLEN/8, x4, x1, x2)

inst_54490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000000fffffff; valaddr_reg:x3; val_offset:163470*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163470*0 + 3*730*FLEN/8, x4, x1, x2)

inst_54491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000001fffffff; valaddr_reg:x3; val_offset:163473*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163473*0 + 3*731*FLEN/8, x4, x1, x2)

inst_54492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000003fffffff; valaddr_reg:x3; val_offset:163476*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163476*0 + 3*732*FLEN/8, x4, x1, x2)

inst_54493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000007fffffff; valaddr_reg:x3; val_offset:163479*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163479*0 + 3*733*FLEN/8, x4, x1, x2)

inst_54494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400000ffffffff; valaddr_reg:x3; val_offset:163482*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163482*0 + 3*734*FLEN/8, x4, x1, x2)

inst_54495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400001ffffffff; valaddr_reg:x3; val_offset:163485*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163485*0 + 3*735*FLEN/8, x4, x1, x2)

inst_54496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400003ffffffff; valaddr_reg:x3; val_offset:163488*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163488*0 + 3*736*FLEN/8, x4, x1, x2)

inst_54497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400007ffffffff; valaddr_reg:x3; val_offset:163491*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163491*0 + 3*737*FLEN/8, x4, x1, x2)

inst_54498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40000fffffffff; valaddr_reg:x3; val_offset:163494*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163494*0 + 3*738*FLEN/8, x4, x1, x2)

inst_54499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40001fffffffff; valaddr_reg:x3; val_offset:163497*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163497*0 + 3*739*FLEN/8, x4, x1, x2)

inst_54500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40003fffffffff; valaddr_reg:x3; val_offset:163500*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163500*0 + 3*740*FLEN/8, x4, x1, x2)

inst_54501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40007fffffffff; valaddr_reg:x3; val_offset:163503*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163503*0 + 3*741*FLEN/8, x4, x1, x2)

inst_54502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4000ffffffffff; valaddr_reg:x3; val_offset:163506*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163506*0 + 3*742*FLEN/8, x4, x1, x2)

inst_54503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4001ffffffffff; valaddr_reg:x3; val_offset:163509*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163509*0 + 3*743*FLEN/8, x4, x1, x2)

inst_54504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4003ffffffffff; valaddr_reg:x3; val_offset:163512*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163512*0 + 3*744*FLEN/8, x4, x1, x2)

inst_54505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4007ffffffffff; valaddr_reg:x3; val_offset:163515*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163515*0 + 3*745*FLEN/8, x4, x1, x2)

inst_54506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a400fffffffffff; valaddr_reg:x3; val_offset:163518*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163518*0 + 3*746*FLEN/8, x4, x1, x2)

inst_54507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a401fffffffffff; valaddr_reg:x3; val_offset:163521*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163521*0 + 3*747*FLEN/8, x4, x1, x2)

inst_54508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a403fffffffffff; valaddr_reg:x3; val_offset:163524*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163524*0 + 3*748*FLEN/8, x4, x1, x2)

inst_54509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a407fffffffffff; valaddr_reg:x3; val_offset:163527*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163527*0 + 3*749*FLEN/8, x4, x1, x2)

inst_54510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a40ffffffffffff; valaddr_reg:x3; val_offset:163530*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163530*0 + 3*750*FLEN/8, x4, x1, x2)

inst_54511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a41ffffffffffff; valaddr_reg:x3; val_offset:163533*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163533*0 + 3*751*FLEN/8, x4, x1, x2)

inst_54512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a43ffffffffffff; valaddr_reg:x3; val_offset:163536*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163536*0 + 3*752*FLEN/8, x4, x1, x2)

inst_54513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a47ffffffffffff; valaddr_reg:x3; val_offset:163539*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163539*0 + 3*753*FLEN/8, x4, x1, x2)

inst_54514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a48000000000000; valaddr_reg:x3; val_offset:163542*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163542*0 + 3*754*FLEN/8, x4, x1, x2)

inst_54515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4c000000000000; valaddr_reg:x3; val_offset:163545*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163545*0 + 3*755*FLEN/8, x4, x1, x2)

inst_54516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4e000000000000; valaddr_reg:x3; val_offset:163548*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163548*0 + 3*756*FLEN/8, x4, x1, x2)

inst_54517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4f000000000000; valaddr_reg:x3; val_offset:163551*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163551*0 + 3*757*FLEN/8, x4, x1, x2)

inst_54518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4f800000000000; valaddr_reg:x3; val_offset:163554*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163554*0 + 3*758*FLEN/8, x4, x1, x2)

inst_54519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4fc00000000000; valaddr_reg:x3; val_offset:163557*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163557*0 + 3*759*FLEN/8, x4, x1, x2)

inst_54520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4fe00000000000; valaddr_reg:x3; val_offset:163560*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163560*0 + 3*760*FLEN/8, x4, x1, x2)

inst_54521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4ff00000000000; valaddr_reg:x3; val_offset:163563*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163563*0 + 3*761*FLEN/8, x4, x1, x2)

inst_54522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4ff80000000000; valaddr_reg:x3; val_offset:163566*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163566*0 + 3*762*FLEN/8, x4, x1, x2)

inst_54523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4ffc0000000000; valaddr_reg:x3; val_offset:163569*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163569*0 + 3*763*FLEN/8, x4, x1, x2)

inst_54524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4ffe0000000000; valaddr_reg:x3; val_offset:163572*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163572*0 + 3*764*FLEN/8, x4, x1, x2)

inst_54525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4fff0000000000; valaddr_reg:x3; val_offset:163575*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163575*0 + 3*765*FLEN/8, x4, x1, x2)

inst_54526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4fff8000000000; valaddr_reg:x3; val_offset:163578*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163578*0 + 3*766*FLEN/8, x4, x1, x2)

inst_54527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x096b69b2cea22 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xedd4555b1bb2d and fs3 == 0 and fe3 == 0x3a4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa096b69b2cea22; op2val:0x203edd4555b1bb2d;
op3val:0x3a4fffc000000000; valaddr_reg:x3; val_offset:163581*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 163581*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456192736629620736,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456474211606331392,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456614949094686720,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456685317838864384,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456720502210953216,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456738094396997632,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456746890490019840,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456751288536530944,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456753487559786496,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456754587071414272,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755136827228160,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755411705135104,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755549144088576,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755617863565312,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755652223303680,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755669403172864,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755677993107456,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755682288074752,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755684435558400,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755685509300224,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686046171136,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686314606592,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686448824320,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686515933184,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686549487616,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686566264832,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686574653440,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686578847744,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686580944896,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686581993472,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686582517760,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686582779904,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686582910976,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686582976512,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583009280,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583025664,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583033856,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583037952,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583040000,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583041024,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583041536,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583041792,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583041920,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583041984,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583042016,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583042032,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583042040,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583042044,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583042046,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13456755686583042047,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417152,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417153,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417155,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417159,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417167,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417183,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417215,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417279,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417407,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530417663,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530418175,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530419199,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530421247,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530425343,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530433535,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530449919,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530482687,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530548223,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530679295,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841530941439,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841531465727,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841532514303,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841534611455,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841538805759,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841547194367,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841563971583,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841597526015,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841664634879,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462841798852607,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462842067288063,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462842604158975,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462843677900799,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462845825384447,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462850120351743,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462858710286335,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462875890155519,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462910249893887,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332462978969370623,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332463116408324095,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332463391286231039,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332463941042044927,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332465040553672703,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332467239576928255,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332471637623439359,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332480433716461567,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332498025902505983,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332533210274594815,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332603579018772479,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4332744316507127807,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4333025791483838463,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4333588741437259775,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4334714641344102399,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4334714641344102400,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4335840541250945024,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336403491204366336,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336684966181076992,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336825703669432320,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336896072413609984,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336931256785698816,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336948848971743232,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336957645064765440,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336962043111276544,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336964242134532096,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336965341646159872,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336965891401973760,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966166279880704,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966303718834176,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966372438310912,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966406798049280,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966423977918464,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966432567853056,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966436862820352,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966439010304000,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966440084045824,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966440620916736,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966440889352192,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441023569920,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441090678784,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441124233216,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441141010432,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441149399040,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441153593344,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441155690496,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441156739072,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157263360,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157525504,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157656576,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157722112,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157754880,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157771264,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157779456,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157783552,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157785600,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157786624,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787136,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787392,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787520,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787584,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787616,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787632,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787640,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787644,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787646,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4336966441157787647,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890618198420489981,64,FLEN)
NAN_BOXED(2323641188664212933,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089472,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089473,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089475,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089479,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089487,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089503,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089535,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089599,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089727,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762089983,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762090495,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762091519,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762093567,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762097663,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762105855,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762122239,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762155007,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762220543,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762351615,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824762613759,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824763138047,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824764186623,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824766283775,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824770478079,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824778866687,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824795643903,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824829198335,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124824896307199,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124825030524927,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124825298960383,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124825835831295,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124826909573119,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124829057056767,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124833352024063,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124841941958655,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124859121827839,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124893481566207,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535124962201042943,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535125099639996415,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535125374517903359,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535125924273717247,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535127023785345023,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535129222808600575,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535133620855111679,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535142416948133887,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535160009134178303,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535195193506267135,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535265562250444799,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535406299738800127,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4535687774715510783,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4536250724668932095,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4537376624575774719,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4537376624575774720,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4538502524482617344,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539065474436038656,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539346949412749312,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539487686901104640,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539558055645282304,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539593240017371136,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539610832203415552,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539619628296437760,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539624026342948864,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539626225366204416,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539627324877832192,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539627874633646080,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628149511553024,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628286950506496,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628355669983232,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628390029721600,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628407209590784,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628415799525376,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628420094492672,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628422241976320,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628423315718144,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628423852589056,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424121024512,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424255242240,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424322351104,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424355905536,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424372682752,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424381071360,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424385265664,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424387362816,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424388411392,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424388935680,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389197824,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389328896,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389394432,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389427200,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389443584,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389451776,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389455872,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389457920,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389458944,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459456,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459712,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459840,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459904,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459936,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459952,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459960,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459964,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459966,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4539628424389459967,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890646181714734014,64,FLEN)
NAN_BOXED(2323588198151246913,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819840,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819841,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819843,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819847,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819855,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819871,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819903,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094819967,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820095,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820351,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094820863,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094821887,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094823935,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094828031,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094836223,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094852607,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094885375,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985094950911,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095081983,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095344127,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985095868415,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985096916991,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985099014143,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985103208447,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985111597055,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985128374271,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985161928703,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985229037567,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985363255295,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143985631690751,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143986168561663,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143987242303487,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143989389787135,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180143993684754431,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144002274689023,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144019454558207,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144053814296575,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144122533773311,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144259972726783,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180144534850633727,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180145084606447615,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180146184118075391,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180148383141330943,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180152781187842047,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180161577280864255,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180179169466908671,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180214353838997503,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180284722583175167,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180425460071530495,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(180706935048241151,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(181269885001662463,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(182395784908505087,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(182395784908505088,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(183521684815347712,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184084634768769024,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184366109745479680,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184506847233835008,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184577215978012672,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184612400350101504,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184629992536145920,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184638788629168128,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184643186675679232,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184645385698934784,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184646485210562560,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647034966376448,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647309844283392,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647447283236864,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647516002713600,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647550362451968,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647567542321152,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647576132255744,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647580427223040,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647582574706688,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647583648448512,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584185319424,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584453754880,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584587972608,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584655081472,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584688635904,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584705413120,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584713801728,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584717996032,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584720093184,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721141760,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721666048,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721928192,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722059264,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722124800,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722157568,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722173952,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722182144,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722186240,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722188288,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189312,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189824,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190080,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190208,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190272,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190304,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190320,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190328,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190332,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190334,64,FLEN)
NAN_BOXED(6890647641259880772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190335,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045440,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045441,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045443,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045447,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045455,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045471,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045503,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045567,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045695,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522045951,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522046463,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522047487,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522049535,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522053631,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522061823,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522078207,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522110975,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522176511,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522307583,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876522569727,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876523094015,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876524142591,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876526239743,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876530434047,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876538822655,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876555599871,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876589154303,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876656263167,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352876790480895,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352877058916351,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352877595787263,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352878669529087,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352880817012735,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352885111980031,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352893701914623,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352910881783807,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578352945241522175,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578353013960998911,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578353151399952383,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578353426277859327,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578353976033673215,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578355075545300991,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578357274568556543,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578361672615067647,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578370468708089855,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578388060894134271,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578423245266223103,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578493614010400767,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578634351498756095,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13578915826475466751,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13579478776428888063,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13580604676335730687,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13580604676335730688,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13581730576242573312,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582293526195994624,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582575001172705280,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582715738661060608,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582786107405238272,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582821291777327104,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582838883963371520,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582847680056393728,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582852078102904832,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582854277126160384,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582855376637788160,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582855926393602048,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856201271508992,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856338710462464,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856407429939200,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856441789677568,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856458969546752,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856467559481344,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856471854448640,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856474001932288,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856475075674112,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856475612545024,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856475880980480,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476015198208,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476082307072,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476115861504,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476132638720,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476141027328,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476145221632,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476147318784,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476148367360,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476148891648,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149153792,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149284864,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149350400,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149383168,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149399552,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149407744,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149411840,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149413888,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149414912,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415424,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415680,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415808,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415872,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415904,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415920,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415928,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415932,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415934,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13582856476149415935,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890661381616304966,64,FLEN)
NAN_BOXED(11515406521217583256,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009408,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009409,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009411,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009415,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009423,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009439,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009471,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009535,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009663,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541009919,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541010431,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541011455,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541013503,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541017599,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541025791,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541042175,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541074943,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541140479,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541271551,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673541533695,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673542057983,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673543106559,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673545203711,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673549398015,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673557786623,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673574563839,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673608118271,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673675227135,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381673809444863,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381674077880319,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381674614751231,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381675688493055,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381677835976703,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381682130943999,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381690720878591,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381707900747775,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381742260486143,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381810979962879,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614381948418916351,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614382223296823295,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614382773052637183,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614383872564264959,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614386071587520511,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614390469634031615,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614399265727053823,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614416857913098239,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614452042285187071,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614522411029364735,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614663148517720063,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13614944623494430719,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13615507573447852031,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13616633473354694655,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13616633473354694656,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13617759373261537280,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618322323214958592,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618603798191669248,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618744535680024576,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618814904424202240,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618850088796291072,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618867680982335488,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618876477075357696,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618880875121868800,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618883074145124352,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618884173656752128,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618884723412566016,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618884998290472960,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885135729426432,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885204448903168,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885238808641536,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885255988510720,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885264578445312,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885268873412608,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885271020896256,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885272094638080,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885272631508992,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885272899944448,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273034162176,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273101271040,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273134825472,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273151602688,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273159991296,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273164185600,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273166282752,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273167331328,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273167855616,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168117760,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168248832,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168314368,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168347136,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168363520,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168371712,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168375808,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168377856,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168378880,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379392,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379648,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379776,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379840,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379872,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379888,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379896,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379900,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379902,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13618885273168379903,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890662839037297204,64,FLEN)
NAN_BOXED(11515403796739099439,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302272,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302273,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302275,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302279,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302287,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302303,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302335,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302399,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302527,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709302783,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709303295,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709304319,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709306367,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709310463,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709318655,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709335039,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709367807,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709433343,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709564415,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852709826559,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852710350847,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852711399423,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852713496575,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852717690879,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852726079487,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852742856703,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852776411135,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852843519999,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354852977737727,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354853246173183,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354853783044095,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354854856785919,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354857004269567,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354861299236863,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354869889171455,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354887069040639,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354921428779007,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197354990148255743,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197355127587209215,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197355402465116159,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197355952220930047,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197357051732557823,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197359250755813375,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197363648802324479,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197372444895346687,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197390037081391103,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197425221453479935,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197495590197657599,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197636327686012927,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4197917802662723583,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4198480752616144895,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4199606652522987519,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4199606652522987520,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4200732552429830144,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201295502383251456,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201576977359962112,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201717714848317440,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201788083592495104,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201823267964583936,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201840860150628352,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201849656243650560,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201854054290161664,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201856253313417216,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201857352825044992,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201857902580858880,64,FLEN)
NAN_BOXED(6890673140908485154,64,FLEN)
NAN_BOXED(2323537747629947693,64,FLEN)
NAN_BOXED(4201858177458765824,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
