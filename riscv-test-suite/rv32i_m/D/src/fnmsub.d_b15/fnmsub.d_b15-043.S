
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_32256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f0003fffffffff; valaddr_reg:x3; val_offset:96768*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96768*0 + 3*0*FLEN/8, x4, x1, x2)

inst_32257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f0007fffffffff; valaddr_reg:x3; val_offset:96771*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96771*0 + 3*1*FLEN/8, x4, x1, x2)

inst_32258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f000ffffffffff; valaddr_reg:x3; val_offset:96774*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96774*0 + 3*2*FLEN/8, x4, x1, x2)

inst_32259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f001ffffffffff; valaddr_reg:x3; val_offset:96777*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96777*0 + 3*3*FLEN/8, x4, x1, x2)

inst_32260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f003ffffffffff; valaddr_reg:x3; val_offset:96780*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96780*0 + 3*4*FLEN/8, x4, x1, x2)

inst_32261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f007ffffffffff; valaddr_reg:x3; val_offset:96783*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96783*0 + 3*5*FLEN/8, x4, x1, x2)

inst_32262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f00fffffffffff; valaddr_reg:x3; val_offset:96786*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96786*0 + 3*6*FLEN/8, x4, x1, x2)

inst_32263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f01fffffffffff; valaddr_reg:x3; val_offset:96789*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96789*0 + 3*7*FLEN/8, x4, x1, x2)

inst_32264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f03fffffffffff; valaddr_reg:x3; val_offset:96792*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96792*0 + 3*8*FLEN/8, x4, x1, x2)

inst_32265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f07fffffffffff; valaddr_reg:x3; val_offset:96795*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96795*0 + 3*9*FLEN/8, x4, x1, x2)

inst_32266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f0ffffffffffff; valaddr_reg:x3; val_offset:96798*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96798*0 + 3*10*FLEN/8, x4, x1, x2)

inst_32267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f1ffffffffffff; valaddr_reg:x3; val_offset:96801*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96801*0 + 3*11*FLEN/8, x4, x1, x2)

inst_32268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f3ffffffffffff; valaddr_reg:x3; val_offset:96804*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96804*0 + 3*12*FLEN/8, x4, x1, x2)

inst_32269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f7ffffffffffff; valaddr_reg:x3; val_offset:96807*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96807*0 + 3*13*FLEN/8, x4, x1, x2)

inst_32270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83f8000000000000; valaddr_reg:x3; val_offset:96810*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96810*0 + 3*14*FLEN/8, x4, x1, x2)

inst_32271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fc000000000000; valaddr_reg:x3; val_offset:96813*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96813*0 + 3*15*FLEN/8, x4, x1, x2)

inst_32272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fe000000000000; valaddr_reg:x3; val_offset:96816*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96816*0 + 3*16*FLEN/8, x4, x1, x2)

inst_32273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ff000000000000; valaddr_reg:x3; val_offset:96819*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96819*0 + 3*17*FLEN/8, x4, x1, x2)

inst_32274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ff800000000000; valaddr_reg:x3; val_offset:96822*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96822*0 + 3*18*FLEN/8, x4, x1, x2)

inst_32275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffc00000000000; valaddr_reg:x3; val_offset:96825*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96825*0 + 3*19*FLEN/8, x4, x1, x2)

inst_32276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffe00000000000; valaddr_reg:x3; val_offset:96828*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96828*0 + 3*20*FLEN/8, x4, x1, x2)

inst_32277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fff00000000000; valaddr_reg:x3; val_offset:96831*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96831*0 + 3*21*FLEN/8, x4, x1, x2)

inst_32278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fff80000000000; valaddr_reg:x3; val_offset:96834*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96834*0 + 3*22*FLEN/8, x4, x1, x2)

inst_32279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffc0000000000; valaddr_reg:x3; val_offset:96837*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96837*0 + 3*23*FLEN/8, x4, x1, x2)

inst_32280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffe0000000000; valaddr_reg:x3; val_offset:96840*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96840*0 + 3*24*FLEN/8, x4, x1, x2)

inst_32281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffff0000000000; valaddr_reg:x3; val_offset:96843*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96843*0 + 3*25*FLEN/8, x4, x1, x2)

inst_32282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffff8000000000; valaddr_reg:x3; val_offset:96846*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96846*0 + 3*26*FLEN/8, x4, x1, x2)

inst_32283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffc000000000; valaddr_reg:x3; val_offset:96849*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96849*0 + 3*27*FLEN/8, x4, x1, x2)

inst_32284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffe000000000; valaddr_reg:x3; val_offset:96852*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96852*0 + 3*28*FLEN/8, x4, x1, x2)

inst_32285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffff000000000; valaddr_reg:x3; val_offset:96855*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96855*0 + 3*29*FLEN/8, x4, x1, x2)

inst_32286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffff800000000; valaddr_reg:x3; val_offset:96858*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96858*0 + 3*30*FLEN/8, x4, x1, x2)

inst_32287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffc00000000; valaddr_reg:x3; val_offset:96861*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96861*0 + 3*31*FLEN/8, x4, x1, x2)

inst_32288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffe00000000; valaddr_reg:x3; val_offset:96864*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96864*0 + 3*32*FLEN/8, x4, x1, x2)

inst_32289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffff00000000; valaddr_reg:x3; val_offset:96867*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96867*0 + 3*33*FLEN/8, x4, x1, x2)

inst_32290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffff80000000; valaddr_reg:x3; val_offset:96870*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96870*0 + 3*34*FLEN/8, x4, x1, x2)

inst_32291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffc0000000; valaddr_reg:x3; val_offset:96873*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96873*0 + 3*35*FLEN/8, x4, x1, x2)

inst_32292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffe0000000; valaddr_reg:x3; val_offset:96876*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96876*0 + 3*36*FLEN/8, x4, x1, x2)

inst_32293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffff0000000; valaddr_reg:x3; val_offset:96879*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96879*0 + 3*37*FLEN/8, x4, x1, x2)

inst_32294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffff8000000; valaddr_reg:x3; val_offset:96882*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96882*0 + 3*38*FLEN/8, x4, x1, x2)

inst_32295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffc000000; valaddr_reg:x3; val_offset:96885*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96885*0 + 3*39*FLEN/8, x4, x1, x2)

inst_32296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffe000000; valaddr_reg:x3; val_offset:96888*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96888*0 + 3*40*FLEN/8, x4, x1, x2)

inst_32297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffff000000; valaddr_reg:x3; val_offset:96891*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96891*0 + 3*41*FLEN/8, x4, x1, x2)

inst_32298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffff800000; valaddr_reg:x3; val_offset:96894*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96894*0 + 3*42*FLEN/8, x4, x1, x2)

inst_32299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffc00000; valaddr_reg:x3; val_offset:96897*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96897*0 + 3*43*FLEN/8, x4, x1, x2)

inst_32300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffe00000; valaddr_reg:x3; val_offset:96900*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96900*0 + 3*44*FLEN/8, x4, x1, x2)

inst_32301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffff00000; valaddr_reg:x3; val_offset:96903*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96903*0 + 3*45*FLEN/8, x4, x1, x2)

inst_32302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffff80000; valaddr_reg:x3; val_offset:96906*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96906*0 + 3*46*FLEN/8, x4, x1, x2)

inst_32303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffc0000; valaddr_reg:x3; val_offset:96909*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96909*0 + 3*47*FLEN/8, x4, x1, x2)

inst_32304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffe0000; valaddr_reg:x3; val_offset:96912*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96912*0 + 3*48*FLEN/8, x4, x1, x2)

inst_32305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffff0000; valaddr_reg:x3; val_offset:96915*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96915*0 + 3*49*FLEN/8, x4, x1, x2)

inst_32306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffff8000; valaddr_reg:x3; val_offset:96918*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96918*0 + 3*50*FLEN/8, x4, x1, x2)

inst_32307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffffc000; valaddr_reg:x3; val_offset:96921*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96921*0 + 3*51*FLEN/8, x4, x1, x2)

inst_32308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffffe000; valaddr_reg:x3; val_offset:96924*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96924*0 + 3*52*FLEN/8, x4, x1, x2)

inst_32309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffff000; valaddr_reg:x3; val_offset:96927*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96927*0 + 3*53*FLEN/8, x4, x1, x2)

inst_32310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffff800; valaddr_reg:x3; val_offset:96930*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96930*0 + 3*54*FLEN/8, x4, x1, x2)

inst_32311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffffc00; valaddr_reg:x3; val_offset:96933*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96933*0 + 3*55*FLEN/8, x4, x1, x2)

inst_32312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffffe00; valaddr_reg:x3; val_offset:96936*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96936*0 + 3*56*FLEN/8, x4, x1, x2)

inst_32313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffffff00; valaddr_reg:x3; val_offset:96939*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96939*0 + 3*57*FLEN/8, x4, x1, x2)

inst_32314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffffff80; valaddr_reg:x3; val_offset:96942*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96942*0 + 3*58*FLEN/8, x4, x1, x2)

inst_32315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffffffc0; valaddr_reg:x3; val_offset:96945*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96945*0 + 3*59*FLEN/8, x4, x1, x2)

inst_32316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffffffe0; valaddr_reg:x3; val_offset:96948*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96948*0 + 3*60*FLEN/8, x4, x1, x2)

inst_32317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffffff0; valaddr_reg:x3; val_offset:96951*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96951*0 + 3*61*FLEN/8, x4, x1, x2)

inst_32318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffffff8; valaddr_reg:x3; val_offset:96954*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96954*0 + 3*62*FLEN/8, x4, x1, x2)

inst_32319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffffffc; valaddr_reg:x3; val_offset:96957*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96957*0 + 3*63*FLEN/8, x4, x1, x2)

inst_32320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83fffffffffffffe; valaddr_reg:x3; val_offset:96960*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96960*0 + 3*64*FLEN/8, x4, x1, x2)

inst_32321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47b4bc16b5bb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947b4bc16b5bb5; op2val:0x8000;
op3val:0x83ffffffffffffff; valaddr_reg:x3; val_offset:96963*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96963*0 + 3*65*FLEN/8, x4, x1, x2)

inst_32322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:96966*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96966*0 + 3*66*FLEN/8, x4, x1, x2)

inst_32323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:96969*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96969*0 + 3*67*FLEN/8, x4, x1, x2)

inst_32324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:96972*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96972*0 + 3*68*FLEN/8, x4, x1, x2)

inst_32325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:96975*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96975*0 + 3*69*FLEN/8, x4, x1, x2)

inst_32326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:96978*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96978*0 + 3*70*FLEN/8, x4, x1, x2)

inst_32327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:96981*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96981*0 + 3*71*FLEN/8, x4, x1, x2)

inst_32328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:96984*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96984*0 + 3*72*FLEN/8, x4, x1, x2)

inst_32329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:96987*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96987*0 + 3*73*FLEN/8, x4, x1, x2)

inst_32330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:96990*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96990*0 + 3*74*FLEN/8, x4, x1, x2)

inst_32331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:96993*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96993*0 + 3*75*FLEN/8, x4, x1, x2)

inst_32332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:96996*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96996*0 + 3*76*FLEN/8, x4, x1, x2)

inst_32333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:96999*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96999*0 + 3*77*FLEN/8, x4, x1, x2)

inst_32334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:97002*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97002*0 + 3*78*FLEN/8, x4, x1, x2)

inst_32335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:97005*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97005*0 + 3*79*FLEN/8, x4, x1, x2)

inst_32336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:97008*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97008*0 + 3*80*FLEN/8, x4, x1, x2)

inst_32337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:97011*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97011*0 + 3*81*FLEN/8, x4, x1, x2)

inst_32338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:97014*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97014*0 + 3*82*FLEN/8, x4, x1, x2)

inst_32339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:97017*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97017*0 + 3*83*FLEN/8, x4, x1, x2)

inst_32340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:97020*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97020*0 + 3*84*FLEN/8, x4, x1, x2)

inst_32341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:97023*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97023*0 + 3*85*FLEN/8, x4, x1, x2)

inst_32342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:97026*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97026*0 + 3*86*FLEN/8, x4, x1, x2)

inst_32343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:97029*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97029*0 + 3*87*FLEN/8, x4, x1, x2)

inst_32344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000000000000; valaddr_reg:x3; val_offset:97032*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97032*0 + 3*88*FLEN/8, x4, x1, x2)

inst_32345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000000000001; valaddr_reg:x3; val_offset:97035*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97035*0 + 3*89*FLEN/8, x4, x1, x2)

inst_32346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000000000003; valaddr_reg:x3; val_offset:97038*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97038*0 + 3*90*FLEN/8, x4, x1, x2)

inst_32347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000000000007; valaddr_reg:x3; val_offset:97041*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97041*0 + 3*91*FLEN/8, x4, x1, x2)

inst_32348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000000000000f; valaddr_reg:x3; val_offset:97044*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97044*0 + 3*92*FLEN/8, x4, x1, x2)

inst_32349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000000000001f; valaddr_reg:x3; val_offset:97047*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97047*0 + 3*93*FLEN/8, x4, x1, x2)

inst_32350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000000000003f; valaddr_reg:x3; val_offset:97050*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97050*0 + 3*94*FLEN/8, x4, x1, x2)

inst_32351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000000000007f; valaddr_reg:x3; val_offset:97053*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97053*0 + 3*95*FLEN/8, x4, x1, x2)

inst_32352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00000000000ff; valaddr_reg:x3; val_offset:97056*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97056*0 + 3*96*FLEN/8, x4, x1, x2)

inst_32353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00000000001ff; valaddr_reg:x3; val_offset:97059*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97059*0 + 3*97*FLEN/8, x4, x1, x2)

inst_32354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00000000003ff; valaddr_reg:x3; val_offset:97062*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97062*0 + 3*98*FLEN/8, x4, x1, x2)

inst_32355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00000000007ff; valaddr_reg:x3; val_offset:97065*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97065*0 + 3*99*FLEN/8, x4, x1, x2)

inst_32356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000000000fff; valaddr_reg:x3; val_offset:97068*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97068*0 + 3*100*FLEN/8, x4, x1, x2)

inst_32357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000000001fff; valaddr_reg:x3; val_offset:97071*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97071*0 + 3*101*FLEN/8, x4, x1, x2)

inst_32358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000000003fff; valaddr_reg:x3; val_offset:97074*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97074*0 + 3*102*FLEN/8, x4, x1, x2)

inst_32359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000000007fff; valaddr_reg:x3; val_offset:97077*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97077*0 + 3*103*FLEN/8, x4, x1, x2)

inst_32360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000000000ffff; valaddr_reg:x3; val_offset:97080*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97080*0 + 3*104*FLEN/8, x4, x1, x2)

inst_32361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000000001ffff; valaddr_reg:x3; val_offset:97083*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97083*0 + 3*105*FLEN/8, x4, x1, x2)

inst_32362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000000003ffff; valaddr_reg:x3; val_offset:97086*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97086*0 + 3*106*FLEN/8, x4, x1, x2)

inst_32363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000000007ffff; valaddr_reg:x3; val_offset:97089*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97089*0 + 3*107*FLEN/8, x4, x1, x2)

inst_32364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00000000fffff; valaddr_reg:x3; val_offset:97092*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97092*0 + 3*108*FLEN/8, x4, x1, x2)

inst_32365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00000001fffff; valaddr_reg:x3; val_offset:97095*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97095*0 + 3*109*FLEN/8, x4, x1, x2)

inst_32366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00000003fffff; valaddr_reg:x3; val_offset:97098*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97098*0 + 3*110*FLEN/8, x4, x1, x2)

inst_32367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00000007fffff; valaddr_reg:x3; val_offset:97101*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97101*0 + 3*111*FLEN/8, x4, x1, x2)

inst_32368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000000ffffff; valaddr_reg:x3; val_offset:97104*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97104*0 + 3*112*FLEN/8, x4, x1, x2)

inst_32369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000001ffffff; valaddr_reg:x3; val_offset:97107*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97107*0 + 3*113*FLEN/8, x4, x1, x2)

inst_32370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000003ffffff; valaddr_reg:x3; val_offset:97110*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97110*0 + 3*114*FLEN/8, x4, x1, x2)

inst_32371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000007ffffff; valaddr_reg:x3; val_offset:97113*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97113*0 + 3*115*FLEN/8, x4, x1, x2)

inst_32372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000000fffffff; valaddr_reg:x3; val_offset:97116*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97116*0 + 3*116*FLEN/8, x4, x1, x2)

inst_32373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000001fffffff; valaddr_reg:x3; val_offset:97119*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97119*0 + 3*117*FLEN/8, x4, x1, x2)

inst_32374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000003fffffff; valaddr_reg:x3; val_offset:97122*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97122*0 + 3*118*FLEN/8, x4, x1, x2)

inst_32375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000007fffffff; valaddr_reg:x3; val_offset:97125*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97125*0 + 3*119*FLEN/8, x4, x1, x2)

inst_32376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00000ffffffff; valaddr_reg:x3; val_offset:97128*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97128*0 + 3*120*FLEN/8, x4, x1, x2)

inst_32377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00001ffffffff; valaddr_reg:x3; val_offset:97131*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97131*0 + 3*121*FLEN/8, x4, x1, x2)

inst_32378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00003ffffffff; valaddr_reg:x3; val_offset:97134*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97134*0 + 3*122*FLEN/8, x4, x1, x2)

inst_32379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00007ffffffff; valaddr_reg:x3; val_offset:97137*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97137*0 + 3*123*FLEN/8, x4, x1, x2)

inst_32380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0000fffffffff; valaddr_reg:x3; val_offset:97140*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97140*0 + 3*124*FLEN/8, x4, x1, x2)

inst_32381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0001fffffffff; valaddr_reg:x3; val_offset:97143*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97143*0 + 3*125*FLEN/8, x4, x1, x2)

inst_32382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0003fffffffff; valaddr_reg:x3; val_offset:97146*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97146*0 + 3*126*FLEN/8, x4, x1, x2)

inst_32383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0007fffffffff; valaddr_reg:x3; val_offset:97149*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97149*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_32384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc000ffffffffff; valaddr_reg:x3; val_offset:97152*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97152*0 + 3*128*FLEN/8, x4, x1, x2)

inst_32385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc001ffffffffff; valaddr_reg:x3; val_offset:97155*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97155*0 + 3*129*FLEN/8, x4, x1, x2)

inst_32386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc003ffffffffff; valaddr_reg:x3; val_offset:97158*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97158*0 + 3*130*FLEN/8, x4, x1, x2)

inst_32387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc007ffffffffff; valaddr_reg:x3; val_offset:97161*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97161*0 + 3*131*FLEN/8, x4, x1, x2)

inst_32388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc00fffffffffff; valaddr_reg:x3; val_offset:97164*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97164*0 + 3*132*FLEN/8, x4, x1, x2)

inst_32389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc01fffffffffff; valaddr_reg:x3; val_offset:97167*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97167*0 + 3*133*FLEN/8, x4, x1, x2)

inst_32390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc03fffffffffff; valaddr_reg:x3; val_offset:97170*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97170*0 + 3*134*FLEN/8, x4, x1, x2)

inst_32391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc07fffffffffff; valaddr_reg:x3; val_offset:97173*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97173*0 + 3*135*FLEN/8, x4, x1, x2)

inst_32392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc0ffffffffffff; valaddr_reg:x3; val_offset:97176*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97176*0 + 3*136*FLEN/8, x4, x1, x2)

inst_32393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc1ffffffffffff; valaddr_reg:x3; val_offset:97179*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97179*0 + 3*137*FLEN/8, x4, x1, x2)

inst_32394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc3ffffffffffff; valaddr_reg:x3; val_offset:97182*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97182*0 + 3*138*FLEN/8, x4, x1, x2)

inst_32395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc7ffffffffffff; valaddr_reg:x3; val_offset:97185*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97185*0 + 3*139*FLEN/8, x4, x1, x2)

inst_32396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xc8000000000000; valaddr_reg:x3; val_offset:97188*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97188*0 + 3*140*FLEN/8, x4, x1, x2)

inst_32397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcc000000000000; valaddr_reg:x3; val_offset:97191*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97191*0 + 3*141*FLEN/8, x4, x1, x2)

inst_32398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xce000000000000; valaddr_reg:x3; val_offset:97194*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97194*0 + 3*142*FLEN/8, x4, x1, x2)

inst_32399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcf000000000000; valaddr_reg:x3; val_offset:97197*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97197*0 + 3*143*FLEN/8, x4, x1, x2)

inst_32400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcf800000000000; valaddr_reg:x3; val_offset:97200*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97200*0 + 3*144*FLEN/8, x4, x1, x2)

inst_32401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfc00000000000; valaddr_reg:x3; val_offset:97203*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97203*0 + 3*145*FLEN/8, x4, x1, x2)

inst_32402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfe00000000000; valaddr_reg:x3; val_offset:97206*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97206*0 + 3*146*FLEN/8, x4, x1, x2)

inst_32403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcff00000000000; valaddr_reg:x3; val_offset:97209*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97209*0 + 3*147*FLEN/8, x4, x1, x2)

inst_32404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcff80000000000; valaddr_reg:x3; val_offset:97212*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97212*0 + 3*148*FLEN/8, x4, x1, x2)

inst_32405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffc0000000000; valaddr_reg:x3; val_offset:97215*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97215*0 + 3*149*FLEN/8, x4, x1, x2)

inst_32406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffe0000000000; valaddr_reg:x3; val_offset:97218*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97218*0 + 3*150*FLEN/8, x4, x1, x2)

inst_32407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfff0000000000; valaddr_reg:x3; val_offset:97221*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97221*0 + 3*151*FLEN/8, x4, x1, x2)

inst_32408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfff8000000000; valaddr_reg:x3; val_offset:97224*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97224*0 + 3*152*FLEN/8, x4, x1, x2)

inst_32409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffc000000000; valaddr_reg:x3; val_offset:97227*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97227*0 + 3*153*FLEN/8, x4, x1, x2)

inst_32410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffe000000000; valaddr_reg:x3; val_offset:97230*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97230*0 + 3*154*FLEN/8, x4, x1, x2)

inst_32411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffff000000000; valaddr_reg:x3; val_offset:97233*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97233*0 + 3*155*FLEN/8, x4, x1, x2)

inst_32412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffff800000000; valaddr_reg:x3; val_offset:97236*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97236*0 + 3*156*FLEN/8, x4, x1, x2)

inst_32413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffc00000000; valaddr_reg:x3; val_offset:97239*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97239*0 + 3*157*FLEN/8, x4, x1, x2)

inst_32414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffe00000000; valaddr_reg:x3; val_offset:97242*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97242*0 + 3*158*FLEN/8, x4, x1, x2)

inst_32415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffff00000000; valaddr_reg:x3; val_offset:97245*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97245*0 + 3*159*FLEN/8, x4, x1, x2)

inst_32416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffff80000000; valaddr_reg:x3; val_offset:97248*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97248*0 + 3*160*FLEN/8, x4, x1, x2)

inst_32417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffc0000000; valaddr_reg:x3; val_offset:97251*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97251*0 + 3*161*FLEN/8, x4, x1, x2)

inst_32418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffe0000000; valaddr_reg:x3; val_offset:97254*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97254*0 + 3*162*FLEN/8, x4, x1, x2)

inst_32419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffff0000000; valaddr_reg:x3; val_offset:97257*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97257*0 + 3*163*FLEN/8, x4, x1, x2)

inst_32420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffff8000000; valaddr_reg:x3; val_offset:97260*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97260*0 + 3*164*FLEN/8, x4, x1, x2)

inst_32421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffc000000; valaddr_reg:x3; val_offset:97263*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97263*0 + 3*165*FLEN/8, x4, x1, x2)

inst_32422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffe000000; valaddr_reg:x3; val_offset:97266*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97266*0 + 3*166*FLEN/8, x4, x1, x2)

inst_32423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffff000000; valaddr_reg:x3; val_offset:97269*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97269*0 + 3*167*FLEN/8, x4, x1, x2)

inst_32424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffff800000; valaddr_reg:x3; val_offset:97272*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97272*0 + 3*168*FLEN/8, x4, x1, x2)

inst_32425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffc00000; valaddr_reg:x3; val_offset:97275*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97275*0 + 3*169*FLEN/8, x4, x1, x2)

inst_32426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffe00000; valaddr_reg:x3; val_offset:97278*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97278*0 + 3*170*FLEN/8, x4, x1, x2)

inst_32427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffff00000; valaddr_reg:x3; val_offset:97281*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97281*0 + 3*171*FLEN/8, x4, x1, x2)

inst_32428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffff80000; valaddr_reg:x3; val_offset:97284*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97284*0 + 3*172*FLEN/8, x4, x1, x2)

inst_32429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffc0000; valaddr_reg:x3; val_offset:97287*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97287*0 + 3*173*FLEN/8, x4, x1, x2)

inst_32430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffe0000; valaddr_reg:x3; val_offset:97290*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97290*0 + 3*174*FLEN/8, x4, x1, x2)

inst_32431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffff0000; valaddr_reg:x3; val_offset:97293*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97293*0 + 3*175*FLEN/8, x4, x1, x2)

inst_32432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffff8000; valaddr_reg:x3; val_offset:97296*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97296*0 + 3*176*FLEN/8, x4, x1, x2)

inst_32433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffffc000; valaddr_reg:x3; val_offset:97299*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97299*0 + 3*177*FLEN/8, x4, x1, x2)

inst_32434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffffe000; valaddr_reg:x3; val_offset:97302*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97302*0 + 3*178*FLEN/8, x4, x1, x2)

inst_32435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffff000; valaddr_reg:x3; val_offset:97305*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97305*0 + 3*179*FLEN/8, x4, x1, x2)

inst_32436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffff800; valaddr_reg:x3; val_offset:97308*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97308*0 + 3*180*FLEN/8, x4, x1, x2)

inst_32437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffffc00; valaddr_reg:x3; val_offset:97311*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97311*0 + 3*181*FLEN/8, x4, x1, x2)

inst_32438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffffe00; valaddr_reg:x3; val_offset:97314*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97314*0 + 3*182*FLEN/8, x4, x1, x2)

inst_32439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffffff00; valaddr_reg:x3; val_offset:97317*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97317*0 + 3*183*FLEN/8, x4, x1, x2)

inst_32440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffffff80; valaddr_reg:x3; val_offset:97320*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97320*0 + 3*184*FLEN/8, x4, x1, x2)

inst_32441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffffffc0; valaddr_reg:x3; val_offset:97323*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97323*0 + 3*185*FLEN/8, x4, x1, x2)

inst_32442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffffffe0; valaddr_reg:x3; val_offset:97326*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97326*0 + 3*186*FLEN/8, x4, x1, x2)

inst_32443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffffff0; valaddr_reg:x3; val_offset:97329*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97329*0 + 3*187*FLEN/8, x4, x1, x2)

inst_32444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffffff8; valaddr_reg:x3; val_offset:97332*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97332*0 + 3*188*FLEN/8, x4, x1, x2)

inst_32445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffffffc; valaddr_reg:x3; val_offset:97335*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97335*0 + 3*189*FLEN/8, x4, x1, x2)

inst_32446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcffffffffffffe; valaddr_reg:x3; val_offset:97338*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97338*0 + 3*190*FLEN/8, x4, x1, x2)

inst_32447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x47c47a1e5b9df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f947c47a1e5b9df; op2val:0x0;
op3val:0xcfffffffffffff; valaddr_reg:x3; val_offset:97341*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97341*0 + 3*191*FLEN/8, x4, x1, x2)

inst_32448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000000000000; valaddr_reg:x3; val_offset:97344*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97344*0 + 3*192*FLEN/8, x4, x1, x2)

inst_32449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000000000001; valaddr_reg:x3; val_offset:97347*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97347*0 + 3*193*FLEN/8, x4, x1, x2)

inst_32450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000000000003; valaddr_reg:x3; val_offset:97350*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97350*0 + 3*194*FLEN/8, x4, x1, x2)

inst_32451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000000000007; valaddr_reg:x3; val_offset:97353*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97353*0 + 3*195*FLEN/8, x4, x1, x2)

inst_32452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000000000000f; valaddr_reg:x3; val_offset:97356*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97356*0 + 3*196*FLEN/8, x4, x1, x2)

inst_32453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000000000001f; valaddr_reg:x3; val_offset:97359*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97359*0 + 3*197*FLEN/8, x4, x1, x2)

inst_32454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000000000003f; valaddr_reg:x3; val_offset:97362*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97362*0 + 3*198*FLEN/8, x4, x1, x2)

inst_32455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000000000007f; valaddr_reg:x3; val_offset:97365*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97365*0 + 3*199*FLEN/8, x4, x1, x2)

inst_32456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600000000000ff; valaddr_reg:x3; val_offset:97368*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97368*0 + 3*200*FLEN/8, x4, x1, x2)

inst_32457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600000000001ff; valaddr_reg:x3; val_offset:97371*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97371*0 + 3*201*FLEN/8, x4, x1, x2)

inst_32458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600000000003ff; valaddr_reg:x3; val_offset:97374*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97374*0 + 3*202*FLEN/8, x4, x1, x2)

inst_32459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600000000007ff; valaddr_reg:x3; val_offset:97377*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97377*0 + 3*203*FLEN/8, x4, x1, x2)

inst_32460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000000000fff; valaddr_reg:x3; val_offset:97380*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97380*0 + 3*204*FLEN/8, x4, x1, x2)

inst_32461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000000001fff; valaddr_reg:x3; val_offset:97383*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97383*0 + 3*205*FLEN/8, x4, x1, x2)

inst_32462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000000003fff; valaddr_reg:x3; val_offset:97386*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97386*0 + 3*206*FLEN/8, x4, x1, x2)

inst_32463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000000007fff; valaddr_reg:x3; val_offset:97389*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97389*0 + 3*207*FLEN/8, x4, x1, x2)

inst_32464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000000000ffff; valaddr_reg:x3; val_offset:97392*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97392*0 + 3*208*FLEN/8, x4, x1, x2)

inst_32465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000000001ffff; valaddr_reg:x3; val_offset:97395*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97395*0 + 3*209*FLEN/8, x4, x1, x2)

inst_32466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000000003ffff; valaddr_reg:x3; val_offset:97398*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97398*0 + 3*210*FLEN/8, x4, x1, x2)

inst_32467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000000007ffff; valaddr_reg:x3; val_offset:97401*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97401*0 + 3*211*FLEN/8, x4, x1, x2)

inst_32468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600000000fffff; valaddr_reg:x3; val_offset:97404*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97404*0 + 3*212*FLEN/8, x4, x1, x2)

inst_32469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600000001fffff; valaddr_reg:x3; val_offset:97407*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97407*0 + 3*213*FLEN/8, x4, x1, x2)

inst_32470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600000003fffff; valaddr_reg:x3; val_offset:97410*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97410*0 + 3*214*FLEN/8, x4, x1, x2)

inst_32471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600000007fffff; valaddr_reg:x3; val_offset:97413*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97413*0 + 3*215*FLEN/8, x4, x1, x2)

inst_32472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000000ffffff; valaddr_reg:x3; val_offset:97416*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97416*0 + 3*216*FLEN/8, x4, x1, x2)

inst_32473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000001ffffff; valaddr_reg:x3; val_offset:97419*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97419*0 + 3*217*FLEN/8, x4, x1, x2)

inst_32474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000003ffffff; valaddr_reg:x3; val_offset:97422*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97422*0 + 3*218*FLEN/8, x4, x1, x2)

inst_32475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000007ffffff; valaddr_reg:x3; val_offset:97425*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97425*0 + 3*219*FLEN/8, x4, x1, x2)

inst_32476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000000fffffff; valaddr_reg:x3; val_offset:97428*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97428*0 + 3*220*FLEN/8, x4, x1, x2)

inst_32477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000001fffffff; valaddr_reg:x3; val_offset:97431*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97431*0 + 3*221*FLEN/8, x4, x1, x2)

inst_32478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000003fffffff; valaddr_reg:x3; val_offset:97434*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97434*0 + 3*222*FLEN/8, x4, x1, x2)

inst_32479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000007fffffff; valaddr_reg:x3; val_offset:97437*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97437*0 + 3*223*FLEN/8, x4, x1, x2)

inst_32480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600000ffffffff; valaddr_reg:x3; val_offset:97440*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97440*0 + 3*224*FLEN/8, x4, x1, x2)

inst_32481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600001ffffffff; valaddr_reg:x3; val_offset:97443*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97443*0 + 3*225*FLEN/8, x4, x1, x2)

inst_32482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600003ffffffff; valaddr_reg:x3; val_offset:97446*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97446*0 + 3*226*FLEN/8, x4, x1, x2)

inst_32483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600007ffffffff; valaddr_reg:x3; val_offset:97449*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97449*0 + 3*227*FLEN/8, x4, x1, x2)

inst_32484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60000fffffffff; valaddr_reg:x3; val_offset:97452*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97452*0 + 3*228*FLEN/8, x4, x1, x2)

inst_32485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60001fffffffff; valaddr_reg:x3; val_offset:97455*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97455*0 + 3*229*FLEN/8, x4, x1, x2)

inst_32486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60003fffffffff; valaddr_reg:x3; val_offset:97458*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97458*0 + 3*230*FLEN/8, x4, x1, x2)

inst_32487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60007fffffffff; valaddr_reg:x3; val_offset:97461*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97461*0 + 3*231*FLEN/8, x4, x1, x2)

inst_32488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6000ffffffffff; valaddr_reg:x3; val_offset:97464*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97464*0 + 3*232*FLEN/8, x4, x1, x2)

inst_32489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6001ffffffffff; valaddr_reg:x3; val_offset:97467*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97467*0 + 3*233*FLEN/8, x4, x1, x2)

inst_32490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6003ffffffffff; valaddr_reg:x3; val_offset:97470*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97470*0 + 3*234*FLEN/8, x4, x1, x2)

inst_32491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6007ffffffffff; valaddr_reg:x3; val_offset:97473*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97473*0 + 3*235*FLEN/8, x4, x1, x2)

inst_32492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe600fffffffffff; valaddr_reg:x3; val_offset:97476*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97476*0 + 3*236*FLEN/8, x4, x1, x2)

inst_32493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe601fffffffffff; valaddr_reg:x3; val_offset:97479*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97479*0 + 3*237*FLEN/8, x4, x1, x2)

inst_32494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe603fffffffffff; valaddr_reg:x3; val_offset:97482*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97482*0 + 3*238*FLEN/8, x4, x1, x2)

inst_32495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe607fffffffffff; valaddr_reg:x3; val_offset:97485*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97485*0 + 3*239*FLEN/8, x4, x1, x2)

inst_32496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe60ffffffffffff; valaddr_reg:x3; val_offset:97488*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97488*0 + 3*240*FLEN/8, x4, x1, x2)

inst_32497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe61ffffffffffff; valaddr_reg:x3; val_offset:97491*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97491*0 + 3*241*FLEN/8, x4, x1, x2)

inst_32498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe63ffffffffffff; valaddr_reg:x3; val_offset:97494*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97494*0 + 3*242*FLEN/8, x4, x1, x2)

inst_32499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe67ffffffffffff; valaddr_reg:x3; val_offset:97497*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97497*0 + 3*243*FLEN/8, x4, x1, x2)

inst_32500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe68000000000000; valaddr_reg:x3; val_offset:97500*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97500*0 + 3*244*FLEN/8, x4, x1, x2)

inst_32501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6c000000000000; valaddr_reg:x3; val_offset:97503*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97503*0 + 3*245*FLEN/8, x4, x1, x2)

inst_32502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6e000000000000; valaddr_reg:x3; val_offset:97506*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97506*0 + 3*246*FLEN/8, x4, x1, x2)

inst_32503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6f000000000000; valaddr_reg:x3; val_offset:97509*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97509*0 + 3*247*FLEN/8, x4, x1, x2)

inst_32504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6f800000000000; valaddr_reg:x3; val_offset:97512*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97512*0 + 3*248*FLEN/8, x4, x1, x2)

inst_32505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fc00000000000; valaddr_reg:x3; val_offset:97515*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97515*0 + 3*249*FLEN/8, x4, x1, x2)

inst_32506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fe00000000000; valaddr_reg:x3; val_offset:97518*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97518*0 + 3*250*FLEN/8, x4, x1, x2)

inst_32507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ff00000000000; valaddr_reg:x3; val_offset:97521*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97521*0 + 3*251*FLEN/8, x4, x1, x2)

inst_32508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ff80000000000; valaddr_reg:x3; val_offset:97524*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97524*0 + 3*252*FLEN/8, x4, x1, x2)

inst_32509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffc0000000000; valaddr_reg:x3; val_offset:97527*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97527*0 + 3*253*FLEN/8, x4, x1, x2)

inst_32510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffe0000000000; valaddr_reg:x3; val_offset:97530*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97530*0 + 3*254*FLEN/8, x4, x1, x2)

inst_32511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fff0000000000; valaddr_reg:x3; val_offset:97533*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97533*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_32512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fff8000000000; valaddr_reg:x3; val_offset:97536*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97536*0 + 3*256*FLEN/8, x4, x1, x2)

inst_32513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffc000000000; valaddr_reg:x3; val_offset:97539*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97539*0 + 3*257*FLEN/8, x4, x1, x2)

inst_32514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffe000000000; valaddr_reg:x3; val_offset:97542*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97542*0 + 3*258*FLEN/8, x4, x1, x2)

inst_32515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffff000000000; valaddr_reg:x3; val_offset:97545*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97545*0 + 3*259*FLEN/8, x4, x1, x2)

inst_32516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffff800000000; valaddr_reg:x3; val_offset:97548*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97548*0 + 3*260*FLEN/8, x4, x1, x2)

inst_32517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffc00000000; valaddr_reg:x3; val_offset:97551*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97551*0 + 3*261*FLEN/8, x4, x1, x2)

inst_32518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffe00000000; valaddr_reg:x3; val_offset:97554*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97554*0 + 3*262*FLEN/8, x4, x1, x2)

inst_32519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffff00000000; valaddr_reg:x3; val_offset:97557*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97557*0 + 3*263*FLEN/8, x4, x1, x2)

inst_32520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffff80000000; valaddr_reg:x3; val_offset:97560*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97560*0 + 3*264*FLEN/8, x4, x1, x2)

inst_32521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffc0000000; valaddr_reg:x3; val_offset:97563*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97563*0 + 3*265*FLEN/8, x4, x1, x2)

inst_32522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffe0000000; valaddr_reg:x3; val_offset:97566*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97566*0 + 3*266*FLEN/8, x4, x1, x2)

inst_32523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffff0000000; valaddr_reg:x3; val_offset:97569*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97569*0 + 3*267*FLEN/8, x4, x1, x2)

inst_32524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffff8000000; valaddr_reg:x3; val_offset:97572*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97572*0 + 3*268*FLEN/8, x4, x1, x2)

inst_32525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffc000000; valaddr_reg:x3; val_offset:97575*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97575*0 + 3*269*FLEN/8, x4, x1, x2)

inst_32526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffe000000; valaddr_reg:x3; val_offset:97578*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97578*0 + 3*270*FLEN/8, x4, x1, x2)

inst_32527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffff000000; valaddr_reg:x3; val_offset:97581*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97581*0 + 3*271*FLEN/8, x4, x1, x2)

inst_32528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffff800000; valaddr_reg:x3; val_offset:97584*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97584*0 + 3*272*FLEN/8, x4, x1, x2)

inst_32529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffc00000; valaddr_reg:x3; val_offset:97587*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97587*0 + 3*273*FLEN/8, x4, x1, x2)

inst_32530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffe00000; valaddr_reg:x3; val_offset:97590*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97590*0 + 3*274*FLEN/8, x4, x1, x2)

inst_32531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffff00000; valaddr_reg:x3; val_offset:97593*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97593*0 + 3*275*FLEN/8, x4, x1, x2)

inst_32532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffff80000; valaddr_reg:x3; val_offset:97596*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97596*0 + 3*276*FLEN/8, x4, x1, x2)

inst_32533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffc0000; valaddr_reg:x3; val_offset:97599*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97599*0 + 3*277*FLEN/8, x4, x1, x2)

inst_32534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffe0000; valaddr_reg:x3; val_offset:97602*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97602*0 + 3*278*FLEN/8, x4, x1, x2)

inst_32535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffff0000; valaddr_reg:x3; val_offset:97605*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97605*0 + 3*279*FLEN/8, x4, x1, x2)

inst_32536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffff8000; valaddr_reg:x3; val_offset:97608*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97608*0 + 3*280*FLEN/8, x4, x1, x2)

inst_32537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffffc000; valaddr_reg:x3; val_offset:97611*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97611*0 + 3*281*FLEN/8, x4, x1, x2)

inst_32538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffffe000; valaddr_reg:x3; val_offset:97614*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97614*0 + 3*282*FLEN/8, x4, x1, x2)

inst_32539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffff000; valaddr_reg:x3; val_offset:97617*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97617*0 + 3*283*FLEN/8, x4, x1, x2)

inst_32540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffff800; valaddr_reg:x3; val_offset:97620*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97620*0 + 3*284*FLEN/8, x4, x1, x2)

inst_32541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffffc00; valaddr_reg:x3; val_offset:97623*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97623*0 + 3*285*FLEN/8, x4, x1, x2)

inst_32542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffffe00; valaddr_reg:x3; val_offset:97626*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97626*0 + 3*286*FLEN/8, x4, x1, x2)

inst_32543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffffff00; valaddr_reg:x3; val_offset:97629*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97629*0 + 3*287*FLEN/8, x4, x1, x2)

inst_32544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffffff80; valaddr_reg:x3; val_offset:97632*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97632*0 + 3*288*FLEN/8, x4, x1, x2)

inst_32545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffffffc0; valaddr_reg:x3; val_offset:97635*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97635*0 + 3*289*FLEN/8, x4, x1, x2)

inst_32546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffffffe0; valaddr_reg:x3; val_offset:97638*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97638*0 + 3*290*FLEN/8, x4, x1, x2)

inst_32547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffffff0; valaddr_reg:x3; val_offset:97641*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97641*0 + 3*291*FLEN/8, x4, x1, x2)

inst_32548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffffff8; valaddr_reg:x3; val_offset:97644*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97644*0 + 3*292*FLEN/8, x4, x1, x2)

inst_32549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffffffc; valaddr_reg:x3; val_offset:97647*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97647*0 + 3*293*FLEN/8, x4, x1, x2)

inst_32550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6ffffffffffffe; valaddr_reg:x3; val_offset:97650*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97650*0 + 3*294*FLEN/8, x4, x1, x2)

inst_32551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3e6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbe6fffffffffffff; valaddr_reg:x3; val_offset:97653*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97653*0 + 3*295*FLEN/8, x4, x1, x2)

inst_32552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:97656*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97656*0 + 3*296*FLEN/8, x4, x1, x2)

inst_32553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:97659*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97659*0 + 3*297*FLEN/8, x4, x1, x2)

inst_32554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:97662*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97662*0 + 3*298*FLEN/8, x4, x1, x2)

inst_32555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:97665*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97665*0 + 3*299*FLEN/8, x4, x1, x2)

inst_32556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:97668*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97668*0 + 3*300*FLEN/8, x4, x1, x2)

inst_32557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:97671*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97671*0 + 3*301*FLEN/8, x4, x1, x2)

inst_32558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:97674*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97674*0 + 3*302*FLEN/8, x4, x1, x2)

inst_32559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:97677*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97677*0 + 3*303*FLEN/8, x4, x1, x2)

inst_32560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:97680*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97680*0 + 3*304*FLEN/8, x4, x1, x2)

inst_32561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:97683*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97683*0 + 3*305*FLEN/8, x4, x1, x2)

inst_32562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:97686*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97686*0 + 3*306*FLEN/8, x4, x1, x2)

inst_32563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:97689*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97689*0 + 3*307*FLEN/8, x4, x1, x2)

inst_32564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:97692*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97692*0 + 3*308*FLEN/8, x4, x1, x2)

inst_32565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:97695*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97695*0 + 3*309*FLEN/8, x4, x1, x2)

inst_32566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:97698*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97698*0 + 3*310*FLEN/8, x4, x1, x2)

inst_32567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:97701*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97701*0 + 3*311*FLEN/8, x4, x1, x2)

inst_32568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:97704*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97704*0 + 3*312*FLEN/8, x4, x1, x2)

inst_32569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:97707*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97707*0 + 3*313*FLEN/8, x4, x1, x2)

inst_32570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:97710*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97710*0 + 3*314*FLEN/8, x4, x1, x2)

inst_32571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:97713*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97713*0 + 3*315*FLEN/8, x4, x1, x2)

inst_32572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:97716*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97716*0 + 3*316*FLEN/8, x4, x1, x2)

inst_32573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x49c56b3dc5b19 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8d76a771547f6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f949c56b3dc5b19; op2val:0x9fd8d76a771547f6;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:97719*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97719*0 + 3*317*FLEN/8, x4, x1, x2)

inst_32574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000000000000; valaddr_reg:x3; val_offset:97722*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97722*0 + 3*318*FLEN/8, x4, x1, x2)

inst_32575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000000000001; valaddr_reg:x3; val_offset:97725*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97725*0 + 3*319*FLEN/8, x4, x1, x2)

inst_32576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000000000003; valaddr_reg:x3; val_offset:97728*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97728*0 + 3*320*FLEN/8, x4, x1, x2)

inst_32577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000000000007; valaddr_reg:x3; val_offset:97731*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97731*0 + 3*321*FLEN/8, x4, x1, x2)

inst_32578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000000000000f; valaddr_reg:x3; val_offset:97734*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97734*0 + 3*322*FLEN/8, x4, x1, x2)

inst_32579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000000000001f; valaddr_reg:x3; val_offset:97737*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97737*0 + 3*323*FLEN/8, x4, x1, x2)

inst_32580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000000000003f; valaddr_reg:x3; val_offset:97740*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97740*0 + 3*324*FLEN/8, x4, x1, x2)

inst_32581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000000000007f; valaddr_reg:x3; val_offset:97743*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97743*0 + 3*325*FLEN/8, x4, x1, x2)

inst_32582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600000000000ff; valaddr_reg:x3; val_offset:97746*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97746*0 + 3*326*FLEN/8, x4, x1, x2)

inst_32583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600000000001ff; valaddr_reg:x3; val_offset:97749*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97749*0 + 3*327*FLEN/8, x4, x1, x2)

inst_32584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600000000003ff; valaddr_reg:x3; val_offset:97752*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97752*0 + 3*328*FLEN/8, x4, x1, x2)

inst_32585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600000000007ff; valaddr_reg:x3; val_offset:97755*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97755*0 + 3*329*FLEN/8, x4, x1, x2)

inst_32586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000000000fff; valaddr_reg:x3; val_offset:97758*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97758*0 + 3*330*FLEN/8, x4, x1, x2)

inst_32587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000000001fff; valaddr_reg:x3; val_offset:97761*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97761*0 + 3*331*FLEN/8, x4, x1, x2)

inst_32588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000000003fff; valaddr_reg:x3; val_offset:97764*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97764*0 + 3*332*FLEN/8, x4, x1, x2)

inst_32589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000000007fff; valaddr_reg:x3; val_offset:97767*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97767*0 + 3*333*FLEN/8, x4, x1, x2)

inst_32590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000000000ffff; valaddr_reg:x3; val_offset:97770*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97770*0 + 3*334*FLEN/8, x4, x1, x2)

inst_32591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000000001ffff; valaddr_reg:x3; val_offset:97773*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97773*0 + 3*335*FLEN/8, x4, x1, x2)

inst_32592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000000003ffff; valaddr_reg:x3; val_offset:97776*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97776*0 + 3*336*FLEN/8, x4, x1, x2)

inst_32593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000000007ffff; valaddr_reg:x3; val_offset:97779*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97779*0 + 3*337*FLEN/8, x4, x1, x2)

inst_32594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600000000fffff; valaddr_reg:x3; val_offset:97782*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97782*0 + 3*338*FLEN/8, x4, x1, x2)

inst_32595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600000001fffff; valaddr_reg:x3; val_offset:97785*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97785*0 + 3*339*FLEN/8, x4, x1, x2)

inst_32596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600000003fffff; valaddr_reg:x3; val_offset:97788*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97788*0 + 3*340*FLEN/8, x4, x1, x2)

inst_32597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600000007fffff; valaddr_reg:x3; val_offset:97791*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97791*0 + 3*341*FLEN/8, x4, x1, x2)

inst_32598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000000ffffff; valaddr_reg:x3; val_offset:97794*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97794*0 + 3*342*FLEN/8, x4, x1, x2)

inst_32599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000001ffffff; valaddr_reg:x3; val_offset:97797*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97797*0 + 3*343*FLEN/8, x4, x1, x2)

inst_32600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000003ffffff; valaddr_reg:x3; val_offset:97800*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97800*0 + 3*344*FLEN/8, x4, x1, x2)

inst_32601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000007ffffff; valaddr_reg:x3; val_offset:97803*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97803*0 + 3*345*FLEN/8, x4, x1, x2)

inst_32602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000000fffffff; valaddr_reg:x3; val_offset:97806*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97806*0 + 3*346*FLEN/8, x4, x1, x2)

inst_32603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000001fffffff; valaddr_reg:x3; val_offset:97809*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97809*0 + 3*347*FLEN/8, x4, x1, x2)

inst_32604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000003fffffff; valaddr_reg:x3; val_offset:97812*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97812*0 + 3*348*FLEN/8, x4, x1, x2)

inst_32605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000007fffffff; valaddr_reg:x3; val_offset:97815*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97815*0 + 3*349*FLEN/8, x4, x1, x2)

inst_32606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600000ffffffff; valaddr_reg:x3; val_offset:97818*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97818*0 + 3*350*FLEN/8, x4, x1, x2)

inst_32607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600001ffffffff; valaddr_reg:x3; val_offset:97821*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97821*0 + 3*351*FLEN/8, x4, x1, x2)

inst_32608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600003ffffffff; valaddr_reg:x3; val_offset:97824*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97824*0 + 3*352*FLEN/8, x4, x1, x2)

inst_32609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600007ffffffff; valaddr_reg:x3; val_offset:97827*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97827*0 + 3*353*FLEN/8, x4, x1, x2)

inst_32610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60000fffffffff; valaddr_reg:x3; val_offset:97830*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97830*0 + 3*354*FLEN/8, x4, x1, x2)

inst_32611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60001fffffffff; valaddr_reg:x3; val_offset:97833*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97833*0 + 3*355*FLEN/8, x4, x1, x2)

inst_32612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60003fffffffff; valaddr_reg:x3; val_offset:97836*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97836*0 + 3*356*FLEN/8, x4, x1, x2)

inst_32613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60007fffffffff; valaddr_reg:x3; val_offset:97839*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97839*0 + 3*357*FLEN/8, x4, x1, x2)

inst_32614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6000ffffffffff; valaddr_reg:x3; val_offset:97842*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97842*0 + 3*358*FLEN/8, x4, x1, x2)

inst_32615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6001ffffffffff; valaddr_reg:x3; val_offset:97845*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97845*0 + 3*359*FLEN/8, x4, x1, x2)

inst_32616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6003ffffffffff; valaddr_reg:x3; val_offset:97848*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97848*0 + 3*360*FLEN/8, x4, x1, x2)

inst_32617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6007ffffffffff; valaddr_reg:x3; val_offset:97851*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97851*0 + 3*361*FLEN/8, x4, x1, x2)

inst_32618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e600fffffffffff; valaddr_reg:x3; val_offset:97854*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97854*0 + 3*362*FLEN/8, x4, x1, x2)

inst_32619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e601fffffffffff; valaddr_reg:x3; val_offset:97857*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97857*0 + 3*363*FLEN/8, x4, x1, x2)

inst_32620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e603fffffffffff; valaddr_reg:x3; val_offset:97860*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97860*0 + 3*364*FLEN/8, x4, x1, x2)

inst_32621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e607fffffffffff; valaddr_reg:x3; val_offset:97863*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97863*0 + 3*365*FLEN/8, x4, x1, x2)

inst_32622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e60ffffffffffff; valaddr_reg:x3; val_offset:97866*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97866*0 + 3*366*FLEN/8, x4, x1, x2)

inst_32623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e61ffffffffffff; valaddr_reg:x3; val_offset:97869*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97869*0 + 3*367*FLEN/8, x4, x1, x2)

inst_32624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e63ffffffffffff; valaddr_reg:x3; val_offset:97872*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97872*0 + 3*368*FLEN/8, x4, x1, x2)

inst_32625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e67ffffffffffff; valaddr_reg:x3; val_offset:97875*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97875*0 + 3*369*FLEN/8, x4, x1, x2)

inst_32626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e68000000000000; valaddr_reg:x3; val_offset:97878*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97878*0 + 3*370*FLEN/8, x4, x1, x2)

inst_32627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6c000000000000; valaddr_reg:x3; val_offset:97881*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97881*0 + 3*371*FLEN/8, x4, x1, x2)

inst_32628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6e000000000000; valaddr_reg:x3; val_offset:97884*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97884*0 + 3*372*FLEN/8, x4, x1, x2)

inst_32629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6f000000000000; valaddr_reg:x3; val_offset:97887*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97887*0 + 3*373*FLEN/8, x4, x1, x2)

inst_32630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6f800000000000; valaddr_reg:x3; val_offset:97890*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97890*0 + 3*374*FLEN/8, x4, x1, x2)

inst_32631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fc00000000000; valaddr_reg:x3; val_offset:97893*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97893*0 + 3*375*FLEN/8, x4, x1, x2)

inst_32632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fe00000000000; valaddr_reg:x3; val_offset:97896*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97896*0 + 3*376*FLEN/8, x4, x1, x2)

inst_32633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ff00000000000; valaddr_reg:x3; val_offset:97899*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97899*0 + 3*377*FLEN/8, x4, x1, x2)

inst_32634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ff80000000000; valaddr_reg:x3; val_offset:97902*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97902*0 + 3*378*FLEN/8, x4, x1, x2)

inst_32635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffc0000000000; valaddr_reg:x3; val_offset:97905*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97905*0 + 3*379*FLEN/8, x4, x1, x2)

inst_32636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffe0000000000; valaddr_reg:x3; val_offset:97908*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97908*0 + 3*380*FLEN/8, x4, x1, x2)

inst_32637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fff0000000000; valaddr_reg:x3; val_offset:97911*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97911*0 + 3*381*FLEN/8, x4, x1, x2)

inst_32638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fff8000000000; valaddr_reg:x3; val_offset:97914*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97914*0 + 3*382*FLEN/8, x4, x1, x2)

inst_32639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffc000000000; valaddr_reg:x3; val_offset:97917*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97917*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_32640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffe000000000; valaddr_reg:x3; val_offset:97920*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97920*0 + 3*384*FLEN/8, x4, x1, x2)

inst_32641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffff000000000; valaddr_reg:x3; val_offset:97923*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97923*0 + 3*385*FLEN/8, x4, x1, x2)

inst_32642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffff800000000; valaddr_reg:x3; val_offset:97926*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97926*0 + 3*386*FLEN/8, x4, x1, x2)

inst_32643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffc00000000; valaddr_reg:x3; val_offset:97929*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97929*0 + 3*387*FLEN/8, x4, x1, x2)

inst_32644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffe00000000; valaddr_reg:x3; val_offset:97932*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97932*0 + 3*388*FLEN/8, x4, x1, x2)

inst_32645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffff00000000; valaddr_reg:x3; val_offset:97935*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97935*0 + 3*389*FLEN/8, x4, x1, x2)

inst_32646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffff80000000; valaddr_reg:x3; val_offset:97938*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97938*0 + 3*390*FLEN/8, x4, x1, x2)

inst_32647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffc0000000; valaddr_reg:x3; val_offset:97941*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97941*0 + 3*391*FLEN/8, x4, x1, x2)

inst_32648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffe0000000; valaddr_reg:x3; val_offset:97944*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97944*0 + 3*392*FLEN/8, x4, x1, x2)

inst_32649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffff0000000; valaddr_reg:x3; val_offset:97947*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97947*0 + 3*393*FLEN/8, x4, x1, x2)

inst_32650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffff8000000; valaddr_reg:x3; val_offset:97950*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97950*0 + 3*394*FLEN/8, x4, x1, x2)

inst_32651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffc000000; valaddr_reg:x3; val_offset:97953*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97953*0 + 3*395*FLEN/8, x4, x1, x2)

inst_32652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffe000000; valaddr_reg:x3; val_offset:97956*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97956*0 + 3*396*FLEN/8, x4, x1, x2)

inst_32653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffff000000; valaddr_reg:x3; val_offset:97959*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97959*0 + 3*397*FLEN/8, x4, x1, x2)

inst_32654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffff800000; valaddr_reg:x3; val_offset:97962*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97962*0 + 3*398*FLEN/8, x4, x1, x2)

inst_32655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffc00000; valaddr_reg:x3; val_offset:97965*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97965*0 + 3*399*FLEN/8, x4, x1, x2)

inst_32656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffe00000; valaddr_reg:x3; val_offset:97968*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97968*0 + 3*400*FLEN/8, x4, x1, x2)

inst_32657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffff00000; valaddr_reg:x3; val_offset:97971*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97971*0 + 3*401*FLEN/8, x4, x1, x2)

inst_32658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffff80000; valaddr_reg:x3; val_offset:97974*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97974*0 + 3*402*FLEN/8, x4, x1, x2)

inst_32659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffc0000; valaddr_reg:x3; val_offset:97977*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97977*0 + 3*403*FLEN/8, x4, x1, x2)

inst_32660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffe0000; valaddr_reg:x3; val_offset:97980*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97980*0 + 3*404*FLEN/8, x4, x1, x2)

inst_32661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffff0000; valaddr_reg:x3; val_offset:97983*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97983*0 + 3*405*FLEN/8, x4, x1, x2)

inst_32662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffff8000; valaddr_reg:x3; val_offset:97986*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97986*0 + 3*406*FLEN/8, x4, x1, x2)

inst_32663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffffc000; valaddr_reg:x3; val_offset:97989*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97989*0 + 3*407*FLEN/8, x4, x1, x2)

inst_32664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffffe000; valaddr_reg:x3; val_offset:97992*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97992*0 + 3*408*FLEN/8, x4, x1, x2)

inst_32665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffff000; valaddr_reg:x3; val_offset:97995*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97995*0 + 3*409*FLEN/8, x4, x1, x2)

inst_32666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffff800; valaddr_reg:x3; val_offset:97998*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 97998*0 + 3*410*FLEN/8, x4, x1, x2)

inst_32667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffffc00; valaddr_reg:x3; val_offset:98001*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98001*0 + 3*411*FLEN/8, x4, x1, x2)

inst_32668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffffe00; valaddr_reg:x3; val_offset:98004*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98004*0 + 3*412*FLEN/8, x4, x1, x2)

inst_32669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffffff00; valaddr_reg:x3; val_offset:98007*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98007*0 + 3*413*FLEN/8, x4, x1, x2)

inst_32670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffffff80; valaddr_reg:x3; val_offset:98010*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98010*0 + 3*414*FLEN/8, x4, x1, x2)

inst_32671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffffffc0; valaddr_reg:x3; val_offset:98013*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98013*0 + 3*415*FLEN/8, x4, x1, x2)

inst_32672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffffffe0; valaddr_reg:x3; val_offset:98016*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98016*0 + 3*416*FLEN/8, x4, x1, x2)

inst_32673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffffff0; valaddr_reg:x3; val_offset:98019*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98019*0 + 3*417*FLEN/8, x4, x1, x2)

inst_32674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffffff8; valaddr_reg:x3; val_offset:98022*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98022*0 + 3*418*FLEN/8, x4, x1, x2)

inst_32675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffffffc; valaddr_reg:x3; val_offset:98025*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98025*0 + 3*419*FLEN/8, x4, x1, x2)

inst_32676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6ffffffffffffe; valaddr_reg:x3; val_offset:98028*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98028*0 + 3*420*FLEN/8, x4, x1, x2)

inst_32677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3e6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3e6fffffffffffff; valaddr_reg:x3; val_offset:98031*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98031*0 + 3*421*FLEN/8, x4, x1, x2)

inst_32678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:98034*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98034*0 + 3*422*FLEN/8, x4, x1, x2)

inst_32679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:98037*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98037*0 + 3*423*FLEN/8, x4, x1, x2)

inst_32680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:98040*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98040*0 + 3*424*FLEN/8, x4, x1, x2)

inst_32681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:98043*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98043*0 + 3*425*FLEN/8, x4, x1, x2)

inst_32682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:98046*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98046*0 + 3*426*FLEN/8, x4, x1, x2)

inst_32683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:98049*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98049*0 + 3*427*FLEN/8, x4, x1, x2)

inst_32684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:98052*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98052*0 + 3*428*FLEN/8, x4, x1, x2)

inst_32685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:98055*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98055*0 + 3*429*FLEN/8, x4, x1, x2)

inst_32686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:98058*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98058*0 + 3*430*FLEN/8, x4, x1, x2)

inst_32687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:98061*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98061*0 + 3*431*FLEN/8, x4, x1, x2)

inst_32688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:98064*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98064*0 + 3*432*FLEN/8, x4, x1, x2)

inst_32689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:98067*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98067*0 + 3*433*FLEN/8, x4, x1, x2)

inst_32690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:98070*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98070*0 + 3*434*FLEN/8, x4, x1, x2)

inst_32691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:98073*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98073*0 + 3*435*FLEN/8, x4, x1, x2)

inst_32692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:98076*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98076*0 + 3*436*FLEN/8, x4, x1, x2)

inst_32693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:98079*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98079*0 + 3*437*FLEN/8, x4, x1, x2)

inst_32694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:98082*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98082*0 + 3*438*FLEN/8, x4, x1, x2)

inst_32695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:98085*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98085*0 + 3*439*FLEN/8, x4, x1, x2)

inst_32696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:98088*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98088*0 + 3*440*FLEN/8, x4, x1, x2)

inst_32697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:98091*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98091*0 + 3*441*FLEN/8, x4, x1, x2)

inst_32698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:98094*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98094*0 + 3*442*FLEN/8, x4, x1, x2)

inst_32699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4adef6e364465 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8c24718909c21 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94adef6e364465; op2val:0x2048c24718909c21;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:98097*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98097*0 + 3*443*FLEN/8, x4, x1, x2)

inst_32700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:98100*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98100*0 + 3*444*FLEN/8, x4, x1, x2)

inst_32701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:98103*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98103*0 + 3*445*FLEN/8, x4, x1, x2)

inst_32702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:98106*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98106*0 + 3*446*FLEN/8, x4, x1, x2)

inst_32703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:98109*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98109*0 + 3*447*FLEN/8, x4, x1, x2)

inst_32704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:98112*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98112*0 + 3*448*FLEN/8, x4, x1, x2)

inst_32705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:98115*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98115*0 + 3*449*FLEN/8, x4, x1, x2)

inst_32706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:98118*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98118*0 + 3*450*FLEN/8, x4, x1, x2)

inst_32707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:98121*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98121*0 + 3*451*FLEN/8, x4, x1, x2)

inst_32708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:98124*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98124*0 + 3*452*FLEN/8, x4, x1, x2)

inst_32709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:98127*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98127*0 + 3*453*FLEN/8, x4, x1, x2)

inst_32710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:98130*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98130*0 + 3*454*FLEN/8, x4, x1, x2)

inst_32711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:98133*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98133*0 + 3*455*FLEN/8, x4, x1, x2)

inst_32712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:98136*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98136*0 + 3*456*FLEN/8, x4, x1, x2)

inst_32713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:98139*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98139*0 + 3*457*FLEN/8, x4, x1, x2)

inst_32714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:98142*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98142*0 + 3*458*FLEN/8, x4, x1, x2)

inst_32715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:98145*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98145*0 + 3*459*FLEN/8, x4, x1, x2)

inst_32716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:98148*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98148*0 + 3*460*FLEN/8, x4, x1, x2)

inst_32717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:98151*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98151*0 + 3*461*FLEN/8, x4, x1, x2)

inst_32718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:98154*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98154*0 + 3*462*FLEN/8, x4, x1, x2)

inst_32719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:98157*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98157*0 + 3*463*FLEN/8, x4, x1, x2)

inst_32720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:98160*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98160*0 + 3*464*FLEN/8, x4, x1, x2)

inst_32721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:98163*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98163*0 + 3*465*FLEN/8, x4, x1, x2)

inst_32722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000000000000; valaddr_reg:x3; val_offset:98166*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98166*0 + 3*466*FLEN/8, x4, x1, x2)

inst_32723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000000000001; valaddr_reg:x3; val_offset:98169*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98169*0 + 3*467*FLEN/8, x4, x1, x2)

inst_32724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000000000003; valaddr_reg:x3; val_offset:98172*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98172*0 + 3*468*FLEN/8, x4, x1, x2)

inst_32725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000000000007; valaddr_reg:x3; val_offset:98175*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98175*0 + 3*469*FLEN/8, x4, x1, x2)

inst_32726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000000000000f; valaddr_reg:x3; val_offset:98178*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98178*0 + 3*470*FLEN/8, x4, x1, x2)

inst_32727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000000000001f; valaddr_reg:x3; val_offset:98181*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98181*0 + 3*471*FLEN/8, x4, x1, x2)

inst_32728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000000000003f; valaddr_reg:x3; val_offset:98184*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98184*0 + 3*472*FLEN/8, x4, x1, x2)

inst_32729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000000000007f; valaddr_reg:x3; val_offset:98187*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98187*0 + 3*473*FLEN/8, x4, x1, x2)

inst_32730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400000000000ff; valaddr_reg:x3; val_offset:98190*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98190*0 + 3*474*FLEN/8, x4, x1, x2)

inst_32731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400000000001ff; valaddr_reg:x3; val_offset:98193*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98193*0 + 3*475*FLEN/8, x4, x1, x2)

inst_32732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400000000003ff; valaddr_reg:x3; val_offset:98196*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98196*0 + 3*476*FLEN/8, x4, x1, x2)

inst_32733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400000000007ff; valaddr_reg:x3; val_offset:98199*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98199*0 + 3*477*FLEN/8, x4, x1, x2)

inst_32734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000000000fff; valaddr_reg:x3; val_offset:98202*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98202*0 + 3*478*FLEN/8, x4, x1, x2)

inst_32735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000000001fff; valaddr_reg:x3; val_offset:98205*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98205*0 + 3*479*FLEN/8, x4, x1, x2)

inst_32736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000000003fff; valaddr_reg:x3; val_offset:98208*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98208*0 + 3*480*FLEN/8, x4, x1, x2)

inst_32737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000000007fff; valaddr_reg:x3; val_offset:98211*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98211*0 + 3*481*FLEN/8, x4, x1, x2)

inst_32738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000000000ffff; valaddr_reg:x3; val_offset:98214*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98214*0 + 3*482*FLEN/8, x4, x1, x2)

inst_32739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000000001ffff; valaddr_reg:x3; val_offset:98217*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98217*0 + 3*483*FLEN/8, x4, x1, x2)

inst_32740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000000003ffff; valaddr_reg:x3; val_offset:98220*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98220*0 + 3*484*FLEN/8, x4, x1, x2)

inst_32741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000000007ffff; valaddr_reg:x3; val_offset:98223*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98223*0 + 3*485*FLEN/8, x4, x1, x2)

inst_32742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400000000fffff; valaddr_reg:x3; val_offset:98226*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98226*0 + 3*486*FLEN/8, x4, x1, x2)

inst_32743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400000001fffff; valaddr_reg:x3; val_offset:98229*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98229*0 + 3*487*FLEN/8, x4, x1, x2)

inst_32744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400000003fffff; valaddr_reg:x3; val_offset:98232*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98232*0 + 3*488*FLEN/8, x4, x1, x2)

inst_32745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400000007fffff; valaddr_reg:x3; val_offset:98235*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98235*0 + 3*489*FLEN/8, x4, x1, x2)

inst_32746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000000ffffff; valaddr_reg:x3; val_offset:98238*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98238*0 + 3*490*FLEN/8, x4, x1, x2)

inst_32747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000001ffffff; valaddr_reg:x3; val_offset:98241*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98241*0 + 3*491*FLEN/8, x4, x1, x2)

inst_32748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000003ffffff; valaddr_reg:x3; val_offset:98244*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98244*0 + 3*492*FLEN/8, x4, x1, x2)

inst_32749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000007ffffff; valaddr_reg:x3; val_offset:98247*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98247*0 + 3*493*FLEN/8, x4, x1, x2)

inst_32750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000000fffffff; valaddr_reg:x3; val_offset:98250*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98250*0 + 3*494*FLEN/8, x4, x1, x2)

inst_32751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000001fffffff; valaddr_reg:x3; val_offset:98253*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98253*0 + 3*495*FLEN/8, x4, x1, x2)

inst_32752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000003fffffff; valaddr_reg:x3; val_offset:98256*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98256*0 + 3*496*FLEN/8, x4, x1, x2)

inst_32753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000007fffffff; valaddr_reg:x3; val_offset:98259*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98259*0 + 3*497*FLEN/8, x4, x1, x2)

inst_32754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400000ffffffff; valaddr_reg:x3; val_offset:98262*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98262*0 + 3*498*FLEN/8, x4, x1, x2)

inst_32755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400001ffffffff; valaddr_reg:x3; val_offset:98265*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98265*0 + 3*499*FLEN/8, x4, x1, x2)

inst_32756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400003ffffffff; valaddr_reg:x3; val_offset:98268*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98268*0 + 3*500*FLEN/8, x4, x1, x2)

inst_32757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400007ffffffff; valaddr_reg:x3; val_offset:98271*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98271*0 + 3*501*FLEN/8, x4, x1, x2)

inst_32758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140000fffffffff; valaddr_reg:x3; val_offset:98274*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98274*0 + 3*502*FLEN/8, x4, x1, x2)

inst_32759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140001fffffffff; valaddr_reg:x3; val_offset:98277*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98277*0 + 3*503*FLEN/8, x4, x1, x2)

inst_32760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140003fffffffff; valaddr_reg:x3; val_offset:98280*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98280*0 + 3*504*FLEN/8, x4, x1, x2)

inst_32761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140007fffffffff; valaddr_reg:x3; val_offset:98283*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98283*0 + 3*505*FLEN/8, x4, x1, x2)

inst_32762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814000ffffffffff; valaddr_reg:x3; val_offset:98286*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98286*0 + 3*506*FLEN/8, x4, x1, x2)

inst_32763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814001ffffffffff; valaddr_reg:x3; val_offset:98289*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98289*0 + 3*507*FLEN/8, x4, x1, x2)

inst_32764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814003ffffffffff; valaddr_reg:x3; val_offset:98292*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98292*0 + 3*508*FLEN/8, x4, x1, x2)

inst_32765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814007ffffffffff; valaddr_reg:x3; val_offset:98295*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98295*0 + 3*509*FLEN/8, x4, x1, x2)

inst_32766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81400fffffffffff; valaddr_reg:x3; val_offset:98298*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98298*0 + 3*510*FLEN/8, x4, x1, x2)

inst_32767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81401fffffffffff; valaddr_reg:x3; val_offset:98301*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98301*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_32768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81403fffffffffff; valaddr_reg:x3; val_offset:98304*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98304*0 + 3*512*FLEN/8, x4, x1, x2)

inst_32769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x81407fffffffffff; valaddr_reg:x3; val_offset:98307*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98307*0 + 3*513*FLEN/8, x4, x1, x2)

inst_32770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8140ffffffffffff; valaddr_reg:x3; val_offset:98310*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98310*0 + 3*514*FLEN/8, x4, x1, x2)

inst_32771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8141ffffffffffff; valaddr_reg:x3; val_offset:98313*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98313*0 + 3*515*FLEN/8, x4, x1, x2)

inst_32772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8143ffffffffffff; valaddr_reg:x3; val_offset:98316*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98316*0 + 3*516*FLEN/8, x4, x1, x2)

inst_32773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8147ffffffffffff; valaddr_reg:x3; val_offset:98319*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98319*0 + 3*517*FLEN/8, x4, x1, x2)

inst_32774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x8148000000000000; valaddr_reg:x3; val_offset:98322*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98322*0 + 3*518*FLEN/8, x4, x1, x2)

inst_32775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814c000000000000; valaddr_reg:x3; val_offset:98325*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98325*0 + 3*519*FLEN/8, x4, x1, x2)

inst_32776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814e000000000000; valaddr_reg:x3; val_offset:98328*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98328*0 + 3*520*FLEN/8, x4, x1, x2)

inst_32777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814f000000000000; valaddr_reg:x3; val_offset:98331*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98331*0 + 3*521*FLEN/8, x4, x1, x2)

inst_32778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814f800000000000; valaddr_reg:x3; val_offset:98334*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98334*0 + 3*522*FLEN/8, x4, x1, x2)

inst_32779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fc00000000000; valaddr_reg:x3; val_offset:98337*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98337*0 + 3*523*FLEN/8, x4, x1, x2)

inst_32780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fe00000000000; valaddr_reg:x3; val_offset:98340*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98340*0 + 3*524*FLEN/8, x4, x1, x2)

inst_32781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ff00000000000; valaddr_reg:x3; val_offset:98343*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98343*0 + 3*525*FLEN/8, x4, x1, x2)

inst_32782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ff80000000000; valaddr_reg:x3; val_offset:98346*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98346*0 + 3*526*FLEN/8, x4, x1, x2)

inst_32783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffc0000000000; valaddr_reg:x3; val_offset:98349*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98349*0 + 3*527*FLEN/8, x4, x1, x2)

inst_32784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffe0000000000; valaddr_reg:x3; val_offset:98352*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98352*0 + 3*528*FLEN/8, x4, x1, x2)

inst_32785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fff0000000000; valaddr_reg:x3; val_offset:98355*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98355*0 + 3*529*FLEN/8, x4, x1, x2)

inst_32786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fff8000000000; valaddr_reg:x3; val_offset:98358*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98358*0 + 3*530*FLEN/8, x4, x1, x2)

inst_32787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffc000000000; valaddr_reg:x3; val_offset:98361*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98361*0 + 3*531*FLEN/8, x4, x1, x2)

inst_32788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffe000000000; valaddr_reg:x3; val_offset:98364*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98364*0 + 3*532*FLEN/8, x4, x1, x2)

inst_32789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffff000000000; valaddr_reg:x3; val_offset:98367*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98367*0 + 3*533*FLEN/8, x4, x1, x2)

inst_32790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffff800000000; valaddr_reg:x3; val_offset:98370*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98370*0 + 3*534*FLEN/8, x4, x1, x2)

inst_32791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffc00000000; valaddr_reg:x3; val_offset:98373*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98373*0 + 3*535*FLEN/8, x4, x1, x2)

inst_32792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffe00000000; valaddr_reg:x3; val_offset:98376*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98376*0 + 3*536*FLEN/8, x4, x1, x2)

inst_32793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffff00000000; valaddr_reg:x3; val_offset:98379*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98379*0 + 3*537*FLEN/8, x4, x1, x2)

inst_32794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffff80000000; valaddr_reg:x3; val_offset:98382*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98382*0 + 3*538*FLEN/8, x4, x1, x2)

inst_32795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffc0000000; valaddr_reg:x3; val_offset:98385*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98385*0 + 3*539*FLEN/8, x4, x1, x2)

inst_32796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffe0000000; valaddr_reg:x3; val_offset:98388*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98388*0 + 3*540*FLEN/8, x4, x1, x2)

inst_32797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffff0000000; valaddr_reg:x3; val_offset:98391*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98391*0 + 3*541*FLEN/8, x4, x1, x2)

inst_32798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffff8000000; valaddr_reg:x3; val_offset:98394*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98394*0 + 3*542*FLEN/8, x4, x1, x2)

inst_32799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffc000000; valaddr_reg:x3; val_offset:98397*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98397*0 + 3*543*FLEN/8, x4, x1, x2)

inst_32800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffe000000; valaddr_reg:x3; val_offset:98400*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98400*0 + 3*544*FLEN/8, x4, x1, x2)

inst_32801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffff000000; valaddr_reg:x3; val_offset:98403*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98403*0 + 3*545*FLEN/8, x4, x1, x2)

inst_32802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffff800000; valaddr_reg:x3; val_offset:98406*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98406*0 + 3*546*FLEN/8, x4, x1, x2)

inst_32803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffc00000; valaddr_reg:x3; val_offset:98409*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98409*0 + 3*547*FLEN/8, x4, x1, x2)

inst_32804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffe00000; valaddr_reg:x3; val_offset:98412*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98412*0 + 3*548*FLEN/8, x4, x1, x2)

inst_32805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffff00000; valaddr_reg:x3; val_offset:98415*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98415*0 + 3*549*FLEN/8, x4, x1, x2)

inst_32806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffff80000; valaddr_reg:x3; val_offset:98418*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98418*0 + 3*550*FLEN/8, x4, x1, x2)

inst_32807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffc0000; valaddr_reg:x3; val_offset:98421*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98421*0 + 3*551*FLEN/8, x4, x1, x2)

inst_32808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffe0000; valaddr_reg:x3; val_offset:98424*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98424*0 + 3*552*FLEN/8, x4, x1, x2)

inst_32809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffff0000; valaddr_reg:x3; val_offset:98427*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98427*0 + 3*553*FLEN/8, x4, x1, x2)

inst_32810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffff8000; valaddr_reg:x3; val_offset:98430*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98430*0 + 3*554*FLEN/8, x4, x1, x2)

inst_32811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffffc000; valaddr_reg:x3; val_offset:98433*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98433*0 + 3*555*FLEN/8, x4, x1, x2)

inst_32812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffffe000; valaddr_reg:x3; val_offset:98436*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98436*0 + 3*556*FLEN/8, x4, x1, x2)

inst_32813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffff000; valaddr_reg:x3; val_offset:98439*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98439*0 + 3*557*FLEN/8, x4, x1, x2)

inst_32814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffff800; valaddr_reg:x3; val_offset:98442*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98442*0 + 3*558*FLEN/8, x4, x1, x2)

inst_32815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffffc00; valaddr_reg:x3; val_offset:98445*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98445*0 + 3*559*FLEN/8, x4, x1, x2)

inst_32816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffffe00; valaddr_reg:x3; val_offset:98448*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98448*0 + 3*560*FLEN/8, x4, x1, x2)

inst_32817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffffff00; valaddr_reg:x3; val_offset:98451*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98451*0 + 3*561*FLEN/8, x4, x1, x2)

inst_32818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffffff80; valaddr_reg:x3; val_offset:98454*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98454*0 + 3*562*FLEN/8, x4, x1, x2)

inst_32819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffffffc0; valaddr_reg:x3; val_offset:98457*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98457*0 + 3*563*FLEN/8, x4, x1, x2)

inst_32820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffffffe0; valaddr_reg:x3; val_offset:98460*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98460*0 + 3*564*FLEN/8, x4, x1, x2)

inst_32821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffffff0; valaddr_reg:x3; val_offset:98463*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98463*0 + 3*565*FLEN/8, x4, x1, x2)

inst_32822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffffff8; valaddr_reg:x3; val_offset:98466*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98466*0 + 3*566*FLEN/8, x4, x1, x2)

inst_32823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffffffc; valaddr_reg:x3; val_offset:98469*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98469*0 + 3*567*FLEN/8, x4, x1, x2)

inst_32824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814ffffffffffffe; valaddr_reg:x3; val_offset:98472*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98472*0 + 3*568*FLEN/8, x4, x1, x2)

inst_32825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4afccb1527fe9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94afccb1527fe9; op2val:0x8000;
op3val:0x814fffffffffffff; valaddr_reg:x3; val_offset:98475*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98475*0 + 3*569*FLEN/8, x4, x1, x2)

inst_32826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000000000000; valaddr_reg:x3; val_offset:98478*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98478*0 + 3*570*FLEN/8, x4, x1, x2)

inst_32827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000000000001; valaddr_reg:x3; val_offset:98481*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98481*0 + 3*571*FLEN/8, x4, x1, x2)

inst_32828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000000000003; valaddr_reg:x3; val_offset:98484*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98484*0 + 3*572*FLEN/8, x4, x1, x2)

inst_32829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000000000007; valaddr_reg:x3; val_offset:98487*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98487*0 + 3*573*FLEN/8, x4, x1, x2)

inst_32830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000000000000f; valaddr_reg:x3; val_offset:98490*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98490*0 + 3*574*FLEN/8, x4, x1, x2)

inst_32831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000000000001f; valaddr_reg:x3; val_offset:98493*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98493*0 + 3*575*FLEN/8, x4, x1, x2)

inst_32832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000000000003f; valaddr_reg:x3; val_offset:98496*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98496*0 + 3*576*FLEN/8, x4, x1, x2)

inst_32833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000000000007f; valaddr_reg:x3; val_offset:98499*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98499*0 + 3*577*FLEN/8, x4, x1, x2)

inst_32834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100000000000ff; valaddr_reg:x3; val_offset:98502*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98502*0 + 3*578*FLEN/8, x4, x1, x2)

inst_32835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100000000001ff; valaddr_reg:x3; val_offset:98505*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98505*0 + 3*579*FLEN/8, x4, x1, x2)

inst_32836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100000000003ff; valaddr_reg:x3; val_offset:98508*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98508*0 + 3*580*FLEN/8, x4, x1, x2)

inst_32837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100000000007ff; valaddr_reg:x3; val_offset:98511*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98511*0 + 3*581*FLEN/8, x4, x1, x2)

inst_32838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000000000fff; valaddr_reg:x3; val_offset:98514*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98514*0 + 3*582*FLEN/8, x4, x1, x2)

inst_32839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000000001fff; valaddr_reg:x3; val_offset:98517*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98517*0 + 3*583*FLEN/8, x4, x1, x2)

inst_32840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000000003fff; valaddr_reg:x3; val_offset:98520*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98520*0 + 3*584*FLEN/8, x4, x1, x2)

inst_32841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000000007fff; valaddr_reg:x3; val_offset:98523*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98523*0 + 3*585*FLEN/8, x4, x1, x2)

inst_32842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000000000ffff; valaddr_reg:x3; val_offset:98526*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98526*0 + 3*586*FLEN/8, x4, x1, x2)

inst_32843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000000001ffff; valaddr_reg:x3; val_offset:98529*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98529*0 + 3*587*FLEN/8, x4, x1, x2)

inst_32844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000000003ffff; valaddr_reg:x3; val_offset:98532*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98532*0 + 3*588*FLEN/8, x4, x1, x2)

inst_32845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000000007ffff; valaddr_reg:x3; val_offset:98535*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98535*0 + 3*589*FLEN/8, x4, x1, x2)

inst_32846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100000000fffff; valaddr_reg:x3; val_offset:98538*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98538*0 + 3*590*FLEN/8, x4, x1, x2)

inst_32847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100000001fffff; valaddr_reg:x3; val_offset:98541*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98541*0 + 3*591*FLEN/8, x4, x1, x2)

inst_32848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100000003fffff; valaddr_reg:x3; val_offset:98544*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98544*0 + 3*592*FLEN/8, x4, x1, x2)

inst_32849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100000007fffff; valaddr_reg:x3; val_offset:98547*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98547*0 + 3*593*FLEN/8, x4, x1, x2)

inst_32850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000000ffffff; valaddr_reg:x3; val_offset:98550*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98550*0 + 3*594*FLEN/8, x4, x1, x2)

inst_32851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000001ffffff; valaddr_reg:x3; val_offset:98553*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98553*0 + 3*595*FLEN/8, x4, x1, x2)

inst_32852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000003ffffff; valaddr_reg:x3; val_offset:98556*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98556*0 + 3*596*FLEN/8, x4, x1, x2)

inst_32853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000007ffffff; valaddr_reg:x3; val_offset:98559*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98559*0 + 3*597*FLEN/8, x4, x1, x2)

inst_32854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000000fffffff; valaddr_reg:x3; val_offset:98562*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98562*0 + 3*598*FLEN/8, x4, x1, x2)

inst_32855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000001fffffff; valaddr_reg:x3; val_offset:98565*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98565*0 + 3*599*FLEN/8, x4, x1, x2)

inst_32856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000003fffffff; valaddr_reg:x3; val_offset:98568*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98568*0 + 3*600*FLEN/8, x4, x1, x2)

inst_32857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000007fffffff; valaddr_reg:x3; val_offset:98571*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98571*0 + 3*601*FLEN/8, x4, x1, x2)

inst_32858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100000ffffffff; valaddr_reg:x3; val_offset:98574*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98574*0 + 3*602*FLEN/8, x4, x1, x2)

inst_32859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100001ffffffff; valaddr_reg:x3; val_offset:98577*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98577*0 + 3*603*FLEN/8, x4, x1, x2)

inst_32860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100003ffffffff; valaddr_reg:x3; val_offset:98580*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98580*0 + 3*604*FLEN/8, x4, x1, x2)

inst_32861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100007ffffffff; valaddr_reg:x3; val_offset:98583*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98583*0 + 3*605*FLEN/8, x4, x1, x2)

inst_32862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10000fffffffff; valaddr_reg:x3; val_offset:98586*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98586*0 + 3*606*FLEN/8, x4, x1, x2)

inst_32863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10001fffffffff; valaddr_reg:x3; val_offset:98589*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98589*0 + 3*607*FLEN/8, x4, x1, x2)

inst_32864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10003fffffffff; valaddr_reg:x3; val_offset:98592*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98592*0 + 3*608*FLEN/8, x4, x1, x2)

inst_32865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10007fffffffff; valaddr_reg:x3; val_offset:98595*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98595*0 + 3*609*FLEN/8, x4, x1, x2)

inst_32866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1000ffffffffff; valaddr_reg:x3; val_offset:98598*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98598*0 + 3*610*FLEN/8, x4, x1, x2)

inst_32867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1001ffffffffff; valaddr_reg:x3; val_offset:98601*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98601*0 + 3*611*FLEN/8, x4, x1, x2)

inst_32868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1003ffffffffff; valaddr_reg:x3; val_offset:98604*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98604*0 + 3*612*FLEN/8, x4, x1, x2)

inst_32869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1007ffffffffff; valaddr_reg:x3; val_offset:98607*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98607*0 + 3*613*FLEN/8, x4, x1, x2)

inst_32870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb100fffffffffff; valaddr_reg:x3; val_offset:98610*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98610*0 + 3*614*FLEN/8, x4, x1, x2)

inst_32871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb101fffffffffff; valaddr_reg:x3; val_offset:98613*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98613*0 + 3*615*FLEN/8, x4, x1, x2)

inst_32872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb103fffffffffff; valaddr_reg:x3; val_offset:98616*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98616*0 + 3*616*FLEN/8, x4, x1, x2)

inst_32873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb107fffffffffff; valaddr_reg:x3; val_offset:98619*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98619*0 + 3*617*FLEN/8, x4, x1, x2)

inst_32874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb10ffffffffffff; valaddr_reg:x3; val_offset:98622*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98622*0 + 3*618*FLEN/8, x4, x1, x2)

inst_32875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb11ffffffffffff; valaddr_reg:x3; val_offset:98625*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98625*0 + 3*619*FLEN/8, x4, x1, x2)

inst_32876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb13ffffffffffff; valaddr_reg:x3; val_offset:98628*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98628*0 + 3*620*FLEN/8, x4, x1, x2)

inst_32877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb17ffffffffffff; valaddr_reg:x3; val_offset:98631*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98631*0 + 3*621*FLEN/8, x4, x1, x2)

inst_32878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb18000000000000; valaddr_reg:x3; val_offset:98634*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98634*0 + 3*622*FLEN/8, x4, x1, x2)

inst_32879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1c000000000000; valaddr_reg:x3; val_offset:98637*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98637*0 + 3*623*FLEN/8, x4, x1, x2)

inst_32880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1e000000000000; valaddr_reg:x3; val_offset:98640*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98640*0 + 3*624*FLEN/8, x4, x1, x2)

inst_32881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1f000000000000; valaddr_reg:x3; val_offset:98643*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98643*0 + 3*625*FLEN/8, x4, x1, x2)

inst_32882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1f800000000000; valaddr_reg:x3; val_offset:98646*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98646*0 + 3*626*FLEN/8, x4, x1, x2)

inst_32883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fc00000000000; valaddr_reg:x3; val_offset:98649*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98649*0 + 3*627*FLEN/8, x4, x1, x2)

inst_32884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fe00000000000; valaddr_reg:x3; val_offset:98652*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98652*0 + 3*628*FLEN/8, x4, x1, x2)

inst_32885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ff00000000000; valaddr_reg:x3; val_offset:98655*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98655*0 + 3*629*FLEN/8, x4, x1, x2)

inst_32886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ff80000000000; valaddr_reg:x3; val_offset:98658*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98658*0 + 3*630*FLEN/8, x4, x1, x2)

inst_32887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffc0000000000; valaddr_reg:x3; val_offset:98661*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98661*0 + 3*631*FLEN/8, x4, x1, x2)

inst_32888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffe0000000000; valaddr_reg:x3; val_offset:98664*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98664*0 + 3*632*FLEN/8, x4, x1, x2)

inst_32889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fff0000000000; valaddr_reg:x3; val_offset:98667*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98667*0 + 3*633*FLEN/8, x4, x1, x2)

inst_32890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fff8000000000; valaddr_reg:x3; val_offset:98670*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98670*0 + 3*634*FLEN/8, x4, x1, x2)

inst_32891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffc000000000; valaddr_reg:x3; val_offset:98673*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98673*0 + 3*635*FLEN/8, x4, x1, x2)

inst_32892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffe000000000; valaddr_reg:x3; val_offset:98676*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98676*0 + 3*636*FLEN/8, x4, x1, x2)

inst_32893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffff000000000; valaddr_reg:x3; val_offset:98679*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98679*0 + 3*637*FLEN/8, x4, x1, x2)

inst_32894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffff800000000; valaddr_reg:x3; val_offset:98682*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98682*0 + 3*638*FLEN/8, x4, x1, x2)

inst_32895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffc00000000; valaddr_reg:x3; val_offset:98685*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98685*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_32896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffe00000000; valaddr_reg:x3; val_offset:98688*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98688*0 + 3*640*FLEN/8, x4, x1, x2)

inst_32897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffff00000000; valaddr_reg:x3; val_offset:98691*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98691*0 + 3*641*FLEN/8, x4, x1, x2)

inst_32898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffff80000000; valaddr_reg:x3; val_offset:98694*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98694*0 + 3*642*FLEN/8, x4, x1, x2)

inst_32899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffc0000000; valaddr_reg:x3; val_offset:98697*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98697*0 + 3*643*FLEN/8, x4, x1, x2)

inst_32900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffe0000000; valaddr_reg:x3; val_offset:98700*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98700*0 + 3*644*FLEN/8, x4, x1, x2)

inst_32901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffff0000000; valaddr_reg:x3; val_offset:98703*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98703*0 + 3*645*FLEN/8, x4, x1, x2)

inst_32902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffff8000000; valaddr_reg:x3; val_offset:98706*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98706*0 + 3*646*FLEN/8, x4, x1, x2)

inst_32903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffc000000; valaddr_reg:x3; val_offset:98709*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98709*0 + 3*647*FLEN/8, x4, x1, x2)

inst_32904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffe000000; valaddr_reg:x3; val_offset:98712*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98712*0 + 3*648*FLEN/8, x4, x1, x2)

inst_32905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffff000000; valaddr_reg:x3; val_offset:98715*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98715*0 + 3*649*FLEN/8, x4, x1, x2)

inst_32906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffff800000; valaddr_reg:x3; val_offset:98718*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98718*0 + 3*650*FLEN/8, x4, x1, x2)

inst_32907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffc00000; valaddr_reg:x3; val_offset:98721*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98721*0 + 3*651*FLEN/8, x4, x1, x2)

inst_32908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffe00000; valaddr_reg:x3; val_offset:98724*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98724*0 + 3*652*FLEN/8, x4, x1, x2)

inst_32909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffff00000; valaddr_reg:x3; val_offset:98727*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98727*0 + 3*653*FLEN/8, x4, x1, x2)

inst_32910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffff80000; valaddr_reg:x3; val_offset:98730*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98730*0 + 3*654*FLEN/8, x4, x1, x2)

inst_32911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffc0000; valaddr_reg:x3; val_offset:98733*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98733*0 + 3*655*FLEN/8, x4, x1, x2)

inst_32912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffe0000; valaddr_reg:x3; val_offset:98736*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98736*0 + 3*656*FLEN/8, x4, x1, x2)

inst_32913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffff0000; valaddr_reg:x3; val_offset:98739*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98739*0 + 3*657*FLEN/8, x4, x1, x2)

inst_32914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffff8000; valaddr_reg:x3; val_offset:98742*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98742*0 + 3*658*FLEN/8, x4, x1, x2)

inst_32915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffffc000; valaddr_reg:x3; val_offset:98745*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98745*0 + 3*659*FLEN/8, x4, x1, x2)

inst_32916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffffe000; valaddr_reg:x3; val_offset:98748*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98748*0 + 3*660*FLEN/8, x4, x1, x2)

inst_32917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffff000; valaddr_reg:x3; val_offset:98751*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98751*0 + 3*661*FLEN/8, x4, x1, x2)

inst_32918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffff800; valaddr_reg:x3; val_offset:98754*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98754*0 + 3*662*FLEN/8, x4, x1, x2)

inst_32919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffffc00; valaddr_reg:x3; val_offset:98757*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98757*0 + 3*663*FLEN/8, x4, x1, x2)

inst_32920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffffe00; valaddr_reg:x3; val_offset:98760*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98760*0 + 3*664*FLEN/8, x4, x1, x2)

inst_32921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffffff00; valaddr_reg:x3; val_offset:98763*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98763*0 + 3*665*FLEN/8, x4, x1, x2)

inst_32922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffffff80; valaddr_reg:x3; val_offset:98766*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98766*0 + 3*666*FLEN/8, x4, x1, x2)

inst_32923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffffffc0; valaddr_reg:x3; val_offset:98769*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98769*0 + 3*667*FLEN/8, x4, x1, x2)

inst_32924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffffffe0; valaddr_reg:x3; val_offset:98772*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98772*0 + 3*668*FLEN/8, x4, x1, x2)

inst_32925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffffff0; valaddr_reg:x3; val_offset:98775*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98775*0 + 3*669*FLEN/8, x4, x1, x2)

inst_32926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffffff8; valaddr_reg:x3; val_offset:98778*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98778*0 + 3*670*FLEN/8, x4, x1, x2)

inst_32927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffffffc; valaddr_reg:x3; val_offset:98781*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98781*0 + 3*671*FLEN/8, x4, x1, x2)

inst_32928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1ffffffffffffe; valaddr_reg:x3; val_offset:98784*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98784*0 + 3*672*FLEN/8, x4, x1, x2)

inst_32929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbb1fffffffffffff; valaddr_reg:x3; val_offset:98787*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98787*0 + 3*673*FLEN/8, x4, x1, x2)

inst_32930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:98790*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98790*0 + 3*674*FLEN/8, x4, x1, x2)

inst_32931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:98793*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98793*0 + 3*675*FLEN/8, x4, x1, x2)

inst_32932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:98796*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98796*0 + 3*676*FLEN/8, x4, x1, x2)

inst_32933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:98799*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98799*0 + 3*677*FLEN/8, x4, x1, x2)

inst_32934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:98802*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98802*0 + 3*678*FLEN/8, x4, x1, x2)

inst_32935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:98805*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98805*0 + 3*679*FLEN/8, x4, x1, x2)

inst_32936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:98808*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98808*0 + 3*680*FLEN/8, x4, x1, x2)

inst_32937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:98811*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98811*0 + 3*681*FLEN/8, x4, x1, x2)

inst_32938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:98814*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98814*0 + 3*682*FLEN/8, x4, x1, x2)

inst_32939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:98817*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98817*0 + 3*683*FLEN/8, x4, x1, x2)

inst_32940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:98820*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98820*0 + 3*684*FLEN/8, x4, x1, x2)

inst_32941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:98823*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98823*0 + 3*685*FLEN/8, x4, x1, x2)

inst_32942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:98826*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98826*0 + 3*686*FLEN/8, x4, x1, x2)

inst_32943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:98829*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98829*0 + 3*687*FLEN/8, x4, x1, x2)

inst_32944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:98832*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98832*0 + 3*688*FLEN/8, x4, x1, x2)

inst_32945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:98835*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98835*0 + 3*689*FLEN/8, x4, x1, x2)

inst_32946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:98838*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98838*0 + 3*690*FLEN/8, x4, x1, x2)

inst_32947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:98841*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98841*0 + 3*691*FLEN/8, x4, x1, x2)

inst_32948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:98844*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98844*0 + 3*692*FLEN/8, x4, x1, x2)

inst_32949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:98847*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98847*0 + 3*693*FLEN/8, x4, x1, x2)

inst_32950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:98850*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98850*0 + 3*694*FLEN/8, x4, x1, x2)

inst_32951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c075eef493d9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x8ac2cd532d213 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94c075eef493d9; op2val:0x9fd8ac2cd532d213;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:98853*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98853*0 + 3*695*FLEN/8, x4, x1, x2)

inst_32952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:98856*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98856*0 + 3*696*FLEN/8, x4, x1, x2)

inst_32953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:98859*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98859*0 + 3*697*FLEN/8, x4, x1, x2)

inst_32954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:98862*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98862*0 + 3*698*FLEN/8, x4, x1, x2)

inst_32955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:98865*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98865*0 + 3*699*FLEN/8, x4, x1, x2)

inst_32956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:98868*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98868*0 + 3*700*FLEN/8, x4, x1, x2)

inst_32957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:98871*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98871*0 + 3*701*FLEN/8, x4, x1, x2)

inst_32958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:98874*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98874*0 + 3*702*FLEN/8, x4, x1, x2)

inst_32959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:98877*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98877*0 + 3*703*FLEN/8, x4, x1, x2)

inst_32960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:98880*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98880*0 + 3*704*FLEN/8, x4, x1, x2)

inst_32961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:98883*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98883*0 + 3*705*FLEN/8, x4, x1, x2)

inst_32962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:98886*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98886*0 + 3*706*FLEN/8, x4, x1, x2)

inst_32963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:98889*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98889*0 + 3*707*FLEN/8, x4, x1, x2)

inst_32964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:98892*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98892*0 + 3*708*FLEN/8, x4, x1, x2)

inst_32965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:98895*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98895*0 + 3*709*FLEN/8, x4, x1, x2)

inst_32966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:98898*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98898*0 + 3*710*FLEN/8, x4, x1, x2)

inst_32967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:98901*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98901*0 + 3*711*FLEN/8, x4, x1, x2)

inst_32968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:98904*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98904*0 + 3*712*FLEN/8, x4, x1, x2)

inst_32969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:98907*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98907*0 + 3*713*FLEN/8, x4, x1, x2)

inst_32970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:98910*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98910*0 + 3*714*FLEN/8, x4, x1, x2)

inst_32971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:98913*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98913*0 + 3*715*FLEN/8, x4, x1, x2)

inst_32972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:98916*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98916*0 + 3*716*FLEN/8, x4, x1, x2)

inst_32973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:98919*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98919*0 + 3*717*FLEN/8, x4, x1, x2)

inst_32974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000000000000; valaddr_reg:x3; val_offset:98922*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98922*0 + 3*718*FLEN/8, x4, x1, x2)

inst_32975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000000000001; valaddr_reg:x3; val_offset:98925*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98925*0 + 3*719*FLEN/8, x4, x1, x2)

inst_32976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000000000003; valaddr_reg:x3; val_offset:98928*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98928*0 + 3*720*FLEN/8, x4, x1, x2)

inst_32977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000000000007; valaddr_reg:x3; val_offset:98931*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98931*0 + 3*721*FLEN/8, x4, x1, x2)

inst_32978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000000000000f; valaddr_reg:x3; val_offset:98934*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98934*0 + 3*722*FLEN/8, x4, x1, x2)

inst_32979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000000000001f; valaddr_reg:x3; val_offset:98937*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98937*0 + 3*723*FLEN/8, x4, x1, x2)

inst_32980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000000000003f; valaddr_reg:x3; val_offset:98940*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98940*0 + 3*724*FLEN/8, x4, x1, x2)

inst_32981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000000000007f; valaddr_reg:x3; val_offset:98943*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98943*0 + 3*725*FLEN/8, x4, x1, x2)

inst_32982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600000000000ff; valaddr_reg:x3; val_offset:98946*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98946*0 + 3*726*FLEN/8, x4, x1, x2)

inst_32983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600000000001ff; valaddr_reg:x3; val_offset:98949*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98949*0 + 3*727*FLEN/8, x4, x1, x2)

inst_32984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600000000003ff; valaddr_reg:x3; val_offset:98952*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98952*0 + 3*728*FLEN/8, x4, x1, x2)

inst_32985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600000000007ff; valaddr_reg:x3; val_offset:98955*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98955*0 + 3*729*FLEN/8, x4, x1, x2)

inst_32986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000000000fff; valaddr_reg:x3; val_offset:98958*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98958*0 + 3*730*FLEN/8, x4, x1, x2)

inst_32987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000000001fff; valaddr_reg:x3; val_offset:98961*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98961*0 + 3*731*FLEN/8, x4, x1, x2)

inst_32988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000000003fff; valaddr_reg:x3; val_offset:98964*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98964*0 + 3*732*FLEN/8, x4, x1, x2)

inst_32989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000000007fff; valaddr_reg:x3; val_offset:98967*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98967*0 + 3*733*FLEN/8, x4, x1, x2)

inst_32990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000000000ffff; valaddr_reg:x3; val_offset:98970*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98970*0 + 3*734*FLEN/8, x4, x1, x2)

inst_32991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000000001ffff; valaddr_reg:x3; val_offset:98973*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98973*0 + 3*735*FLEN/8, x4, x1, x2)

inst_32992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000000003ffff; valaddr_reg:x3; val_offset:98976*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98976*0 + 3*736*FLEN/8, x4, x1, x2)

inst_32993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000000007ffff; valaddr_reg:x3; val_offset:98979*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98979*0 + 3*737*FLEN/8, x4, x1, x2)

inst_32994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600000000fffff; valaddr_reg:x3; val_offset:98982*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98982*0 + 3*738*FLEN/8, x4, x1, x2)

inst_32995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600000001fffff; valaddr_reg:x3; val_offset:98985*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98985*0 + 3*739*FLEN/8, x4, x1, x2)

inst_32996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600000003fffff; valaddr_reg:x3; val_offset:98988*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98988*0 + 3*740*FLEN/8, x4, x1, x2)

inst_32997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600000007fffff; valaddr_reg:x3; val_offset:98991*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98991*0 + 3*741*FLEN/8, x4, x1, x2)

inst_32998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000000ffffff; valaddr_reg:x3; val_offset:98994*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98994*0 + 3*742*FLEN/8, x4, x1, x2)

inst_32999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000001ffffff; valaddr_reg:x3; val_offset:98997*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 98997*0 + 3*743*FLEN/8, x4, x1, x2)

inst_33000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000003ffffff; valaddr_reg:x3; val_offset:99000*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99000*0 + 3*744*FLEN/8, x4, x1, x2)

inst_33001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000007ffffff; valaddr_reg:x3; val_offset:99003*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99003*0 + 3*745*FLEN/8, x4, x1, x2)

inst_33002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000000fffffff; valaddr_reg:x3; val_offset:99006*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99006*0 + 3*746*FLEN/8, x4, x1, x2)

inst_33003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000001fffffff; valaddr_reg:x3; val_offset:99009*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99009*0 + 3*747*FLEN/8, x4, x1, x2)

inst_33004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000003fffffff; valaddr_reg:x3; val_offset:99012*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99012*0 + 3*748*FLEN/8, x4, x1, x2)

inst_33005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000007fffffff; valaddr_reg:x3; val_offset:99015*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99015*0 + 3*749*FLEN/8, x4, x1, x2)

inst_33006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600000ffffffff; valaddr_reg:x3; val_offset:99018*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99018*0 + 3*750*FLEN/8, x4, x1, x2)

inst_33007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600001ffffffff; valaddr_reg:x3; val_offset:99021*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99021*0 + 3*751*FLEN/8, x4, x1, x2)

inst_33008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600003ffffffff; valaddr_reg:x3; val_offset:99024*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99024*0 + 3*752*FLEN/8, x4, x1, x2)

inst_33009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600007ffffffff; valaddr_reg:x3; val_offset:99027*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99027*0 + 3*753*FLEN/8, x4, x1, x2)

inst_33010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360000fffffffff; valaddr_reg:x3; val_offset:99030*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99030*0 + 3*754*FLEN/8, x4, x1, x2)

inst_33011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360001fffffffff; valaddr_reg:x3; val_offset:99033*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99033*0 + 3*755*FLEN/8, x4, x1, x2)

inst_33012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360003fffffffff; valaddr_reg:x3; val_offset:99036*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99036*0 + 3*756*FLEN/8, x4, x1, x2)

inst_33013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360007fffffffff; valaddr_reg:x3; val_offset:99039*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99039*0 + 3*757*FLEN/8, x4, x1, x2)

inst_33014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36000ffffffffff; valaddr_reg:x3; val_offset:99042*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99042*0 + 3*758*FLEN/8, x4, x1, x2)

inst_33015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36001ffffffffff; valaddr_reg:x3; val_offset:99045*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99045*0 + 3*759*FLEN/8, x4, x1, x2)

inst_33016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36003ffffffffff; valaddr_reg:x3; val_offset:99048*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99048*0 + 3*760*FLEN/8, x4, x1, x2)

inst_33017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x36007ffffffffff; valaddr_reg:x3; val_offset:99051*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99051*0 + 3*761*FLEN/8, x4, x1, x2)

inst_33018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3600fffffffffff; valaddr_reg:x3; val_offset:99054*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99054*0 + 3*762*FLEN/8, x4, x1, x2)

inst_33019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3601fffffffffff; valaddr_reg:x3; val_offset:99057*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99057*0 + 3*763*FLEN/8, x4, x1, x2)

inst_33020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3603fffffffffff; valaddr_reg:x3; val_offset:99060*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99060*0 + 3*764*FLEN/8, x4, x1, x2)

inst_33021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x3607fffffffffff; valaddr_reg:x3; val_offset:99063*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99063*0 + 3*765*FLEN/8, x4, x1, x2)

inst_33022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x360ffffffffffff; valaddr_reg:x3; val_offset:99066*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99066*0 + 3*766*FLEN/8, x4, x1, x2)

inst_33023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4e39417b79179 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94e39417b79179; op2val:0x0;
op3val:0x361ffffffffffff; valaddr_reg:x3; val_offset:99069*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99069*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099088257023999,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099363134930943,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099912890744831,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507101012402372607,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507103211425628159,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507107609472139263,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507116405565161471,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507133997751205887,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507169182123294719,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507239550867472383,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507380288355827711,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507661763332538367,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9508224713285959679,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802303,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802304,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9510476513099644928,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511039463053066240,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511320938029776896,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511461675518132224,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511532044262309888,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511567228634398720,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511584820820443136,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511593616913465344,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511598014959976448,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511600213983232000,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601313494859776,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601863250673664,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602138128580608,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602275567534080,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602344287010816,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602378646749184,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602395826618368,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602404416552960,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602408711520256,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602410859003904,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602411932745728,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412469616640,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412738052096,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412872269824,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412939378688,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412972933120,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412989710336,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412998098944,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413002293248,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413004390400,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005438976,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005963264,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006225408,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006356480,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006422016,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006454784,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006471168,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006479360,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006483456,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006485504,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006486528,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487040,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487296,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487424,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487488,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487520,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487536,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487544,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487548,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487550,64,FLEN)
NAN_BOXED(6887265295454133173,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487551,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445952,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445953,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445955,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445959,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445967,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445983,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446015,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446079,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446207,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446463,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446975,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528447999,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528450047,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528454143,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528462335,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528478719,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528511487,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528577023,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528708095,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528970239,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195529494527,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195530543103,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195532640255,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195536834559,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195545223167,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195562000383,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195595554815,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195662663679,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195796881407,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196065316863,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196602187775,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043197675929599,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043199823413247,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043204118380543,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043212708315135,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043229888184319,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043264247922687,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043332967399423,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043470406352895,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043745284259839,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54044295040073727,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54045394551701503,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54047593574957055,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54051991621468159,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54060787714490367,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54078379900534783,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54113564272623615,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54183933016801279,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54324670505156607,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54606145481867263,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(55169095435288575,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131199,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131200,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57420895248973824,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57983845202395136,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58265320179105792,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58406057667461120,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58476426411638784,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58511610783727616,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58529202969772032,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58537999062794240,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58542397109305344,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58544596132560896,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58545695644188672,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546245400002560,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546520277909504,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546657716862976,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546726436339712,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546760796078080,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546777975947264,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546786565881856,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546790860849152,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546793008332800,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794082074624,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794618945536,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794887380992,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795021598720,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795088707584,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795122262016,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795139039232,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795147427840,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795151622144,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795153719296,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795154767872,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155292160,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155554304,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155685376,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155750912,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155783680,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155800064,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155808256,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155812352,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155814400,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815424,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815936,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816192,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816320,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816384,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816416,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816432,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816440,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816444,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816446,64,FLEN)
NAN_BOXED(6887266377257040351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816447,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970530816,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970530817,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970530819,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970530823,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970530831,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970530847,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970530879,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970530943,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970531071,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970531327,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970531839,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970532863,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970534911,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970539007,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970547199,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970563583,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970596351,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970661887,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464970792959,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464971055103,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464971579391,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464972627967,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464974725119,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464978919423,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964464987308031,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964465004085247,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964465037639679,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964465104748543,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964465238966271,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964465507401727,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964466044272639,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964467118014463,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964469265498111,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964473560465407,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964482150399999,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964499330269183,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964533690007551,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964602409484287,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717964739848437759,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717965014726344703,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717965564482158591,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717966663993786367,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717968863017041919,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717973261063553023,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717982057156575231,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13717999649342619647,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13718034833714708479,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13718105202458886143,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13718245939947241471,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13718527414923952127,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13719090364877373439,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13720216264784216063,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13720216264784216064,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13721342164691058688,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13721905114644480000,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722186589621190656,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722327327109545984,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722397695853723648,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722432880225812480,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722450472411856896,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722459268504879104,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722463666551390208,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722465865574645760,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722466965086273536,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722467514842087424,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722467789719994368,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722467927158947840,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722467995878424576,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468030238162944,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468047418032128,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468056007966720,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468060302934016,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468062450417664,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468063524159488,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064061030400,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064329465856,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064463683584,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064530792448,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064564346880,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064581124096,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064589512704,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064593707008,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064595804160,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064596852736,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597377024,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597639168,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597770240,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597835776,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597868544,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597884928,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597893120,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597897216,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597899264,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597900288,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597900800,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597901056,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597901184,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597901248,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597901280,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597901296,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597901304,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597901308,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597901310,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13722468064597901311,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6887301626355014425,64,FLEN)
NAN_BOXED(11518192899264432118,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755008,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755009,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755011,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755015,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755023,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755039,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755071,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755135,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755263,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115755519,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115756031,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115757055,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115759103,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115763199,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115771391,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115787775,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115820543,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428115886079,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428116017151,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428116279295,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428116803583,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428117852159,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428119949311,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428124143615,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428132532223,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428149309439,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428182863871,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428249972735,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428384190463,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592428652625919,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592429189496831,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592430263238655,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592432410722303,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592436705689599,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592445295624191,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592462475493375,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592496835231743,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592565554708479,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592702993661951,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494592977871568895,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494593527627382783,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494594627139010559,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494596826162266111,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494601224208777215,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494610020301799423,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494627612487843839,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494662796859932671,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494733165604110335,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4494873903092465663,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4495155378069176319,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4495718328022597631,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4496844227929440255,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4496844227929440256,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4497970127836282880,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4498533077789704192,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4498814552766414848,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4498955290254770176,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499025658998947840,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499060843371036672,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499078435557081088,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499087231650103296,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499091629696614400,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499093828719869952,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499094928231497728,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499095477987311616,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499095752865218560,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499095890304172032,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499095959023648768,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499095993383387136,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096010563256320,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096019153190912,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096023448158208,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096025595641856,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096026669383680,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027206254592,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027474690048,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027608907776,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027676016640,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027709571072,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027726348288,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027734736896,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027738931200,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027741028352,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027742076928,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027742601216,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027742863360,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027742994432,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743059968,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743092736,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743109120,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743117312,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743121408,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743123456,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743124480,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743124992,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743125248,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743125376,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743125440,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743125472,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743125488,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743125496,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743125500,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743125502,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4499096027743125503,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6887320974014170213,64,FLEN)
NAN_BOXED(2326322818147458081,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185728,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185729,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185731,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185735,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185743,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185759,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185791,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185855,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185983,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186239,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186751,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402187775,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402189823,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402193919,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402202111,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402218495,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402251263,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402316799,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402447871,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402710015,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029403234303,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029404282879,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029406380031,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029410574335,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029418962943,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029435740159,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029469294591,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029536403455,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029670621183,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029939056639,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444030475927551,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444031549669375,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444033697153023,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444037992120319,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444046582054911,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444063761924095,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444098121662463,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444166841139199,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444304280092671,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444579157999615,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313445128913813503,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313446228425441279,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313448427448696831,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313452825495207935,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313461621588230143,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313479213774274559,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313514398146363391,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313584766890541055,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313725504378896383,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314006979355607039,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314569929309028351,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870975,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870976,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9316821729122713600,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317384679076134912,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317666154052845568,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317806891541200896,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317877260285378560,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317912444657467392,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317930036843511808,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317938832936534016,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317943230983045120,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317945430006300672,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317946529517928448,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947079273742336,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947354151649280,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947491590602752,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947560310079488,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947594669817856,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947611849687040,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947620439621632,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947624734588928,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947626882072576,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947627955814400,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628492685312,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628761120768,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628895338496,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628962447360,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628996001792,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629012779008,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629021167616,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629025361920,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629027459072,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629028507648,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029031936,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029294080,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029425152,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029490688,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029523456,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029539840,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029548032,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029552128,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029554176,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555200,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555712,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555968,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556096,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556160,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556192,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556208,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556216,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556220,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556222,64,FLEN)
NAN_BOXED(6887323023839494121,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556223,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719894528,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719894529,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719894531,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719894535,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719894543,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719894559,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719894591,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719894655,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719894783,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719895039,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719895551,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719896575,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719898623,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719902719,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719910911,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719927295,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684719960063,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684720025599,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684720156671,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684720418815,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684720943103,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684721991679,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684724088831,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684728283135,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684736671743,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684753448959,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684787003391,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684854112255,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273684988329983,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273685256765439,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273685793636351,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273686867378175,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273689014861823,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273693309829119,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273701899763711,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273719079632895,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273753439371263,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273822158847999,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479273959597801471,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479274234475708415,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479274784231522303,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479275883743150079,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479278082766405631,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479282480812916735,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479291276905938943,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479308869091983359,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479344053464072191,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479414422208249855,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479555159696605183,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13479836634673315839,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13480399584626737151,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13481525484533579775,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13481525484533579776,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13482651384440422400,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483214334393843712,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483495809370554368,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483636546858909696,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483706915603087360,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483742099975176192,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483759692161220608,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483768488254242816,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483772886300753920,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483775085324009472,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483776184835637248,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483776734591451136,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777009469358080,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777146908311552,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777215627788288,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777249987526656,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777267167395840,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777275757330432,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777280052297728,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777282199781376,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777283273523200,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777283810394112,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284078829568,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284213047296,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284280156160,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284313710592,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284330487808,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284338876416,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284343070720,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284345167872,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284346216448,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284346740736,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347002880,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347133952,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347199488,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347232256,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347248640,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347256832,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347260928,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347262976,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347264000,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347264512,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347264768,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347264896,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347264960,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347264992,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347265008,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347265016,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347265020,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347265022,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13483777284347265023,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6887341342909043673,64,FLEN)
NAN_BOXED(11518145355555459603,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006784,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006785,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006787,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006791,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006799,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006815,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006847,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006911,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007039,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007295,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007807,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878008831,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878010879,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878014975,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878023167,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878039551,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878072319,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878137855,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878268927,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878531071,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379879055359,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379880103935,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379882201087,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379886395391,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379894783999,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379911561215,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379945115647,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380012224511,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380146442239,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380414877695,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380951748607,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194382025490431,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194384172974079,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194388467941375,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194397057875967,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194414237745151,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194448597483519,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194517316960255,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194654755913727,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194929633820671,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243195479389634559,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243196578901262335,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243198777924517887,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243203175971028991,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243211972064051199,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243229564250095615,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243264748622184447,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243335117366362111,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243475854854717439,64,FLEN)
NAN_BOXED(6887379955348902265,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243757329831428095,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
