
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_83712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffff800000000; valaddr_reg:x3; val_offset:251136*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251136*0 + 3*0*FLEN/8, x4, x1, x2)

inst_83713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffc00000000; valaddr_reg:x3; val_offset:251139*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251139*0 + 3*1*FLEN/8, x4, x1, x2)

inst_83714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffe00000000; valaddr_reg:x3; val_offset:251142*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251142*0 + 3*2*FLEN/8, x4, x1, x2)

inst_83715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffff00000000; valaddr_reg:x3; val_offset:251145*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251145*0 + 3*3*FLEN/8, x4, x1, x2)

inst_83716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffff80000000; valaddr_reg:x3; val_offset:251148*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251148*0 + 3*4*FLEN/8, x4, x1, x2)

inst_83717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffc0000000; valaddr_reg:x3; val_offset:251151*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251151*0 + 3*5*FLEN/8, x4, x1, x2)

inst_83718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffe0000000; valaddr_reg:x3; val_offset:251154*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251154*0 + 3*6*FLEN/8, x4, x1, x2)

inst_83719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffff0000000; valaddr_reg:x3; val_offset:251157*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251157*0 + 3*7*FLEN/8, x4, x1, x2)

inst_83720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffff8000000; valaddr_reg:x3; val_offset:251160*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251160*0 + 3*8*FLEN/8, x4, x1, x2)

inst_83721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffc000000; valaddr_reg:x3; val_offset:251163*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251163*0 + 3*9*FLEN/8, x4, x1, x2)

inst_83722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffe000000; valaddr_reg:x3; val_offset:251166*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251166*0 + 3*10*FLEN/8, x4, x1, x2)

inst_83723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffff000000; valaddr_reg:x3; val_offset:251169*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251169*0 + 3*11*FLEN/8, x4, x1, x2)

inst_83724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffff800000; valaddr_reg:x3; val_offset:251172*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251172*0 + 3*12*FLEN/8, x4, x1, x2)

inst_83725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffc00000; valaddr_reg:x3; val_offset:251175*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251175*0 + 3*13*FLEN/8, x4, x1, x2)

inst_83726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffe00000; valaddr_reg:x3; val_offset:251178*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251178*0 + 3*14*FLEN/8, x4, x1, x2)

inst_83727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffff00000; valaddr_reg:x3; val_offset:251181*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251181*0 + 3*15*FLEN/8, x4, x1, x2)

inst_83728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffff80000; valaddr_reg:x3; val_offset:251184*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251184*0 + 3*16*FLEN/8, x4, x1, x2)

inst_83729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffc0000; valaddr_reg:x3; val_offset:251187*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251187*0 + 3*17*FLEN/8, x4, x1, x2)

inst_83730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffe0000; valaddr_reg:x3; val_offset:251190*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251190*0 + 3*18*FLEN/8, x4, x1, x2)

inst_83731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffff0000; valaddr_reg:x3; val_offset:251193*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251193*0 + 3*19*FLEN/8, x4, x1, x2)

inst_83732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffff8000; valaddr_reg:x3; val_offset:251196*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251196*0 + 3*20*FLEN/8, x4, x1, x2)

inst_83733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffffc000; valaddr_reg:x3; val_offset:251199*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251199*0 + 3*21*FLEN/8, x4, x1, x2)

inst_83734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffffe000; valaddr_reg:x3; val_offset:251202*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251202*0 + 3*22*FLEN/8, x4, x1, x2)

inst_83735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffff000; valaddr_reg:x3; val_offset:251205*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251205*0 + 3*23*FLEN/8, x4, x1, x2)

inst_83736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffff800; valaddr_reg:x3; val_offset:251208*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251208*0 + 3*24*FLEN/8, x4, x1, x2)

inst_83737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffffc00; valaddr_reg:x3; val_offset:251211*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251211*0 + 3*25*FLEN/8, x4, x1, x2)

inst_83738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffffe00; valaddr_reg:x3; val_offset:251214*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251214*0 + 3*26*FLEN/8, x4, x1, x2)

inst_83739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffffff00; valaddr_reg:x3; val_offset:251217*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251217*0 + 3*27*FLEN/8, x4, x1, x2)

inst_83740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffffff80; valaddr_reg:x3; val_offset:251220*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251220*0 + 3*28*FLEN/8, x4, x1, x2)

inst_83741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffffffc0; valaddr_reg:x3; val_offset:251223*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251223*0 + 3*29*FLEN/8, x4, x1, x2)

inst_83742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffffffe0; valaddr_reg:x3; val_offset:251226*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251226*0 + 3*30*FLEN/8, x4, x1, x2)

inst_83743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffffff0; valaddr_reg:x3; val_offset:251229*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251229*0 + 3*31*FLEN/8, x4, x1, x2)

inst_83744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffffff8; valaddr_reg:x3; val_offset:251232*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251232*0 + 3*32*FLEN/8, x4, x1, x2)

inst_83745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffffffc; valaddr_reg:x3; val_offset:251235*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251235*0 + 3*33*FLEN/8, x4, x1, x2)

inst_83746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828ffffffffffffe; valaddr_reg:x3; val_offset:251238*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251238*0 + 3*34*FLEN/8, x4, x1, x2)

inst_83747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9b6ffa1ea1f4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9b6ffa1ea1f4b; op2val:0x8000;
op3val:0x828fffffffffffff; valaddr_reg:x3; val_offset:251241*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251241*0 + 3*35*FLEN/8, x4, x1, x2)

inst_83748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:251244*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251244*0 + 3*36*FLEN/8, x4, x1, x2)

inst_83749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:251247*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251247*0 + 3*37*FLEN/8, x4, x1, x2)

inst_83750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:251250*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251250*0 + 3*38*FLEN/8, x4, x1, x2)

inst_83751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:251253*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251253*0 + 3*39*FLEN/8, x4, x1, x2)

inst_83752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:251256*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251256*0 + 3*40*FLEN/8, x4, x1, x2)

inst_83753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:251259*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251259*0 + 3*41*FLEN/8, x4, x1, x2)

inst_83754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:251262*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251262*0 + 3*42*FLEN/8, x4, x1, x2)

inst_83755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:251265*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251265*0 + 3*43*FLEN/8, x4, x1, x2)

inst_83756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:251268*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251268*0 + 3*44*FLEN/8, x4, x1, x2)

inst_83757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:251271*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251271*0 + 3*45*FLEN/8, x4, x1, x2)

inst_83758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:251274*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251274*0 + 3*46*FLEN/8, x4, x1, x2)

inst_83759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:251277*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251277*0 + 3*47*FLEN/8, x4, x1, x2)

inst_83760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:251280*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251280*0 + 3*48*FLEN/8, x4, x1, x2)

inst_83761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:251283*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251283*0 + 3*49*FLEN/8, x4, x1, x2)

inst_83762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:251286*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251286*0 + 3*50*FLEN/8, x4, x1, x2)

inst_83763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:251289*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251289*0 + 3*51*FLEN/8, x4, x1, x2)

inst_83764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:251292*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251292*0 + 3*52*FLEN/8, x4, x1, x2)

inst_83765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:251295*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251295*0 + 3*53*FLEN/8, x4, x1, x2)

inst_83766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:251298*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251298*0 + 3*54*FLEN/8, x4, x1, x2)

inst_83767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:251301*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251301*0 + 3*55*FLEN/8, x4, x1, x2)

inst_83768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:251304*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251304*0 + 3*56*FLEN/8, x4, x1, x2)

inst_83769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:251307*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251307*0 + 3*57*FLEN/8, x4, x1, x2)

inst_83770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000000000000; valaddr_reg:x3; val_offset:251310*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251310*0 + 3*58*FLEN/8, x4, x1, x2)

inst_83771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000000000001; valaddr_reg:x3; val_offset:251313*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251313*0 + 3*59*FLEN/8, x4, x1, x2)

inst_83772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000000000003; valaddr_reg:x3; val_offset:251316*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251316*0 + 3*60*FLEN/8, x4, x1, x2)

inst_83773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000000000007; valaddr_reg:x3; val_offset:251319*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251319*0 + 3*61*FLEN/8, x4, x1, x2)

inst_83774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000000000000f; valaddr_reg:x3; val_offset:251322*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251322*0 + 3*62*FLEN/8, x4, x1, x2)

inst_83775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000000000001f; valaddr_reg:x3; val_offset:251325*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251325*0 + 3*63*FLEN/8, x4, x1, x2)

inst_83776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000000000003f; valaddr_reg:x3; val_offset:251328*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251328*0 + 3*64*FLEN/8, x4, x1, x2)

inst_83777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000000000007f; valaddr_reg:x3; val_offset:251331*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251331*0 + 3*65*FLEN/8, x4, x1, x2)

inst_83778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200000000000ff; valaddr_reg:x3; val_offset:251334*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251334*0 + 3*66*FLEN/8, x4, x1, x2)

inst_83779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200000000001ff; valaddr_reg:x3; val_offset:251337*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251337*0 + 3*67*FLEN/8, x4, x1, x2)

inst_83780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200000000003ff; valaddr_reg:x3; val_offset:251340*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251340*0 + 3*68*FLEN/8, x4, x1, x2)

inst_83781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200000000007ff; valaddr_reg:x3; val_offset:251343*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251343*0 + 3*69*FLEN/8, x4, x1, x2)

inst_83782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000000000fff; valaddr_reg:x3; val_offset:251346*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251346*0 + 3*70*FLEN/8, x4, x1, x2)

inst_83783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000000001fff; valaddr_reg:x3; val_offset:251349*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251349*0 + 3*71*FLEN/8, x4, x1, x2)

inst_83784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000000003fff; valaddr_reg:x3; val_offset:251352*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251352*0 + 3*72*FLEN/8, x4, x1, x2)

inst_83785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000000007fff; valaddr_reg:x3; val_offset:251355*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251355*0 + 3*73*FLEN/8, x4, x1, x2)

inst_83786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000000000ffff; valaddr_reg:x3; val_offset:251358*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251358*0 + 3*74*FLEN/8, x4, x1, x2)

inst_83787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000000001ffff; valaddr_reg:x3; val_offset:251361*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251361*0 + 3*75*FLEN/8, x4, x1, x2)

inst_83788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000000003ffff; valaddr_reg:x3; val_offset:251364*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251364*0 + 3*76*FLEN/8, x4, x1, x2)

inst_83789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000000007ffff; valaddr_reg:x3; val_offset:251367*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251367*0 + 3*77*FLEN/8, x4, x1, x2)

inst_83790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200000000fffff; valaddr_reg:x3; val_offset:251370*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251370*0 + 3*78*FLEN/8, x4, x1, x2)

inst_83791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200000001fffff; valaddr_reg:x3; val_offset:251373*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251373*0 + 3*79*FLEN/8, x4, x1, x2)

inst_83792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200000003fffff; valaddr_reg:x3; val_offset:251376*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251376*0 + 3*80*FLEN/8, x4, x1, x2)

inst_83793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200000007fffff; valaddr_reg:x3; val_offset:251379*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251379*0 + 3*81*FLEN/8, x4, x1, x2)

inst_83794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000000ffffff; valaddr_reg:x3; val_offset:251382*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251382*0 + 3*82*FLEN/8, x4, x1, x2)

inst_83795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000001ffffff; valaddr_reg:x3; val_offset:251385*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251385*0 + 3*83*FLEN/8, x4, x1, x2)

inst_83796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000003ffffff; valaddr_reg:x3; val_offset:251388*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251388*0 + 3*84*FLEN/8, x4, x1, x2)

inst_83797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000007ffffff; valaddr_reg:x3; val_offset:251391*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251391*0 + 3*85*FLEN/8, x4, x1, x2)

inst_83798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000000fffffff; valaddr_reg:x3; val_offset:251394*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251394*0 + 3*86*FLEN/8, x4, x1, x2)

inst_83799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000001fffffff; valaddr_reg:x3; val_offset:251397*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251397*0 + 3*87*FLEN/8, x4, x1, x2)

inst_83800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000003fffffff; valaddr_reg:x3; val_offset:251400*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251400*0 + 3*88*FLEN/8, x4, x1, x2)

inst_83801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000007fffffff; valaddr_reg:x3; val_offset:251403*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251403*0 + 3*89*FLEN/8, x4, x1, x2)

inst_83802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200000ffffffff; valaddr_reg:x3; val_offset:251406*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251406*0 + 3*90*FLEN/8, x4, x1, x2)

inst_83803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200001ffffffff; valaddr_reg:x3; val_offset:251409*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251409*0 + 3*91*FLEN/8, x4, x1, x2)

inst_83804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200003ffffffff; valaddr_reg:x3; val_offset:251412*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251412*0 + 3*92*FLEN/8, x4, x1, x2)

inst_83805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200007ffffffff; valaddr_reg:x3; val_offset:251415*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251415*0 + 3*93*FLEN/8, x4, x1, x2)

inst_83806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320000fffffffff; valaddr_reg:x3; val_offset:251418*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251418*0 + 3*94*FLEN/8, x4, x1, x2)

inst_83807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320001fffffffff; valaddr_reg:x3; val_offset:251421*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251421*0 + 3*95*FLEN/8, x4, x1, x2)

inst_83808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320003fffffffff; valaddr_reg:x3; val_offset:251424*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251424*0 + 3*96*FLEN/8, x4, x1, x2)

inst_83809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320007fffffffff; valaddr_reg:x3; val_offset:251427*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251427*0 + 3*97*FLEN/8, x4, x1, x2)

inst_83810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32000ffffffffff; valaddr_reg:x3; val_offset:251430*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251430*0 + 3*98*FLEN/8, x4, x1, x2)

inst_83811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32001ffffffffff; valaddr_reg:x3; val_offset:251433*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251433*0 + 3*99*FLEN/8, x4, x1, x2)

inst_83812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32003ffffffffff; valaddr_reg:x3; val_offset:251436*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251436*0 + 3*100*FLEN/8, x4, x1, x2)

inst_83813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32007ffffffffff; valaddr_reg:x3; val_offset:251439*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251439*0 + 3*101*FLEN/8, x4, x1, x2)

inst_83814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3200fffffffffff; valaddr_reg:x3; val_offset:251442*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251442*0 + 3*102*FLEN/8, x4, x1, x2)

inst_83815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3201fffffffffff; valaddr_reg:x3; val_offset:251445*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251445*0 + 3*103*FLEN/8, x4, x1, x2)

inst_83816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3203fffffffffff; valaddr_reg:x3; val_offset:251448*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251448*0 + 3*104*FLEN/8, x4, x1, x2)

inst_83817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x3207fffffffffff; valaddr_reg:x3; val_offset:251451*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251451*0 + 3*105*FLEN/8, x4, x1, x2)

inst_83818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x320ffffffffffff; valaddr_reg:x3; val_offset:251454*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251454*0 + 3*106*FLEN/8, x4, x1, x2)

inst_83819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x321ffffffffffff; valaddr_reg:x3; val_offset:251457*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251457*0 + 3*107*FLEN/8, x4, x1, x2)

inst_83820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x323ffffffffffff; valaddr_reg:x3; val_offset:251460*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251460*0 + 3*108*FLEN/8, x4, x1, x2)

inst_83821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x327ffffffffffff; valaddr_reg:x3; val_offset:251463*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251463*0 + 3*109*FLEN/8, x4, x1, x2)

inst_83822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x328000000000000; valaddr_reg:x3; val_offset:251466*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251466*0 + 3*110*FLEN/8, x4, x1, x2)

inst_83823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32c000000000000; valaddr_reg:x3; val_offset:251469*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251469*0 + 3*111*FLEN/8, x4, x1, x2)

inst_83824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32e000000000000; valaddr_reg:x3; val_offset:251472*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251472*0 + 3*112*FLEN/8, x4, x1, x2)

inst_83825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32f000000000000; valaddr_reg:x3; val_offset:251475*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251475*0 + 3*113*FLEN/8, x4, x1, x2)

inst_83826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32f800000000000; valaddr_reg:x3; val_offset:251478*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251478*0 + 3*114*FLEN/8, x4, x1, x2)

inst_83827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fc00000000000; valaddr_reg:x3; val_offset:251481*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251481*0 + 3*115*FLEN/8, x4, x1, x2)

inst_83828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fe00000000000; valaddr_reg:x3; val_offset:251484*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251484*0 + 3*116*FLEN/8, x4, x1, x2)

inst_83829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ff00000000000; valaddr_reg:x3; val_offset:251487*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251487*0 + 3*117*FLEN/8, x4, x1, x2)

inst_83830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ff80000000000; valaddr_reg:x3; val_offset:251490*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251490*0 + 3*118*FLEN/8, x4, x1, x2)

inst_83831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffc0000000000; valaddr_reg:x3; val_offset:251493*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251493*0 + 3*119*FLEN/8, x4, x1, x2)

inst_83832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffe0000000000; valaddr_reg:x3; val_offset:251496*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251496*0 + 3*120*FLEN/8, x4, x1, x2)

inst_83833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fff0000000000; valaddr_reg:x3; val_offset:251499*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251499*0 + 3*121*FLEN/8, x4, x1, x2)

inst_83834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fff8000000000; valaddr_reg:x3; val_offset:251502*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251502*0 + 3*122*FLEN/8, x4, x1, x2)

inst_83835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffc000000000; valaddr_reg:x3; val_offset:251505*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251505*0 + 3*123*FLEN/8, x4, x1, x2)

inst_83836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffe000000000; valaddr_reg:x3; val_offset:251508*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251508*0 + 3*124*FLEN/8, x4, x1, x2)

inst_83837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffff000000000; valaddr_reg:x3; val_offset:251511*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251511*0 + 3*125*FLEN/8, x4, x1, x2)

inst_83838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffff800000000; valaddr_reg:x3; val_offset:251514*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251514*0 + 3*126*FLEN/8, x4, x1, x2)

inst_83839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffc00000000; valaddr_reg:x3; val_offset:251517*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251517*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_83840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffe00000000; valaddr_reg:x3; val_offset:251520*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251520*0 + 3*128*FLEN/8, x4, x1, x2)

inst_83841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffff00000000; valaddr_reg:x3; val_offset:251523*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251523*0 + 3*129*FLEN/8, x4, x1, x2)

inst_83842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffff80000000; valaddr_reg:x3; val_offset:251526*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251526*0 + 3*130*FLEN/8, x4, x1, x2)

inst_83843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffc0000000; valaddr_reg:x3; val_offset:251529*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251529*0 + 3*131*FLEN/8, x4, x1, x2)

inst_83844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffe0000000; valaddr_reg:x3; val_offset:251532*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251532*0 + 3*132*FLEN/8, x4, x1, x2)

inst_83845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffff0000000; valaddr_reg:x3; val_offset:251535*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251535*0 + 3*133*FLEN/8, x4, x1, x2)

inst_83846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffff8000000; valaddr_reg:x3; val_offset:251538*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251538*0 + 3*134*FLEN/8, x4, x1, x2)

inst_83847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffc000000; valaddr_reg:x3; val_offset:251541*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251541*0 + 3*135*FLEN/8, x4, x1, x2)

inst_83848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffe000000; valaddr_reg:x3; val_offset:251544*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251544*0 + 3*136*FLEN/8, x4, x1, x2)

inst_83849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffff000000; valaddr_reg:x3; val_offset:251547*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251547*0 + 3*137*FLEN/8, x4, x1, x2)

inst_83850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffff800000; valaddr_reg:x3; val_offset:251550*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251550*0 + 3*138*FLEN/8, x4, x1, x2)

inst_83851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffc00000; valaddr_reg:x3; val_offset:251553*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251553*0 + 3*139*FLEN/8, x4, x1, x2)

inst_83852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffe00000; valaddr_reg:x3; val_offset:251556*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251556*0 + 3*140*FLEN/8, x4, x1, x2)

inst_83853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffff00000; valaddr_reg:x3; val_offset:251559*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251559*0 + 3*141*FLEN/8, x4, x1, x2)

inst_83854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffff80000; valaddr_reg:x3; val_offset:251562*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251562*0 + 3*142*FLEN/8, x4, x1, x2)

inst_83855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffc0000; valaddr_reg:x3; val_offset:251565*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251565*0 + 3*143*FLEN/8, x4, x1, x2)

inst_83856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffe0000; valaddr_reg:x3; val_offset:251568*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251568*0 + 3*144*FLEN/8, x4, x1, x2)

inst_83857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffff0000; valaddr_reg:x3; val_offset:251571*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251571*0 + 3*145*FLEN/8, x4, x1, x2)

inst_83858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffff8000; valaddr_reg:x3; val_offset:251574*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251574*0 + 3*146*FLEN/8, x4, x1, x2)

inst_83859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffffc000; valaddr_reg:x3; val_offset:251577*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251577*0 + 3*147*FLEN/8, x4, x1, x2)

inst_83860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffffe000; valaddr_reg:x3; val_offset:251580*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251580*0 + 3*148*FLEN/8, x4, x1, x2)

inst_83861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffff000; valaddr_reg:x3; val_offset:251583*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251583*0 + 3*149*FLEN/8, x4, x1, x2)

inst_83862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffff800; valaddr_reg:x3; val_offset:251586*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251586*0 + 3*150*FLEN/8, x4, x1, x2)

inst_83863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffffc00; valaddr_reg:x3; val_offset:251589*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251589*0 + 3*151*FLEN/8, x4, x1, x2)

inst_83864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffffe00; valaddr_reg:x3; val_offset:251592*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251592*0 + 3*152*FLEN/8, x4, x1, x2)

inst_83865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffffff00; valaddr_reg:x3; val_offset:251595*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251595*0 + 3*153*FLEN/8, x4, x1, x2)

inst_83866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffffff80; valaddr_reg:x3; val_offset:251598*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251598*0 + 3*154*FLEN/8, x4, x1, x2)

inst_83867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffffffc0; valaddr_reg:x3; val_offset:251601*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251601*0 + 3*155*FLEN/8, x4, x1, x2)

inst_83868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffffffe0; valaddr_reg:x3; val_offset:251604*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251604*0 + 3*156*FLEN/8, x4, x1, x2)

inst_83869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffffff0; valaddr_reg:x3; val_offset:251607*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251607*0 + 3*157*FLEN/8, x4, x1, x2)

inst_83870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffffff8; valaddr_reg:x3; val_offset:251610*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251610*0 + 3*158*FLEN/8, x4, x1, x2)

inst_83871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffffffc; valaddr_reg:x3; val_offset:251613*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251613*0 + 3*159*FLEN/8, x4, x1, x2)

inst_83872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32ffffffffffffe; valaddr_reg:x3; val_offset:251616*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251616*0 + 3*160*FLEN/8, x4, x1, x2)

inst_83873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9bbf434d602cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9bbf434d602cc; op2val:0x0;
op3val:0x32fffffffffffff; valaddr_reg:x3; val_offset:251619*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251619*0 + 3*161*FLEN/8, x4, x1, x2)

inst_83874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:251622*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251622*0 + 3*162*FLEN/8, x4, x1, x2)

inst_83875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:251625*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251625*0 + 3*163*FLEN/8, x4, x1, x2)

inst_83876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:251628*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251628*0 + 3*164*FLEN/8, x4, x1, x2)

inst_83877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:251631*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251631*0 + 3*165*FLEN/8, x4, x1, x2)

inst_83878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:251634*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251634*0 + 3*166*FLEN/8, x4, x1, x2)

inst_83879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:251637*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251637*0 + 3*167*FLEN/8, x4, x1, x2)

inst_83880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:251640*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251640*0 + 3*168*FLEN/8, x4, x1, x2)

inst_83881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:251643*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251643*0 + 3*169*FLEN/8, x4, x1, x2)

inst_83882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:251646*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251646*0 + 3*170*FLEN/8, x4, x1, x2)

inst_83883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:251649*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251649*0 + 3*171*FLEN/8, x4, x1, x2)

inst_83884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:251652*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251652*0 + 3*172*FLEN/8, x4, x1, x2)

inst_83885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:251655*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251655*0 + 3*173*FLEN/8, x4, x1, x2)

inst_83886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:251658*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251658*0 + 3*174*FLEN/8, x4, x1, x2)

inst_83887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:251661*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251661*0 + 3*175*FLEN/8, x4, x1, x2)

inst_83888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:251664*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251664*0 + 3*176*FLEN/8, x4, x1, x2)

inst_83889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:251667*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251667*0 + 3*177*FLEN/8, x4, x1, x2)

inst_83890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:251670*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251670*0 + 3*178*FLEN/8, x4, x1, x2)

inst_83891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:251673*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251673*0 + 3*179*FLEN/8, x4, x1, x2)

inst_83892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:251676*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251676*0 + 3*180*FLEN/8, x4, x1, x2)

inst_83893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:251679*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251679*0 + 3*181*FLEN/8, x4, x1, x2)

inst_83894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:251682*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251682*0 + 3*182*FLEN/8, x4, x1, x2)

inst_83895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:251685*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251685*0 + 3*183*FLEN/8, x4, x1, x2)

inst_83896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000000000000; valaddr_reg:x3; val_offset:251688*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251688*0 + 3*184*FLEN/8, x4, x1, x2)

inst_83897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000000000001; valaddr_reg:x3; val_offset:251691*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251691*0 + 3*185*FLEN/8, x4, x1, x2)

inst_83898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000000000003; valaddr_reg:x3; val_offset:251694*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251694*0 + 3*186*FLEN/8, x4, x1, x2)

inst_83899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000000000007; valaddr_reg:x3; val_offset:251697*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251697*0 + 3*187*FLEN/8, x4, x1, x2)

inst_83900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000000000000f; valaddr_reg:x3; val_offset:251700*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251700*0 + 3*188*FLEN/8, x4, x1, x2)

inst_83901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000000000001f; valaddr_reg:x3; val_offset:251703*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251703*0 + 3*189*FLEN/8, x4, x1, x2)

inst_83902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000000000003f; valaddr_reg:x3; val_offset:251706*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251706*0 + 3*190*FLEN/8, x4, x1, x2)

inst_83903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000000000007f; valaddr_reg:x3; val_offset:251709*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251709*0 + 3*191*FLEN/8, x4, x1, x2)

inst_83904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00000000000ff; valaddr_reg:x3; val_offset:251712*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251712*0 + 3*192*FLEN/8, x4, x1, x2)

inst_83905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00000000001ff; valaddr_reg:x3; val_offset:251715*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251715*0 + 3*193*FLEN/8, x4, x1, x2)

inst_83906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00000000003ff; valaddr_reg:x3; val_offset:251718*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251718*0 + 3*194*FLEN/8, x4, x1, x2)

inst_83907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00000000007ff; valaddr_reg:x3; val_offset:251721*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251721*0 + 3*195*FLEN/8, x4, x1, x2)

inst_83908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000000000fff; valaddr_reg:x3; val_offset:251724*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251724*0 + 3*196*FLEN/8, x4, x1, x2)

inst_83909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000000001fff; valaddr_reg:x3; val_offset:251727*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251727*0 + 3*197*FLEN/8, x4, x1, x2)

inst_83910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000000003fff; valaddr_reg:x3; val_offset:251730*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251730*0 + 3*198*FLEN/8, x4, x1, x2)

inst_83911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000000007fff; valaddr_reg:x3; val_offset:251733*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251733*0 + 3*199*FLEN/8, x4, x1, x2)

inst_83912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000000000ffff; valaddr_reg:x3; val_offset:251736*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251736*0 + 3*200*FLEN/8, x4, x1, x2)

inst_83913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000000001ffff; valaddr_reg:x3; val_offset:251739*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251739*0 + 3*201*FLEN/8, x4, x1, x2)

inst_83914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000000003ffff; valaddr_reg:x3; val_offset:251742*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251742*0 + 3*202*FLEN/8, x4, x1, x2)

inst_83915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000000007ffff; valaddr_reg:x3; val_offset:251745*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251745*0 + 3*203*FLEN/8, x4, x1, x2)

inst_83916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00000000fffff; valaddr_reg:x3; val_offset:251748*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251748*0 + 3*204*FLEN/8, x4, x1, x2)

inst_83917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00000001fffff; valaddr_reg:x3; val_offset:251751*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251751*0 + 3*205*FLEN/8, x4, x1, x2)

inst_83918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00000003fffff; valaddr_reg:x3; val_offset:251754*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251754*0 + 3*206*FLEN/8, x4, x1, x2)

inst_83919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00000007fffff; valaddr_reg:x3; val_offset:251757*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251757*0 + 3*207*FLEN/8, x4, x1, x2)

inst_83920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000000ffffff; valaddr_reg:x3; val_offset:251760*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251760*0 + 3*208*FLEN/8, x4, x1, x2)

inst_83921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000001ffffff; valaddr_reg:x3; val_offset:251763*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251763*0 + 3*209*FLEN/8, x4, x1, x2)

inst_83922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000003ffffff; valaddr_reg:x3; val_offset:251766*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251766*0 + 3*210*FLEN/8, x4, x1, x2)

inst_83923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000007ffffff; valaddr_reg:x3; val_offset:251769*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251769*0 + 3*211*FLEN/8, x4, x1, x2)

inst_83924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000000fffffff; valaddr_reg:x3; val_offset:251772*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251772*0 + 3*212*FLEN/8, x4, x1, x2)

inst_83925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000001fffffff; valaddr_reg:x3; val_offset:251775*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251775*0 + 3*213*FLEN/8, x4, x1, x2)

inst_83926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000003fffffff; valaddr_reg:x3; val_offset:251778*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251778*0 + 3*214*FLEN/8, x4, x1, x2)

inst_83927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000007fffffff; valaddr_reg:x3; val_offset:251781*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251781*0 + 3*215*FLEN/8, x4, x1, x2)

inst_83928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00000ffffffff; valaddr_reg:x3; val_offset:251784*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251784*0 + 3*216*FLEN/8, x4, x1, x2)

inst_83929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00001ffffffff; valaddr_reg:x3; val_offset:251787*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251787*0 + 3*217*FLEN/8, x4, x1, x2)

inst_83930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00003ffffffff; valaddr_reg:x3; val_offset:251790*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251790*0 + 3*218*FLEN/8, x4, x1, x2)

inst_83931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00007ffffffff; valaddr_reg:x3; val_offset:251793*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251793*0 + 3*219*FLEN/8, x4, x1, x2)

inst_83932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0000fffffffff; valaddr_reg:x3; val_offset:251796*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251796*0 + 3*220*FLEN/8, x4, x1, x2)

inst_83933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0001fffffffff; valaddr_reg:x3; val_offset:251799*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251799*0 + 3*221*FLEN/8, x4, x1, x2)

inst_83934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0003fffffffff; valaddr_reg:x3; val_offset:251802*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251802*0 + 3*222*FLEN/8, x4, x1, x2)

inst_83935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0007fffffffff; valaddr_reg:x3; val_offset:251805*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251805*0 + 3*223*FLEN/8, x4, x1, x2)

inst_83936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e000ffffffffff; valaddr_reg:x3; val_offset:251808*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251808*0 + 3*224*FLEN/8, x4, x1, x2)

inst_83937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e001ffffffffff; valaddr_reg:x3; val_offset:251811*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251811*0 + 3*225*FLEN/8, x4, x1, x2)

inst_83938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e003ffffffffff; valaddr_reg:x3; val_offset:251814*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251814*0 + 3*226*FLEN/8, x4, x1, x2)

inst_83939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e007ffffffffff; valaddr_reg:x3; val_offset:251817*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251817*0 + 3*227*FLEN/8, x4, x1, x2)

inst_83940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e00fffffffffff; valaddr_reg:x3; val_offset:251820*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251820*0 + 3*228*FLEN/8, x4, x1, x2)

inst_83941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e01fffffffffff; valaddr_reg:x3; val_offset:251823*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251823*0 + 3*229*FLEN/8, x4, x1, x2)

inst_83942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e03fffffffffff; valaddr_reg:x3; val_offset:251826*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251826*0 + 3*230*FLEN/8, x4, x1, x2)

inst_83943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e07fffffffffff; valaddr_reg:x3; val_offset:251829*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251829*0 + 3*231*FLEN/8, x4, x1, x2)

inst_83944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e0ffffffffffff; valaddr_reg:x3; val_offset:251832*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251832*0 + 3*232*FLEN/8, x4, x1, x2)

inst_83945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e1ffffffffffff; valaddr_reg:x3; val_offset:251835*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251835*0 + 3*233*FLEN/8, x4, x1, x2)

inst_83946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e3ffffffffffff; valaddr_reg:x3; val_offset:251838*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251838*0 + 3*234*FLEN/8, x4, x1, x2)

inst_83947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e7ffffffffffff; valaddr_reg:x3; val_offset:251841*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251841*0 + 3*235*FLEN/8, x4, x1, x2)

inst_83948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83e8000000000000; valaddr_reg:x3; val_offset:251844*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251844*0 + 3*236*FLEN/8, x4, x1, x2)

inst_83949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83ec000000000000; valaddr_reg:x3; val_offset:251847*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251847*0 + 3*237*FLEN/8, x4, x1, x2)

inst_83950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83ee000000000000; valaddr_reg:x3; val_offset:251850*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251850*0 + 3*238*FLEN/8, x4, x1, x2)

inst_83951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83ef000000000000; valaddr_reg:x3; val_offset:251853*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251853*0 + 3*239*FLEN/8, x4, x1, x2)

inst_83952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83ef800000000000; valaddr_reg:x3; val_offset:251856*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251856*0 + 3*240*FLEN/8, x4, x1, x2)

inst_83953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efc00000000000; valaddr_reg:x3; val_offset:251859*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251859*0 + 3*241*FLEN/8, x4, x1, x2)

inst_83954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efe00000000000; valaddr_reg:x3; val_offset:251862*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251862*0 + 3*242*FLEN/8, x4, x1, x2)

inst_83955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83eff00000000000; valaddr_reg:x3; val_offset:251865*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251865*0 + 3*243*FLEN/8, x4, x1, x2)

inst_83956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83eff80000000000; valaddr_reg:x3; val_offset:251868*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251868*0 + 3*244*FLEN/8, x4, x1, x2)

inst_83957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effc0000000000; valaddr_reg:x3; val_offset:251871*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251871*0 + 3*245*FLEN/8, x4, x1, x2)

inst_83958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effe0000000000; valaddr_reg:x3; val_offset:251874*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251874*0 + 3*246*FLEN/8, x4, x1, x2)

inst_83959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efff0000000000; valaddr_reg:x3; val_offset:251877*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251877*0 + 3*247*FLEN/8, x4, x1, x2)

inst_83960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efff8000000000; valaddr_reg:x3; val_offset:251880*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251880*0 + 3*248*FLEN/8, x4, x1, x2)

inst_83961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffc000000000; valaddr_reg:x3; val_offset:251883*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251883*0 + 3*249*FLEN/8, x4, x1, x2)

inst_83962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffe000000000; valaddr_reg:x3; val_offset:251886*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251886*0 + 3*250*FLEN/8, x4, x1, x2)

inst_83963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effff000000000; valaddr_reg:x3; val_offset:251889*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251889*0 + 3*251*FLEN/8, x4, x1, x2)

inst_83964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effff800000000; valaddr_reg:x3; val_offset:251892*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251892*0 + 3*252*FLEN/8, x4, x1, x2)

inst_83965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffc00000000; valaddr_reg:x3; val_offset:251895*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251895*0 + 3*253*FLEN/8, x4, x1, x2)

inst_83966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffe00000000; valaddr_reg:x3; val_offset:251898*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251898*0 + 3*254*FLEN/8, x4, x1, x2)

inst_83967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffff00000000; valaddr_reg:x3; val_offset:251901*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251901*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_83968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffff80000000; valaddr_reg:x3; val_offset:251904*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251904*0 + 3*256*FLEN/8, x4, x1, x2)

inst_83969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffc0000000; valaddr_reg:x3; val_offset:251907*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251907*0 + 3*257*FLEN/8, x4, x1, x2)

inst_83970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffe0000000; valaddr_reg:x3; val_offset:251910*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251910*0 + 3*258*FLEN/8, x4, x1, x2)

inst_83971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffff0000000; valaddr_reg:x3; val_offset:251913*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251913*0 + 3*259*FLEN/8, x4, x1, x2)

inst_83972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffff8000000; valaddr_reg:x3; val_offset:251916*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251916*0 + 3*260*FLEN/8, x4, x1, x2)

inst_83973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffc000000; valaddr_reg:x3; val_offset:251919*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251919*0 + 3*261*FLEN/8, x4, x1, x2)

inst_83974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffe000000; valaddr_reg:x3; val_offset:251922*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251922*0 + 3*262*FLEN/8, x4, x1, x2)

inst_83975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffff000000; valaddr_reg:x3; val_offset:251925*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251925*0 + 3*263*FLEN/8, x4, x1, x2)

inst_83976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffff800000; valaddr_reg:x3; val_offset:251928*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251928*0 + 3*264*FLEN/8, x4, x1, x2)

inst_83977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffc00000; valaddr_reg:x3; val_offset:251931*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251931*0 + 3*265*FLEN/8, x4, x1, x2)

inst_83978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffe00000; valaddr_reg:x3; val_offset:251934*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251934*0 + 3*266*FLEN/8, x4, x1, x2)

inst_83979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffff00000; valaddr_reg:x3; val_offset:251937*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251937*0 + 3*267*FLEN/8, x4, x1, x2)

inst_83980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffff80000; valaddr_reg:x3; val_offset:251940*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251940*0 + 3*268*FLEN/8, x4, x1, x2)

inst_83981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffc0000; valaddr_reg:x3; val_offset:251943*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251943*0 + 3*269*FLEN/8, x4, x1, x2)

inst_83982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffe0000; valaddr_reg:x3; val_offset:251946*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251946*0 + 3*270*FLEN/8, x4, x1, x2)

inst_83983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffff0000; valaddr_reg:x3; val_offset:251949*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251949*0 + 3*271*FLEN/8, x4, x1, x2)

inst_83984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffff8000; valaddr_reg:x3; val_offset:251952*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251952*0 + 3*272*FLEN/8, x4, x1, x2)

inst_83985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffffc000; valaddr_reg:x3; val_offset:251955*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251955*0 + 3*273*FLEN/8, x4, x1, x2)

inst_83986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffffe000; valaddr_reg:x3; val_offset:251958*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251958*0 + 3*274*FLEN/8, x4, x1, x2)

inst_83987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffff000; valaddr_reg:x3; val_offset:251961*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251961*0 + 3*275*FLEN/8, x4, x1, x2)

inst_83988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffff800; valaddr_reg:x3; val_offset:251964*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251964*0 + 3*276*FLEN/8, x4, x1, x2)

inst_83989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffffc00; valaddr_reg:x3; val_offset:251967*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251967*0 + 3*277*FLEN/8, x4, x1, x2)

inst_83990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffffe00; valaddr_reg:x3; val_offset:251970*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251970*0 + 3*278*FLEN/8, x4, x1, x2)

inst_83991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffffff00; valaddr_reg:x3; val_offset:251973*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251973*0 + 3*279*FLEN/8, x4, x1, x2)

inst_83992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffffff80; valaddr_reg:x3; val_offset:251976*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251976*0 + 3*280*FLEN/8, x4, x1, x2)

inst_83993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffffffc0; valaddr_reg:x3; val_offset:251979*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251979*0 + 3*281*FLEN/8, x4, x1, x2)

inst_83994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffffffe0; valaddr_reg:x3; val_offset:251982*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251982*0 + 3*282*FLEN/8, x4, x1, x2)

inst_83995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffffff0; valaddr_reg:x3; val_offset:251985*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251985*0 + 3*283*FLEN/8, x4, x1, x2)

inst_83996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffffff8; valaddr_reg:x3; val_offset:251988*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251988*0 + 3*284*FLEN/8, x4, x1, x2)

inst_83997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffffffc; valaddr_reg:x3; val_offset:251991*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251991*0 + 3*285*FLEN/8, x4, x1, x2)

inst_83998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83effffffffffffe; valaddr_reg:x3; val_offset:251994*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251994*0 + 3*286*FLEN/8, x4, x1, x2)

inst_83999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cadd5b812bd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cadd5b812bd5; op2val:0x8000;
op3val:0x83efffffffffffff; valaddr_reg:x3; val_offset:251997*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251997*0 + 3*287*FLEN/8, x4, x1, x2)

inst_84000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:252000*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252000*0 + 3*288*FLEN/8, x4, x1, x2)

inst_84001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:252003*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252003*0 + 3*289*FLEN/8, x4, x1, x2)

inst_84002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:252006*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252006*0 + 3*290*FLEN/8, x4, x1, x2)

inst_84003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:252009*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252009*0 + 3*291*FLEN/8, x4, x1, x2)

inst_84004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:252012*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252012*0 + 3*292*FLEN/8, x4, x1, x2)

inst_84005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:252015*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252015*0 + 3*293*FLEN/8, x4, x1, x2)

inst_84006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:252018*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252018*0 + 3*294*FLEN/8, x4, x1, x2)

inst_84007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:252021*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252021*0 + 3*295*FLEN/8, x4, x1, x2)

inst_84008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:252024*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252024*0 + 3*296*FLEN/8, x4, x1, x2)

inst_84009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:252027*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252027*0 + 3*297*FLEN/8, x4, x1, x2)

inst_84010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:252030*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252030*0 + 3*298*FLEN/8, x4, x1, x2)

inst_84011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:252033*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252033*0 + 3*299*FLEN/8, x4, x1, x2)

inst_84012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:252036*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252036*0 + 3*300*FLEN/8, x4, x1, x2)

inst_84013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:252039*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252039*0 + 3*301*FLEN/8, x4, x1, x2)

inst_84014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:252042*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252042*0 + 3*302*FLEN/8, x4, x1, x2)

inst_84015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:252045*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252045*0 + 3*303*FLEN/8, x4, x1, x2)

inst_84016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:252048*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252048*0 + 3*304*FLEN/8, x4, x1, x2)

inst_84017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:252051*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252051*0 + 3*305*FLEN/8, x4, x1, x2)

inst_84018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:252054*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252054*0 + 3*306*FLEN/8, x4, x1, x2)

inst_84019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:252057*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252057*0 + 3*307*FLEN/8, x4, x1, x2)

inst_84020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:252060*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252060*0 + 3*308*FLEN/8, x4, x1, x2)

inst_84021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:252063*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252063*0 + 3*309*FLEN/8, x4, x1, x2)

inst_84022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000000000000; valaddr_reg:x3; val_offset:252066*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252066*0 + 3*310*FLEN/8, x4, x1, x2)

inst_84023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000000000001; valaddr_reg:x3; val_offset:252069*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252069*0 + 3*311*FLEN/8, x4, x1, x2)

inst_84024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000000000003; valaddr_reg:x3; val_offset:252072*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252072*0 + 3*312*FLEN/8, x4, x1, x2)

inst_84025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000000000007; valaddr_reg:x3; val_offset:252075*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252075*0 + 3*313*FLEN/8, x4, x1, x2)

inst_84026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000000000000f; valaddr_reg:x3; val_offset:252078*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252078*0 + 3*314*FLEN/8, x4, x1, x2)

inst_84027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000000000001f; valaddr_reg:x3; val_offset:252081*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252081*0 + 3*315*FLEN/8, x4, x1, x2)

inst_84028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000000000003f; valaddr_reg:x3; val_offset:252084*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252084*0 + 3*316*FLEN/8, x4, x1, x2)

inst_84029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000000000007f; valaddr_reg:x3; val_offset:252087*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252087*0 + 3*317*FLEN/8, x4, x1, x2)

inst_84030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100000000000ff; valaddr_reg:x3; val_offset:252090*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252090*0 + 3*318*FLEN/8, x4, x1, x2)

inst_84031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100000000001ff; valaddr_reg:x3; val_offset:252093*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252093*0 + 3*319*FLEN/8, x4, x1, x2)

inst_84032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100000000003ff; valaddr_reg:x3; val_offset:252096*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252096*0 + 3*320*FLEN/8, x4, x1, x2)

inst_84033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100000000007ff; valaddr_reg:x3; val_offset:252099*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252099*0 + 3*321*FLEN/8, x4, x1, x2)

inst_84034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000000000fff; valaddr_reg:x3; val_offset:252102*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252102*0 + 3*322*FLEN/8, x4, x1, x2)

inst_84035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000000001fff; valaddr_reg:x3; val_offset:252105*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252105*0 + 3*323*FLEN/8, x4, x1, x2)

inst_84036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000000003fff; valaddr_reg:x3; val_offset:252108*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252108*0 + 3*324*FLEN/8, x4, x1, x2)

inst_84037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000000007fff; valaddr_reg:x3; val_offset:252111*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252111*0 + 3*325*FLEN/8, x4, x1, x2)

inst_84038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000000000ffff; valaddr_reg:x3; val_offset:252114*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252114*0 + 3*326*FLEN/8, x4, x1, x2)

inst_84039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000000001ffff; valaddr_reg:x3; val_offset:252117*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252117*0 + 3*327*FLEN/8, x4, x1, x2)

inst_84040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000000003ffff; valaddr_reg:x3; val_offset:252120*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252120*0 + 3*328*FLEN/8, x4, x1, x2)

inst_84041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000000007ffff; valaddr_reg:x3; val_offset:252123*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252123*0 + 3*329*FLEN/8, x4, x1, x2)

inst_84042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100000000fffff; valaddr_reg:x3; val_offset:252126*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252126*0 + 3*330*FLEN/8, x4, x1, x2)

inst_84043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100000001fffff; valaddr_reg:x3; val_offset:252129*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252129*0 + 3*331*FLEN/8, x4, x1, x2)

inst_84044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100000003fffff; valaddr_reg:x3; val_offset:252132*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252132*0 + 3*332*FLEN/8, x4, x1, x2)

inst_84045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100000007fffff; valaddr_reg:x3; val_offset:252135*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252135*0 + 3*333*FLEN/8, x4, x1, x2)

inst_84046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000000ffffff; valaddr_reg:x3; val_offset:252138*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252138*0 + 3*334*FLEN/8, x4, x1, x2)

inst_84047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000001ffffff; valaddr_reg:x3; val_offset:252141*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252141*0 + 3*335*FLEN/8, x4, x1, x2)

inst_84048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000003ffffff; valaddr_reg:x3; val_offset:252144*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252144*0 + 3*336*FLEN/8, x4, x1, x2)

inst_84049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000007ffffff; valaddr_reg:x3; val_offset:252147*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252147*0 + 3*337*FLEN/8, x4, x1, x2)

inst_84050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000000fffffff; valaddr_reg:x3; val_offset:252150*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252150*0 + 3*338*FLEN/8, x4, x1, x2)

inst_84051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000001fffffff; valaddr_reg:x3; val_offset:252153*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252153*0 + 3*339*FLEN/8, x4, x1, x2)

inst_84052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000003fffffff; valaddr_reg:x3; val_offset:252156*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252156*0 + 3*340*FLEN/8, x4, x1, x2)

inst_84053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000007fffffff; valaddr_reg:x3; val_offset:252159*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252159*0 + 3*341*FLEN/8, x4, x1, x2)

inst_84054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100000ffffffff; valaddr_reg:x3; val_offset:252162*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252162*0 + 3*342*FLEN/8, x4, x1, x2)

inst_84055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100001ffffffff; valaddr_reg:x3; val_offset:252165*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252165*0 + 3*343*FLEN/8, x4, x1, x2)

inst_84056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100003ffffffff; valaddr_reg:x3; val_offset:252168*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252168*0 + 3*344*FLEN/8, x4, x1, x2)

inst_84057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100007ffffffff; valaddr_reg:x3; val_offset:252171*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252171*0 + 3*345*FLEN/8, x4, x1, x2)

inst_84058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310000fffffffff; valaddr_reg:x3; val_offset:252174*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252174*0 + 3*346*FLEN/8, x4, x1, x2)

inst_84059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310001fffffffff; valaddr_reg:x3; val_offset:252177*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252177*0 + 3*347*FLEN/8, x4, x1, x2)

inst_84060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310003fffffffff; valaddr_reg:x3; val_offset:252180*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252180*0 + 3*348*FLEN/8, x4, x1, x2)

inst_84061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310007fffffffff; valaddr_reg:x3; val_offset:252183*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252183*0 + 3*349*FLEN/8, x4, x1, x2)

inst_84062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31000ffffffffff; valaddr_reg:x3; val_offset:252186*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252186*0 + 3*350*FLEN/8, x4, x1, x2)

inst_84063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31001ffffffffff; valaddr_reg:x3; val_offset:252189*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252189*0 + 3*351*FLEN/8, x4, x1, x2)

inst_84064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31003ffffffffff; valaddr_reg:x3; val_offset:252192*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252192*0 + 3*352*FLEN/8, x4, x1, x2)

inst_84065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31007ffffffffff; valaddr_reg:x3; val_offset:252195*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252195*0 + 3*353*FLEN/8, x4, x1, x2)

inst_84066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3100fffffffffff; valaddr_reg:x3; val_offset:252198*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252198*0 + 3*354*FLEN/8, x4, x1, x2)

inst_84067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3101fffffffffff; valaddr_reg:x3; val_offset:252201*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252201*0 + 3*355*FLEN/8, x4, x1, x2)

inst_84068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3103fffffffffff; valaddr_reg:x3; val_offset:252204*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252204*0 + 3*356*FLEN/8, x4, x1, x2)

inst_84069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x3107fffffffffff; valaddr_reg:x3; val_offset:252207*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252207*0 + 3*357*FLEN/8, x4, x1, x2)

inst_84070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x310ffffffffffff; valaddr_reg:x3; val_offset:252210*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252210*0 + 3*358*FLEN/8, x4, x1, x2)

inst_84071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x311ffffffffffff; valaddr_reg:x3; val_offset:252213*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252213*0 + 3*359*FLEN/8, x4, x1, x2)

inst_84072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x313ffffffffffff; valaddr_reg:x3; val_offset:252216*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252216*0 + 3*360*FLEN/8, x4, x1, x2)

inst_84073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x317ffffffffffff; valaddr_reg:x3; val_offset:252219*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252219*0 + 3*361*FLEN/8, x4, x1, x2)

inst_84074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x318000000000000; valaddr_reg:x3; val_offset:252222*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252222*0 + 3*362*FLEN/8, x4, x1, x2)

inst_84075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31c000000000000; valaddr_reg:x3; val_offset:252225*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252225*0 + 3*363*FLEN/8, x4, x1, x2)

inst_84076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31e000000000000; valaddr_reg:x3; val_offset:252228*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252228*0 + 3*364*FLEN/8, x4, x1, x2)

inst_84077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31f000000000000; valaddr_reg:x3; val_offset:252231*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252231*0 + 3*365*FLEN/8, x4, x1, x2)

inst_84078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31f800000000000; valaddr_reg:x3; val_offset:252234*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252234*0 + 3*366*FLEN/8, x4, x1, x2)

inst_84079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fc00000000000; valaddr_reg:x3; val_offset:252237*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252237*0 + 3*367*FLEN/8, x4, x1, x2)

inst_84080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fe00000000000; valaddr_reg:x3; val_offset:252240*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252240*0 + 3*368*FLEN/8, x4, x1, x2)

inst_84081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ff00000000000; valaddr_reg:x3; val_offset:252243*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252243*0 + 3*369*FLEN/8, x4, x1, x2)

inst_84082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ff80000000000; valaddr_reg:x3; val_offset:252246*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252246*0 + 3*370*FLEN/8, x4, x1, x2)

inst_84083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffc0000000000; valaddr_reg:x3; val_offset:252249*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252249*0 + 3*371*FLEN/8, x4, x1, x2)

inst_84084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffe0000000000; valaddr_reg:x3; val_offset:252252*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252252*0 + 3*372*FLEN/8, x4, x1, x2)

inst_84085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fff0000000000; valaddr_reg:x3; val_offset:252255*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252255*0 + 3*373*FLEN/8, x4, x1, x2)

inst_84086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fff8000000000; valaddr_reg:x3; val_offset:252258*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252258*0 + 3*374*FLEN/8, x4, x1, x2)

inst_84087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffc000000000; valaddr_reg:x3; val_offset:252261*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252261*0 + 3*375*FLEN/8, x4, x1, x2)

inst_84088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffe000000000; valaddr_reg:x3; val_offset:252264*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252264*0 + 3*376*FLEN/8, x4, x1, x2)

inst_84089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffff000000000; valaddr_reg:x3; val_offset:252267*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252267*0 + 3*377*FLEN/8, x4, x1, x2)

inst_84090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffff800000000; valaddr_reg:x3; val_offset:252270*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252270*0 + 3*378*FLEN/8, x4, x1, x2)

inst_84091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffc00000000; valaddr_reg:x3; val_offset:252273*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252273*0 + 3*379*FLEN/8, x4, x1, x2)

inst_84092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffe00000000; valaddr_reg:x3; val_offset:252276*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252276*0 + 3*380*FLEN/8, x4, x1, x2)

inst_84093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffff00000000; valaddr_reg:x3; val_offset:252279*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252279*0 + 3*381*FLEN/8, x4, x1, x2)

inst_84094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffff80000000; valaddr_reg:x3; val_offset:252282*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252282*0 + 3*382*FLEN/8, x4, x1, x2)

inst_84095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffc0000000; valaddr_reg:x3; val_offset:252285*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252285*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_84096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffe0000000; valaddr_reg:x3; val_offset:252288*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252288*0 + 3*384*FLEN/8, x4, x1, x2)

inst_84097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffff0000000; valaddr_reg:x3; val_offset:252291*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252291*0 + 3*385*FLEN/8, x4, x1, x2)

inst_84098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffff8000000; valaddr_reg:x3; val_offset:252294*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252294*0 + 3*386*FLEN/8, x4, x1, x2)

inst_84099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffc000000; valaddr_reg:x3; val_offset:252297*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252297*0 + 3*387*FLEN/8, x4, x1, x2)

inst_84100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffe000000; valaddr_reg:x3; val_offset:252300*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252300*0 + 3*388*FLEN/8, x4, x1, x2)

inst_84101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffff000000; valaddr_reg:x3; val_offset:252303*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252303*0 + 3*389*FLEN/8, x4, x1, x2)

inst_84102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffff800000; valaddr_reg:x3; val_offset:252306*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252306*0 + 3*390*FLEN/8, x4, x1, x2)

inst_84103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffc00000; valaddr_reg:x3; val_offset:252309*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252309*0 + 3*391*FLEN/8, x4, x1, x2)

inst_84104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffe00000; valaddr_reg:x3; val_offset:252312*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252312*0 + 3*392*FLEN/8, x4, x1, x2)

inst_84105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffff00000; valaddr_reg:x3; val_offset:252315*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252315*0 + 3*393*FLEN/8, x4, x1, x2)

inst_84106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffff80000; valaddr_reg:x3; val_offset:252318*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252318*0 + 3*394*FLEN/8, x4, x1, x2)

inst_84107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffc0000; valaddr_reg:x3; val_offset:252321*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252321*0 + 3*395*FLEN/8, x4, x1, x2)

inst_84108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffe0000; valaddr_reg:x3; val_offset:252324*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252324*0 + 3*396*FLEN/8, x4, x1, x2)

inst_84109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffff0000; valaddr_reg:x3; val_offset:252327*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252327*0 + 3*397*FLEN/8, x4, x1, x2)

inst_84110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffff8000; valaddr_reg:x3; val_offset:252330*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252330*0 + 3*398*FLEN/8, x4, x1, x2)

inst_84111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffffc000; valaddr_reg:x3; val_offset:252333*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252333*0 + 3*399*FLEN/8, x4, x1, x2)

inst_84112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffffe000; valaddr_reg:x3; val_offset:252336*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252336*0 + 3*400*FLEN/8, x4, x1, x2)

inst_84113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffff000; valaddr_reg:x3; val_offset:252339*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252339*0 + 3*401*FLEN/8, x4, x1, x2)

inst_84114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffff800; valaddr_reg:x3; val_offset:252342*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252342*0 + 3*402*FLEN/8, x4, x1, x2)

inst_84115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffffc00; valaddr_reg:x3; val_offset:252345*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252345*0 + 3*403*FLEN/8, x4, x1, x2)

inst_84116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffffe00; valaddr_reg:x3; val_offset:252348*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252348*0 + 3*404*FLEN/8, x4, x1, x2)

inst_84117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffffff00; valaddr_reg:x3; val_offset:252351*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252351*0 + 3*405*FLEN/8, x4, x1, x2)

inst_84118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffffff80; valaddr_reg:x3; val_offset:252354*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252354*0 + 3*406*FLEN/8, x4, x1, x2)

inst_84119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffffffc0; valaddr_reg:x3; val_offset:252357*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252357*0 + 3*407*FLEN/8, x4, x1, x2)

inst_84120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffffffe0; valaddr_reg:x3; val_offset:252360*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252360*0 + 3*408*FLEN/8, x4, x1, x2)

inst_84121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffffff0; valaddr_reg:x3; val_offset:252363*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252363*0 + 3*409*FLEN/8, x4, x1, x2)

inst_84122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffffff8; valaddr_reg:x3; val_offset:252366*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252366*0 + 3*410*FLEN/8, x4, x1, x2)

inst_84123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffffffc; valaddr_reg:x3; val_offset:252369*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252369*0 + 3*411*FLEN/8, x4, x1, x2)

inst_84124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31ffffffffffffe; valaddr_reg:x3; val_offset:252372*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252372*0 + 3*412*FLEN/8, x4, x1, x2)

inst_84125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9cd28d4733b9e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9cd28d4733b9e; op2val:0x0;
op3val:0x31fffffffffffff; valaddr_reg:x3; val_offset:252375*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252375*0 + 3*413*FLEN/8, x4, x1, x2)

inst_84126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000000000000; valaddr_reg:x3; val_offset:252378*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252378*0 + 3*414*FLEN/8, x4, x1, x2)

inst_84127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000000000001; valaddr_reg:x3; val_offset:252381*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252381*0 + 3*415*FLEN/8, x4, x1, x2)

inst_84128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000000000003; valaddr_reg:x3; val_offset:252384*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252384*0 + 3*416*FLEN/8, x4, x1, x2)

inst_84129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000000000007; valaddr_reg:x3; val_offset:252387*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252387*0 + 3*417*FLEN/8, x4, x1, x2)

inst_84130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000000000000f; valaddr_reg:x3; val_offset:252390*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252390*0 + 3*418*FLEN/8, x4, x1, x2)

inst_84131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000000000001f; valaddr_reg:x3; val_offset:252393*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252393*0 + 3*419*FLEN/8, x4, x1, x2)

inst_84132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000000000003f; valaddr_reg:x3; val_offset:252396*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252396*0 + 3*420*FLEN/8, x4, x1, x2)

inst_84133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000000000007f; valaddr_reg:x3; val_offset:252399*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252399*0 + 3*421*FLEN/8, x4, x1, x2)

inst_84134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000000000000ff; valaddr_reg:x3; val_offset:252402*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252402*0 + 3*422*FLEN/8, x4, x1, x2)

inst_84135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000000000001ff; valaddr_reg:x3; val_offset:252405*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252405*0 + 3*423*FLEN/8, x4, x1, x2)

inst_84136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000000000003ff; valaddr_reg:x3; val_offset:252408*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252408*0 + 3*424*FLEN/8, x4, x1, x2)

inst_84137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000000000007ff; valaddr_reg:x3; val_offset:252411*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252411*0 + 3*425*FLEN/8, x4, x1, x2)

inst_84138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000000000fff; valaddr_reg:x3; val_offset:252414*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252414*0 + 3*426*FLEN/8, x4, x1, x2)

inst_84139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000000001fff; valaddr_reg:x3; val_offset:252417*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252417*0 + 3*427*FLEN/8, x4, x1, x2)

inst_84140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000000003fff; valaddr_reg:x3; val_offset:252420*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252420*0 + 3*428*FLEN/8, x4, x1, x2)

inst_84141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000000007fff; valaddr_reg:x3; val_offset:252423*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252423*0 + 3*429*FLEN/8, x4, x1, x2)

inst_84142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000000000ffff; valaddr_reg:x3; val_offset:252426*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252426*0 + 3*430*FLEN/8, x4, x1, x2)

inst_84143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000000001ffff; valaddr_reg:x3; val_offset:252429*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252429*0 + 3*431*FLEN/8, x4, x1, x2)

inst_84144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000000003ffff; valaddr_reg:x3; val_offset:252432*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252432*0 + 3*432*FLEN/8, x4, x1, x2)

inst_84145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000000007ffff; valaddr_reg:x3; val_offset:252435*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252435*0 + 3*433*FLEN/8, x4, x1, x2)

inst_84146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000000000fffff; valaddr_reg:x3; val_offset:252438*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252438*0 + 3*434*FLEN/8, x4, x1, x2)

inst_84147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000000001fffff; valaddr_reg:x3; val_offset:252441*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252441*0 + 3*435*FLEN/8, x4, x1, x2)

inst_84148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000000003fffff; valaddr_reg:x3; val_offset:252444*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252444*0 + 3*436*FLEN/8, x4, x1, x2)

inst_84149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000000007fffff; valaddr_reg:x3; val_offset:252447*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252447*0 + 3*437*FLEN/8, x4, x1, x2)

inst_84150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000000ffffff; valaddr_reg:x3; val_offset:252450*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252450*0 + 3*438*FLEN/8, x4, x1, x2)

inst_84151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000001ffffff; valaddr_reg:x3; val_offset:252453*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252453*0 + 3*439*FLEN/8, x4, x1, x2)

inst_84152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000003ffffff; valaddr_reg:x3; val_offset:252456*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252456*0 + 3*440*FLEN/8, x4, x1, x2)

inst_84153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000007ffffff; valaddr_reg:x3; val_offset:252459*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252459*0 + 3*441*FLEN/8, x4, x1, x2)

inst_84154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000000fffffff; valaddr_reg:x3; val_offset:252462*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252462*0 + 3*442*FLEN/8, x4, x1, x2)

inst_84155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000001fffffff; valaddr_reg:x3; val_offset:252465*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252465*0 + 3*443*FLEN/8, x4, x1, x2)

inst_84156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000003fffffff; valaddr_reg:x3; val_offset:252468*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252468*0 + 3*444*FLEN/8, x4, x1, x2)

inst_84157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000007fffffff; valaddr_reg:x3; val_offset:252471*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252471*0 + 3*445*FLEN/8, x4, x1, x2)

inst_84158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000000ffffffff; valaddr_reg:x3; val_offset:252474*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252474*0 + 3*446*FLEN/8, x4, x1, x2)

inst_84159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000001ffffffff; valaddr_reg:x3; val_offset:252477*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252477*0 + 3*447*FLEN/8, x4, x1, x2)

inst_84160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000003ffffffff; valaddr_reg:x3; val_offset:252480*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252480*0 + 3*448*FLEN/8, x4, x1, x2)

inst_84161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000007ffffffff; valaddr_reg:x3; val_offset:252483*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252483*0 + 3*449*FLEN/8, x4, x1, x2)

inst_84162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900000fffffffff; valaddr_reg:x3; val_offset:252486*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252486*0 + 3*450*FLEN/8, x4, x1, x2)

inst_84163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900001fffffffff; valaddr_reg:x3; val_offset:252489*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252489*0 + 3*451*FLEN/8, x4, x1, x2)

inst_84164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900003fffffffff; valaddr_reg:x3; val_offset:252492*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252492*0 + 3*452*FLEN/8, x4, x1, x2)

inst_84165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900007fffffffff; valaddr_reg:x3; val_offset:252495*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252495*0 + 3*453*FLEN/8, x4, x1, x2)

inst_84166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390000ffffffffff; valaddr_reg:x3; val_offset:252498*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252498*0 + 3*454*FLEN/8, x4, x1, x2)

inst_84167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390001ffffffffff; valaddr_reg:x3; val_offset:252501*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252501*0 + 3*455*FLEN/8, x4, x1, x2)

inst_84168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390003ffffffffff; valaddr_reg:x3; val_offset:252504*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252504*0 + 3*456*FLEN/8, x4, x1, x2)

inst_84169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390007ffffffffff; valaddr_reg:x3; val_offset:252507*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252507*0 + 3*457*FLEN/8, x4, x1, x2)

inst_84170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39000fffffffffff; valaddr_reg:x3; val_offset:252510*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252510*0 + 3*458*FLEN/8, x4, x1, x2)

inst_84171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39001fffffffffff; valaddr_reg:x3; val_offset:252513*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252513*0 + 3*459*FLEN/8, x4, x1, x2)

inst_84172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39003fffffffffff; valaddr_reg:x3; val_offset:252516*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252516*0 + 3*460*FLEN/8, x4, x1, x2)

inst_84173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x39007fffffffffff; valaddr_reg:x3; val_offset:252519*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252519*0 + 3*461*FLEN/8, x4, x1, x2)

inst_84174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3900ffffffffffff; valaddr_reg:x3; val_offset:252522*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252522*0 + 3*462*FLEN/8, x4, x1, x2)

inst_84175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3901ffffffffffff; valaddr_reg:x3; val_offset:252525*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252525*0 + 3*463*FLEN/8, x4, x1, x2)

inst_84176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3903ffffffffffff; valaddr_reg:x3; val_offset:252528*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252528*0 + 3*464*FLEN/8, x4, x1, x2)

inst_84177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3907ffffffffffff; valaddr_reg:x3; val_offset:252531*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252531*0 + 3*465*FLEN/8, x4, x1, x2)

inst_84178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3908000000000000; valaddr_reg:x3; val_offset:252534*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252534*0 + 3*466*FLEN/8, x4, x1, x2)

inst_84179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390c000000000000; valaddr_reg:x3; val_offset:252537*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252537*0 + 3*467*FLEN/8, x4, x1, x2)

inst_84180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390e000000000000; valaddr_reg:x3; val_offset:252540*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252540*0 + 3*468*FLEN/8, x4, x1, x2)

inst_84181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390f000000000000; valaddr_reg:x3; val_offset:252543*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252543*0 + 3*469*FLEN/8, x4, x1, x2)

inst_84182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390f800000000000; valaddr_reg:x3; val_offset:252546*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252546*0 + 3*470*FLEN/8, x4, x1, x2)

inst_84183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fc00000000000; valaddr_reg:x3; val_offset:252549*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252549*0 + 3*471*FLEN/8, x4, x1, x2)

inst_84184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fe00000000000; valaddr_reg:x3; val_offset:252552*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252552*0 + 3*472*FLEN/8, x4, x1, x2)

inst_84185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ff00000000000; valaddr_reg:x3; val_offset:252555*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252555*0 + 3*473*FLEN/8, x4, x1, x2)

inst_84186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ff80000000000; valaddr_reg:x3; val_offset:252558*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252558*0 + 3*474*FLEN/8, x4, x1, x2)

inst_84187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffc0000000000; valaddr_reg:x3; val_offset:252561*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252561*0 + 3*475*FLEN/8, x4, x1, x2)

inst_84188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffe0000000000; valaddr_reg:x3; val_offset:252564*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252564*0 + 3*476*FLEN/8, x4, x1, x2)

inst_84189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fff0000000000; valaddr_reg:x3; val_offset:252567*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252567*0 + 3*477*FLEN/8, x4, x1, x2)

inst_84190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fff8000000000; valaddr_reg:x3; val_offset:252570*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252570*0 + 3*478*FLEN/8, x4, x1, x2)

inst_84191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffc000000000; valaddr_reg:x3; val_offset:252573*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252573*0 + 3*479*FLEN/8, x4, x1, x2)

inst_84192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffe000000000; valaddr_reg:x3; val_offset:252576*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252576*0 + 3*480*FLEN/8, x4, x1, x2)

inst_84193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffff000000000; valaddr_reg:x3; val_offset:252579*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252579*0 + 3*481*FLEN/8, x4, x1, x2)

inst_84194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffff800000000; valaddr_reg:x3; val_offset:252582*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252582*0 + 3*482*FLEN/8, x4, x1, x2)

inst_84195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffc00000000; valaddr_reg:x3; val_offset:252585*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252585*0 + 3*483*FLEN/8, x4, x1, x2)

inst_84196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffe00000000; valaddr_reg:x3; val_offset:252588*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252588*0 + 3*484*FLEN/8, x4, x1, x2)

inst_84197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffff00000000; valaddr_reg:x3; val_offset:252591*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252591*0 + 3*485*FLEN/8, x4, x1, x2)

inst_84198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffff80000000; valaddr_reg:x3; val_offset:252594*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252594*0 + 3*486*FLEN/8, x4, x1, x2)

inst_84199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffc0000000; valaddr_reg:x3; val_offset:252597*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252597*0 + 3*487*FLEN/8, x4, x1, x2)

inst_84200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffe0000000; valaddr_reg:x3; val_offset:252600*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252600*0 + 3*488*FLEN/8, x4, x1, x2)

inst_84201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffff0000000; valaddr_reg:x3; val_offset:252603*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252603*0 + 3*489*FLEN/8, x4, x1, x2)

inst_84202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffff8000000; valaddr_reg:x3; val_offset:252606*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252606*0 + 3*490*FLEN/8, x4, x1, x2)

inst_84203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffc000000; valaddr_reg:x3; val_offset:252609*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252609*0 + 3*491*FLEN/8, x4, x1, x2)

inst_84204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffe000000; valaddr_reg:x3; val_offset:252612*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252612*0 + 3*492*FLEN/8, x4, x1, x2)

inst_84205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffff000000; valaddr_reg:x3; val_offset:252615*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252615*0 + 3*493*FLEN/8, x4, x1, x2)

inst_84206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffff800000; valaddr_reg:x3; val_offset:252618*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252618*0 + 3*494*FLEN/8, x4, x1, x2)

inst_84207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffc00000; valaddr_reg:x3; val_offset:252621*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252621*0 + 3*495*FLEN/8, x4, x1, x2)

inst_84208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffe00000; valaddr_reg:x3; val_offset:252624*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252624*0 + 3*496*FLEN/8, x4, x1, x2)

inst_84209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffff00000; valaddr_reg:x3; val_offset:252627*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252627*0 + 3*497*FLEN/8, x4, x1, x2)

inst_84210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffff80000; valaddr_reg:x3; val_offset:252630*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252630*0 + 3*498*FLEN/8, x4, x1, x2)

inst_84211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffc0000; valaddr_reg:x3; val_offset:252633*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252633*0 + 3*499*FLEN/8, x4, x1, x2)

inst_84212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffe0000; valaddr_reg:x3; val_offset:252636*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252636*0 + 3*500*FLEN/8, x4, x1, x2)

inst_84213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffff0000; valaddr_reg:x3; val_offset:252639*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252639*0 + 3*501*FLEN/8, x4, x1, x2)

inst_84214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffff8000; valaddr_reg:x3; val_offset:252642*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252642*0 + 3*502*FLEN/8, x4, x1, x2)

inst_84215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffffc000; valaddr_reg:x3; val_offset:252645*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252645*0 + 3*503*FLEN/8, x4, x1, x2)

inst_84216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffffe000; valaddr_reg:x3; val_offset:252648*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252648*0 + 3*504*FLEN/8, x4, x1, x2)

inst_84217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffff000; valaddr_reg:x3; val_offset:252651*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252651*0 + 3*505*FLEN/8, x4, x1, x2)

inst_84218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffff800; valaddr_reg:x3; val_offset:252654*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252654*0 + 3*506*FLEN/8, x4, x1, x2)

inst_84219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffffc00; valaddr_reg:x3; val_offset:252657*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252657*0 + 3*507*FLEN/8, x4, x1, x2)

inst_84220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffffe00; valaddr_reg:x3; val_offset:252660*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252660*0 + 3*508*FLEN/8, x4, x1, x2)

inst_84221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffffff00; valaddr_reg:x3; val_offset:252663*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252663*0 + 3*509*FLEN/8, x4, x1, x2)

inst_84222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffffff80; valaddr_reg:x3; val_offset:252666*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252666*0 + 3*510*FLEN/8, x4, x1, x2)

inst_84223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffffffc0; valaddr_reg:x3; val_offset:252669*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252669*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_84224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffffffe0; valaddr_reg:x3; val_offset:252672*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252672*0 + 3*512*FLEN/8, x4, x1, x2)

inst_84225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffffff0; valaddr_reg:x3; val_offset:252675*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252675*0 + 3*513*FLEN/8, x4, x1, x2)

inst_84226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffffff8; valaddr_reg:x3; val_offset:252678*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252678*0 + 3*514*FLEN/8, x4, x1, x2)

inst_84227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffffffc; valaddr_reg:x3; val_offset:252681*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252681*0 + 3*515*FLEN/8, x4, x1, x2)

inst_84228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390ffffffffffffe; valaddr_reg:x3; val_offset:252684*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252684*0 + 3*516*FLEN/8, x4, x1, x2)

inst_84229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x390 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x390fffffffffffff; valaddr_reg:x3; val_offset:252687*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252687*0 + 3*517*FLEN/8, x4, x1, x2)

inst_84230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:252690*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252690*0 + 3*518*FLEN/8, x4, x1, x2)

inst_84231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:252693*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252693*0 + 3*519*FLEN/8, x4, x1, x2)

inst_84232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:252696*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252696*0 + 3*520*FLEN/8, x4, x1, x2)

inst_84233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:252699*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252699*0 + 3*521*FLEN/8, x4, x1, x2)

inst_84234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:252702*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252702*0 + 3*522*FLEN/8, x4, x1, x2)

inst_84235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:252705*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252705*0 + 3*523*FLEN/8, x4, x1, x2)

inst_84236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:252708*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252708*0 + 3*524*FLEN/8, x4, x1, x2)

inst_84237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:252711*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252711*0 + 3*525*FLEN/8, x4, x1, x2)

inst_84238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:252714*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252714*0 + 3*526*FLEN/8, x4, x1, x2)

inst_84239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:252717*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252717*0 + 3*527*FLEN/8, x4, x1, x2)

inst_84240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:252720*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252720*0 + 3*528*FLEN/8, x4, x1, x2)

inst_84241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:252723*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252723*0 + 3*529*FLEN/8, x4, x1, x2)

inst_84242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:252726*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252726*0 + 3*530*FLEN/8, x4, x1, x2)

inst_84243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:252729*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252729*0 + 3*531*FLEN/8, x4, x1, x2)

inst_84244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:252732*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252732*0 + 3*532*FLEN/8, x4, x1, x2)

inst_84245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:252735*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252735*0 + 3*533*FLEN/8, x4, x1, x2)

inst_84246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:252738*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252738*0 + 3*534*FLEN/8, x4, x1, x2)

inst_84247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:252741*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252741*0 + 3*535*FLEN/8, x4, x1, x2)

inst_84248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:252744*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252744*0 + 3*536*FLEN/8, x4, x1, x2)

inst_84249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:252747*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252747*0 + 3*537*FLEN/8, x4, x1, x2)

inst_84250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:252750*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252750*0 + 3*538*FLEN/8, x4, x1, x2)

inst_84251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e998476c1169 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3c241f6e07614 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e998476c1169; op2val:0x2033c241f6e07614;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:252753*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252753*0 + 3*539*FLEN/8, x4, x1, x2)

inst_84252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:252756*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252756*0 + 3*540*FLEN/8, x4, x1, x2)

inst_84253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:252759*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252759*0 + 3*541*FLEN/8, x4, x1, x2)

inst_84254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:252762*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252762*0 + 3*542*FLEN/8, x4, x1, x2)

inst_84255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:252765*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252765*0 + 3*543*FLEN/8, x4, x1, x2)

inst_84256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:252768*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252768*0 + 3*544*FLEN/8, x4, x1, x2)

inst_84257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:252771*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252771*0 + 3*545*FLEN/8, x4, x1, x2)

inst_84258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:252774*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252774*0 + 3*546*FLEN/8, x4, x1, x2)

inst_84259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:252777*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252777*0 + 3*547*FLEN/8, x4, x1, x2)

inst_84260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:252780*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252780*0 + 3*548*FLEN/8, x4, x1, x2)

inst_84261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:252783*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252783*0 + 3*549*FLEN/8, x4, x1, x2)

inst_84262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:252786*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252786*0 + 3*550*FLEN/8, x4, x1, x2)

inst_84263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:252789*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252789*0 + 3*551*FLEN/8, x4, x1, x2)

inst_84264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:252792*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252792*0 + 3*552*FLEN/8, x4, x1, x2)

inst_84265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:252795*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252795*0 + 3*553*FLEN/8, x4, x1, x2)

inst_84266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:252798*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252798*0 + 3*554*FLEN/8, x4, x1, x2)

inst_84267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:252801*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252801*0 + 3*555*FLEN/8, x4, x1, x2)

inst_84268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:252804*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252804*0 + 3*556*FLEN/8, x4, x1, x2)

inst_84269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:252807*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252807*0 + 3*557*FLEN/8, x4, x1, x2)

inst_84270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:252810*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252810*0 + 3*558*FLEN/8, x4, x1, x2)

inst_84271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:252813*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252813*0 + 3*559*FLEN/8, x4, x1, x2)

inst_84272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:252816*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252816*0 + 3*560*FLEN/8, x4, x1, x2)

inst_84273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:252819*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252819*0 + 3*561*FLEN/8, x4, x1, x2)

inst_84274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000000000000; valaddr_reg:x3; val_offset:252822*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252822*0 + 3*562*FLEN/8, x4, x1, x2)

inst_84275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000000000001; valaddr_reg:x3; val_offset:252825*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252825*0 + 3*563*FLEN/8, x4, x1, x2)

inst_84276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000000000003; valaddr_reg:x3; val_offset:252828*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252828*0 + 3*564*FLEN/8, x4, x1, x2)

inst_84277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000000000007; valaddr_reg:x3; val_offset:252831*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252831*0 + 3*565*FLEN/8, x4, x1, x2)

inst_84278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000000000000f; valaddr_reg:x3; val_offset:252834*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252834*0 + 3*566*FLEN/8, x4, x1, x2)

inst_84279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000000000001f; valaddr_reg:x3; val_offset:252837*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252837*0 + 3*567*FLEN/8, x4, x1, x2)

inst_84280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000000000003f; valaddr_reg:x3; val_offset:252840*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252840*0 + 3*568*FLEN/8, x4, x1, x2)

inst_84281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000000000007f; valaddr_reg:x3; val_offset:252843*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252843*0 + 3*569*FLEN/8, x4, x1, x2)

inst_84282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00000000000ff; valaddr_reg:x3; val_offset:252846*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252846*0 + 3*570*FLEN/8, x4, x1, x2)

inst_84283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00000000001ff; valaddr_reg:x3; val_offset:252849*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252849*0 + 3*571*FLEN/8, x4, x1, x2)

inst_84284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00000000003ff; valaddr_reg:x3; val_offset:252852*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252852*0 + 3*572*FLEN/8, x4, x1, x2)

inst_84285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00000000007ff; valaddr_reg:x3; val_offset:252855*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252855*0 + 3*573*FLEN/8, x4, x1, x2)

inst_84286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000000000fff; valaddr_reg:x3; val_offset:252858*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252858*0 + 3*574*FLEN/8, x4, x1, x2)

inst_84287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000000001fff; valaddr_reg:x3; val_offset:252861*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252861*0 + 3*575*FLEN/8, x4, x1, x2)

inst_84288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000000003fff; valaddr_reg:x3; val_offset:252864*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252864*0 + 3*576*FLEN/8, x4, x1, x2)

inst_84289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000000007fff; valaddr_reg:x3; val_offset:252867*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252867*0 + 3*577*FLEN/8, x4, x1, x2)

inst_84290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000000000ffff; valaddr_reg:x3; val_offset:252870*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252870*0 + 3*578*FLEN/8, x4, x1, x2)

inst_84291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000000001ffff; valaddr_reg:x3; val_offset:252873*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252873*0 + 3*579*FLEN/8, x4, x1, x2)

inst_84292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000000003ffff; valaddr_reg:x3; val_offset:252876*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252876*0 + 3*580*FLEN/8, x4, x1, x2)

inst_84293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000000007ffff; valaddr_reg:x3; val_offset:252879*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252879*0 + 3*581*FLEN/8, x4, x1, x2)

inst_84294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00000000fffff; valaddr_reg:x3; val_offset:252882*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252882*0 + 3*582*FLEN/8, x4, x1, x2)

inst_84295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00000001fffff; valaddr_reg:x3; val_offset:252885*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252885*0 + 3*583*FLEN/8, x4, x1, x2)

inst_84296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00000003fffff; valaddr_reg:x3; val_offset:252888*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252888*0 + 3*584*FLEN/8, x4, x1, x2)

inst_84297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00000007fffff; valaddr_reg:x3; val_offset:252891*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252891*0 + 3*585*FLEN/8, x4, x1, x2)

inst_84298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000000ffffff; valaddr_reg:x3; val_offset:252894*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252894*0 + 3*586*FLEN/8, x4, x1, x2)

inst_84299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000001ffffff; valaddr_reg:x3; val_offset:252897*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252897*0 + 3*587*FLEN/8, x4, x1, x2)

inst_84300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000003ffffff; valaddr_reg:x3; val_offset:252900*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252900*0 + 3*588*FLEN/8, x4, x1, x2)

inst_84301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000007ffffff; valaddr_reg:x3; val_offset:252903*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252903*0 + 3*589*FLEN/8, x4, x1, x2)

inst_84302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000000fffffff; valaddr_reg:x3; val_offset:252906*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252906*0 + 3*590*FLEN/8, x4, x1, x2)

inst_84303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000001fffffff; valaddr_reg:x3; val_offset:252909*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252909*0 + 3*591*FLEN/8, x4, x1, x2)

inst_84304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000003fffffff; valaddr_reg:x3; val_offset:252912*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252912*0 + 3*592*FLEN/8, x4, x1, x2)

inst_84305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000007fffffff; valaddr_reg:x3; val_offset:252915*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252915*0 + 3*593*FLEN/8, x4, x1, x2)

inst_84306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00000ffffffff; valaddr_reg:x3; val_offset:252918*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252918*0 + 3*594*FLEN/8, x4, x1, x2)

inst_84307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00001ffffffff; valaddr_reg:x3; val_offset:252921*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252921*0 + 3*595*FLEN/8, x4, x1, x2)

inst_84308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00003ffffffff; valaddr_reg:x3; val_offset:252924*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252924*0 + 3*596*FLEN/8, x4, x1, x2)

inst_84309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00007ffffffff; valaddr_reg:x3; val_offset:252927*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252927*0 + 3*597*FLEN/8, x4, x1, x2)

inst_84310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0000fffffffff; valaddr_reg:x3; val_offset:252930*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252930*0 + 3*598*FLEN/8, x4, x1, x2)

inst_84311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0001fffffffff; valaddr_reg:x3; val_offset:252933*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252933*0 + 3*599*FLEN/8, x4, x1, x2)

inst_84312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0003fffffffff; valaddr_reg:x3; val_offset:252936*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252936*0 + 3*600*FLEN/8, x4, x1, x2)

inst_84313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0007fffffffff; valaddr_reg:x3; val_offset:252939*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252939*0 + 3*601*FLEN/8, x4, x1, x2)

inst_84314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b000ffffffffff; valaddr_reg:x3; val_offset:252942*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252942*0 + 3*602*FLEN/8, x4, x1, x2)

inst_84315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b001ffffffffff; valaddr_reg:x3; val_offset:252945*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252945*0 + 3*603*FLEN/8, x4, x1, x2)

inst_84316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b003ffffffffff; valaddr_reg:x3; val_offset:252948*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252948*0 + 3*604*FLEN/8, x4, x1, x2)

inst_84317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b007ffffffffff; valaddr_reg:x3; val_offset:252951*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252951*0 + 3*605*FLEN/8, x4, x1, x2)

inst_84318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b00fffffffffff; valaddr_reg:x3; val_offset:252954*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252954*0 + 3*606*FLEN/8, x4, x1, x2)

inst_84319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b01fffffffffff; valaddr_reg:x3; val_offset:252957*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252957*0 + 3*607*FLEN/8, x4, x1, x2)

inst_84320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b03fffffffffff; valaddr_reg:x3; val_offset:252960*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252960*0 + 3*608*FLEN/8, x4, x1, x2)

inst_84321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b07fffffffffff; valaddr_reg:x3; val_offset:252963*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252963*0 + 3*609*FLEN/8, x4, x1, x2)

inst_84322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b0ffffffffffff; valaddr_reg:x3; val_offset:252966*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252966*0 + 3*610*FLEN/8, x4, x1, x2)

inst_84323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b1ffffffffffff; valaddr_reg:x3; val_offset:252969*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252969*0 + 3*611*FLEN/8, x4, x1, x2)

inst_84324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b3ffffffffffff; valaddr_reg:x3; val_offset:252972*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252972*0 + 3*612*FLEN/8, x4, x1, x2)

inst_84325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b7ffffffffffff; valaddr_reg:x3; val_offset:252975*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252975*0 + 3*613*FLEN/8, x4, x1, x2)

inst_84326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83b8000000000000; valaddr_reg:x3; val_offset:252978*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252978*0 + 3*614*FLEN/8, x4, x1, x2)

inst_84327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bc000000000000; valaddr_reg:x3; val_offset:252981*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252981*0 + 3*615*FLEN/8, x4, x1, x2)

inst_84328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83be000000000000; valaddr_reg:x3; val_offset:252984*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252984*0 + 3*616*FLEN/8, x4, x1, x2)

inst_84329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bf000000000000; valaddr_reg:x3; val_offset:252987*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252987*0 + 3*617*FLEN/8, x4, x1, x2)

inst_84330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bf800000000000; valaddr_reg:x3; val_offset:252990*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252990*0 + 3*618*FLEN/8, x4, x1, x2)

inst_84331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfc00000000000; valaddr_reg:x3; val_offset:252993*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252993*0 + 3*619*FLEN/8, x4, x1, x2)

inst_84332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfe00000000000; valaddr_reg:x3; val_offset:252996*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252996*0 + 3*620*FLEN/8, x4, x1, x2)

inst_84333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bff00000000000; valaddr_reg:x3; val_offset:252999*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252999*0 + 3*621*FLEN/8, x4, x1, x2)

inst_84334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bff80000000000; valaddr_reg:x3; val_offset:253002*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253002*0 + 3*622*FLEN/8, x4, x1, x2)

inst_84335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffc0000000000; valaddr_reg:x3; val_offset:253005*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253005*0 + 3*623*FLEN/8, x4, x1, x2)

inst_84336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffe0000000000; valaddr_reg:x3; val_offset:253008*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253008*0 + 3*624*FLEN/8, x4, x1, x2)

inst_84337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfff0000000000; valaddr_reg:x3; val_offset:253011*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253011*0 + 3*625*FLEN/8, x4, x1, x2)

inst_84338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfff8000000000; valaddr_reg:x3; val_offset:253014*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253014*0 + 3*626*FLEN/8, x4, x1, x2)

inst_84339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffc000000000; valaddr_reg:x3; val_offset:253017*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253017*0 + 3*627*FLEN/8, x4, x1, x2)

inst_84340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffe000000000; valaddr_reg:x3; val_offset:253020*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253020*0 + 3*628*FLEN/8, x4, x1, x2)

inst_84341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffff000000000; valaddr_reg:x3; val_offset:253023*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253023*0 + 3*629*FLEN/8, x4, x1, x2)

inst_84342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffff800000000; valaddr_reg:x3; val_offset:253026*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253026*0 + 3*630*FLEN/8, x4, x1, x2)

inst_84343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffc00000000; valaddr_reg:x3; val_offset:253029*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253029*0 + 3*631*FLEN/8, x4, x1, x2)

inst_84344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffe00000000; valaddr_reg:x3; val_offset:253032*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253032*0 + 3*632*FLEN/8, x4, x1, x2)

inst_84345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffff00000000; valaddr_reg:x3; val_offset:253035*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253035*0 + 3*633*FLEN/8, x4, x1, x2)

inst_84346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffff80000000; valaddr_reg:x3; val_offset:253038*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253038*0 + 3*634*FLEN/8, x4, x1, x2)

inst_84347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffc0000000; valaddr_reg:x3; val_offset:253041*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253041*0 + 3*635*FLEN/8, x4, x1, x2)

inst_84348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffe0000000; valaddr_reg:x3; val_offset:253044*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253044*0 + 3*636*FLEN/8, x4, x1, x2)

inst_84349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffff0000000; valaddr_reg:x3; val_offset:253047*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253047*0 + 3*637*FLEN/8, x4, x1, x2)

inst_84350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffff8000000; valaddr_reg:x3; val_offset:253050*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253050*0 + 3*638*FLEN/8, x4, x1, x2)

inst_84351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffc000000; valaddr_reg:x3; val_offset:253053*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253053*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_84352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffe000000; valaddr_reg:x3; val_offset:253056*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253056*0 + 3*640*FLEN/8, x4, x1, x2)

inst_84353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffff000000; valaddr_reg:x3; val_offset:253059*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253059*0 + 3*641*FLEN/8, x4, x1, x2)

inst_84354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffff800000; valaddr_reg:x3; val_offset:253062*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253062*0 + 3*642*FLEN/8, x4, x1, x2)

inst_84355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffc00000; valaddr_reg:x3; val_offset:253065*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253065*0 + 3*643*FLEN/8, x4, x1, x2)

inst_84356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffe00000; valaddr_reg:x3; val_offset:253068*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253068*0 + 3*644*FLEN/8, x4, x1, x2)

inst_84357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffff00000; valaddr_reg:x3; val_offset:253071*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253071*0 + 3*645*FLEN/8, x4, x1, x2)

inst_84358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffff80000; valaddr_reg:x3; val_offset:253074*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253074*0 + 3*646*FLEN/8, x4, x1, x2)

inst_84359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffc0000; valaddr_reg:x3; val_offset:253077*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253077*0 + 3*647*FLEN/8, x4, x1, x2)

inst_84360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffe0000; valaddr_reg:x3; val_offset:253080*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253080*0 + 3*648*FLEN/8, x4, x1, x2)

inst_84361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffff0000; valaddr_reg:x3; val_offset:253083*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253083*0 + 3*649*FLEN/8, x4, x1, x2)

inst_84362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffff8000; valaddr_reg:x3; val_offset:253086*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253086*0 + 3*650*FLEN/8, x4, x1, x2)

inst_84363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffffc000; valaddr_reg:x3; val_offset:253089*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253089*0 + 3*651*FLEN/8, x4, x1, x2)

inst_84364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffffe000; valaddr_reg:x3; val_offset:253092*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253092*0 + 3*652*FLEN/8, x4, x1, x2)

inst_84365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffff000; valaddr_reg:x3; val_offset:253095*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253095*0 + 3*653*FLEN/8, x4, x1, x2)

inst_84366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffff800; valaddr_reg:x3; val_offset:253098*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253098*0 + 3*654*FLEN/8, x4, x1, x2)

inst_84367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffffc00; valaddr_reg:x3; val_offset:253101*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253101*0 + 3*655*FLEN/8, x4, x1, x2)

inst_84368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffffe00; valaddr_reg:x3; val_offset:253104*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253104*0 + 3*656*FLEN/8, x4, x1, x2)

inst_84369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffffff00; valaddr_reg:x3; val_offset:253107*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253107*0 + 3*657*FLEN/8, x4, x1, x2)

inst_84370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffffff80; valaddr_reg:x3; val_offset:253110*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253110*0 + 3*658*FLEN/8, x4, x1, x2)

inst_84371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffffffc0; valaddr_reg:x3; val_offset:253113*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253113*0 + 3*659*FLEN/8, x4, x1, x2)

inst_84372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffffffe0; valaddr_reg:x3; val_offset:253116*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253116*0 + 3*660*FLEN/8, x4, x1, x2)

inst_84373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffffff0; valaddr_reg:x3; val_offset:253119*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253119*0 + 3*661*FLEN/8, x4, x1, x2)

inst_84374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffffff8; valaddr_reg:x3; val_offset:253122*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253122*0 + 3*662*FLEN/8, x4, x1, x2)

inst_84375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffffffc; valaddr_reg:x3; val_offset:253125*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253125*0 + 3*663*FLEN/8, x4, x1, x2)

inst_84376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bffffffffffffe; valaddr_reg:x3; val_offset:253128*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253128*0 + 3*664*FLEN/8, x4, x1, x2)

inst_84377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9eb67d6cd3bf0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9eb67d6cd3bf0; op2val:0x8000;
op3val:0x83bfffffffffffff; valaddr_reg:x3; val_offset:253131*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253131*0 + 3*665*FLEN/8, x4, x1, x2)

inst_84378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000000000000; valaddr_reg:x3; val_offset:253134*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253134*0 + 3*666*FLEN/8, x4, x1, x2)

inst_84379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000000000001; valaddr_reg:x3; val_offset:253137*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253137*0 + 3*667*FLEN/8, x4, x1, x2)

inst_84380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000000000003; valaddr_reg:x3; val_offset:253140*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253140*0 + 3*668*FLEN/8, x4, x1, x2)

inst_84381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000000000007; valaddr_reg:x3; val_offset:253143*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253143*0 + 3*669*FLEN/8, x4, x1, x2)

inst_84382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000000000000f; valaddr_reg:x3; val_offset:253146*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253146*0 + 3*670*FLEN/8, x4, x1, x2)

inst_84383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000000000001f; valaddr_reg:x3; val_offset:253149*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253149*0 + 3*671*FLEN/8, x4, x1, x2)

inst_84384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000000000003f; valaddr_reg:x3; val_offset:253152*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253152*0 + 3*672*FLEN/8, x4, x1, x2)

inst_84385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000000000007f; valaddr_reg:x3; val_offset:253155*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253155*0 + 3*673*FLEN/8, x4, x1, x2)

inst_84386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300000000000ff; valaddr_reg:x3; val_offset:253158*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253158*0 + 3*674*FLEN/8, x4, x1, x2)

inst_84387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300000000001ff; valaddr_reg:x3; val_offset:253161*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253161*0 + 3*675*FLEN/8, x4, x1, x2)

inst_84388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300000000003ff; valaddr_reg:x3; val_offset:253164*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253164*0 + 3*676*FLEN/8, x4, x1, x2)

inst_84389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300000000007ff; valaddr_reg:x3; val_offset:253167*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253167*0 + 3*677*FLEN/8, x4, x1, x2)

inst_84390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000000000fff; valaddr_reg:x3; val_offset:253170*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253170*0 + 3*678*FLEN/8, x4, x1, x2)

inst_84391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000000001fff; valaddr_reg:x3; val_offset:253173*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253173*0 + 3*679*FLEN/8, x4, x1, x2)

inst_84392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000000003fff; valaddr_reg:x3; val_offset:253176*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253176*0 + 3*680*FLEN/8, x4, x1, x2)

inst_84393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000000007fff; valaddr_reg:x3; val_offset:253179*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253179*0 + 3*681*FLEN/8, x4, x1, x2)

inst_84394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000000000ffff; valaddr_reg:x3; val_offset:253182*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253182*0 + 3*682*FLEN/8, x4, x1, x2)

inst_84395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000000001ffff; valaddr_reg:x3; val_offset:253185*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253185*0 + 3*683*FLEN/8, x4, x1, x2)

inst_84396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000000003ffff; valaddr_reg:x3; val_offset:253188*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253188*0 + 3*684*FLEN/8, x4, x1, x2)

inst_84397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000000007ffff; valaddr_reg:x3; val_offset:253191*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253191*0 + 3*685*FLEN/8, x4, x1, x2)

inst_84398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300000000fffff; valaddr_reg:x3; val_offset:253194*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253194*0 + 3*686*FLEN/8, x4, x1, x2)

inst_84399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300000001fffff; valaddr_reg:x3; val_offset:253197*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253197*0 + 3*687*FLEN/8, x4, x1, x2)

inst_84400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300000003fffff; valaddr_reg:x3; val_offset:253200*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253200*0 + 3*688*FLEN/8, x4, x1, x2)

inst_84401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300000007fffff; valaddr_reg:x3; val_offset:253203*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253203*0 + 3*689*FLEN/8, x4, x1, x2)

inst_84402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000000ffffff; valaddr_reg:x3; val_offset:253206*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253206*0 + 3*690*FLEN/8, x4, x1, x2)

inst_84403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000001ffffff; valaddr_reg:x3; val_offset:253209*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253209*0 + 3*691*FLEN/8, x4, x1, x2)

inst_84404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000003ffffff; valaddr_reg:x3; val_offset:253212*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253212*0 + 3*692*FLEN/8, x4, x1, x2)

inst_84405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000007ffffff; valaddr_reg:x3; val_offset:253215*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253215*0 + 3*693*FLEN/8, x4, x1, x2)

inst_84406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000000fffffff; valaddr_reg:x3; val_offset:253218*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253218*0 + 3*694*FLEN/8, x4, x1, x2)

inst_84407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000001fffffff; valaddr_reg:x3; val_offset:253221*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253221*0 + 3*695*FLEN/8, x4, x1, x2)

inst_84408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000003fffffff; valaddr_reg:x3; val_offset:253224*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253224*0 + 3*696*FLEN/8, x4, x1, x2)

inst_84409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000007fffffff; valaddr_reg:x3; val_offset:253227*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253227*0 + 3*697*FLEN/8, x4, x1, x2)

inst_84410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300000ffffffff; valaddr_reg:x3; val_offset:253230*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253230*0 + 3*698*FLEN/8, x4, x1, x2)

inst_84411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300001ffffffff; valaddr_reg:x3; val_offset:253233*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253233*0 + 3*699*FLEN/8, x4, x1, x2)

inst_84412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300003ffffffff; valaddr_reg:x3; val_offset:253236*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253236*0 + 3*700*FLEN/8, x4, x1, x2)

inst_84413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300007ffffffff; valaddr_reg:x3; val_offset:253239*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253239*0 + 3*701*FLEN/8, x4, x1, x2)

inst_84414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30000fffffffff; valaddr_reg:x3; val_offset:253242*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253242*0 + 3*702*FLEN/8, x4, x1, x2)

inst_84415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30001fffffffff; valaddr_reg:x3; val_offset:253245*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253245*0 + 3*703*FLEN/8, x4, x1, x2)

inst_84416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30003fffffffff; valaddr_reg:x3; val_offset:253248*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253248*0 + 3*704*FLEN/8, x4, x1, x2)

inst_84417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30007fffffffff; valaddr_reg:x3; val_offset:253251*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253251*0 + 3*705*FLEN/8, x4, x1, x2)

inst_84418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3000ffffffffff; valaddr_reg:x3; val_offset:253254*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253254*0 + 3*706*FLEN/8, x4, x1, x2)

inst_84419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3001ffffffffff; valaddr_reg:x3; val_offset:253257*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253257*0 + 3*707*FLEN/8, x4, x1, x2)

inst_84420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3003ffffffffff; valaddr_reg:x3; val_offset:253260*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253260*0 + 3*708*FLEN/8, x4, x1, x2)

inst_84421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3007ffffffffff; valaddr_reg:x3; val_offset:253263*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253263*0 + 3*709*FLEN/8, x4, x1, x2)

inst_84422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d300fffffffffff; valaddr_reg:x3; val_offset:253266*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253266*0 + 3*710*FLEN/8, x4, x1, x2)

inst_84423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d301fffffffffff; valaddr_reg:x3; val_offset:253269*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253269*0 + 3*711*FLEN/8, x4, x1, x2)

inst_84424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d303fffffffffff; valaddr_reg:x3; val_offset:253272*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253272*0 + 3*712*FLEN/8, x4, x1, x2)

inst_84425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d307fffffffffff; valaddr_reg:x3; val_offset:253275*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253275*0 + 3*713*FLEN/8, x4, x1, x2)

inst_84426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d30ffffffffffff; valaddr_reg:x3; val_offset:253278*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253278*0 + 3*714*FLEN/8, x4, x1, x2)

inst_84427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d31ffffffffffff; valaddr_reg:x3; val_offset:253281*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253281*0 + 3*715*FLEN/8, x4, x1, x2)

inst_84428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d33ffffffffffff; valaddr_reg:x3; val_offset:253284*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253284*0 + 3*716*FLEN/8, x4, x1, x2)

inst_84429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d37ffffffffffff; valaddr_reg:x3; val_offset:253287*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253287*0 + 3*717*FLEN/8, x4, x1, x2)

inst_84430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d38000000000000; valaddr_reg:x3; val_offset:253290*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253290*0 + 3*718*FLEN/8, x4, x1, x2)

inst_84431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3c000000000000; valaddr_reg:x3; val_offset:253293*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253293*0 + 3*719*FLEN/8, x4, x1, x2)

inst_84432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3e000000000000; valaddr_reg:x3; val_offset:253296*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253296*0 + 3*720*FLEN/8, x4, x1, x2)

inst_84433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3f000000000000; valaddr_reg:x3; val_offset:253299*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253299*0 + 3*721*FLEN/8, x4, x1, x2)

inst_84434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3f800000000000; valaddr_reg:x3; val_offset:253302*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253302*0 + 3*722*FLEN/8, x4, x1, x2)

inst_84435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fc00000000000; valaddr_reg:x3; val_offset:253305*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253305*0 + 3*723*FLEN/8, x4, x1, x2)

inst_84436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fe00000000000; valaddr_reg:x3; val_offset:253308*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253308*0 + 3*724*FLEN/8, x4, x1, x2)

inst_84437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ff00000000000; valaddr_reg:x3; val_offset:253311*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253311*0 + 3*725*FLEN/8, x4, x1, x2)

inst_84438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ff80000000000; valaddr_reg:x3; val_offset:253314*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253314*0 + 3*726*FLEN/8, x4, x1, x2)

inst_84439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffc0000000000; valaddr_reg:x3; val_offset:253317*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253317*0 + 3*727*FLEN/8, x4, x1, x2)

inst_84440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffe0000000000; valaddr_reg:x3; val_offset:253320*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253320*0 + 3*728*FLEN/8, x4, x1, x2)

inst_84441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fff0000000000; valaddr_reg:x3; val_offset:253323*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253323*0 + 3*729*FLEN/8, x4, x1, x2)

inst_84442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fff8000000000; valaddr_reg:x3; val_offset:253326*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253326*0 + 3*730*FLEN/8, x4, x1, x2)

inst_84443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffc000000000; valaddr_reg:x3; val_offset:253329*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253329*0 + 3*731*FLEN/8, x4, x1, x2)

inst_84444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffe000000000; valaddr_reg:x3; val_offset:253332*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253332*0 + 3*732*FLEN/8, x4, x1, x2)

inst_84445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffff000000000; valaddr_reg:x3; val_offset:253335*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253335*0 + 3*733*FLEN/8, x4, x1, x2)

inst_84446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffff800000000; valaddr_reg:x3; val_offset:253338*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253338*0 + 3*734*FLEN/8, x4, x1, x2)

inst_84447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffc00000000; valaddr_reg:x3; val_offset:253341*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253341*0 + 3*735*FLEN/8, x4, x1, x2)

inst_84448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffe00000000; valaddr_reg:x3; val_offset:253344*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253344*0 + 3*736*FLEN/8, x4, x1, x2)

inst_84449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffff00000000; valaddr_reg:x3; val_offset:253347*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253347*0 + 3*737*FLEN/8, x4, x1, x2)

inst_84450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffff80000000; valaddr_reg:x3; val_offset:253350*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253350*0 + 3*738*FLEN/8, x4, x1, x2)

inst_84451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffc0000000; valaddr_reg:x3; val_offset:253353*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253353*0 + 3*739*FLEN/8, x4, x1, x2)

inst_84452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffe0000000; valaddr_reg:x3; val_offset:253356*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253356*0 + 3*740*FLEN/8, x4, x1, x2)

inst_84453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffff0000000; valaddr_reg:x3; val_offset:253359*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253359*0 + 3*741*FLEN/8, x4, x1, x2)

inst_84454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffff8000000; valaddr_reg:x3; val_offset:253362*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253362*0 + 3*742*FLEN/8, x4, x1, x2)

inst_84455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffc000000; valaddr_reg:x3; val_offset:253365*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253365*0 + 3*743*FLEN/8, x4, x1, x2)

inst_84456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffe000000; valaddr_reg:x3; val_offset:253368*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253368*0 + 3*744*FLEN/8, x4, x1, x2)

inst_84457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffff000000; valaddr_reg:x3; val_offset:253371*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253371*0 + 3*745*FLEN/8, x4, x1, x2)

inst_84458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffff800000; valaddr_reg:x3; val_offset:253374*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253374*0 + 3*746*FLEN/8, x4, x1, x2)

inst_84459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffc00000; valaddr_reg:x3; val_offset:253377*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253377*0 + 3*747*FLEN/8, x4, x1, x2)

inst_84460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffe00000; valaddr_reg:x3; val_offset:253380*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253380*0 + 3*748*FLEN/8, x4, x1, x2)

inst_84461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffff00000; valaddr_reg:x3; val_offset:253383*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253383*0 + 3*749*FLEN/8, x4, x1, x2)

inst_84462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffff80000; valaddr_reg:x3; val_offset:253386*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253386*0 + 3*750*FLEN/8, x4, x1, x2)

inst_84463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffffc0000; valaddr_reg:x3; val_offset:253389*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253389*0 + 3*751*FLEN/8, x4, x1, x2)

inst_84464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffffe0000; valaddr_reg:x3; val_offset:253392*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253392*0 + 3*752*FLEN/8, x4, x1, x2)

inst_84465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffff0000; valaddr_reg:x3; val_offset:253395*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253395*0 + 3*753*FLEN/8, x4, x1, x2)

inst_84466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffff8000; valaddr_reg:x3; val_offset:253398*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253398*0 + 3*754*FLEN/8, x4, x1, x2)

inst_84467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffffc000; valaddr_reg:x3; val_offset:253401*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253401*0 + 3*755*FLEN/8, x4, x1, x2)

inst_84468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffffe000; valaddr_reg:x3; val_offset:253404*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253404*0 + 3*756*FLEN/8, x4, x1, x2)

inst_84469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffffff000; valaddr_reg:x3; val_offset:253407*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253407*0 + 3*757*FLEN/8, x4, x1, x2)

inst_84470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffffff800; valaddr_reg:x3; val_offset:253410*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253410*0 + 3*758*FLEN/8, x4, x1, x2)

inst_84471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffffffc00; valaddr_reg:x3; val_offset:253413*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253413*0 + 3*759*FLEN/8, x4, x1, x2)

inst_84472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffffffe00; valaddr_reg:x3; val_offset:253416*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253416*0 + 3*760*FLEN/8, x4, x1, x2)

inst_84473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffffff00; valaddr_reg:x3; val_offset:253419*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253419*0 + 3*761*FLEN/8, x4, x1, x2)

inst_84474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffffff80; valaddr_reg:x3; val_offset:253422*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253422*0 + 3*762*FLEN/8, x4, x1, x2)

inst_84475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffffffc0; valaddr_reg:x3; val_offset:253425*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253425*0 + 3*763*FLEN/8, x4, x1, x2)

inst_84476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3fffffffffffe0; valaddr_reg:x3; val_offset:253428*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253428*0 + 3*764*FLEN/8, x4, x1, x2)

inst_84477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffffffff0; valaddr_reg:x3; val_offset:253431*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253431*0 + 3*765*FLEN/8, x4, x1, x2)

inst_84478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffffffff8; valaddr_reg:x3; val_offset:253434*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253434*0 + 3*766*FLEN/8, x4, x1, x2)

inst_84479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f83aab2119d4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b71f8cf9f824 and fs3 == 0 and fe3 == 0x3d3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f83aab2119d4; op2val:0x2033b71f8cf9f824;
op3val:0x3d3ffffffffffffc; valaddr_reg:x3; val_offset:253437*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 253437*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019587217227776,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019604397096960,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019612987031552,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019617281998848,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019619429482496,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019620503224320,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621040095232,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621308530688,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621442748416,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621509857280,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621543411712,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621560188928,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621568577536,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621572771840,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621574868992,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621575917568,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576441856,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576704000,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576835072,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576900608,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576933376,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576949760,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576957952,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576962048,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576964096,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965120,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965632,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965888,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966016,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966080,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966112,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966128,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966136,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966140,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966142,64,FLEN)
NAN_BOXED(6893241913716645707,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966143,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524800,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524801,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524803,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524807,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524815,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524831,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524863,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524927,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525055,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525311,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525823,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368526847,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368528895,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368532991,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368541183,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368557567,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368590335,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368655871,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368786943,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981369049087,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981369573375,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981370621951,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981372719103,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981376913407,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981385302015,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981402079231,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981435633663,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981502742527,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981636960255,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981905395711,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179982442266623,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179983516008447,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179985663492095,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179989958459391,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179998548393983,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180015728263167,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180050088001535,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180118807478271,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180256246431743,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180531124338687,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225181080880152575,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225182180391780351,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225184379415035903,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225188777461547007,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225197573554569215,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225215165740613631,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225250350112702463,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225320718856880127,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225461456345235455,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225742931321946111,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(226305881275367423,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(227431781182210047,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(227431781182210048,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(228557681089052672,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229120631042473984,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229402106019184640,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229542843507539968,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229613212251717632,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229648396623806464,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229665988809850880,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229674784902873088,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229679182949384192,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229681381972639744,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229682481484267520,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683031240081408,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683306117988352,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683443556941824,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683512276418560,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683546636156928,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683563816026112,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683572405960704,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683576700928000,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683578848411648,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683579922153472,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580459024384,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580727459840,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580861677568,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580928786432,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580962340864,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580979118080,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580987506688,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580991700992,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580993798144,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580994846720,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995371008,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995633152,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995764224,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995829760,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995862528,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995878912,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995887104,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995891200,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995893248,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995894272,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995894784,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895040,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895168,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895232,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895264,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895280,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895288,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895292,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895294,64,FLEN)
NAN_BOXED(6893247362200109772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895295,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746560,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746561,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746563,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746567,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746575,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746591,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746623,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746687,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746815,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747071,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747583,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751748607,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751750655,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751754751,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751762943,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751779327,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751812095,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751877631,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752008703,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752270847,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752795135,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213753843711,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213755940863,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213760135167,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213768523775,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213785300991,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213818855423,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213885964287,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214020182015,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214288617471,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214825488383,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595215899230207,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595218046713855,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595222341681151,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595230931615743,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595248111484927,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595282471223295,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595351190700031,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595488629653503,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595763507560447,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502596313263374335,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502597412775002111,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502599611798257663,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502604009844768767,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502612805937790975,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502630398123835391,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502665582495924223,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502735951240101887,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502876688728457215,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503158163705167871,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503721113658589183,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431807,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431808,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9505972913472274432,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506535863425695744,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506817338402406400,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506958075890761728,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507028444634939392,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507063629007028224,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507081221193072640,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507090017286094848,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507094415332605952,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507096614355861504,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507097713867489280,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098263623303168,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098538501210112,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098675940163584,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098744659640320,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098779019378688,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098796199247872,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098804789182464,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098809084149760,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098811231633408,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812305375232,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812842246144,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813110681600,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813244899328,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813312008192,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813345562624,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813362339840,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813370728448,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813374922752,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813377019904,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378068480,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378592768,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378854912,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378985984,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379051520,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379084288,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379100672,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379108864,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379112960,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379115008,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116032,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116544,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116800,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116928,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116992,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117024,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117040,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117048,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117052,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117054,64,FLEN)
NAN_BOXED(6893263756739029973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117055,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154304,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154305,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154307,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154311,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154319,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154335,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154367,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154431,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154559,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154815,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741155327,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741156351,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741158399,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741162495,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741170687,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741187071,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741219839,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741285375,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741416447,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741678591,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381742202879,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381743251455,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381745348607,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381749542911,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381757931519,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381774708735,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381808263167,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381875372031,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382009589759,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382278025215,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382814896127,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676383888637951,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676386036121599,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676390331088895,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676398921023487,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676416100892671,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676450460631039,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676519180107775,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676656619061247,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676931496968191,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220677481252782079,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220678580764409855,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220680779787665407,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220685177834176511,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220693973927198719,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220711566113243135,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220746750485331967,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220817119229509631,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220957856717864959,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221239331694575615,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221802281647996927,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839551,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839552,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224054081461682176,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224617031415103488,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224898506391814144,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225039243880169472,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225109612624347136,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225144796996435968,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225162389182480384,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225171185275502592,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225175583322013696,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225177782345269248,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225178881856897024,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179431612710912,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179706490617856,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179843929571328,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179912649048064,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179947008786432,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179964188655616,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179972778590208,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179977073557504,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179979221041152,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980294782976,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980831653888,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981100089344,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981234307072,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981301415936,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981334970368,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981351747584,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981360136192,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981364330496,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981366427648,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981367476224,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368000512,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368262656,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368393728,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368459264,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368492032,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368508416,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368516608,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368520704,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368522752,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368523776,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524288,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524544,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524672,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524736,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524768,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524784,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524792,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524796,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524798,64,FLEN)
NAN_BOXED(6893266279913962398,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524799,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892352,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892353,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892355,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892359,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892367,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892383,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892415,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892479,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892607,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161892863,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161893375,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161894399,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161896447,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161900543,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161908735,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161925119,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860161957887,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860162023423,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860162154495,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860162416639,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860162940927,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860163989503,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860166086655,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860170280959,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860178669567,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860195446783,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860229001215,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860296110079,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860430327807,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282860698763263,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282861235634175,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282862309375999,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282864456859647,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282868751826943,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282877341761535,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282894521630719,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282928881369087,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107282997600845823,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107283135039799295,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107283409917706239,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107283959673520127,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107285059185147903,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107287258208403455,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107291656254914559,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107300452347936767,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107318044533981183,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107353228906070015,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107423597650247679,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107564335138603007,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4107845810115313663,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4108408760068734975,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4109534659975577599,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4109534659975577600,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4110660559882420224,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111223509835841536,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111504984812552192,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111645722300907520,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111716091045085184,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111751275417174016,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111768867603218432,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111777663696240640,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111782061742751744,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111784260766007296,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111785360277635072,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111785910033448960,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786184911355904,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786322350309376,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786391069786112,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786425429524480,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786442609393664,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786451199328256,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786455494295552,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786457641779200,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786458715521024,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459252391936,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459520827392,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459655045120,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459722153984,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459755708416,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459772485632,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459780874240,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459785068544,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459787165696,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459788214272,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459788738560,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789000704,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789131776,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789197312,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789230080,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789246464,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789254656,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789258752,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789260800,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789261824,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262336,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262592,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262720,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262784,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262816,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262832,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262840,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262844,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262846,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4111786459789262847,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893297544909820265,64,FLEN)
NAN_BOXED(2320411821596505620,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635072,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635073,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635075,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635079,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635087,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635103,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635135,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635199,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635327,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635583,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869636095,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869637119,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869639167,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869643263,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869651455,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869667839,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869700607,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869766143,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869897215,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414870159359,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414870683647,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414871732223,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414873829375,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414878023679,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414886412287,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414903189503,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414936743935,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415003852799,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415138070527,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415406505983,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084415943376895,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084417017118719,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084419164602367,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084423459569663,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084432049504255,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084449229373439,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084483589111807,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084552308588543,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084689747542015,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084964625448959,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489085514381262847,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489086613892890623,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489088812916146175,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489093210962657279,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489102007055679487,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489119599241723903,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489154783613812735,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489225152357990399,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489365889846345727,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489647364823056383,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9490210314776477695,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9491336214683320319,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9491336214683320320,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9492462114590162944,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493025064543584256,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493306539520294912,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493447277008650240,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493517645752827904,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493552830124916736,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493570422310961152,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493579218403983360,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493583616450494464,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493585815473750016,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493586914985377792,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587464741191680,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587739619098624,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587877058052096,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587945777528832,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587980137267200,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493587997317136384,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588005907070976,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588010202038272,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588012349521920,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588013423263744,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588013960134656,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014228570112,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014362787840,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014429896704,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014463451136,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014480228352,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014488616960,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014492811264,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014494908416,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014495956992,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496481280,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496743424,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496874496,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496940032,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496972800,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496989184,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014496997376,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497001472,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497003520,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497004544,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005056,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005312,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005440,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005504,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005536,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005552,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005560,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005564,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005566,64,FLEN)
NAN_BOXED(6893299535885188080,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005567,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195715584,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195715585,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195715587,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195715591,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195715599,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195715615,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195715647,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195715711,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195715839,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195716095,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195716607,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195717631,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195719679,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195723775,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195731967,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195748351,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195781119,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195846655,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035195977727,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035196239871,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035196764159,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035197812735,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035199909887,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035204104191,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035212492799,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035229270015,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035262824447,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035329933311,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035464151039,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024035732586495,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024036269457407,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024037343199231,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024039490682879,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024043785650175,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024052375584767,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024069555453951,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024103915192319,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024172634669055,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024310073622527,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409024584951529471,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409025134707343359,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409026234218971135,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409028433242226687,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409032831288737791,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409041627381759999,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409059219567804415,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409094403939893247,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409164772684070911,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409305510172426239,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4409586985149136895,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4410149935102558207,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4411275835009400831,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4411275835009400832,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4412401734916243456,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4412964684869664768,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413246159846375424,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413386897334730752,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413457266078908416,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413492450450997248,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413510042637041664,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413518838730063872,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413523236776574976,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413525435799830528,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413526535311458304,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527085067272192,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527359945179136,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527497384132608,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527566103609344,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527600463347712,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527617643216896,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527626233151488,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527630528118784,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527632675602432,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527633749344256,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634286215168,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634554650624,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634688868352,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634755977216,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634789531648,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634806308864,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634814697472,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634818891776,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634820988928,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634822037504,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634822561792,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634822823936,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634822955008,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823020544,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823053312,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823069696,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823077888,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823081984,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823084032,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823085056,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823085568,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823085824,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823085952,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823086016,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823086048,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823086064,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823086072,64,FLEN)
NAN_BOXED(6893313635530119636,64,FLEN)
NAN_BOXED(2320399579162998820,64,FLEN)
NAN_BOXED(4413527634823086076,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
