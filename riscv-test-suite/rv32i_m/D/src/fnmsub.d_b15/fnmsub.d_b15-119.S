
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_90624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffe0000000000; valaddr_reg:x3; val_offset:271872*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271872*0 + 3*0*FLEN/8, x4, x1, x2)

inst_90625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fff0000000000; valaddr_reg:x3; val_offset:271875*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271875*0 + 3*1*FLEN/8, x4, x1, x2)

inst_90626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fff8000000000; valaddr_reg:x3; val_offset:271878*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271878*0 + 3*2*FLEN/8, x4, x1, x2)

inst_90627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffc000000000; valaddr_reg:x3; val_offset:271881*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271881*0 + 3*3*FLEN/8, x4, x1, x2)

inst_90628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffe000000000; valaddr_reg:x3; val_offset:271884*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271884*0 + 3*4*FLEN/8, x4, x1, x2)

inst_90629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffff000000000; valaddr_reg:x3; val_offset:271887*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271887*0 + 3*5*FLEN/8, x4, x1, x2)

inst_90630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffff800000000; valaddr_reg:x3; val_offset:271890*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271890*0 + 3*6*FLEN/8, x4, x1, x2)

inst_90631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffc00000000; valaddr_reg:x3; val_offset:271893*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271893*0 + 3*7*FLEN/8, x4, x1, x2)

inst_90632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffe00000000; valaddr_reg:x3; val_offset:271896*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271896*0 + 3*8*FLEN/8, x4, x1, x2)

inst_90633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffff00000000; valaddr_reg:x3; val_offset:271899*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271899*0 + 3*9*FLEN/8, x4, x1, x2)

inst_90634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffff80000000; valaddr_reg:x3; val_offset:271902*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271902*0 + 3*10*FLEN/8, x4, x1, x2)

inst_90635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffc0000000; valaddr_reg:x3; val_offset:271905*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271905*0 + 3*11*FLEN/8, x4, x1, x2)

inst_90636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffe0000000; valaddr_reg:x3; val_offset:271908*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271908*0 + 3*12*FLEN/8, x4, x1, x2)

inst_90637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffff0000000; valaddr_reg:x3; val_offset:271911*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271911*0 + 3*13*FLEN/8, x4, x1, x2)

inst_90638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffff8000000; valaddr_reg:x3; val_offset:271914*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271914*0 + 3*14*FLEN/8, x4, x1, x2)

inst_90639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffc000000; valaddr_reg:x3; val_offset:271917*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271917*0 + 3*15*FLEN/8, x4, x1, x2)

inst_90640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffe000000; valaddr_reg:x3; val_offset:271920*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271920*0 + 3*16*FLEN/8, x4, x1, x2)

inst_90641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffff000000; valaddr_reg:x3; val_offset:271923*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271923*0 + 3*17*FLEN/8, x4, x1, x2)

inst_90642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffff800000; valaddr_reg:x3; val_offset:271926*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271926*0 + 3*18*FLEN/8, x4, x1, x2)

inst_90643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffc00000; valaddr_reg:x3; val_offset:271929*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271929*0 + 3*19*FLEN/8, x4, x1, x2)

inst_90644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffe00000; valaddr_reg:x3; val_offset:271932*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271932*0 + 3*20*FLEN/8, x4, x1, x2)

inst_90645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffff00000; valaddr_reg:x3; val_offset:271935*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271935*0 + 3*21*FLEN/8, x4, x1, x2)

inst_90646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffff80000; valaddr_reg:x3; val_offset:271938*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271938*0 + 3*22*FLEN/8, x4, x1, x2)

inst_90647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffc0000; valaddr_reg:x3; val_offset:271941*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271941*0 + 3*23*FLEN/8, x4, x1, x2)

inst_90648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffe0000; valaddr_reg:x3; val_offset:271944*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271944*0 + 3*24*FLEN/8, x4, x1, x2)

inst_90649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffff0000; valaddr_reg:x3; val_offset:271947*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271947*0 + 3*25*FLEN/8, x4, x1, x2)

inst_90650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffff8000; valaddr_reg:x3; val_offset:271950*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271950*0 + 3*26*FLEN/8, x4, x1, x2)

inst_90651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffffc000; valaddr_reg:x3; val_offset:271953*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271953*0 + 3*27*FLEN/8, x4, x1, x2)

inst_90652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffffe000; valaddr_reg:x3; val_offset:271956*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271956*0 + 3*28*FLEN/8, x4, x1, x2)

inst_90653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffff000; valaddr_reg:x3; val_offset:271959*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271959*0 + 3*29*FLEN/8, x4, x1, x2)

inst_90654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffff800; valaddr_reg:x3; val_offset:271962*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271962*0 + 3*30*FLEN/8, x4, x1, x2)

inst_90655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffffc00; valaddr_reg:x3; val_offset:271965*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271965*0 + 3*31*FLEN/8, x4, x1, x2)

inst_90656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffffe00; valaddr_reg:x3; val_offset:271968*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271968*0 + 3*32*FLEN/8, x4, x1, x2)

inst_90657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffffff00; valaddr_reg:x3; val_offset:271971*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271971*0 + 3*33*FLEN/8, x4, x1, x2)

inst_90658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffffff80; valaddr_reg:x3; val_offset:271974*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271974*0 + 3*34*FLEN/8, x4, x1, x2)

inst_90659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffffffc0; valaddr_reg:x3; val_offset:271977*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271977*0 + 3*35*FLEN/8, x4, x1, x2)

inst_90660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffffffe0; valaddr_reg:x3; val_offset:271980*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271980*0 + 3*36*FLEN/8, x4, x1, x2)

inst_90661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffffff0; valaddr_reg:x3; val_offset:271983*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271983*0 + 3*37*FLEN/8, x4, x1, x2)

inst_90662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffffff8; valaddr_reg:x3; val_offset:271986*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271986*0 + 3*38*FLEN/8, x4, x1, x2)

inst_90663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffffffc; valaddr_reg:x3; val_offset:271989*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271989*0 + 3*39*FLEN/8, x4, x1, x2)

inst_90664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13ffffffffffffe; valaddr_reg:x3; val_offset:271992*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271992*0 + 3*40*FLEN/8, x4, x1, x2)

inst_90665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbccf38aee7244 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabccf38aee7244; op2val:0x0;
op3val:0x13fffffffffffff; valaddr_reg:x3; val_offset:271995*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271995*0 + 3*41*FLEN/8, x4, x1, x2)

inst_90666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:271998*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 271998*0 + 3*42*FLEN/8, x4, x1, x2)

inst_90667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:272001*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272001*0 + 3*43*FLEN/8, x4, x1, x2)

inst_90668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:272004*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272004*0 + 3*44*FLEN/8, x4, x1, x2)

inst_90669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:272007*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272007*0 + 3*45*FLEN/8, x4, x1, x2)

inst_90670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:272010*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272010*0 + 3*46*FLEN/8, x4, x1, x2)

inst_90671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:272013*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272013*0 + 3*47*FLEN/8, x4, x1, x2)

inst_90672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:272016*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272016*0 + 3*48*FLEN/8, x4, x1, x2)

inst_90673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:272019*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272019*0 + 3*49*FLEN/8, x4, x1, x2)

inst_90674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:272022*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272022*0 + 3*50*FLEN/8, x4, x1, x2)

inst_90675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:272025*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272025*0 + 3*51*FLEN/8, x4, x1, x2)

inst_90676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:272028*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272028*0 + 3*52*FLEN/8, x4, x1, x2)

inst_90677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:272031*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272031*0 + 3*53*FLEN/8, x4, x1, x2)

inst_90678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:272034*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272034*0 + 3*54*FLEN/8, x4, x1, x2)

inst_90679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:272037*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272037*0 + 3*55*FLEN/8, x4, x1, x2)

inst_90680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:272040*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272040*0 + 3*56*FLEN/8, x4, x1, x2)

inst_90681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:272043*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272043*0 + 3*57*FLEN/8, x4, x1, x2)

inst_90682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:272046*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272046*0 + 3*58*FLEN/8, x4, x1, x2)

inst_90683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:272049*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272049*0 + 3*59*FLEN/8, x4, x1, x2)

inst_90684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:272052*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272052*0 + 3*60*FLEN/8, x4, x1, x2)

inst_90685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:272055*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272055*0 + 3*61*FLEN/8, x4, x1, x2)

inst_90686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:272058*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272058*0 + 3*62*FLEN/8, x4, x1, x2)

inst_90687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:272061*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272061*0 + 3*63*FLEN/8, x4, x1, x2)

inst_90688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000000000000; valaddr_reg:x3; val_offset:272064*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272064*0 + 3*64*FLEN/8, x4, x1, x2)

inst_90689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000000000001; valaddr_reg:x3; val_offset:272067*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272067*0 + 3*65*FLEN/8, x4, x1, x2)

inst_90690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000000000003; valaddr_reg:x3; val_offset:272070*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272070*0 + 3*66*FLEN/8, x4, x1, x2)

inst_90691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000000000007; valaddr_reg:x3; val_offset:272073*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272073*0 + 3*67*FLEN/8, x4, x1, x2)

inst_90692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000000000000f; valaddr_reg:x3; val_offset:272076*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272076*0 + 3*68*FLEN/8, x4, x1, x2)

inst_90693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000000000001f; valaddr_reg:x3; val_offset:272079*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272079*0 + 3*69*FLEN/8, x4, x1, x2)

inst_90694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000000000003f; valaddr_reg:x3; val_offset:272082*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272082*0 + 3*70*FLEN/8, x4, x1, x2)

inst_90695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000000000007f; valaddr_reg:x3; val_offset:272085*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272085*0 + 3*71*FLEN/8, x4, x1, x2)

inst_90696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700000000000ff; valaddr_reg:x3; val_offset:272088*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272088*0 + 3*72*FLEN/8, x4, x1, x2)

inst_90697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700000000001ff; valaddr_reg:x3; val_offset:272091*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272091*0 + 3*73*FLEN/8, x4, x1, x2)

inst_90698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700000000003ff; valaddr_reg:x3; val_offset:272094*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272094*0 + 3*74*FLEN/8, x4, x1, x2)

inst_90699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700000000007ff; valaddr_reg:x3; val_offset:272097*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272097*0 + 3*75*FLEN/8, x4, x1, x2)

inst_90700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000000000fff; valaddr_reg:x3; val_offset:272100*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272100*0 + 3*76*FLEN/8, x4, x1, x2)

inst_90701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000000001fff; valaddr_reg:x3; val_offset:272103*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272103*0 + 3*77*FLEN/8, x4, x1, x2)

inst_90702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000000003fff; valaddr_reg:x3; val_offset:272106*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272106*0 + 3*78*FLEN/8, x4, x1, x2)

inst_90703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000000007fff; valaddr_reg:x3; val_offset:272109*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272109*0 + 3*79*FLEN/8, x4, x1, x2)

inst_90704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000000000ffff; valaddr_reg:x3; val_offset:272112*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272112*0 + 3*80*FLEN/8, x4, x1, x2)

inst_90705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000000001ffff; valaddr_reg:x3; val_offset:272115*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272115*0 + 3*81*FLEN/8, x4, x1, x2)

inst_90706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000000003ffff; valaddr_reg:x3; val_offset:272118*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272118*0 + 3*82*FLEN/8, x4, x1, x2)

inst_90707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000000007ffff; valaddr_reg:x3; val_offset:272121*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272121*0 + 3*83*FLEN/8, x4, x1, x2)

inst_90708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700000000fffff; valaddr_reg:x3; val_offset:272124*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272124*0 + 3*84*FLEN/8, x4, x1, x2)

inst_90709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700000001fffff; valaddr_reg:x3; val_offset:272127*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272127*0 + 3*85*FLEN/8, x4, x1, x2)

inst_90710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700000003fffff; valaddr_reg:x3; val_offset:272130*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272130*0 + 3*86*FLEN/8, x4, x1, x2)

inst_90711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700000007fffff; valaddr_reg:x3; val_offset:272133*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272133*0 + 3*87*FLEN/8, x4, x1, x2)

inst_90712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000000ffffff; valaddr_reg:x3; val_offset:272136*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272136*0 + 3*88*FLEN/8, x4, x1, x2)

inst_90713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000001ffffff; valaddr_reg:x3; val_offset:272139*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272139*0 + 3*89*FLEN/8, x4, x1, x2)

inst_90714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000003ffffff; valaddr_reg:x3; val_offset:272142*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272142*0 + 3*90*FLEN/8, x4, x1, x2)

inst_90715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000007ffffff; valaddr_reg:x3; val_offset:272145*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272145*0 + 3*91*FLEN/8, x4, x1, x2)

inst_90716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000000fffffff; valaddr_reg:x3; val_offset:272148*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272148*0 + 3*92*FLEN/8, x4, x1, x2)

inst_90717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000001fffffff; valaddr_reg:x3; val_offset:272151*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272151*0 + 3*93*FLEN/8, x4, x1, x2)

inst_90718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000003fffffff; valaddr_reg:x3; val_offset:272154*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272154*0 + 3*94*FLEN/8, x4, x1, x2)

inst_90719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000007fffffff; valaddr_reg:x3; val_offset:272157*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272157*0 + 3*95*FLEN/8, x4, x1, x2)

inst_90720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700000ffffffff; valaddr_reg:x3; val_offset:272160*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272160*0 + 3*96*FLEN/8, x4, x1, x2)

inst_90721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700001ffffffff; valaddr_reg:x3; val_offset:272163*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272163*0 + 3*97*FLEN/8, x4, x1, x2)

inst_90722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700003ffffffff; valaddr_reg:x3; val_offset:272166*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272166*0 + 3*98*FLEN/8, x4, x1, x2)

inst_90723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700007ffffffff; valaddr_reg:x3; val_offset:272169*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272169*0 + 3*99*FLEN/8, x4, x1, x2)

inst_90724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070000fffffffff; valaddr_reg:x3; val_offset:272172*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272172*0 + 3*100*FLEN/8, x4, x1, x2)

inst_90725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070001fffffffff; valaddr_reg:x3; val_offset:272175*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272175*0 + 3*101*FLEN/8, x4, x1, x2)

inst_90726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070003fffffffff; valaddr_reg:x3; val_offset:272178*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272178*0 + 3*102*FLEN/8, x4, x1, x2)

inst_90727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070007fffffffff; valaddr_reg:x3; val_offset:272181*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272181*0 + 3*103*FLEN/8, x4, x1, x2)

inst_90728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807000ffffffffff; valaddr_reg:x3; val_offset:272184*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272184*0 + 3*104*FLEN/8, x4, x1, x2)

inst_90729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807001ffffffffff; valaddr_reg:x3; val_offset:272187*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272187*0 + 3*105*FLEN/8, x4, x1, x2)

inst_90730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807003ffffffffff; valaddr_reg:x3; val_offset:272190*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272190*0 + 3*106*FLEN/8, x4, x1, x2)

inst_90731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807007ffffffffff; valaddr_reg:x3; val_offset:272193*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272193*0 + 3*107*FLEN/8, x4, x1, x2)

inst_90732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80700fffffffffff; valaddr_reg:x3; val_offset:272196*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272196*0 + 3*108*FLEN/8, x4, x1, x2)

inst_90733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80701fffffffffff; valaddr_reg:x3; val_offset:272199*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272199*0 + 3*109*FLEN/8, x4, x1, x2)

inst_90734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80703fffffffffff; valaddr_reg:x3; val_offset:272202*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272202*0 + 3*110*FLEN/8, x4, x1, x2)

inst_90735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x80707fffffffffff; valaddr_reg:x3; val_offset:272205*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272205*0 + 3*111*FLEN/8, x4, x1, x2)

inst_90736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8070ffffffffffff; valaddr_reg:x3; val_offset:272208*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272208*0 + 3*112*FLEN/8, x4, x1, x2)

inst_90737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8071ffffffffffff; valaddr_reg:x3; val_offset:272211*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272211*0 + 3*113*FLEN/8, x4, x1, x2)

inst_90738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8073ffffffffffff; valaddr_reg:x3; val_offset:272214*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272214*0 + 3*114*FLEN/8, x4, x1, x2)

inst_90739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8077ffffffffffff; valaddr_reg:x3; val_offset:272217*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272217*0 + 3*115*FLEN/8, x4, x1, x2)

inst_90740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x8078000000000000; valaddr_reg:x3; val_offset:272220*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272220*0 + 3*116*FLEN/8, x4, x1, x2)

inst_90741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807c000000000000; valaddr_reg:x3; val_offset:272223*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272223*0 + 3*117*FLEN/8, x4, x1, x2)

inst_90742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807e000000000000; valaddr_reg:x3; val_offset:272226*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272226*0 + 3*118*FLEN/8, x4, x1, x2)

inst_90743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807f000000000000; valaddr_reg:x3; val_offset:272229*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272229*0 + 3*119*FLEN/8, x4, x1, x2)

inst_90744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807f800000000000; valaddr_reg:x3; val_offset:272232*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272232*0 + 3*120*FLEN/8, x4, x1, x2)

inst_90745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fc00000000000; valaddr_reg:x3; val_offset:272235*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272235*0 + 3*121*FLEN/8, x4, x1, x2)

inst_90746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fe00000000000; valaddr_reg:x3; val_offset:272238*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272238*0 + 3*122*FLEN/8, x4, x1, x2)

inst_90747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ff00000000000; valaddr_reg:x3; val_offset:272241*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272241*0 + 3*123*FLEN/8, x4, x1, x2)

inst_90748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ff80000000000; valaddr_reg:x3; val_offset:272244*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272244*0 + 3*124*FLEN/8, x4, x1, x2)

inst_90749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffc0000000000; valaddr_reg:x3; val_offset:272247*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272247*0 + 3*125*FLEN/8, x4, x1, x2)

inst_90750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffe0000000000; valaddr_reg:x3; val_offset:272250*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272250*0 + 3*126*FLEN/8, x4, x1, x2)

inst_90751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fff0000000000; valaddr_reg:x3; val_offset:272253*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272253*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_90752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fff8000000000; valaddr_reg:x3; val_offset:272256*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272256*0 + 3*128*FLEN/8, x4, x1, x2)

inst_90753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffc000000000; valaddr_reg:x3; val_offset:272259*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272259*0 + 3*129*FLEN/8, x4, x1, x2)

inst_90754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffe000000000; valaddr_reg:x3; val_offset:272262*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272262*0 + 3*130*FLEN/8, x4, x1, x2)

inst_90755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffff000000000; valaddr_reg:x3; val_offset:272265*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272265*0 + 3*131*FLEN/8, x4, x1, x2)

inst_90756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffff800000000; valaddr_reg:x3; val_offset:272268*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272268*0 + 3*132*FLEN/8, x4, x1, x2)

inst_90757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffc00000000; valaddr_reg:x3; val_offset:272271*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272271*0 + 3*133*FLEN/8, x4, x1, x2)

inst_90758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffe00000000; valaddr_reg:x3; val_offset:272274*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272274*0 + 3*134*FLEN/8, x4, x1, x2)

inst_90759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffff00000000; valaddr_reg:x3; val_offset:272277*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272277*0 + 3*135*FLEN/8, x4, x1, x2)

inst_90760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffff80000000; valaddr_reg:x3; val_offset:272280*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272280*0 + 3*136*FLEN/8, x4, x1, x2)

inst_90761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffc0000000; valaddr_reg:x3; val_offset:272283*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272283*0 + 3*137*FLEN/8, x4, x1, x2)

inst_90762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffe0000000; valaddr_reg:x3; val_offset:272286*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272286*0 + 3*138*FLEN/8, x4, x1, x2)

inst_90763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffff0000000; valaddr_reg:x3; val_offset:272289*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272289*0 + 3*139*FLEN/8, x4, x1, x2)

inst_90764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffff8000000; valaddr_reg:x3; val_offset:272292*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272292*0 + 3*140*FLEN/8, x4, x1, x2)

inst_90765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffc000000; valaddr_reg:x3; val_offset:272295*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272295*0 + 3*141*FLEN/8, x4, x1, x2)

inst_90766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffe000000; valaddr_reg:x3; val_offset:272298*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272298*0 + 3*142*FLEN/8, x4, x1, x2)

inst_90767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffff000000; valaddr_reg:x3; val_offset:272301*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272301*0 + 3*143*FLEN/8, x4, x1, x2)

inst_90768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffff800000; valaddr_reg:x3; val_offset:272304*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272304*0 + 3*144*FLEN/8, x4, x1, x2)

inst_90769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffc00000; valaddr_reg:x3; val_offset:272307*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272307*0 + 3*145*FLEN/8, x4, x1, x2)

inst_90770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffe00000; valaddr_reg:x3; val_offset:272310*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272310*0 + 3*146*FLEN/8, x4, x1, x2)

inst_90771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffff00000; valaddr_reg:x3; val_offset:272313*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272313*0 + 3*147*FLEN/8, x4, x1, x2)

inst_90772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffff80000; valaddr_reg:x3; val_offset:272316*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272316*0 + 3*148*FLEN/8, x4, x1, x2)

inst_90773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffc0000; valaddr_reg:x3; val_offset:272319*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272319*0 + 3*149*FLEN/8, x4, x1, x2)

inst_90774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffe0000; valaddr_reg:x3; val_offset:272322*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272322*0 + 3*150*FLEN/8, x4, x1, x2)

inst_90775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffff0000; valaddr_reg:x3; val_offset:272325*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272325*0 + 3*151*FLEN/8, x4, x1, x2)

inst_90776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffff8000; valaddr_reg:x3; val_offset:272328*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272328*0 + 3*152*FLEN/8, x4, x1, x2)

inst_90777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffffc000; valaddr_reg:x3; val_offset:272331*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272331*0 + 3*153*FLEN/8, x4, x1, x2)

inst_90778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffffe000; valaddr_reg:x3; val_offset:272334*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272334*0 + 3*154*FLEN/8, x4, x1, x2)

inst_90779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffff000; valaddr_reg:x3; val_offset:272337*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272337*0 + 3*155*FLEN/8, x4, x1, x2)

inst_90780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffff800; valaddr_reg:x3; val_offset:272340*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272340*0 + 3*156*FLEN/8, x4, x1, x2)

inst_90781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffffc00; valaddr_reg:x3; val_offset:272343*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272343*0 + 3*157*FLEN/8, x4, x1, x2)

inst_90782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffffe00; valaddr_reg:x3; val_offset:272346*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272346*0 + 3*158*FLEN/8, x4, x1, x2)

inst_90783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffffff00; valaddr_reg:x3; val_offset:272349*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272349*0 + 3*159*FLEN/8, x4, x1, x2)

inst_90784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffffff80; valaddr_reg:x3; val_offset:272352*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272352*0 + 3*160*FLEN/8, x4, x1, x2)

inst_90785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffffffc0; valaddr_reg:x3; val_offset:272355*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272355*0 + 3*161*FLEN/8, x4, x1, x2)

inst_90786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffffffe0; valaddr_reg:x3; val_offset:272358*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272358*0 + 3*162*FLEN/8, x4, x1, x2)

inst_90787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffffff0; valaddr_reg:x3; val_offset:272361*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272361*0 + 3*163*FLEN/8, x4, x1, x2)

inst_90788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffffff8; valaddr_reg:x3; val_offset:272364*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272364*0 + 3*164*FLEN/8, x4, x1, x2)

inst_90789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffffffc; valaddr_reg:x3; val_offset:272367*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272367*0 + 3*165*FLEN/8, x4, x1, x2)

inst_90790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807ffffffffffffe; valaddr_reg:x3; val_offset:272370*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272370*0 + 3*166*FLEN/8, x4, x1, x2)

inst_90791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbebd9648bcce4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabebd9648bcce4; op2val:0x8000;
op3val:0x807fffffffffffff; valaddr_reg:x3; val_offset:272373*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272373*0 + 3*167*FLEN/8, x4, x1, x2)

inst_90792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:272376*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272376*0 + 3*168*FLEN/8, x4, x1, x2)

inst_90793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:272379*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272379*0 + 3*169*FLEN/8, x4, x1, x2)

inst_90794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:272382*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272382*0 + 3*170*FLEN/8, x4, x1, x2)

inst_90795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:272385*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272385*0 + 3*171*FLEN/8, x4, x1, x2)

inst_90796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:272388*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272388*0 + 3*172*FLEN/8, x4, x1, x2)

inst_90797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:272391*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272391*0 + 3*173*FLEN/8, x4, x1, x2)

inst_90798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:272394*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272394*0 + 3*174*FLEN/8, x4, x1, x2)

inst_90799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:272397*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272397*0 + 3*175*FLEN/8, x4, x1, x2)

inst_90800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:272400*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272400*0 + 3*176*FLEN/8, x4, x1, x2)

inst_90801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:272403*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272403*0 + 3*177*FLEN/8, x4, x1, x2)

inst_90802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:272406*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272406*0 + 3*178*FLEN/8, x4, x1, x2)

inst_90803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:272409*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272409*0 + 3*179*FLEN/8, x4, x1, x2)

inst_90804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:272412*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272412*0 + 3*180*FLEN/8, x4, x1, x2)

inst_90805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:272415*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272415*0 + 3*181*FLEN/8, x4, x1, x2)

inst_90806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:272418*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272418*0 + 3*182*FLEN/8, x4, x1, x2)

inst_90807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:272421*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272421*0 + 3*183*FLEN/8, x4, x1, x2)

inst_90808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:272424*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272424*0 + 3*184*FLEN/8, x4, x1, x2)

inst_90809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:272427*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272427*0 + 3*185*FLEN/8, x4, x1, x2)

inst_90810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:272430*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272430*0 + 3*186*FLEN/8, x4, x1, x2)

inst_90811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:272433*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272433*0 + 3*187*FLEN/8, x4, x1, x2)

inst_90812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:272436*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272436*0 + 3*188*FLEN/8, x4, x1, x2)

inst_90813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:272439*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272439*0 + 3*189*FLEN/8, x4, x1, x2)

inst_90814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000000000000; valaddr_reg:x3; val_offset:272442*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272442*0 + 3*190*FLEN/8, x4, x1, x2)

inst_90815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000000000001; valaddr_reg:x3; val_offset:272445*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272445*0 + 3*191*FLEN/8, x4, x1, x2)

inst_90816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000000000003; valaddr_reg:x3; val_offset:272448*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272448*0 + 3*192*FLEN/8, x4, x1, x2)

inst_90817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000000000007; valaddr_reg:x3; val_offset:272451*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272451*0 + 3*193*FLEN/8, x4, x1, x2)

inst_90818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000000000000f; valaddr_reg:x3; val_offset:272454*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272454*0 + 3*194*FLEN/8, x4, x1, x2)

inst_90819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000000000001f; valaddr_reg:x3; val_offset:272457*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272457*0 + 3*195*FLEN/8, x4, x1, x2)

inst_90820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000000000003f; valaddr_reg:x3; val_offset:272460*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272460*0 + 3*196*FLEN/8, x4, x1, x2)

inst_90821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000000000007f; valaddr_reg:x3; val_offset:272463*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272463*0 + 3*197*FLEN/8, x4, x1, x2)

inst_90822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400000000000ff; valaddr_reg:x3; val_offset:272466*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272466*0 + 3*198*FLEN/8, x4, x1, x2)

inst_90823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400000000001ff; valaddr_reg:x3; val_offset:272469*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272469*0 + 3*199*FLEN/8, x4, x1, x2)

inst_90824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400000000003ff; valaddr_reg:x3; val_offset:272472*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272472*0 + 3*200*FLEN/8, x4, x1, x2)

inst_90825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400000000007ff; valaddr_reg:x3; val_offset:272475*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272475*0 + 3*201*FLEN/8, x4, x1, x2)

inst_90826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000000000fff; valaddr_reg:x3; val_offset:272478*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272478*0 + 3*202*FLEN/8, x4, x1, x2)

inst_90827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000000001fff; valaddr_reg:x3; val_offset:272481*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272481*0 + 3*203*FLEN/8, x4, x1, x2)

inst_90828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000000003fff; valaddr_reg:x3; val_offset:272484*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272484*0 + 3*204*FLEN/8, x4, x1, x2)

inst_90829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000000007fff; valaddr_reg:x3; val_offset:272487*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272487*0 + 3*205*FLEN/8, x4, x1, x2)

inst_90830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000000000ffff; valaddr_reg:x3; val_offset:272490*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272490*0 + 3*206*FLEN/8, x4, x1, x2)

inst_90831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000000001ffff; valaddr_reg:x3; val_offset:272493*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272493*0 + 3*207*FLEN/8, x4, x1, x2)

inst_90832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000000003ffff; valaddr_reg:x3; val_offset:272496*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272496*0 + 3*208*FLEN/8, x4, x1, x2)

inst_90833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000000007ffff; valaddr_reg:x3; val_offset:272499*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272499*0 + 3*209*FLEN/8, x4, x1, x2)

inst_90834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400000000fffff; valaddr_reg:x3; val_offset:272502*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272502*0 + 3*210*FLEN/8, x4, x1, x2)

inst_90835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400000001fffff; valaddr_reg:x3; val_offset:272505*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272505*0 + 3*211*FLEN/8, x4, x1, x2)

inst_90836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400000003fffff; valaddr_reg:x3; val_offset:272508*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272508*0 + 3*212*FLEN/8, x4, x1, x2)

inst_90837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400000007fffff; valaddr_reg:x3; val_offset:272511*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272511*0 + 3*213*FLEN/8, x4, x1, x2)

inst_90838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000000ffffff; valaddr_reg:x3; val_offset:272514*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272514*0 + 3*214*FLEN/8, x4, x1, x2)

inst_90839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000001ffffff; valaddr_reg:x3; val_offset:272517*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272517*0 + 3*215*FLEN/8, x4, x1, x2)

inst_90840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000003ffffff; valaddr_reg:x3; val_offset:272520*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272520*0 + 3*216*FLEN/8, x4, x1, x2)

inst_90841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000007ffffff; valaddr_reg:x3; val_offset:272523*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272523*0 + 3*217*FLEN/8, x4, x1, x2)

inst_90842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000000fffffff; valaddr_reg:x3; val_offset:272526*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272526*0 + 3*218*FLEN/8, x4, x1, x2)

inst_90843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000001fffffff; valaddr_reg:x3; val_offset:272529*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272529*0 + 3*219*FLEN/8, x4, x1, x2)

inst_90844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000003fffffff; valaddr_reg:x3; val_offset:272532*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272532*0 + 3*220*FLEN/8, x4, x1, x2)

inst_90845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000007fffffff; valaddr_reg:x3; val_offset:272535*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272535*0 + 3*221*FLEN/8, x4, x1, x2)

inst_90846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400000ffffffff; valaddr_reg:x3; val_offset:272538*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272538*0 + 3*222*FLEN/8, x4, x1, x2)

inst_90847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400001ffffffff; valaddr_reg:x3; val_offset:272541*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272541*0 + 3*223*FLEN/8, x4, x1, x2)

inst_90848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400003ffffffff; valaddr_reg:x3; val_offset:272544*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272544*0 + 3*224*FLEN/8, x4, x1, x2)

inst_90849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400007ffffffff; valaddr_reg:x3; val_offset:272547*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272547*0 + 3*225*FLEN/8, x4, x1, x2)

inst_90850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040000fffffffff; valaddr_reg:x3; val_offset:272550*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272550*0 + 3*226*FLEN/8, x4, x1, x2)

inst_90851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040001fffffffff; valaddr_reg:x3; val_offset:272553*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272553*0 + 3*227*FLEN/8, x4, x1, x2)

inst_90852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040003fffffffff; valaddr_reg:x3; val_offset:272556*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272556*0 + 3*228*FLEN/8, x4, x1, x2)

inst_90853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040007fffffffff; valaddr_reg:x3; val_offset:272559*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272559*0 + 3*229*FLEN/8, x4, x1, x2)

inst_90854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804000ffffffffff; valaddr_reg:x3; val_offset:272562*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272562*0 + 3*230*FLEN/8, x4, x1, x2)

inst_90855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804001ffffffffff; valaddr_reg:x3; val_offset:272565*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272565*0 + 3*231*FLEN/8, x4, x1, x2)

inst_90856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804003ffffffffff; valaddr_reg:x3; val_offset:272568*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272568*0 + 3*232*FLEN/8, x4, x1, x2)

inst_90857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804007ffffffffff; valaddr_reg:x3; val_offset:272571*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272571*0 + 3*233*FLEN/8, x4, x1, x2)

inst_90858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80400fffffffffff; valaddr_reg:x3; val_offset:272574*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272574*0 + 3*234*FLEN/8, x4, x1, x2)

inst_90859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80401fffffffffff; valaddr_reg:x3; val_offset:272577*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272577*0 + 3*235*FLEN/8, x4, x1, x2)

inst_90860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80403fffffffffff; valaddr_reg:x3; val_offset:272580*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272580*0 + 3*236*FLEN/8, x4, x1, x2)

inst_90861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x80407fffffffffff; valaddr_reg:x3; val_offset:272583*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272583*0 + 3*237*FLEN/8, x4, x1, x2)

inst_90862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8040ffffffffffff; valaddr_reg:x3; val_offset:272586*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272586*0 + 3*238*FLEN/8, x4, x1, x2)

inst_90863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8041ffffffffffff; valaddr_reg:x3; val_offset:272589*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272589*0 + 3*239*FLEN/8, x4, x1, x2)

inst_90864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8043ffffffffffff; valaddr_reg:x3; val_offset:272592*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272592*0 + 3*240*FLEN/8, x4, x1, x2)

inst_90865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8047ffffffffffff; valaddr_reg:x3; val_offset:272595*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272595*0 + 3*241*FLEN/8, x4, x1, x2)

inst_90866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x8048000000000000; valaddr_reg:x3; val_offset:272598*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272598*0 + 3*242*FLEN/8, x4, x1, x2)

inst_90867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804c000000000000; valaddr_reg:x3; val_offset:272601*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272601*0 + 3*243*FLEN/8, x4, x1, x2)

inst_90868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804e000000000000; valaddr_reg:x3; val_offset:272604*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272604*0 + 3*244*FLEN/8, x4, x1, x2)

inst_90869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804f000000000000; valaddr_reg:x3; val_offset:272607*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272607*0 + 3*245*FLEN/8, x4, x1, x2)

inst_90870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804f800000000000; valaddr_reg:x3; val_offset:272610*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272610*0 + 3*246*FLEN/8, x4, x1, x2)

inst_90871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fc00000000000; valaddr_reg:x3; val_offset:272613*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272613*0 + 3*247*FLEN/8, x4, x1, x2)

inst_90872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fe00000000000; valaddr_reg:x3; val_offset:272616*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272616*0 + 3*248*FLEN/8, x4, x1, x2)

inst_90873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ff00000000000; valaddr_reg:x3; val_offset:272619*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272619*0 + 3*249*FLEN/8, x4, x1, x2)

inst_90874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ff80000000000; valaddr_reg:x3; val_offset:272622*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272622*0 + 3*250*FLEN/8, x4, x1, x2)

inst_90875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffc0000000000; valaddr_reg:x3; val_offset:272625*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272625*0 + 3*251*FLEN/8, x4, x1, x2)

inst_90876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffe0000000000; valaddr_reg:x3; val_offset:272628*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272628*0 + 3*252*FLEN/8, x4, x1, x2)

inst_90877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fff0000000000; valaddr_reg:x3; val_offset:272631*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272631*0 + 3*253*FLEN/8, x4, x1, x2)

inst_90878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fff8000000000; valaddr_reg:x3; val_offset:272634*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272634*0 + 3*254*FLEN/8, x4, x1, x2)

inst_90879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffc000000000; valaddr_reg:x3; val_offset:272637*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272637*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_90880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffe000000000; valaddr_reg:x3; val_offset:272640*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272640*0 + 3*256*FLEN/8, x4, x1, x2)

inst_90881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffff000000000; valaddr_reg:x3; val_offset:272643*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272643*0 + 3*257*FLEN/8, x4, x1, x2)

inst_90882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffff800000000; valaddr_reg:x3; val_offset:272646*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272646*0 + 3*258*FLEN/8, x4, x1, x2)

inst_90883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffc00000000; valaddr_reg:x3; val_offset:272649*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272649*0 + 3*259*FLEN/8, x4, x1, x2)

inst_90884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffe00000000; valaddr_reg:x3; val_offset:272652*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272652*0 + 3*260*FLEN/8, x4, x1, x2)

inst_90885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffff00000000; valaddr_reg:x3; val_offset:272655*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272655*0 + 3*261*FLEN/8, x4, x1, x2)

inst_90886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffff80000000; valaddr_reg:x3; val_offset:272658*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272658*0 + 3*262*FLEN/8, x4, x1, x2)

inst_90887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffc0000000; valaddr_reg:x3; val_offset:272661*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272661*0 + 3*263*FLEN/8, x4, x1, x2)

inst_90888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffe0000000; valaddr_reg:x3; val_offset:272664*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272664*0 + 3*264*FLEN/8, x4, x1, x2)

inst_90889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffff0000000; valaddr_reg:x3; val_offset:272667*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272667*0 + 3*265*FLEN/8, x4, x1, x2)

inst_90890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffff8000000; valaddr_reg:x3; val_offset:272670*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272670*0 + 3*266*FLEN/8, x4, x1, x2)

inst_90891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffc000000; valaddr_reg:x3; val_offset:272673*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272673*0 + 3*267*FLEN/8, x4, x1, x2)

inst_90892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffe000000; valaddr_reg:x3; val_offset:272676*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272676*0 + 3*268*FLEN/8, x4, x1, x2)

inst_90893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffff000000; valaddr_reg:x3; val_offset:272679*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272679*0 + 3*269*FLEN/8, x4, x1, x2)

inst_90894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffff800000; valaddr_reg:x3; val_offset:272682*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272682*0 + 3*270*FLEN/8, x4, x1, x2)

inst_90895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffc00000; valaddr_reg:x3; val_offset:272685*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272685*0 + 3*271*FLEN/8, x4, x1, x2)

inst_90896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffe00000; valaddr_reg:x3; val_offset:272688*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272688*0 + 3*272*FLEN/8, x4, x1, x2)

inst_90897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffff00000; valaddr_reg:x3; val_offset:272691*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272691*0 + 3*273*FLEN/8, x4, x1, x2)

inst_90898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffff80000; valaddr_reg:x3; val_offset:272694*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272694*0 + 3*274*FLEN/8, x4, x1, x2)

inst_90899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffc0000; valaddr_reg:x3; val_offset:272697*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272697*0 + 3*275*FLEN/8, x4, x1, x2)

inst_90900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffe0000; valaddr_reg:x3; val_offset:272700*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272700*0 + 3*276*FLEN/8, x4, x1, x2)

inst_90901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffff0000; valaddr_reg:x3; val_offset:272703*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272703*0 + 3*277*FLEN/8, x4, x1, x2)

inst_90902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffff8000; valaddr_reg:x3; val_offset:272706*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272706*0 + 3*278*FLEN/8, x4, x1, x2)

inst_90903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffffc000; valaddr_reg:x3; val_offset:272709*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272709*0 + 3*279*FLEN/8, x4, x1, x2)

inst_90904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffffe000; valaddr_reg:x3; val_offset:272712*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272712*0 + 3*280*FLEN/8, x4, x1, x2)

inst_90905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffff000; valaddr_reg:x3; val_offset:272715*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272715*0 + 3*281*FLEN/8, x4, x1, x2)

inst_90906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffff800; valaddr_reg:x3; val_offset:272718*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272718*0 + 3*282*FLEN/8, x4, x1, x2)

inst_90907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffffc00; valaddr_reg:x3; val_offset:272721*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272721*0 + 3*283*FLEN/8, x4, x1, x2)

inst_90908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffffe00; valaddr_reg:x3; val_offset:272724*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272724*0 + 3*284*FLEN/8, x4, x1, x2)

inst_90909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffffff00; valaddr_reg:x3; val_offset:272727*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272727*0 + 3*285*FLEN/8, x4, x1, x2)

inst_90910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffffff80; valaddr_reg:x3; val_offset:272730*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272730*0 + 3*286*FLEN/8, x4, x1, x2)

inst_90911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffffffc0; valaddr_reg:x3; val_offset:272733*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272733*0 + 3*287*FLEN/8, x4, x1, x2)

inst_90912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffffffe0; valaddr_reg:x3; val_offset:272736*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272736*0 + 3*288*FLEN/8, x4, x1, x2)

inst_90913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffffff0; valaddr_reg:x3; val_offset:272739*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272739*0 + 3*289*FLEN/8, x4, x1, x2)

inst_90914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffffff8; valaddr_reg:x3; val_offset:272742*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272742*0 + 3*290*FLEN/8, x4, x1, x2)

inst_90915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffffffc; valaddr_reg:x3; val_offset:272745*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272745*0 + 3*291*FLEN/8, x4, x1, x2)

inst_90916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804ffffffffffffe; valaddr_reg:x3; val_offset:272748*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272748*0 + 3*292*FLEN/8, x4, x1, x2)

inst_90917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbedb51c79c56f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fabedb51c79c56f; op2val:0x8000;
op3val:0x804fffffffffffff; valaddr_reg:x3; val_offset:272751*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272751*0 + 3*293*FLEN/8, x4, x1, x2)

inst_90918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:272754*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272754*0 + 3*294*FLEN/8, x4, x1, x2)

inst_90919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:272757*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272757*0 + 3*295*FLEN/8, x4, x1, x2)

inst_90920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:272760*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272760*0 + 3*296*FLEN/8, x4, x1, x2)

inst_90921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:272763*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272763*0 + 3*297*FLEN/8, x4, x1, x2)

inst_90922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:272766*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272766*0 + 3*298*FLEN/8, x4, x1, x2)

inst_90923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:272769*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272769*0 + 3*299*FLEN/8, x4, x1, x2)

inst_90924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:272772*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272772*0 + 3*300*FLEN/8, x4, x1, x2)

inst_90925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:272775*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272775*0 + 3*301*FLEN/8, x4, x1, x2)

inst_90926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:272778*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272778*0 + 3*302*FLEN/8, x4, x1, x2)

inst_90927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:272781*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272781*0 + 3*303*FLEN/8, x4, x1, x2)

inst_90928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:272784*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272784*0 + 3*304*FLEN/8, x4, x1, x2)

inst_90929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:272787*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272787*0 + 3*305*FLEN/8, x4, x1, x2)

inst_90930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:272790*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272790*0 + 3*306*FLEN/8, x4, x1, x2)

inst_90931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:272793*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272793*0 + 3*307*FLEN/8, x4, x1, x2)

inst_90932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:272796*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272796*0 + 3*308*FLEN/8, x4, x1, x2)

inst_90933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:272799*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272799*0 + 3*309*FLEN/8, x4, x1, x2)

inst_90934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:272802*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272802*0 + 3*310*FLEN/8, x4, x1, x2)

inst_90935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:272805*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272805*0 + 3*311*FLEN/8, x4, x1, x2)

inst_90936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:272808*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272808*0 + 3*312*FLEN/8, x4, x1, x2)

inst_90937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:272811*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272811*0 + 3*313*FLEN/8, x4, x1, x2)

inst_90938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:272814*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272814*0 + 3*314*FLEN/8, x4, x1, x2)

inst_90939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:272817*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272817*0 + 3*315*FLEN/8, x4, x1, x2)

inst_90940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000000000000; valaddr_reg:x3; val_offset:272820*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272820*0 + 3*316*FLEN/8, x4, x1, x2)

inst_90941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000000000001; valaddr_reg:x3; val_offset:272823*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272823*0 + 3*317*FLEN/8, x4, x1, x2)

inst_90942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000000000003; valaddr_reg:x3; val_offset:272826*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272826*0 + 3*318*FLEN/8, x4, x1, x2)

inst_90943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000000000007; valaddr_reg:x3; val_offset:272829*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272829*0 + 3*319*FLEN/8, x4, x1, x2)

inst_90944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000000000000f; valaddr_reg:x3; val_offset:272832*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272832*0 + 3*320*FLEN/8, x4, x1, x2)

inst_90945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000000000001f; valaddr_reg:x3; val_offset:272835*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272835*0 + 3*321*FLEN/8, x4, x1, x2)

inst_90946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000000000003f; valaddr_reg:x3; val_offset:272838*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272838*0 + 3*322*FLEN/8, x4, x1, x2)

inst_90947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000000000007f; valaddr_reg:x3; val_offset:272841*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272841*0 + 3*323*FLEN/8, x4, x1, x2)

inst_90948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800000000000ff; valaddr_reg:x3; val_offset:272844*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272844*0 + 3*324*FLEN/8, x4, x1, x2)

inst_90949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800000000001ff; valaddr_reg:x3; val_offset:272847*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272847*0 + 3*325*FLEN/8, x4, x1, x2)

inst_90950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800000000003ff; valaddr_reg:x3; val_offset:272850*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272850*0 + 3*326*FLEN/8, x4, x1, x2)

inst_90951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800000000007ff; valaddr_reg:x3; val_offset:272853*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272853*0 + 3*327*FLEN/8, x4, x1, x2)

inst_90952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000000000fff; valaddr_reg:x3; val_offset:272856*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272856*0 + 3*328*FLEN/8, x4, x1, x2)

inst_90953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000000001fff; valaddr_reg:x3; val_offset:272859*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272859*0 + 3*329*FLEN/8, x4, x1, x2)

inst_90954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000000003fff; valaddr_reg:x3; val_offset:272862*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272862*0 + 3*330*FLEN/8, x4, x1, x2)

inst_90955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000000007fff; valaddr_reg:x3; val_offset:272865*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272865*0 + 3*331*FLEN/8, x4, x1, x2)

inst_90956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000000000ffff; valaddr_reg:x3; val_offset:272868*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272868*0 + 3*332*FLEN/8, x4, x1, x2)

inst_90957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000000001ffff; valaddr_reg:x3; val_offset:272871*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272871*0 + 3*333*FLEN/8, x4, x1, x2)

inst_90958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000000003ffff; valaddr_reg:x3; val_offset:272874*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272874*0 + 3*334*FLEN/8, x4, x1, x2)

inst_90959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000000007ffff; valaddr_reg:x3; val_offset:272877*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272877*0 + 3*335*FLEN/8, x4, x1, x2)

inst_90960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800000000fffff; valaddr_reg:x3; val_offset:272880*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272880*0 + 3*336*FLEN/8, x4, x1, x2)

inst_90961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800000001fffff; valaddr_reg:x3; val_offset:272883*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272883*0 + 3*337*FLEN/8, x4, x1, x2)

inst_90962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800000003fffff; valaddr_reg:x3; val_offset:272886*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272886*0 + 3*338*FLEN/8, x4, x1, x2)

inst_90963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800000007fffff; valaddr_reg:x3; val_offset:272889*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272889*0 + 3*339*FLEN/8, x4, x1, x2)

inst_90964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000000ffffff; valaddr_reg:x3; val_offset:272892*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272892*0 + 3*340*FLEN/8, x4, x1, x2)

inst_90965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000001ffffff; valaddr_reg:x3; val_offset:272895*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272895*0 + 3*341*FLEN/8, x4, x1, x2)

inst_90966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000003ffffff; valaddr_reg:x3; val_offset:272898*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272898*0 + 3*342*FLEN/8, x4, x1, x2)

inst_90967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000007ffffff; valaddr_reg:x3; val_offset:272901*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272901*0 + 3*343*FLEN/8, x4, x1, x2)

inst_90968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000000fffffff; valaddr_reg:x3; val_offset:272904*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272904*0 + 3*344*FLEN/8, x4, x1, x2)

inst_90969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000001fffffff; valaddr_reg:x3; val_offset:272907*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272907*0 + 3*345*FLEN/8, x4, x1, x2)

inst_90970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000003fffffff; valaddr_reg:x3; val_offset:272910*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272910*0 + 3*346*FLEN/8, x4, x1, x2)

inst_90971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000007fffffff; valaddr_reg:x3; val_offset:272913*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272913*0 + 3*347*FLEN/8, x4, x1, x2)

inst_90972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800000ffffffff; valaddr_reg:x3; val_offset:272916*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272916*0 + 3*348*FLEN/8, x4, x1, x2)

inst_90973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800001ffffffff; valaddr_reg:x3; val_offset:272919*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272919*0 + 3*349*FLEN/8, x4, x1, x2)

inst_90974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800003ffffffff; valaddr_reg:x3; val_offset:272922*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272922*0 + 3*350*FLEN/8, x4, x1, x2)

inst_90975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800007ffffffff; valaddr_reg:x3; val_offset:272925*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272925*0 + 3*351*FLEN/8, x4, x1, x2)

inst_90976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180000fffffffff; valaddr_reg:x3; val_offset:272928*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272928*0 + 3*352*FLEN/8, x4, x1, x2)

inst_90977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180001fffffffff; valaddr_reg:x3; val_offset:272931*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272931*0 + 3*353*FLEN/8, x4, x1, x2)

inst_90978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180003fffffffff; valaddr_reg:x3; val_offset:272934*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272934*0 + 3*354*FLEN/8, x4, x1, x2)

inst_90979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180007fffffffff; valaddr_reg:x3; val_offset:272937*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272937*0 + 3*355*FLEN/8, x4, x1, x2)

inst_90980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818000ffffffffff; valaddr_reg:x3; val_offset:272940*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272940*0 + 3*356*FLEN/8, x4, x1, x2)

inst_90981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818001ffffffffff; valaddr_reg:x3; val_offset:272943*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272943*0 + 3*357*FLEN/8, x4, x1, x2)

inst_90982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818003ffffffffff; valaddr_reg:x3; val_offset:272946*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272946*0 + 3*358*FLEN/8, x4, x1, x2)

inst_90983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818007ffffffffff; valaddr_reg:x3; val_offset:272949*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272949*0 + 3*359*FLEN/8, x4, x1, x2)

inst_90984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81800fffffffffff; valaddr_reg:x3; val_offset:272952*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272952*0 + 3*360*FLEN/8, x4, x1, x2)

inst_90985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81801fffffffffff; valaddr_reg:x3; val_offset:272955*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272955*0 + 3*361*FLEN/8, x4, x1, x2)

inst_90986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81803fffffffffff; valaddr_reg:x3; val_offset:272958*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272958*0 + 3*362*FLEN/8, x4, x1, x2)

inst_90987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x81807fffffffffff; valaddr_reg:x3; val_offset:272961*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272961*0 + 3*363*FLEN/8, x4, x1, x2)

inst_90988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8180ffffffffffff; valaddr_reg:x3; val_offset:272964*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272964*0 + 3*364*FLEN/8, x4, x1, x2)

inst_90989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8181ffffffffffff; valaddr_reg:x3; val_offset:272967*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272967*0 + 3*365*FLEN/8, x4, x1, x2)

inst_90990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8183ffffffffffff; valaddr_reg:x3; val_offset:272970*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272970*0 + 3*366*FLEN/8, x4, x1, x2)

inst_90991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8187ffffffffffff; valaddr_reg:x3; val_offset:272973*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272973*0 + 3*367*FLEN/8, x4, x1, x2)

inst_90992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x8188000000000000; valaddr_reg:x3; val_offset:272976*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272976*0 + 3*368*FLEN/8, x4, x1, x2)

inst_90993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818c000000000000; valaddr_reg:x3; val_offset:272979*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272979*0 + 3*369*FLEN/8, x4, x1, x2)

inst_90994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818e000000000000; valaddr_reg:x3; val_offset:272982*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272982*0 + 3*370*FLEN/8, x4, x1, x2)

inst_90995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818f000000000000; valaddr_reg:x3; val_offset:272985*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272985*0 + 3*371*FLEN/8, x4, x1, x2)

inst_90996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818f800000000000; valaddr_reg:x3; val_offset:272988*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272988*0 + 3*372*FLEN/8, x4, x1, x2)

inst_90997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fc00000000000; valaddr_reg:x3; val_offset:272991*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272991*0 + 3*373*FLEN/8, x4, x1, x2)

inst_90998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fe00000000000; valaddr_reg:x3; val_offset:272994*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272994*0 + 3*374*FLEN/8, x4, x1, x2)

inst_90999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ff00000000000; valaddr_reg:x3; val_offset:272997*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 272997*0 + 3*375*FLEN/8, x4, x1, x2)

inst_91000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ff80000000000; valaddr_reg:x3; val_offset:273000*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273000*0 + 3*376*FLEN/8, x4, x1, x2)

inst_91001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffc0000000000; valaddr_reg:x3; val_offset:273003*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273003*0 + 3*377*FLEN/8, x4, x1, x2)

inst_91002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffe0000000000; valaddr_reg:x3; val_offset:273006*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273006*0 + 3*378*FLEN/8, x4, x1, x2)

inst_91003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fff0000000000; valaddr_reg:x3; val_offset:273009*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273009*0 + 3*379*FLEN/8, x4, x1, x2)

inst_91004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fff8000000000; valaddr_reg:x3; val_offset:273012*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273012*0 + 3*380*FLEN/8, x4, x1, x2)

inst_91005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffc000000000; valaddr_reg:x3; val_offset:273015*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273015*0 + 3*381*FLEN/8, x4, x1, x2)

inst_91006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffe000000000; valaddr_reg:x3; val_offset:273018*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273018*0 + 3*382*FLEN/8, x4, x1, x2)

inst_91007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffff000000000; valaddr_reg:x3; val_offset:273021*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273021*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_91008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffff800000000; valaddr_reg:x3; val_offset:273024*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273024*0 + 3*384*FLEN/8, x4, x1, x2)

inst_91009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffc00000000; valaddr_reg:x3; val_offset:273027*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273027*0 + 3*385*FLEN/8, x4, x1, x2)

inst_91010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffe00000000; valaddr_reg:x3; val_offset:273030*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273030*0 + 3*386*FLEN/8, x4, x1, x2)

inst_91011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffff00000000; valaddr_reg:x3; val_offset:273033*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273033*0 + 3*387*FLEN/8, x4, x1, x2)

inst_91012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffff80000000; valaddr_reg:x3; val_offset:273036*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273036*0 + 3*388*FLEN/8, x4, x1, x2)

inst_91013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffc0000000; valaddr_reg:x3; val_offset:273039*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273039*0 + 3*389*FLEN/8, x4, x1, x2)

inst_91014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffe0000000; valaddr_reg:x3; val_offset:273042*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273042*0 + 3*390*FLEN/8, x4, x1, x2)

inst_91015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffff0000000; valaddr_reg:x3; val_offset:273045*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273045*0 + 3*391*FLEN/8, x4, x1, x2)

inst_91016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffff8000000; valaddr_reg:x3; val_offset:273048*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273048*0 + 3*392*FLEN/8, x4, x1, x2)

inst_91017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffc000000; valaddr_reg:x3; val_offset:273051*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273051*0 + 3*393*FLEN/8, x4, x1, x2)

inst_91018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffe000000; valaddr_reg:x3; val_offset:273054*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273054*0 + 3*394*FLEN/8, x4, x1, x2)

inst_91019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffff000000; valaddr_reg:x3; val_offset:273057*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273057*0 + 3*395*FLEN/8, x4, x1, x2)

inst_91020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffff800000; valaddr_reg:x3; val_offset:273060*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273060*0 + 3*396*FLEN/8, x4, x1, x2)

inst_91021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffc00000; valaddr_reg:x3; val_offset:273063*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273063*0 + 3*397*FLEN/8, x4, x1, x2)

inst_91022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffe00000; valaddr_reg:x3; val_offset:273066*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273066*0 + 3*398*FLEN/8, x4, x1, x2)

inst_91023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffff00000; valaddr_reg:x3; val_offset:273069*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273069*0 + 3*399*FLEN/8, x4, x1, x2)

inst_91024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffff80000; valaddr_reg:x3; val_offset:273072*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273072*0 + 3*400*FLEN/8, x4, x1, x2)

inst_91025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffc0000; valaddr_reg:x3; val_offset:273075*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273075*0 + 3*401*FLEN/8, x4, x1, x2)

inst_91026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffe0000; valaddr_reg:x3; val_offset:273078*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273078*0 + 3*402*FLEN/8, x4, x1, x2)

inst_91027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffff0000; valaddr_reg:x3; val_offset:273081*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273081*0 + 3*403*FLEN/8, x4, x1, x2)

inst_91028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffff8000; valaddr_reg:x3; val_offset:273084*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273084*0 + 3*404*FLEN/8, x4, x1, x2)

inst_91029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffffc000; valaddr_reg:x3; val_offset:273087*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273087*0 + 3*405*FLEN/8, x4, x1, x2)

inst_91030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffffe000; valaddr_reg:x3; val_offset:273090*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273090*0 + 3*406*FLEN/8, x4, x1, x2)

inst_91031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffff000; valaddr_reg:x3; val_offset:273093*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273093*0 + 3*407*FLEN/8, x4, x1, x2)

inst_91032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffff800; valaddr_reg:x3; val_offset:273096*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273096*0 + 3*408*FLEN/8, x4, x1, x2)

inst_91033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffffc00; valaddr_reg:x3; val_offset:273099*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273099*0 + 3*409*FLEN/8, x4, x1, x2)

inst_91034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffffe00; valaddr_reg:x3; val_offset:273102*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273102*0 + 3*410*FLEN/8, x4, x1, x2)

inst_91035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffffff00; valaddr_reg:x3; val_offset:273105*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273105*0 + 3*411*FLEN/8, x4, x1, x2)

inst_91036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffffff80; valaddr_reg:x3; val_offset:273108*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273108*0 + 3*412*FLEN/8, x4, x1, x2)

inst_91037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffffffc0; valaddr_reg:x3; val_offset:273111*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273111*0 + 3*413*FLEN/8, x4, x1, x2)

inst_91038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffffffe0; valaddr_reg:x3; val_offset:273114*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273114*0 + 3*414*FLEN/8, x4, x1, x2)

inst_91039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffffff0; valaddr_reg:x3; val_offset:273117*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273117*0 + 3*415*FLEN/8, x4, x1, x2)

inst_91040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffffff8; valaddr_reg:x3; val_offset:273120*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273120*0 + 3*416*FLEN/8, x4, x1, x2)

inst_91041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffffffc; valaddr_reg:x3; val_offset:273123*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273123*0 + 3*417*FLEN/8, x4, x1, x2)

inst_91042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818ffffffffffffe; valaddr_reg:x3; val_offset:273126*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273126*0 + 3*418*FLEN/8, x4, x1, x2)

inst_91043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc04109ff240ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac04109ff240ad; op2val:0x8000;
op3val:0x818fffffffffffff; valaddr_reg:x3; val_offset:273129*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273129*0 + 3*419*FLEN/8, x4, x1, x2)

inst_91044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000000000000; valaddr_reg:x3; val_offset:273132*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273132*0 + 3*420*FLEN/8, x4, x1, x2)

inst_91045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000000000001; valaddr_reg:x3; val_offset:273135*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273135*0 + 3*421*FLEN/8, x4, x1, x2)

inst_91046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000000000003; valaddr_reg:x3; val_offset:273138*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273138*0 + 3*422*FLEN/8, x4, x1, x2)

inst_91047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000000000007; valaddr_reg:x3; val_offset:273141*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273141*0 + 3*423*FLEN/8, x4, x1, x2)

inst_91048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000000000000f; valaddr_reg:x3; val_offset:273144*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273144*0 + 3*424*FLEN/8, x4, x1, x2)

inst_91049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000000000001f; valaddr_reg:x3; val_offset:273147*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273147*0 + 3*425*FLEN/8, x4, x1, x2)

inst_91050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000000000003f; valaddr_reg:x3; val_offset:273150*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273150*0 + 3*426*FLEN/8, x4, x1, x2)

inst_91051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000000000007f; valaddr_reg:x3; val_offset:273153*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273153*0 + 3*427*FLEN/8, x4, x1, x2)

inst_91052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700000000000ff; valaddr_reg:x3; val_offset:273156*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273156*0 + 3*428*FLEN/8, x4, x1, x2)

inst_91053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700000000001ff; valaddr_reg:x3; val_offset:273159*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273159*0 + 3*429*FLEN/8, x4, x1, x2)

inst_91054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700000000003ff; valaddr_reg:x3; val_offset:273162*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273162*0 + 3*430*FLEN/8, x4, x1, x2)

inst_91055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700000000007ff; valaddr_reg:x3; val_offset:273165*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273165*0 + 3*431*FLEN/8, x4, x1, x2)

inst_91056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000000000fff; valaddr_reg:x3; val_offset:273168*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273168*0 + 3*432*FLEN/8, x4, x1, x2)

inst_91057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000000001fff; valaddr_reg:x3; val_offset:273171*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273171*0 + 3*433*FLEN/8, x4, x1, x2)

inst_91058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000000003fff; valaddr_reg:x3; val_offset:273174*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273174*0 + 3*434*FLEN/8, x4, x1, x2)

inst_91059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000000007fff; valaddr_reg:x3; val_offset:273177*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273177*0 + 3*435*FLEN/8, x4, x1, x2)

inst_91060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000000000ffff; valaddr_reg:x3; val_offset:273180*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273180*0 + 3*436*FLEN/8, x4, x1, x2)

inst_91061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000000001ffff; valaddr_reg:x3; val_offset:273183*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273183*0 + 3*437*FLEN/8, x4, x1, x2)

inst_91062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000000003ffff; valaddr_reg:x3; val_offset:273186*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273186*0 + 3*438*FLEN/8, x4, x1, x2)

inst_91063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000000007ffff; valaddr_reg:x3; val_offset:273189*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273189*0 + 3*439*FLEN/8, x4, x1, x2)

inst_91064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700000000fffff; valaddr_reg:x3; val_offset:273192*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273192*0 + 3*440*FLEN/8, x4, x1, x2)

inst_91065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700000001fffff; valaddr_reg:x3; val_offset:273195*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273195*0 + 3*441*FLEN/8, x4, x1, x2)

inst_91066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700000003fffff; valaddr_reg:x3; val_offset:273198*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273198*0 + 3*442*FLEN/8, x4, x1, x2)

inst_91067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700000007fffff; valaddr_reg:x3; val_offset:273201*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273201*0 + 3*443*FLEN/8, x4, x1, x2)

inst_91068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000000ffffff; valaddr_reg:x3; val_offset:273204*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273204*0 + 3*444*FLEN/8, x4, x1, x2)

inst_91069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000001ffffff; valaddr_reg:x3; val_offset:273207*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273207*0 + 3*445*FLEN/8, x4, x1, x2)

inst_91070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000003ffffff; valaddr_reg:x3; val_offset:273210*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273210*0 + 3*446*FLEN/8, x4, x1, x2)

inst_91071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000007ffffff; valaddr_reg:x3; val_offset:273213*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273213*0 + 3*447*FLEN/8, x4, x1, x2)

inst_91072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000000fffffff; valaddr_reg:x3; val_offset:273216*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273216*0 + 3*448*FLEN/8, x4, x1, x2)

inst_91073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000001fffffff; valaddr_reg:x3; val_offset:273219*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273219*0 + 3*449*FLEN/8, x4, x1, x2)

inst_91074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000003fffffff; valaddr_reg:x3; val_offset:273222*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273222*0 + 3*450*FLEN/8, x4, x1, x2)

inst_91075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000007fffffff; valaddr_reg:x3; val_offset:273225*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273225*0 + 3*451*FLEN/8, x4, x1, x2)

inst_91076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700000ffffffff; valaddr_reg:x3; val_offset:273228*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273228*0 + 3*452*FLEN/8, x4, x1, x2)

inst_91077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700001ffffffff; valaddr_reg:x3; val_offset:273231*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273231*0 + 3*453*FLEN/8, x4, x1, x2)

inst_91078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700003ffffffff; valaddr_reg:x3; val_offset:273234*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273234*0 + 3*454*FLEN/8, x4, x1, x2)

inst_91079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700007ffffffff; valaddr_reg:x3; val_offset:273237*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273237*0 + 3*455*FLEN/8, x4, x1, x2)

inst_91080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870000fffffffff; valaddr_reg:x3; val_offset:273240*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273240*0 + 3*456*FLEN/8, x4, x1, x2)

inst_91081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870001fffffffff; valaddr_reg:x3; val_offset:273243*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273243*0 + 3*457*FLEN/8, x4, x1, x2)

inst_91082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870003fffffffff; valaddr_reg:x3; val_offset:273246*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273246*0 + 3*458*FLEN/8, x4, x1, x2)

inst_91083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870007fffffffff; valaddr_reg:x3; val_offset:273249*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273249*0 + 3*459*FLEN/8, x4, x1, x2)

inst_91084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87000ffffffffff; valaddr_reg:x3; val_offset:273252*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273252*0 + 3*460*FLEN/8, x4, x1, x2)

inst_91085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87001ffffffffff; valaddr_reg:x3; val_offset:273255*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273255*0 + 3*461*FLEN/8, x4, x1, x2)

inst_91086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87003ffffffffff; valaddr_reg:x3; val_offset:273258*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273258*0 + 3*462*FLEN/8, x4, x1, x2)

inst_91087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87007ffffffffff; valaddr_reg:x3; val_offset:273261*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273261*0 + 3*463*FLEN/8, x4, x1, x2)

inst_91088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8700fffffffffff; valaddr_reg:x3; val_offset:273264*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273264*0 + 3*464*FLEN/8, x4, x1, x2)

inst_91089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8701fffffffffff; valaddr_reg:x3; val_offset:273267*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273267*0 + 3*465*FLEN/8, x4, x1, x2)

inst_91090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8703fffffffffff; valaddr_reg:x3; val_offset:273270*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273270*0 + 3*466*FLEN/8, x4, x1, x2)

inst_91091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb8707fffffffffff; valaddr_reg:x3; val_offset:273273*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273273*0 + 3*467*FLEN/8, x4, x1, x2)

inst_91092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb870ffffffffffff; valaddr_reg:x3; val_offset:273276*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273276*0 + 3*468*FLEN/8, x4, x1, x2)

inst_91093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb871ffffffffffff; valaddr_reg:x3; val_offset:273279*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273279*0 + 3*469*FLEN/8, x4, x1, x2)

inst_91094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb873ffffffffffff; valaddr_reg:x3; val_offset:273282*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273282*0 + 3*470*FLEN/8, x4, x1, x2)

inst_91095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb877ffffffffffff; valaddr_reg:x3; val_offset:273285*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273285*0 + 3*471*FLEN/8, x4, x1, x2)

inst_91096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb878000000000000; valaddr_reg:x3; val_offset:273288*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273288*0 + 3*472*FLEN/8, x4, x1, x2)

inst_91097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87c000000000000; valaddr_reg:x3; val_offset:273291*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273291*0 + 3*473*FLEN/8, x4, x1, x2)

inst_91098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87e000000000000; valaddr_reg:x3; val_offset:273294*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273294*0 + 3*474*FLEN/8, x4, x1, x2)

inst_91099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87f000000000000; valaddr_reg:x3; val_offset:273297*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273297*0 + 3*475*FLEN/8, x4, x1, x2)

inst_91100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87f800000000000; valaddr_reg:x3; val_offset:273300*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273300*0 + 3*476*FLEN/8, x4, x1, x2)

inst_91101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fc00000000000; valaddr_reg:x3; val_offset:273303*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273303*0 + 3*477*FLEN/8, x4, x1, x2)

inst_91102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fe00000000000; valaddr_reg:x3; val_offset:273306*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273306*0 + 3*478*FLEN/8, x4, x1, x2)

inst_91103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ff00000000000; valaddr_reg:x3; val_offset:273309*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273309*0 + 3*479*FLEN/8, x4, x1, x2)

inst_91104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ff80000000000; valaddr_reg:x3; val_offset:273312*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273312*0 + 3*480*FLEN/8, x4, x1, x2)

inst_91105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffc0000000000; valaddr_reg:x3; val_offset:273315*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273315*0 + 3*481*FLEN/8, x4, x1, x2)

inst_91106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffe0000000000; valaddr_reg:x3; val_offset:273318*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273318*0 + 3*482*FLEN/8, x4, x1, x2)

inst_91107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fff0000000000; valaddr_reg:x3; val_offset:273321*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273321*0 + 3*483*FLEN/8, x4, x1, x2)

inst_91108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fff8000000000; valaddr_reg:x3; val_offset:273324*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273324*0 + 3*484*FLEN/8, x4, x1, x2)

inst_91109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffc000000000; valaddr_reg:x3; val_offset:273327*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273327*0 + 3*485*FLEN/8, x4, x1, x2)

inst_91110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffe000000000; valaddr_reg:x3; val_offset:273330*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273330*0 + 3*486*FLEN/8, x4, x1, x2)

inst_91111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffff000000000; valaddr_reg:x3; val_offset:273333*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273333*0 + 3*487*FLEN/8, x4, x1, x2)

inst_91112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffff800000000; valaddr_reg:x3; val_offset:273336*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273336*0 + 3*488*FLEN/8, x4, x1, x2)

inst_91113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffc00000000; valaddr_reg:x3; val_offset:273339*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273339*0 + 3*489*FLEN/8, x4, x1, x2)

inst_91114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffe00000000; valaddr_reg:x3; val_offset:273342*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273342*0 + 3*490*FLEN/8, x4, x1, x2)

inst_91115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffff00000000; valaddr_reg:x3; val_offset:273345*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273345*0 + 3*491*FLEN/8, x4, x1, x2)

inst_91116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffff80000000; valaddr_reg:x3; val_offset:273348*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273348*0 + 3*492*FLEN/8, x4, x1, x2)

inst_91117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffc0000000; valaddr_reg:x3; val_offset:273351*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273351*0 + 3*493*FLEN/8, x4, x1, x2)

inst_91118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffe0000000; valaddr_reg:x3; val_offset:273354*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273354*0 + 3*494*FLEN/8, x4, x1, x2)

inst_91119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffff0000000; valaddr_reg:x3; val_offset:273357*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273357*0 + 3*495*FLEN/8, x4, x1, x2)

inst_91120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffff8000000; valaddr_reg:x3; val_offset:273360*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273360*0 + 3*496*FLEN/8, x4, x1, x2)

inst_91121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffc000000; valaddr_reg:x3; val_offset:273363*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273363*0 + 3*497*FLEN/8, x4, x1, x2)

inst_91122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffe000000; valaddr_reg:x3; val_offset:273366*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273366*0 + 3*498*FLEN/8, x4, x1, x2)

inst_91123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffff000000; valaddr_reg:x3; val_offset:273369*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273369*0 + 3*499*FLEN/8, x4, x1, x2)

inst_91124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffff800000; valaddr_reg:x3; val_offset:273372*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273372*0 + 3*500*FLEN/8, x4, x1, x2)

inst_91125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffc00000; valaddr_reg:x3; val_offset:273375*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273375*0 + 3*501*FLEN/8, x4, x1, x2)

inst_91126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffe00000; valaddr_reg:x3; val_offset:273378*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273378*0 + 3*502*FLEN/8, x4, x1, x2)

inst_91127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffff00000; valaddr_reg:x3; val_offset:273381*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273381*0 + 3*503*FLEN/8, x4, x1, x2)

inst_91128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffff80000; valaddr_reg:x3; val_offset:273384*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273384*0 + 3*504*FLEN/8, x4, x1, x2)

inst_91129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffc0000; valaddr_reg:x3; val_offset:273387*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273387*0 + 3*505*FLEN/8, x4, x1, x2)

inst_91130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffe0000; valaddr_reg:x3; val_offset:273390*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273390*0 + 3*506*FLEN/8, x4, x1, x2)

inst_91131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffff0000; valaddr_reg:x3; val_offset:273393*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273393*0 + 3*507*FLEN/8, x4, x1, x2)

inst_91132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffff8000; valaddr_reg:x3; val_offset:273396*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273396*0 + 3*508*FLEN/8, x4, x1, x2)

inst_91133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffffc000; valaddr_reg:x3; val_offset:273399*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273399*0 + 3*509*FLEN/8, x4, x1, x2)

inst_91134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffffe000; valaddr_reg:x3; val_offset:273402*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273402*0 + 3*510*FLEN/8, x4, x1, x2)

inst_91135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffff000; valaddr_reg:x3; val_offset:273405*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273405*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_91136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffff800; valaddr_reg:x3; val_offset:273408*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273408*0 + 3*512*FLEN/8, x4, x1, x2)

inst_91137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffffc00; valaddr_reg:x3; val_offset:273411*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273411*0 + 3*513*FLEN/8, x4, x1, x2)

inst_91138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffffe00; valaddr_reg:x3; val_offset:273414*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273414*0 + 3*514*FLEN/8, x4, x1, x2)

inst_91139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffffff00; valaddr_reg:x3; val_offset:273417*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273417*0 + 3*515*FLEN/8, x4, x1, x2)

inst_91140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffffff80; valaddr_reg:x3; val_offset:273420*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273420*0 + 3*516*FLEN/8, x4, x1, x2)

inst_91141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffffffc0; valaddr_reg:x3; val_offset:273423*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273423*0 + 3*517*FLEN/8, x4, x1, x2)

inst_91142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffffffe0; valaddr_reg:x3; val_offset:273426*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273426*0 + 3*518*FLEN/8, x4, x1, x2)

inst_91143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffffff0; valaddr_reg:x3; val_offset:273429*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273429*0 + 3*519*FLEN/8, x4, x1, x2)

inst_91144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffffff8; valaddr_reg:x3; val_offset:273432*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273432*0 + 3*520*FLEN/8, x4, x1, x2)

inst_91145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffffffc; valaddr_reg:x3; val_offset:273435*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273435*0 + 3*521*FLEN/8, x4, x1, x2)

inst_91146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87ffffffffffffe; valaddr_reg:x3; val_offset:273438*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273438*0 + 3*522*FLEN/8, x4, x1, x2)

inst_91147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xb87fffffffffffff; valaddr_reg:x3; val_offset:273441*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273441*0 + 3*523*FLEN/8, x4, x1, x2)

inst_91148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:273444*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273444*0 + 3*524*FLEN/8, x4, x1, x2)

inst_91149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:273447*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273447*0 + 3*525*FLEN/8, x4, x1, x2)

inst_91150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:273450*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273450*0 + 3*526*FLEN/8, x4, x1, x2)

inst_91151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:273453*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273453*0 + 3*527*FLEN/8, x4, x1, x2)

inst_91152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:273456*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273456*0 + 3*528*FLEN/8, x4, x1, x2)

inst_91153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:273459*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273459*0 + 3*529*FLEN/8, x4, x1, x2)

inst_91154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:273462*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273462*0 + 3*530*FLEN/8, x4, x1, x2)

inst_91155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:273465*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273465*0 + 3*531*FLEN/8, x4, x1, x2)

inst_91156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:273468*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273468*0 + 3*532*FLEN/8, x4, x1, x2)

inst_91157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:273471*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273471*0 + 3*533*FLEN/8, x4, x1, x2)

inst_91158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:273474*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273474*0 + 3*534*FLEN/8, x4, x1, x2)

inst_91159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:273477*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273477*0 + 3*535*FLEN/8, x4, x1, x2)

inst_91160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:273480*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273480*0 + 3*536*FLEN/8, x4, x1, x2)

inst_91161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:273483*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273483*0 + 3*537*FLEN/8, x4, x1, x2)

inst_91162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:273486*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273486*0 + 3*538*FLEN/8, x4, x1, x2)

inst_91163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:273489*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273489*0 + 3*539*FLEN/8, x4, x1, x2)

inst_91164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:273492*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273492*0 + 3*540*FLEN/8, x4, x1, x2)

inst_91165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:273495*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273495*0 + 3*541*FLEN/8, x4, x1, x2)

inst_91166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:273498*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273498*0 + 3*542*FLEN/8, x4, x1, x2)

inst_91167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:273501*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273501*0 + 3*543*FLEN/8, x4, x1, x2)

inst_91168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:273504*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273504*0 + 3*544*FLEN/8, x4, x1, x2)

inst_91169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2640341cc4c7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2304b9b6f4928 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2640341cc4c7; op2val:0x9fc2304b9b6f4928;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:273507*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273507*0 + 3*545*FLEN/8, x4, x1, x2)

inst_91170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000000000000; valaddr_reg:x3; val_offset:273510*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273510*0 + 3*546*FLEN/8, x4, x1, x2)

inst_91171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000000000001; valaddr_reg:x3; val_offset:273513*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273513*0 + 3*547*FLEN/8, x4, x1, x2)

inst_91172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000000000003; valaddr_reg:x3; val_offset:273516*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273516*0 + 3*548*FLEN/8, x4, x1, x2)

inst_91173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000000000007; valaddr_reg:x3; val_offset:273519*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273519*0 + 3*549*FLEN/8, x4, x1, x2)

inst_91174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000000000000f; valaddr_reg:x3; val_offset:273522*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273522*0 + 3*550*FLEN/8, x4, x1, x2)

inst_91175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000000000001f; valaddr_reg:x3; val_offset:273525*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273525*0 + 3*551*FLEN/8, x4, x1, x2)

inst_91176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000000000003f; valaddr_reg:x3; val_offset:273528*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273528*0 + 3*552*FLEN/8, x4, x1, x2)

inst_91177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000000000007f; valaddr_reg:x3; val_offset:273531*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273531*0 + 3*553*FLEN/8, x4, x1, x2)

inst_91178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00000000000ff; valaddr_reg:x3; val_offset:273534*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273534*0 + 3*554*FLEN/8, x4, x1, x2)

inst_91179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00000000001ff; valaddr_reg:x3; val_offset:273537*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273537*0 + 3*555*FLEN/8, x4, x1, x2)

inst_91180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00000000003ff; valaddr_reg:x3; val_offset:273540*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273540*0 + 3*556*FLEN/8, x4, x1, x2)

inst_91181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00000000007ff; valaddr_reg:x3; val_offset:273543*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273543*0 + 3*557*FLEN/8, x4, x1, x2)

inst_91182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000000000fff; valaddr_reg:x3; val_offset:273546*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273546*0 + 3*558*FLEN/8, x4, x1, x2)

inst_91183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000000001fff; valaddr_reg:x3; val_offset:273549*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273549*0 + 3*559*FLEN/8, x4, x1, x2)

inst_91184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000000003fff; valaddr_reg:x3; val_offset:273552*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273552*0 + 3*560*FLEN/8, x4, x1, x2)

inst_91185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000000007fff; valaddr_reg:x3; val_offset:273555*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273555*0 + 3*561*FLEN/8, x4, x1, x2)

inst_91186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000000000ffff; valaddr_reg:x3; val_offset:273558*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273558*0 + 3*562*FLEN/8, x4, x1, x2)

inst_91187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000000001ffff; valaddr_reg:x3; val_offset:273561*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273561*0 + 3*563*FLEN/8, x4, x1, x2)

inst_91188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000000003ffff; valaddr_reg:x3; val_offset:273564*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273564*0 + 3*564*FLEN/8, x4, x1, x2)

inst_91189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000000007ffff; valaddr_reg:x3; val_offset:273567*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273567*0 + 3*565*FLEN/8, x4, x1, x2)

inst_91190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00000000fffff; valaddr_reg:x3; val_offset:273570*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273570*0 + 3*566*FLEN/8, x4, x1, x2)

inst_91191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00000001fffff; valaddr_reg:x3; val_offset:273573*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273573*0 + 3*567*FLEN/8, x4, x1, x2)

inst_91192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00000003fffff; valaddr_reg:x3; val_offset:273576*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273576*0 + 3*568*FLEN/8, x4, x1, x2)

inst_91193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00000007fffff; valaddr_reg:x3; val_offset:273579*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273579*0 + 3*569*FLEN/8, x4, x1, x2)

inst_91194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000000ffffff; valaddr_reg:x3; val_offset:273582*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273582*0 + 3*570*FLEN/8, x4, x1, x2)

inst_91195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000001ffffff; valaddr_reg:x3; val_offset:273585*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273585*0 + 3*571*FLEN/8, x4, x1, x2)

inst_91196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000003ffffff; valaddr_reg:x3; val_offset:273588*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273588*0 + 3*572*FLEN/8, x4, x1, x2)

inst_91197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000007ffffff; valaddr_reg:x3; val_offset:273591*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273591*0 + 3*573*FLEN/8, x4, x1, x2)

inst_91198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000000fffffff; valaddr_reg:x3; val_offset:273594*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273594*0 + 3*574*FLEN/8, x4, x1, x2)

inst_91199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000001fffffff; valaddr_reg:x3; val_offset:273597*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273597*0 + 3*575*FLEN/8, x4, x1, x2)

inst_91200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000003fffffff; valaddr_reg:x3; val_offset:273600*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273600*0 + 3*576*FLEN/8, x4, x1, x2)

inst_91201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000007fffffff; valaddr_reg:x3; val_offset:273603*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273603*0 + 3*577*FLEN/8, x4, x1, x2)

inst_91202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00000ffffffff; valaddr_reg:x3; val_offset:273606*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273606*0 + 3*578*FLEN/8, x4, x1, x2)

inst_91203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00001ffffffff; valaddr_reg:x3; val_offset:273609*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273609*0 + 3*579*FLEN/8, x4, x1, x2)

inst_91204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00003ffffffff; valaddr_reg:x3; val_offset:273612*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273612*0 + 3*580*FLEN/8, x4, x1, x2)

inst_91205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00007ffffffff; valaddr_reg:x3; val_offset:273615*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273615*0 + 3*581*FLEN/8, x4, x1, x2)

inst_91206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0000fffffffff; valaddr_reg:x3; val_offset:273618*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273618*0 + 3*582*FLEN/8, x4, x1, x2)

inst_91207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0001fffffffff; valaddr_reg:x3; val_offset:273621*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273621*0 + 3*583*FLEN/8, x4, x1, x2)

inst_91208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0003fffffffff; valaddr_reg:x3; val_offset:273624*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273624*0 + 3*584*FLEN/8, x4, x1, x2)

inst_91209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0007fffffffff; valaddr_reg:x3; val_offset:273627*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273627*0 + 3*585*FLEN/8, x4, x1, x2)

inst_91210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e000ffffffffff; valaddr_reg:x3; val_offset:273630*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273630*0 + 3*586*FLEN/8, x4, x1, x2)

inst_91211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e001ffffffffff; valaddr_reg:x3; val_offset:273633*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273633*0 + 3*587*FLEN/8, x4, x1, x2)

inst_91212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e003ffffffffff; valaddr_reg:x3; val_offset:273636*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273636*0 + 3*588*FLEN/8, x4, x1, x2)

inst_91213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e007ffffffffff; valaddr_reg:x3; val_offset:273639*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273639*0 + 3*589*FLEN/8, x4, x1, x2)

inst_91214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e00fffffffffff; valaddr_reg:x3; val_offset:273642*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273642*0 + 3*590*FLEN/8, x4, x1, x2)

inst_91215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e01fffffffffff; valaddr_reg:x3; val_offset:273645*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273645*0 + 3*591*FLEN/8, x4, x1, x2)

inst_91216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e03fffffffffff; valaddr_reg:x3; val_offset:273648*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273648*0 + 3*592*FLEN/8, x4, x1, x2)

inst_91217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e07fffffffffff; valaddr_reg:x3; val_offset:273651*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273651*0 + 3*593*FLEN/8, x4, x1, x2)

inst_91218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e0ffffffffffff; valaddr_reg:x3; val_offset:273654*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273654*0 + 3*594*FLEN/8, x4, x1, x2)

inst_91219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e1ffffffffffff; valaddr_reg:x3; val_offset:273657*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273657*0 + 3*595*FLEN/8, x4, x1, x2)

inst_91220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e3ffffffffffff; valaddr_reg:x3; val_offset:273660*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273660*0 + 3*596*FLEN/8, x4, x1, x2)

inst_91221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e7ffffffffffff; valaddr_reg:x3; val_offset:273663*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273663*0 + 3*597*FLEN/8, x4, x1, x2)

inst_91222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9e8000000000000; valaddr_reg:x3; val_offset:273666*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273666*0 + 3*598*FLEN/8, x4, x1, x2)

inst_91223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9ec000000000000; valaddr_reg:x3; val_offset:273669*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273669*0 + 3*599*FLEN/8, x4, x1, x2)

inst_91224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9ee000000000000; valaddr_reg:x3; val_offset:273672*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273672*0 + 3*600*FLEN/8, x4, x1, x2)

inst_91225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9ef000000000000; valaddr_reg:x3; val_offset:273675*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273675*0 + 3*601*FLEN/8, x4, x1, x2)

inst_91226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9ef800000000000; valaddr_reg:x3; val_offset:273678*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273678*0 + 3*602*FLEN/8, x4, x1, x2)

inst_91227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efc00000000000; valaddr_reg:x3; val_offset:273681*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273681*0 + 3*603*FLEN/8, x4, x1, x2)

inst_91228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efe00000000000; valaddr_reg:x3; val_offset:273684*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273684*0 + 3*604*FLEN/8, x4, x1, x2)

inst_91229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9eff00000000000; valaddr_reg:x3; val_offset:273687*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273687*0 + 3*605*FLEN/8, x4, x1, x2)

inst_91230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9eff80000000000; valaddr_reg:x3; val_offset:273690*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273690*0 + 3*606*FLEN/8, x4, x1, x2)

inst_91231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effc0000000000; valaddr_reg:x3; val_offset:273693*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273693*0 + 3*607*FLEN/8, x4, x1, x2)

inst_91232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effe0000000000; valaddr_reg:x3; val_offset:273696*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273696*0 + 3*608*FLEN/8, x4, x1, x2)

inst_91233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efff0000000000; valaddr_reg:x3; val_offset:273699*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273699*0 + 3*609*FLEN/8, x4, x1, x2)

inst_91234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efff8000000000; valaddr_reg:x3; val_offset:273702*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273702*0 + 3*610*FLEN/8, x4, x1, x2)

inst_91235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffc000000000; valaddr_reg:x3; val_offset:273705*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273705*0 + 3*611*FLEN/8, x4, x1, x2)

inst_91236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffe000000000; valaddr_reg:x3; val_offset:273708*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273708*0 + 3*612*FLEN/8, x4, x1, x2)

inst_91237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effff000000000; valaddr_reg:x3; val_offset:273711*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273711*0 + 3*613*FLEN/8, x4, x1, x2)

inst_91238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effff800000000; valaddr_reg:x3; val_offset:273714*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273714*0 + 3*614*FLEN/8, x4, x1, x2)

inst_91239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffc00000000; valaddr_reg:x3; val_offset:273717*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273717*0 + 3*615*FLEN/8, x4, x1, x2)

inst_91240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffe00000000; valaddr_reg:x3; val_offset:273720*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273720*0 + 3*616*FLEN/8, x4, x1, x2)

inst_91241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffff00000000; valaddr_reg:x3; val_offset:273723*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273723*0 + 3*617*FLEN/8, x4, x1, x2)

inst_91242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffff80000000; valaddr_reg:x3; val_offset:273726*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273726*0 + 3*618*FLEN/8, x4, x1, x2)

inst_91243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffc0000000; valaddr_reg:x3; val_offset:273729*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273729*0 + 3*619*FLEN/8, x4, x1, x2)

inst_91244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffe0000000; valaddr_reg:x3; val_offset:273732*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273732*0 + 3*620*FLEN/8, x4, x1, x2)

inst_91245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffff0000000; valaddr_reg:x3; val_offset:273735*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273735*0 + 3*621*FLEN/8, x4, x1, x2)

inst_91246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffff8000000; valaddr_reg:x3; val_offset:273738*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273738*0 + 3*622*FLEN/8, x4, x1, x2)

inst_91247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffc000000; valaddr_reg:x3; val_offset:273741*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273741*0 + 3*623*FLEN/8, x4, x1, x2)

inst_91248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffe000000; valaddr_reg:x3; val_offset:273744*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273744*0 + 3*624*FLEN/8, x4, x1, x2)

inst_91249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffff000000; valaddr_reg:x3; val_offset:273747*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273747*0 + 3*625*FLEN/8, x4, x1, x2)

inst_91250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffff800000; valaddr_reg:x3; val_offset:273750*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273750*0 + 3*626*FLEN/8, x4, x1, x2)

inst_91251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffc00000; valaddr_reg:x3; val_offset:273753*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273753*0 + 3*627*FLEN/8, x4, x1, x2)

inst_91252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffe00000; valaddr_reg:x3; val_offset:273756*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273756*0 + 3*628*FLEN/8, x4, x1, x2)

inst_91253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffff00000; valaddr_reg:x3; val_offset:273759*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273759*0 + 3*629*FLEN/8, x4, x1, x2)

inst_91254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffff80000; valaddr_reg:x3; val_offset:273762*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273762*0 + 3*630*FLEN/8, x4, x1, x2)

inst_91255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffc0000; valaddr_reg:x3; val_offset:273765*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273765*0 + 3*631*FLEN/8, x4, x1, x2)

inst_91256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffe0000; valaddr_reg:x3; val_offset:273768*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273768*0 + 3*632*FLEN/8, x4, x1, x2)

inst_91257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffff0000; valaddr_reg:x3; val_offset:273771*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273771*0 + 3*633*FLEN/8, x4, x1, x2)

inst_91258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffff8000; valaddr_reg:x3; val_offset:273774*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273774*0 + 3*634*FLEN/8, x4, x1, x2)

inst_91259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffffc000; valaddr_reg:x3; val_offset:273777*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273777*0 + 3*635*FLEN/8, x4, x1, x2)

inst_91260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffffe000; valaddr_reg:x3; val_offset:273780*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273780*0 + 3*636*FLEN/8, x4, x1, x2)

inst_91261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffff000; valaddr_reg:x3; val_offset:273783*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273783*0 + 3*637*FLEN/8, x4, x1, x2)

inst_91262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffff800; valaddr_reg:x3; val_offset:273786*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273786*0 + 3*638*FLEN/8, x4, x1, x2)

inst_91263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffffc00; valaddr_reg:x3; val_offset:273789*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273789*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_91264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffffe00; valaddr_reg:x3; val_offset:273792*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273792*0 + 3*640*FLEN/8, x4, x1, x2)

inst_91265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffffff00; valaddr_reg:x3; val_offset:273795*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273795*0 + 3*641*FLEN/8, x4, x1, x2)

inst_91266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffffff80; valaddr_reg:x3; val_offset:273798*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273798*0 + 3*642*FLEN/8, x4, x1, x2)

inst_91267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffffffc0; valaddr_reg:x3; val_offset:273801*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273801*0 + 3*643*FLEN/8, x4, x1, x2)

inst_91268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffffffe0; valaddr_reg:x3; val_offset:273804*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273804*0 + 3*644*FLEN/8, x4, x1, x2)

inst_91269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffffff0; valaddr_reg:x3; val_offset:273807*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273807*0 + 3*645*FLEN/8, x4, x1, x2)

inst_91270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffffff8; valaddr_reg:x3; val_offset:273810*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273810*0 + 3*646*FLEN/8, x4, x1, x2)

inst_91271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffffffc; valaddr_reg:x3; val_offset:273813*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273813*0 + 3*647*FLEN/8, x4, x1, x2)

inst_91272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9effffffffffffe; valaddr_reg:x3; val_offset:273816*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273816*0 + 3*648*FLEN/8, x4, x1, x2)

inst_91273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x39e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xb9efffffffffffff; valaddr_reg:x3; val_offset:273819*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273819*0 + 3*649*FLEN/8, x4, x1, x2)

inst_91274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:273822*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273822*0 + 3*650*FLEN/8, x4, x1, x2)

inst_91275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:273825*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273825*0 + 3*651*FLEN/8, x4, x1, x2)

inst_91276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:273828*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273828*0 + 3*652*FLEN/8, x4, x1, x2)

inst_91277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:273831*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273831*0 + 3*653*FLEN/8, x4, x1, x2)

inst_91278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:273834*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273834*0 + 3*654*FLEN/8, x4, x1, x2)

inst_91279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:273837*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273837*0 + 3*655*FLEN/8, x4, x1, x2)

inst_91280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:273840*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273840*0 + 3*656*FLEN/8, x4, x1, x2)

inst_91281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:273843*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273843*0 + 3*657*FLEN/8, x4, x1, x2)

inst_91282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:273846*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273846*0 + 3*658*FLEN/8, x4, x1, x2)

inst_91283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:273849*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273849*0 + 3*659*FLEN/8, x4, x1, x2)

inst_91284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:273852*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273852*0 + 3*660*FLEN/8, x4, x1, x2)

inst_91285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:273855*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273855*0 + 3*661*FLEN/8, x4, x1, x2)

inst_91286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:273858*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273858*0 + 3*662*FLEN/8, x4, x1, x2)

inst_91287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:273861*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273861*0 + 3*663*FLEN/8, x4, x1, x2)

inst_91288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:273864*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273864*0 + 3*664*FLEN/8, x4, x1, x2)

inst_91289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:273867*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273867*0 + 3*665*FLEN/8, x4, x1, x2)

inst_91290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:273870*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273870*0 + 3*666*FLEN/8, x4, x1, x2)

inst_91291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:273873*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273873*0 + 3*667*FLEN/8, x4, x1, x2)

inst_91292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:273876*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273876*0 + 3*668*FLEN/8, x4, x1, x2)

inst_91293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:273879*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273879*0 + 3*669*FLEN/8, x4, x1, x2)

inst_91294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:273882*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273882*0 + 3*670*FLEN/8, x4, x1, x2)

inst_91295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc2ccb0d80c76a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x22c1263f58cdc and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac2ccb0d80c76a; op2val:0x9fc22c1263f58cdc;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:273885*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273885*0 + 3*671*FLEN/8, x4, x1, x2)

inst_91296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:273888*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273888*0 + 3*672*FLEN/8, x4, x1, x2)

inst_91297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:273891*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273891*0 + 3*673*FLEN/8, x4, x1, x2)

inst_91298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:273894*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273894*0 + 3*674*FLEN/8, x4, x1, x2)

inst_91299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:273897*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273897*0 + 3*675*FLEN/8, x4, x1, x2)

inst_91300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:273900*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273900*0 + 3*676*FLEN/8, x4, x1, x2)

inst_91301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:273903*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273903*0 + 3*677*FLEN/8, x4, x1, x2)

inst_91302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:273906*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273906*0 + 3*678*FLEN/8, x4, x1, x2)

inst_91303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:273909*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273909*0 + 3*679*FLEN/8, x4, x1, x2)

inst_91304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:273912*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273912*0 + 3*680*FLEN/8, x4, x1, x2)

inst_91305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:273915*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273915*0 + 3*681*FLEN/8, x4, x1, x2)

inst_91306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:273918*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273918*0 + 3*682*FLEN/8, x4, x1, x2)

inst_91307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:273921*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273921*0 + 3*683*FLEN/8, x4, x1, x2)

inst_91308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:273924*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273924*0 + 3*684*FLEN/8, x4, x1, x2)

inst_91309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:273927*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273927*0 + 3*685*FLEN/8, x4, x1, x2)

inst_91310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:273930*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273930*0 + 3*686*FLEN/8, x4, x1, x2)

inst_91311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:273933*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273933*0 + 3*687*FLEN/8, x4, x1, x2)

inst_91312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:273936*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273936*0 + 3*688*FLEN/8, x4, x1, x2)

inst_91313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:273939*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273939*0 + 3*689*FLEN/8, x4, x1, x2)

inst_91314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:273942*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273942*0 + 3*690*FLEN/8, x4, x1, x2)

inst_91315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:273945*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273945*0 + 3*691*FLEN/8, x4, x1, x2)

inst_91316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:273948*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273948*0 + 3*692*FLEN/8, x4, x1, x2)

inst_91317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:273951*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273951*0 + 3*693*FLEN/8, x4, x1, x2)

inst_91318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000000000000; valaddr_reg:x3; val_offset:273954*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273954*0 + 3*694*FLEN/8, x4, x1, x2)

inst_91319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000000000001; valaddr_reg:x3; val_offset:273957*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273957*0 + 3*695*FLEN/8, x4, x1, x2)

inst_91320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000000000003; valaddr_reg:x3; val_offset:273960*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273960*0 + 3*696*FLEN/8, x4, x1, x2)

inst_91321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000000000007; valaddr_reg:x3; val_offset:273963*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273963*0 + 3*697*FLEN/8, x4, x1, x2)

inst_91322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000000000000f; valaddr_reg:x3; val_offset:273966*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273966*0 + 3*698*FLEN/8, x4, x1, x2)

inst_91323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000000000001f; valaddr_reg:x3; val_offset:273969*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273969*0 + 3*699*FLEN/8, x4, x1, x2)

inst_91324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000000000003f; valaddr_reg:x3; val_offset:273972*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273972*0 + 3*700*FLEN/8, x4, x1, x2)

inst_91325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000000000007f; valaddr_reg:x3; val_offset:273975*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273975*0 + 3*701*FLEN/8, x4, x1, x2)

inst_91326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00000000000ff; valaddr_reg:x3; val_offset:273978*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273978*0 + 3*702*FLEN/8, x4, x1, x2)

inst_91327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00000000001ff; valaddr_reg:x3; val_offset:273981*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273981*0 + 3*703*FLEN/8, x4, x1, x2)

inst_91328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00000000003ff; valaddr_reg:x3; val_offset:273984*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273984*0 + 3*704*FLEN/8, x4, x1, x2)

inst_91329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00000000007ff; valaddr_reg:x3; val_offset:273987*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273987*0 + 3*705*FLEN/8, x4, x1, x2)

inst_91330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000000000fff; valaddr_reg:x3; val_offset:273990*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273990*0 + 3*706*FLEN/8, x4, x1, x2)

inst_91331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000000001fff; valaddr_reg:x3; val_offset:273993*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273993*0 + 3*707*FLEN/8, x4, x1, x2)

inst_91332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000000003fff; valaddr_reg:x3; val_offset:273996*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273996*0 + 3*708*FLEN/8, x4, x1, x2)

inst_91333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000000007fff; valaddr_reg:x3; val_offset:273999*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273999*0 + 3*709*FLEN/8, x4, x1, x2)

inst_91334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000000000ffff; valaddr_reg:x3; val_offset:274002*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274002*0 + 3*710*FLEN/8, x4, x1, x2)

inst_91335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000000001ffff; valaddr_reg:x3; val_offset:274005*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274005*0 + 3*711*FLEN/8, x4, x1, x2)

inst_91336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000000003ffff; valaddr_reg:x3; val_offset:274008*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274008*0 + 3*712*FLEN/8, x4, x1, x2)

inst_91337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000000007ffff; valaddr_reg:x3; val_offset:274011*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274011*0 + 3*713*FLEN/8, x4, x1, x2)

inst_91338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00000000fffff; valaddr_reg:x3; val_offset:274014*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274014*0 + 3*714*FLEN/8, x4, x1, x2)

inst_91339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00000001fffff; valaddr_reg:x3; val_offset:274017*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274017*0 + 3*715*FLEN/8, x4, x1, x2)

inst_91340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00000003fffff; valaddr_reg:x3; val_offset:274020*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274020*0 + 3*716*FLEN/8, x4, x1, x2)

inst_91341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00000007fffff; valaddr_reg:x3; val_offset:274023*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274023*0 + 3*717*FLEN/8, x4, x1, x2)

inst_91342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000000ffffff; valaddr_reg:x3; val_offset:274026*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274026*0 + 3*718*FLEN/8, x4, x1, x2)

inst_91343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000001ffffff; valaddr_reg:x3; val_offset:274029*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274029*0 + 3*719*FLEN/8, x4, x1, x2)

inst_91344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000003ffffff; valaddr_reg:x3; val_offset:274032*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274032*0 + 3*720*FLEN/8, x4, x1, x2)

inst_91345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000007ffffff; valaddr_reg:x3; val_offset:274035*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274035*0 + 3*721*FLEN/8, x4, x1, x2)

inst_91346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000000fffffff; valaddr_reg:x3; val_offset:274038*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274038*0 + 3*722*FLEN/8, x4, x1, x2)

inst_91347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000001fffffff; valaddr_reg:x3; val_offset:274041*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274041*0 + 3*723*FLEN/8, x4, x1, x2)

inst_91348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000003fffffff; valaddr_reg:x3; val_offset:274044*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274044*0 + 3*724*FLEN/8, x4, x1, x2)

inst_91349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000007fffffff; valaddr_reg:x3; val_offset:274047*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274047*0 + 3*725*FLEN/8, x4, x1, x2)

inst_91350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00000ffffffff; valaddr_reg:x3; val_offset:274050*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274050*0 + 3*726*FLEN/8, x4, x1, x2)

inst_91351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00001ffffffff; valaddr_reg:x3; val_offset:274053*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274053*0 + 3*727*FLEN/8, x4, x1, x2)

inst_91352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00003ffffffff; valaddr_reg:x3; val_offset:274056*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274056*0 + 3*728*FLEN/8, x4, x1, x2)

inst_91353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00007ffffffff; valaddr_reg:x3; val_offset:274059*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274059*0 + 3*729*FLEN/8, x4, x1, x2)

inst_91354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0000fffffffff; valaddr_reg:x3; val_offset:274062*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274062*0 + 3*730*FLEN/8, x4, x1, x2)

inst_91355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0001fffffffff; valaddr_reg:x3; val_offset:274065*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274065*0 + 3*731*FLEN/8, x4, x1, x2)

inst_91356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0003fffffffff; valaddr_reg:x3; val_offset:274068*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274068*0 + 3*732*FLEN/8, x4, x1, x2)

inst_91357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0007fffffffff; valaddr_reg:x3; val_offset:274071*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274071*0 + 3*733*FLEN/8, x4, x1, x2)

inst_91358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a000ffffffffff; valaddr_reg:x3; val_offset:274074*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274074*0 + 3*734*FLEN/8, x4, x1, x2)

inst_91359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a001ffffffffff; valaddr_reg:x3; val_offset:274077*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274077*0 + 3*735*FLEN/8, x4, x1, x2)

inst_91360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a003ffffffffff; valaddr_reg:x3; val_offset:274080*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274080*0 + 3*736*FLEN/8, x4, x1, x2)

inst_91361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a007ffffffffff; valaddr_reg:x3; val_offset:274083*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274083*0 + 3*737*FLEN/8, x4, x1, x2)

inst_91362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a00fffffffffff; valaddr_reg:x3; val_offset:274086*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274086*0 + 3*738*FLEN/8, x4, x1, x2)

inst_91363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a01fffffffffff; valaddr_reg:x3; val_offset:274089*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274089*0 + 3*739*FLEN/8, x4, x1, x2)

inst_91364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a03fffffffffff; valaddr_reg:x3; val_offset:274092*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274092*0 + 3*740*FLEN/8, x4, x1, x2)

inst_91365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a07fffffffffff; valaddr_reg:x3; val_offset:274095*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274095*0 + 3*741*FLEN/8, x4, x1, x2)

inst_91366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a0ffffffffffff; valaddr_reg:x3; val_offset:274098*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274098*0 + 3*742*FLEN/8, x4, x1, x2)

inst_91367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a1ffffffffffff; valaddr_reg:x3; val_offset:274101*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274101*0 + 3*743*FLEN/8, x4, x1, x2)

inst_91368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a3ffffffffffff; valaddr_reg:x3; val_offset:274104*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274104*0 + 3*744*FLEN/8, x4, x1, x2)

inst_91369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a7ffffffffffff; valaddr_reg:x3; val_offset:274107*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274107*0 + 3*745*FLEN/8, x4, x1, x2)

inst_91370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80a8000000000000; valaddr_reg:x3; val_offset:274110*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274110*0 + 3*746*FLEN/8, x4, x1, x2)

inst_91371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80ac000000000000; valaddr_reg:x3; val_offset:274113*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274113*0 + 3*747*FLEN/8, x4, x1, x2)

inst_91372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80ae000000000000; valaddr_reg:x3; val_offset:274116*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274116*0 + 3*748*FLEN/8, x4, x1, x2)

inst_91373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80af000000000000; valaddr_reg:x3; val_offset:274119*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274119*0 + 3*749*FLEN/8, x4, x1, x2)

inst_91374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80af800000000000; valaddr_reg:x3; val_offset:274122*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274122*0 + 3*750*FLEN/8, x4, x1, x2)

inst_91375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80afc00000000000; valaddr_reg:x3; val_offset:274125*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274125*0 + 3*751*FLEN/8, x4, x1, x2)

inst_91376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80afe00000000000; valaddr_reg:x3; val_offset:274128*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274128*0 + 3*752*FLEN/8, x4, x1, x2)

inst_91377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80aff00000000000; valaddr_reg:x3; val_offset:274131*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274131*0 + 3*753*FLEN/8, x4, x1, x2)

inst_91378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80aff80000000000; valaddr_reg:x3; val_offset:274134*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274134*0 + 3*754*FLEN/8, x4, x1, x2)

inst_91379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80affc0000000000; valaddr_reg:x3; val_offset:274137*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274137*0 + 3*755*FLEN/8, x4, x1, x2)

inst_91380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80affe0000000000; valaddr_reg:x3; val_offset:274140*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274140*0 + 3*756*FLEN/8, x4, x1, x2)

inst_91381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80afff0000000000; valaddr_reg:x3; val_offset:274143*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274143*0 + 3*757*FLEN/8, x4, x1, x2)

inst_91382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80afff8000000000; valaddr_reg:x3; val_offset:274146*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274146*0 + 3*758*FLEN/8, x4, x1, x2)

inst_91383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80afffc000000000; valaddr_reg:x3; val_offset:274149*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274149*0 + 3*759*FLEN/8, x4, x1, x2)

inst_91384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80afffe000000000; valaddr_reg:x3; val_offset:274152*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274152*0 + 3*760*FLEN/8, x4, x1, x2)

inst_91385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80affff000000000; valaddr_reg:x3; val_offset:274155*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274155*0 + 3*761*FLEN/8, x4, x1, x2)

inst_91386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80affff800000000; valaddr_reg:x3; val_offset:274158*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274158*0 + 3*762*FLEN/8, x4, x1, x2)

inst_91387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80affffc00000000; valaddr_reg:x3; val_offset:274161*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274161*0 + 3*763*FLEN/8, x4, x1, x2)

inst_91388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80affffe00000000; valaddr_reg:x3; val_offset:274164*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274164*0 + 3*764*FLEN/8, x4, x1, x2)

inst_91389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80afffff00000000; valaddr_reg:x3; val_offset:274167*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274167*0 + 3*765*FLEN/8, x4, x1, x2)

inst_91390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80afffff80000000; valaddr_reg:x3; val_offset:274170*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274170*0 + 3*766*FLEN/8, x4, x1, x2)

inst_91391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc306053b001eb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fac306053b001eb; op2val:0x8000;
op3val:0x80afffffc0000000; valaddr_reg:x3; val_offset:274173*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 274173*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90069793524154368,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90070893035782144,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071442791596032,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071717669502976,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071855108456448,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071923827933184,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071958187671552,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071975367540736,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071983957475328,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071988252442624,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071990399926272,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071991473668096,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992010539008,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992278974464,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992413192192,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992480301056,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992513855488,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992530632704,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992539021312,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992543215616,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992545312768,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546361344,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546885632,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547147776,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547278848,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547344384,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547377152,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547393536,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547401728,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547405824,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547407872,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547408896,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409408,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409664,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409792,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409856,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409888,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409904,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409912,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409916,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409918,64,FLEN)
NAN_BOXED(6893829001000677956,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409919,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369280,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369281,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369283,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369287,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369295,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369311,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369343,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369407,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369535,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369791,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246370303,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246371327,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246373375,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246377471,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246385663,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246402047,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246434815,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246500351,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246631423,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246893567,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234247417855,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234248466431,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234250563583,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234254757887,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234263146495,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234279923711,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234313478143,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234380587007,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234514804735,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234783240191,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897235320111103,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897236393852927,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897238541336575,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897242836303871,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897251426238463,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897268606107647,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897302965846015,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897371685322751,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897509124276223,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897784002183167,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254898333757997055,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254899433269624831,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254901632292880383,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254906030339391487,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254914826432413695,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254932418618458111,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254967602990546943,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255037971734724607,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255178709223079935,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9255460184199790591,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9256023134153211903,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054527,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9257149034060054528,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258274933966897152,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9258837883920318464,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259119358897029120,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259260096385384448,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259330465129562112,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259365649501650944,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259383241687695360,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259392037780717568,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259396435827228672,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259398634850484224,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259399734362112000,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400284117925888,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400558995832832,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400696434786304,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400765154263040,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400799514001408,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400816693870592,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400825283805184,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400829578772480,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400831726256128,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400832799997952,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833336868864,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833605304320,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833739522048,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833806630912,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833840185344,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833856962560,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833865351168,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833869545472,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833871642624,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833872691200,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873215488,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873477632,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873608704,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873674240,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873707008,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873723392,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873731584,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873735680,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873737728,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873738752,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739264,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739520,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739648,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739712,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739744,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739760,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739768,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739772,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739774,64,FLEN)
NAN_BOXED(6893862973547990244,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739775,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257792,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257793,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257795,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257799,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257807,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257823,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257855,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257919,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258047,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258303,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258815,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364259839,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364261887,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364265983,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364274175,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364290559,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364323327,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364388863,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364519935,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364782079,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435365306367,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435366354943,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435368452095,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435372646399,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435381035007,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435397812223,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435431366655,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435498475519,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435632693247,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435901128703,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386436437999615,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386437511741439,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386439659225087,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386443954192383,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386452544126975,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386469723996159,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386504083734527,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386572803211263,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386710242164735,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386985120071679,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241387534875885567,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241388634387513343,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241390833410768895,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241395231457279999,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241404027550302207,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241421619736346623,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241456804108435455,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241527172852613119,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241667910340968447,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241949385317679103,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9242512335271100415,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9243638235177943039,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9243638235177943040,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9244764135084785664,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245327085038206976,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245608560014917632,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245749297503272960,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245819666247450624,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245854850619539456,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245872442805583872,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245881238898606080,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245885636945117184,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245887835968372736,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245888935480000512,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889485235814400,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889760113721344,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889897552674816,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889966272151552,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890000631889920,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890017811759104,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890026401693696,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890030696660992,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890032844144640,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890033917886464,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034454757376,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034723192832,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034857410560,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034924519424,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034958073856,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034974851072,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034983239680,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034987433984,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034989531136,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034990579712,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991104000,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991366144,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991497216,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991562752,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991595520,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991611904,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991620096,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991624192,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991626240,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991627264,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991627776,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628032,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628160,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628224,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628256,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628272,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628280,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628284,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628286,64,FLEN)
NAN_BOXED(6893865016743282031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628287,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667712,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667713,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667715,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667719,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667727,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667743,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667775,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667839,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667967,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911668223,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911668735,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911669759,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911671807,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911675903,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911684095,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911700479,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911733247,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911798783,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911929855,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427912191999,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427912716287,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427913764863,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427915862015,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427920056319,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427928444927,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427945222143,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427978776575,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458428045885439,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458428180103167,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458428448538623,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458428985409535,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458430059151359,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458432206635007,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458436501602303,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458445091536895,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458462271406079,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458496631144447,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458565350621183,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458702789574655,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458977667481599,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331459527423295487,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331460626934923263,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331462825958178815,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331467224004689919,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331476020097712127,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331493612283756543,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331528796655845375,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331599165400023039,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331739902888378367,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9332021377865089023,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9332584327818510335,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9333710227725352959,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9333710227725352960,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9334836127632195584,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335399077585616896,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335680552562327552,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335821290050682880,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335891658794860544,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335926843166949376,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335944435352993792,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335953231446016000,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335957629492527104,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335959828515782656,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335960928027410432,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961477783224320,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961752661131264,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961890100084736,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961958819561472,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961993179299840,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962010359169024,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962018949103616,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962023244070912,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962025391554560,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962026465296384,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027002167296,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027270602752,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027404820480,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027471929344,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027505483776,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027522260992,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027530649600,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027534843904,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027536941056,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027537989632,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027538513920,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027538776064,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027538907136,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027538972672,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539005440,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539021824,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539030016,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539034112,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539036160,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539037184,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539037696,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539037952,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038080,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038144,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038176,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038192,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038200,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038204,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038206,64,FLEN)
NAN_BOXED(6893889599046828205,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038207,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370333696,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370333697,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370333699,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370333703,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370333711,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370333727,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370333759,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370333823,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370333951,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370334207,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370334719,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370335743,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370337791,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370341887,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370350079,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370366463,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370399231,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370464767,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370595839,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500370857983,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500371382271,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500372430847,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500374527999,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500378722303,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500387110911,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500403888127,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500437442559,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500504551423,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500638769151,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122500907204607,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122501444075519,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122502517817343,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122504665300991,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122508960268287,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122517550202879,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122534730072063,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122569089810431,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122637809287167,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290122775248240639,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290123050126147583,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290123599881961471,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290124699393589247,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290126898416844799,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290131296463355903,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290140092556378111,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290157684742422527,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290192869114511359,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290263237858689023,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290403975347044351,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13290685450323755007,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13291248400277176319,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13292374300184018943,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13292374300184018944,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13293500200090861568,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294063150044282880,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294344625020993536,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294485362509348864,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294555731253526528,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294590915625615360,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294608507811659776,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294617303904681984,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294621701951193088,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294623900974448640,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294625000486076416,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294625550241890304,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294625825119797248,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294625962558750720,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626031278227456,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626065637965824,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626082817835008,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626091407769600,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626095702736896,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626097850220544,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626098923962368,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099460833280,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099729268736,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099863486464,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099930595328,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099964149760,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099980926976,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099989315584,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099993509888,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099995607040,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099996655616,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997179904,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997442048,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997573120,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997638656,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997671424,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997687808,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997696000,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997700096,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997702144,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997703168,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997703680,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997703936,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997704064,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997704128,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997704160,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997704176,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997704184,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997704188,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997704190,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13294626099997704191,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893927186791449799,64,FLEN)
NAN_BOXED(11511816698800851240,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855104,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855105,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855107,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855111,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855119,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855135,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855167,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855231,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855359,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799855615,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799856127,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799857151,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799859199,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799863295,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799871487,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799887871,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799920639,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291799986175,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291800117247,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291800379391,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291800903679,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291801952255,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291804049407,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291808243711,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291816632319,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291833409535,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291866963967,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705291934072831,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705292068290559,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705292336726015,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705292873596927,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705293947338751,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705296094822399,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705300389789695,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705308979724287,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705326159593471,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705360519331839,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705429238808575,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705566677762047,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393705841555668991,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393706391311482879,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393707490823110655,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393709689846366207,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393714087892877311,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393722883985899519,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393740476171943935,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393775660544032767,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393846029288210431,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13393986766776565759,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13394268241753276415,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13394831191706697727,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13395957091613540351,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13395957091613540352,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13397082991520382976,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13397645941473804288,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13397927416450514944,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398068153938870272,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398138522683047936,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398173707055136768,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398191299241181184,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398200095334203392,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398204493380714496,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398206692403970048,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398207791915597824,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208341671411712,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208616549318656,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208753988272128,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208822707748864,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208857067487232,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208874247356416,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208882837291008,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208887132258304,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208889279741952,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208890353483776,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208890890354688,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891158790144,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891293007872,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891360116736,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891393671168,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891410448384,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891418836992,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891423031296,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891425128448,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891426177024,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891426701312,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891426963456,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427094528,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427160064,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427192832,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427209216,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427217408,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427221504,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427223552,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427224576,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225088,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225344,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225472,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225536,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225568,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225584,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225592,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225596,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225598,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13398208891427225599,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893934380213913450,64,FLEN)
NAN_BOXED(11511812055010479324,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480768,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480769,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480771,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480775,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480783,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480799,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480831,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480895,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481023,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481279,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128481791,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128482815,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128484863,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128488959,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128497151,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128513535,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128546303,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128611839,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128742911,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129005055,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033129529343,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033130577919,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033132675071,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033136869375,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033145257983,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033162035199,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033195589631,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033262698495,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033396916223,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033665351679,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408034202222591,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408035275964415,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408037423448063,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408041718415359,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408050308349951,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408067488219135,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408101847957503,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408170567434239,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408308006387711,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408582884294655,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268409132640108543,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268410232151736319,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268412431174991871,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268416829221502975,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268425625314525183,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268443217500569599,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268478401872658431,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268548770616836095,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268689508105191423,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268970983081902079,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9269533933035323391,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166015,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9270659832942166016,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9271785732849008640,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272348682802429952,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272630157779140608,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272770895267495936,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272841264011673600,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272876448383762432,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272894040569806848,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272902836662829056,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272907234709340160,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272909433732595712,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272910533244223488,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911083000037376,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911357877944320,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911495316897792,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911564036374528,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911598396112896,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911615575982080,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911624165916672,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911628460883968,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911630608367616,64,FLEN)
NAN_BOXED(6893938319876424171,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911631682109440,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
