
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_4608:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x8213ffffffffffff; valaddr_reg:x3; val_offset:13824*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13824*0 + 3*0*FLEN/8, x4, x1, x2)

inst_4609:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x8217ffffffffffff; valaddr_reg:x3; val_offset:13827*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13827*0 + 3*1*FLEN/8, x4, x1, x2)

inst_4610:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x8218000000000000; valaddr_reg:x3; val_offset:13830*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13830*0 + 3*2*FLEN/8, x4, x1, x2)

inst_4611:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821c000000000000; valaddr_reg:x3; val_offset:13833*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13833*0 + 3*3*FLEN/8, x4, x1, x2)

inst_4612:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821e000000000000; valaddr_reg:x3; val_offset:13836*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13836*0 + 3*4*FLEN/8, x4, x1, x2)

inst_4613:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821f000000000000; valaddr_reg:x3; val_offset:13839*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13839*0 + 3*5*FLEN/8, x4, x1, x2)

inst_4614:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821f800000000000; valaddr_reg:x3; val_offset:13842*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13842*0 + 3*6*FLEN/8, x4, x1, x2)

inst_4615:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fc00000000000; valaddr_reg:x3; val_offset:13845*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13845*0 + 3*7*FLEN/8, x4, x1, x2)

inst_4616:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fe00000000000; valaddr_reg:x3; val_offset:13848*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13848*0 + 3*8*FLEN/8, x4, x1, x2)

inst_4617:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ff00000000000; valaddr_reg:x3; val_offset:13851*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13851*0 + 3*9*FLEN/8, x4, x1, x2)

inst_4618:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ff80000000000; valaddr_reg:x3; val_offset:13854*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13854*0 + 3*10*FLEN/8, x4, x1, x2)

inst_4619:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffc0000000000; valaddr_reg:x3; val_offset:13857*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13857*0 + 3*11*FLEN/8, x4, x1, x2)

inst_4620:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffe0000000000; valaddr_reg:x3; val_offset:13860*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13860*0 + 3*12*FLEN/8, x4, x1, x2)

inst_4621:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fff0000000000; valaddr_reg:x3; val_offset:13863*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13863*0 + 3*13*FLEN/8, x4, x1, x2)

inst_4622:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fff8000000000; valaddr_reg:x3; val_offset:13866*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13866*0 + 3*14*FLEN/8, x4, x1, x2)

inst_4623:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffc000000000; valaddr_reg:x3; val_offset:13869*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13869*0 + 3*15*FLEN/8, x4, x1, x2)

inst_4624:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffe000000000; valaddr_reg:x3; val_offset:13872*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13872*0 + 3*16*FLEN/8, x4, x1, x2)

inst_4625:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffff000000000; valaddr_reg:x3; val_offset:13875*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13875*0 + 3*17*FLEN/8, x4, x1, x2)

inst_4626:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffff800000000; valaddr_reg:x3; val_offset:13878*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13878*0 + 3*18*FLEN/8, x4, x1, x2)

inst_4627:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffc00000000; valaddr_reg:x3; val_offset:13881*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13881*0 + 3*19*FLEN/8, x4, x1, x2)

inst_4628:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffe00000000; valaddr_reg:x3; val_offset:13884*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13884*0 + 3*20*FLEN/8, x4, x1, x2)

inst_4629:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffff00000000; valaddr_reg:x3; val_offset:13887*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13887*0 + 3*21*FLEN/8, x4, x1, x2)

inst_4630:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffff80000000; valaddr_reg:x3; val_offset:13890*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13890*0 + 3*22*FLEN/8, x4, x1, x2)

inst_4631:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffc0000000; valaddr_reg:x3; val_offset:13893*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13893*0 + 3*23*FLEN/8, x4, x1, x2)

inst_4632:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffe0000000; valaddr_reg:x3; val_offset:13896*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13896*0 + 3*24*FLEN/8, x4, x1, x2)

inst_4633:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffff0000000; valaddr_reg:x3; val_offset:13899*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13899*0 + 3*25*FLEN/8, x4, x1, x2)

inst_4634:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffff8000000; valaddr_reg:x3; val_offset:13902*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13902*0 + 3*26*FLEN/8, x4, x1, x2)

inst_4635:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffc000000; valaddr_reg:x3; val_offset:13905*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13905*0 + 3*27*FLEN/8, x4, x1, x2)

inst_4636:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffe000000; valaddr_reg:x3; val_offset:13908*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13908*0 + 3*28*FLEN/8, x4, x1, x2)

inst_4637:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffff000000; valaddr_reg:x3; val_offset:13911*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13911*0 + 3*29*FLEN/8, x4, x1, x2)

inst_4638:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffff800000; valaddr_reg:x3; val_offset:13914*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13914*0 + 3*30*FLEN/8, x4, x1, x2)

inst_4639:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffc00000; valaddr_reg:x3; val_offset:13917*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13917*0 + 3*31*FLEN/8, x4, x1, x2)

inst_4640:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffe00000; valaddr_reg:x3; val_offset:13920*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13920*0 + 3*32*FLEN/8, x4, x1, x2)

inst_4641:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffff00000; valaddr_reg:x3; val_offset:13923*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13923*0 + 3*33*FLEN/8, x4, x1, x2)

inst_4642:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffff80000; valaddr_reg:x3; val_offset:13926*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13926*0 + 3*34*FLEN/8, x4, x1, x2)

inst_4643:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffc0000; valaddr_reg:x3; val_offset:13929*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13929*0 + 3*35*FLEN/8, x4, x1, x2)

inst_4644:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffe0000; valaddr_reg:x3; val_offset:13932*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13932*0 + 3*36*FLEN/8, x4, x1, x2)

inst_4645:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffff0000; valaddr_reg:x3; val_offset:13935*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13935*0 + 3*37*FLEN/8, x4, x1, x2)

inst_4646:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffff8000; valaddr_reg:x3; val_offset:13938*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13938*0 + 3*38*FLEN/8, x4, x1, x2)

inst_4647:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffffc000; valaddr_reg:x3; val_offset:13941*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13941*0 + 3*39*FLEN/8, x4, x1, x2)

inst_4648:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffffe000; valaddr_reg:x3; val_offset:13944*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13944*0 + 3*40*FLEN/8, x4, x1, x2)

inst_4649:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffff000; valaddr_reg:x3; val_offset:13947*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13947*0 + 3*41*FLEN/8, x4, x1, x2)

inst_4650:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffff800; valaddr_reg:x3; val_offset:13950*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13950*0 + 3*42*FLEN/8, x4, x1, x2)

inst_4651:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffffc00; valaddr_reg:x3; val_offset:13953*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13953*0 + 3*43*FLEN/8, x4, x1, x2)

inst_4652:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffffe00; valaddr_reg:x3; val_offset:13956*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13956*0 + 3*44*FLEN/8, x4, x1, x2)

inst_4653:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffffff00; valaddr_reg:x3; val_offset:13959*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13959*0 + 3*45*FLEN/8, x4, x1, x2)

inst_4654:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffffff80; valaddr_reg:x3; val_offset:13962*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13962*0 + 3*46*FLEN/8, x4, x1, x2)

inst_4655:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffffffc0; valaddr_reg:x3; val_offset:13965*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13965*0 + 3*47*FLEN/8, x4, x1, x2)

inst_4656:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffffffe0; valaddr_reg:x3; val_offset:13968*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13968*0 + 3*48*FLEN/8, x4, x1, x2)

inst_4657:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffffff0; valaddr_reg:x3; val_offset:13971*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13971*0 + 3*49*FLEN/8, x4, x1, x2)

inst_4658:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffffff8; valaddr_reg:x3; val_offset:13974*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13974*0 + 3*50*FLEN/8, x4, x1, x2)

inst_4659:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffffffc; valaddr_reg:x3; val_offset:13977*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13977*0 + 3*51*FLEN/8, x4, x1, x2)

inst_4660:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821ffffffffffffe; valaddr_reg:x3; val_offset:13980*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13980*0 + 3*52*FLEN/8, x4, x1, x2)

inst_4661:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2be055ed68f6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62be055ed68f6f; op2val:0x8000;
op3val:0x821fffffffffffff; valaddr_reg:x3; val_offset:13983*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13983*0 + 3*53*FLEN/8, x4, x1, x2)

inst_4662:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:13986*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13986*0 + 3*54*FLEN/8, x4, x1, x2)

inst_4663:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:13989*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13989*0 + 3*55*FLEN/8, x4, x1, x2)

inst_4664:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:13992*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13992*0 + 3*56*FLEN/8, x4, x1, x2)

inst_4665:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:13995*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13995*0 + 3*57*FLEN/8, x4, x1, x2)

inst_4666:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:13998*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 13998*0 + 3*58*FLEN/8, x4, x1, x2)

inst_4667:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:14001*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14001*0 + 3*59*FLEN/8, x4, x1, x2)

inst_4668:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:14004*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14004*0 + 3*60*FLEN/8, x4, x1, x2)

inst_4669:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:14007*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14007*0 + 3*61*FLEN/8, x4, x1, x2)

inst_4670:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:14010*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14010*0 + 3*62*FLEN/8, x4, x1, x2)

inst_4671:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:14013*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14013*0 + 3*63*FLEN/8, x4, x1, x2)

inst_4672:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:14016*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14016*0 + 3*64*FLEN/8, x4, x1, x2)

inst_4673:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:14019*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14019*0 + 3*65*FLEN/8, x4, x1, x2)

inst_4674:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:14022*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14022*0 + 3*66*FLEN/8, x4, x1, x2)

inst_4675:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:14025*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14025*0 + 3*67*FLEN/8, x4, x1, x2)

inst_4676:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:14028*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14028*0 + 3*68*FLEN/8, x4, x1, x2)

inst_4677:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:14031*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14031*0 + 3*69*FLEN/8, x4, x1, x2)

inst_4678:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:14034*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14034*0 + 3*70*FLEN/8, x4, x1, x2)

inst_4679:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:14037*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14037*0 + 3*71*FLEN/8, x4, x1, x2)

inst_4680:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:14040*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14040*0 + 3*72*FLEN/8, x4, x1, x2)

inst_4681:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:14043*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14043*0 + 3*73*FLEN/8, x4, x1, x2)

inst_4682:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:14046*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14046*0 + 3*74*FLEN/8, x4, x1, x2)

inst_4683:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:14049*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14049*0 + 3*75*FLEN/8, x4, x1, x2)

inst_4684:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000000000000; valaddr_reg:x3; val_offset:14052*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14052*0 + 3*76*FLEN/8, x4, x1, x2)

inst_4685:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:14055*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14055*0 + 3*77*FLEN/8, x4, x1, x2)

inst_4686:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:14058*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14058*0 + 3*78*FLEN/8, x4, x1, x2)

inst_4687:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:14061*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14061*0 + 3*79*FLEN/8, x4, x1, x2)

inst_4688:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:14064*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14064*0 + 3*80*FLEN/8, x4, x1, x2)

inst_4689:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:14067*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14067*0 + 3*81*FLEN/8, x4, x1, x2)

inst_4690:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:14070*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14070*0 + 3*82*FLEN/8, x4, x1, x2)

inst_4691:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000000000007f; valaddr_reg:x3; val_offset:14073*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14073*0 + 3*83*FLEN/8, x4, x1, x2)

inst_4692:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100000000000ff; valaddr_reg:x3; val_offset:14076*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14076*0 + 3*84*FLEN/8, x4, x1, x2)

inst_4693:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100000000001ff; valaddr_reg:x3; val_offset:14079*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14079*0 + 3*85*FLEN/8, x4, x1, x2)

inst_4694:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100000000003ff; valaddr_reg:x3; val_offset:14082*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14082*0 + 3*86*FLEN/8, x4, x1, x2)

inst_4695:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100000000007ff; valaddr_reg:x3; val_offset:14085*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14085*0 + 3*87*FLEN/8, x4, x1, x2)

inst_4696:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000000000fff; valaddr_reg:x3; val_offset:14088*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14088*0 + 3*88*FLEN/8, x4, x1, x2)

inst_4697:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000000001fff; valaddr_reg:x3; val_offset:14091*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14091*0 + 3*89*FLEN/8, x4, x1, x2)

inst_4698:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000000003fff; valaddr_reg:x3; val_offset:14094*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14094*0 + 3*90*FLEN/8, x4, x1, x2)

inst_4699:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000000007fff; valaddr_reg:x3; val_offset:14097*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14097*0 + 3*91*FLEN/8, x4, x1, x2)

inst_4700:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000000000ffff; valaddr_reg:x3; val_offset:14100*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14100*0 + 3*92*FLEN/8, x4, x1, x2)

inst_4701:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000000001ffff; valaddr_reg:x3; val_offset:14103*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14103*0 + 3*93*FLEN/8, x4, x1, x2)

inst_4702:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000000003ffff; valaddr_reg:x3; val_offset:14106*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14106*0 + 3*94*FLEN/8, x4, x1, x2)

inst_4703:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000000007ffff; valaddr_reg:x3; val_offset:14109*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14109*0 + 3*95*FLEN/8, x4, x1, x2)

inst_4704:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100000000fffff; valaddr_reg:x3; val_offset:14112*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14112*0 + 3*96*FLEN/8, x4, x1, x2)

inst_4705:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100000001fffff; valaddr_reg:x3; val_offset:14115*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14115*0 + 3*97*FLEN/8, x4, x1, x2)

inst_4706:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100000003fffff; valaddr_reg:x3; val_offset:14118*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14118*0 + 3*98*FLEN/8, x4, x1, x2)

inst_4707:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100000007fffff; valaddr_reg:x3; val_offset:14121*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14121*0 + 3*99*FLEN/8, x4, x1, x2)

inst_4708:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000000ffffff; valaddr_reg:x3; val_offset:14124*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14124*0 + 3*100*FLEN/8, x4, x1, x2)

inst_4709:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000001ffffff; valaddr_reg:x3; val_offset:14127*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14127*0 + 3*101*FLEN/8, x4, x1, x2)

inst_4710:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000003ffffff; valaddr_reg:x3; val_offset:14130*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14130*0 + 3*102*FLEN/8, x4, x1, x2)

inst_4711:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000007ffffff; valaddr_reg:x3; val_offset:14133*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14133*0 + 3*103*FLEN/8, x4, x1, x2)

inst_4712:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000000fffffff; valaddr_reg:x3; val_offset:14136*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14136*0 + 3*104*FLEN/8, x4, x1, x2)

inst_4713:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000001fffffff; valaddr_reg:x3; val_offset:14139*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14139*0 + 3*105*FLEN/8, x4, x1, x2)

inst_4714:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000003fffffff; valaddr_reg:x3; val_offset:14142*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14142*0 + 3*106*FLEN/8, x4, x1, x2)

inst_4715:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000007fffffff; valaddr_reg:x3; val_offset:14145*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14145*0 + 3*107*FLEN/8, x4, x1, x2)

inst_4716:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100000ffffffff; valaddr_reg:x3; val_offset:14148*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14148*0 + 3*108*FLEN/8, x4, x1, x2)

inst_4717:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100001ffffffff; valaddr_reg:x3; val_offset:14151*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14151*0 + 3*109*FLEN/8, x4, x1, x2)

inst_4718:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100003ffffffff; valaddr_reg:x3; val_offset:14154*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14154*0 + 3*110*FLEN/8, x4, x1, x2)

inst_4719:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100007ffffffff; valaddr_reg:x3; val_offset:14157*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14157*0 + 3*111*FLEN/8, x4, x1, x2)

inst_4720:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10000fffffffff; valaddr_reg:x3; val_offset:14160*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14160*0 + 3*112*FLEN/8, x4, x1, x2)

inst_4721:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10001fffffffff; valaddr_reg:x3; val_offset:14163*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14163*0 + 3*113*FLEN/8, x4, x1, x2)

inst_4722:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10003fffffffff; valaddr_reg:x3; val_offset:14166*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14166*0 + 3*114*FLEN/8, x4, x1, x2)

inst_4723:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10007fffffffff; valaddr_reg:x3; val_offset:14169*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14169*0 + 3*115*FLEN/8, x4, x1, x2)

inst_4724:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1000ffffffffff; valaddr_reg:x3; val_offset:14172*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14172*0 + 3*116*FLEN/8, x4, x1, x2)

inst_4725:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1001ffffffffff; valaddr_reg:x3; val_offset:14175*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14175*0 + 3*117*FLEN/8, x4, x1, x2)

inst_4726:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1003ffffffffff; valaddr_reg:x3; val_offset:14178*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14178*0 + 3*118*FLEN/8, x4, x1, x2)

inst_4727:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1007ffffffffff; valaddr_reg:x3; val_offset:14181*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14181*0 + 3*119*FLEN/8, x4, x1, x2)

inst_4728:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x100fffffffffff; valaddr_reg:x3; val_offset:14184*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14184*0 + 3*120*FLEN/8, x4, x1, x2)

inst_4729:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x101fffffffffff; valaddr_reg:x3; val_offset:14187*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14187*0 + 3*121*FLEN/8, x4, x1, x2)

inst_4730:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x103fffffffffff; valaddr_reg:x3; val_offset:14190*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14190*0 + 3*122*FLEN/8, x4, x1, x2)

inst_4731:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x107fffffffffff; valaddr_reg:x3; val_offset:14193*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14193*0 + 3*123*FLEN/8, x4, x1, x2)

inst_4732:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x10ffffffffffff; valaddr_reg:x3; val_offset:14196*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14196*0 + 3*124*FLEN/8, x4, x1, x2)

inst_4733:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x11ffffffffffff; valaddr_reg:x3; val_offset:14199*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14199*0 + 3*125*FLEN/8, x4, x1, x2)

inst_4734:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x13ffffffffffff; valaddr_reg:x3; val_offset:14202*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14202*0 + 3*126*FLEN/8, x4, x1, x2)

inst_4735:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x17ffffffffffff; valaddr_reg:x3; val_offset:14205*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14205*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_4736:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x18000000000000; valaddr_reg:x3; val_offset:14208*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14208*0 + 3*128*FLEN/8, x4, x1, x2)

inst_4737:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1c000000000000; valaddr_reg:x3; val_offset:14211*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14211*0 + 3*129*FLEN/8, x4, x1, x2)

inst_4738:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1e000000000000; valaddr_reg:x3; val_offset:14214*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14214*0 + 3*130*FLEN/8, x4, x1, x2)

inst_4739:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1f000000000000; valaddr_reg:x3; val_offset:14217*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14217*0 + 3*131*FLEN/8, x4, x1, x2)

inst_4740:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1f800000000000; valaddr_reg:x3; val_offset:14220*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14220*0 + 3*132*FLEN/8, x4, x1, x2)

inst_4741:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fc00000000000; valaddr_reg:x3; val_offset:14223*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14223*0 + 3*133*FLEN/8, x4, x1, x2)

inst_4742:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fe00000000000; valaddr_reg:x3; val_offset:14226*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14226*0 + 3*134*FLEN/8, x4, x1, x2)

inst_4743:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ff00000000000; valaddr_reg:x3; val_offset:14229*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14229*0 + 3*135*FLEN/8, x4, x1, x2)

inst_4744:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ff80000000000; valaddr_reg:x3; val_offset:14232*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14232*0 + 3*136*FLEN/8, x4, x1, x2)

inst_4745:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffc0000000000; valaddr_reg:x3; val_offset:14235*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14235*0 + 3*137*FLEN/8, x4, x1, x2)

inst_4746:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffe0000000000; valaddr_reg:x3; val_offset:14238*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14238*0 + 3*138*FLEN/8, x4, x1, x2)

inst_4747:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fff0000000000; valaddr_reg:x3; val_offset:14241*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14241*0 + 3*139*FLEN/8, x4, x1, x2)

inst_4748:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fff8000000000; valaddr_reg:x3; val_offset:14244*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14244*0 + 3*140*FLEN/8, x4, x1, x2)

inst_4749:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffc000000000; valaddr_reg:x3; val_offset:14247*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14247*0 + 3*141*FLEN/8, x4, x1, x2)

inst_4750:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffe000000000; valaddr_reg:x3; val_offset:14250*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14250*0 + 3*142*FLEN/8, x4, x1, x2)

inst_4751:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffff000000000; valaddr_reg:x3; val_offset:14253*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14253*0 + 3*143*FLEN/8, x4, x1, x2)

inst_4752:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffff800000000; valaddr_reg:x3; val_offset:14256*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14256*0 + 3*144*FLEN/8, x4, x1, x2)

inst_4753:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffc00000000; valaddr_reg:x3; val_offset:14259*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14259*0 + 3*145*FLEN/8, x4, x1, x2)

inst_4754:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffe00000000; valaddr_reg:x3; val_offset:14262*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14262*0 + 3*146*FLEN/8, x4, x1, x2)

inst_4755:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffff00000000; valaddr_reg:x3; val_offset:14265*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14265*0 + 3*147*FLEN/8, x4, x1, x2)

inst_4756:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffff80000000; valaddr_reg:x3; val_offset:14268*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14268*0 + 3*148*FLEN/8, x4, x1, x2)

inst_4757:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffc0000000; valaddr_reg:x3; val_offset:14271*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14271*0 + 3*149*FLEN/8, x4, x1, x2)

inst_4758:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffe0000000; valaddr_reg:x3; val_offset:14274*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14274*0 + 3*150*FLEN/8, x4, x1, x2)

inst_4759:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffff0000000; valaddr_reg:x3; val_offset:14277*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14277*0 + 3*151*FLEN/8, x4, x1, x2)

inst_4760:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffff8000000; valaddr_reg:x3; val_offset:14280*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14280*0 + 3*152*FLEN/8, x4, x1, x2)

inst_4761:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffc000000; valaddr_reg:x3; val_offset:14283*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14283*0 + 3*153*FLEN/8, x4, x1, x2)

inst_4762:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffe000000; valaddr_reg:x3; val_offset:14286*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14286*0 + 3*154*FLEN/8, x4, x1, x2)

inst_4763:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffff000000; valaddr_reg:x3; val_offset:14289*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14289*0 + 3*155*FLEN/8, x4, x1, x2)

inst_4764:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffff800000; valaddr_reg:x3; val_offset:14292*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14292*0 + 3*156*FLEN/8, x4, x1, x2)

inst_4765:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffc00000; valaddr_reg:x3; val_offset:14295*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14295*0 + 3*157*FLEN/8, x4, x1, x2)

inst_4766:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffe00000; valaddr_reg:x3; val_offset:14298*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14298*0 + 3*158*FLEN/8, x4, x1, x2)

inst_4767:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffff00000; valaddr_reg:x3; val_offset:14301*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14301*0 + 3*159*FLEN/8, x4, x1, x2)

inst_4768:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffff80000; valaddr_reg:x3; val_offset:14304*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14304*0 + 3*160*FLEN/8, x4, x1, x2)

inst_4769:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffc0000; valaddr_reg:x3; val_offset:14307*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14307*0 + 3*161*FLEN/8, x4, x1, x2)

inst_4770:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffe0000; valaddr_reg:x3; val_offset:14310*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14310*0 + 3*162*FLEN/8, x4, x1, x2)

inst_4771:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffff0000; valaddr_reg:x3; val_offset:14313*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14313*0 + 3*163*FLEN/8, x4, x1, x2)

inst_4772:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffff8000; valaddr_reg:x3; val_offset:14316*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14316*0 + 3*164*FLEN/8, x4, x1, x2)

inst_4773:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffffc000; valaddr_reg:x3; val_offset:14319*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14319*0 + 3*165*FLEN/8, x4, x1, x2)

inst_4774:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffffe000; valaddr_reg:x3; val_offset:14322*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14322*0 + 3*166*FLEN/8, x4, x1, x2)

inst_4775:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffff000; valaddr_reg:x3; val_offset:14325*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14325*0 + 3*167*FLEN/8, x4, x1, x2)

inst_4776:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffff800; valaddr_reg:x3; val_offset:14328*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14328*0 + 3*168*FLEN/8, x4, x1, x2)

inst_4777:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffffc00; valaddr_reg:x3; val_offset:14331*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14331*0 + 3*169*FLEN/8, x4, x1, x2)

inst_4778:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffffe00; valaddr_reg:x3; val_offset:14334*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14334*0 + 3*170*FLEN/8, x4, x1, x2)

inst_4779:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffffff00; valaddr_reg:x3; val_offset:14337*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14337*0 + 3*171*FLEN/8, x4, x1, x2)

inst_4780:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffffff80; valaddr_reg:x3; val_offset:14340*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14340*0 + 3*172*FLEN/8, x4, x1, x2)

inst_4781:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:14343*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14343*0 + 3*173*FLEN/8, x4, x1, x2)

inst_4782:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:14346*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14346*0 + 3*174*FLEN/8, x4, x1, x2)

inst_4783:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:14349*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14349*0 + 3*175*FLEN/8, x4, x1, x2)

inst_4784:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:14352*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14352*0 + 3*176*FLEN/8, x4, x1, x2)

inst_4785:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:14355*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14355*0 + 3*177*FLEN/8, x4, x1, x2)

inst_4786:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:14358*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14358*0 + 3*178*FLEN/8, x4, x1, x2)

inst_4787:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2d2253995aaef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62d2253995aaef; op2val:0x0;
op3val:0x1fffffffffffff; valaddr_reg:x3; val_offset:14361*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14361*0 + 3*179*FLEN/8, x4, x1, x2)

inst_4788:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:14364*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14364*0 + 3*180*FLEN/8, x4, x1, x2)

inst_4789:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:14367*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14367*0 + 3*181*FLEN/8, x4, x1, x2)

inst_4790:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:14370*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14370*0 + 3*182*FLEN/8, x4, x1, x2)

inst_4791:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:14373*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14373*0 + 3*183*FLEN/8, x4, x1, x2)

inst_4792:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:14376*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14376*0 + 3*184*FLEN/8, x4, x1, x2)

inst_4793:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:14379*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14379*0 + 3*185*FLEN/8, x4, x1, x2)

inst_4794:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:14382*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14382*0 + 3*186*FLEN/8, x4, x1, x2)

inst_4795:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:14385*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14385*0 + 3*187*FLEN/8, x4, x1, x2)

inst_4796:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:14388*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14388*0 + 3*188*FLEN/8, x4, x1, x2)

inst_4797:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:14391*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14391*0 + 3*189*FLEN/8, x4, x1, x2)

inst_4798:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:14394*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14394*0 + 3*190*FLEN/8, x4, x1, x2)

inst_4799:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:14397*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14397*0 + 3*191*FLEN/8, x4, x1, x2)

inst_4800:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:14400*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14400*0 + 3*192*FLEN/8, x4, x1, x2)

inst_4801:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:14403*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14403*0 + 3*193*FLEN/8, x4, x1, x2)

inst_4802:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:14406*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14406*0 + 3*194*FLEN/8, x4, x1, x2)

inst_4803:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:14409*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14409*0 + 3*195*FLEN/8, x4, x1, x2)

inst_4804:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:14412*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14412*0 + 3*196*FLEN/8, x4, x1, x2)

inst_4805:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:14415*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14415*0 + 3*197*FLEN/8, x4, x1, x2)

inst_4806:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:14418*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14418*0 + 3*198*FLEN/8, x4, x1, x2)

inst_4807:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:14421*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14421*0 + 3*199*FLEN/8, x4, x1, x2)

inst_4808:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:14424*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14424*0 + 3*200*FLEN/8, x4, x1, x2)

inst_4809:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:14427*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14427*0 + 3*201*FLEN/8, x4, x1, x2)

inst_4810:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000000000000; valaddr_reg:x3; val_offset:14430*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14430*0 + 3*202*FLEN/8, x4, x1, x2)

inst_4811:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000000000001; valaddr_reg:x3; val_offset:14433*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14433*0 + 3*203*FLEN/8, x4, x1, x2)

inst_4812:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000000000003; valaddr_reg:x3; val_offset:14436*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14436*0 + 3*204*FLEN/8, x4, x1, x2)

inst_4813:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000000000007; valaddr_reg:x3; val_offset:14439*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14439*0 + 3*205*FLEN/8, x4, x1, x2)

inst_4814:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000000000000f; valaddr_reg:x3; val_offset:14442*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14442*0 + 3*206*FLEN/8, x4, x1, x2)

inst_4815:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000000000001f; valaddr_reg:x3; val_offset:14445*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14445*0 + 3*207*FLEN/8, x4, x1, x2)

inst_4816:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000000000003f; valaddr_reg:x3; val_offset:14448*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14448*0 + 3*208*FLEN/8, x4, x1, x2)

inst_4817:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000000000007f; valaddr_reg:x3; val_offset:14451*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14451*0 + 3*209*FLEN/8, x4, x1, x2)

inst_4818:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00000000000ff; valaddr_reg:x3; val_offset:14454*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14454*0 + 3*210*FLEN/8, x4, x1, x2)

inst_4819:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00000000001ff; valaddr_reg:x3; val_offset:14457*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14457*0 + 3*211*FLEN/8, x4, x1, x2)

inst_4820:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00000000003ff; valaddr_reg:x3; val_offset:14460*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14460*0 + 3*212*FLEN/8, x4, x1, x2)

inst_4821:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00000000007ff; valaddr_reg:x3; val_offset:14463*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14463*0 + 3*213*FLEN/8, x4, x1, x2)

inst_4822:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000000000fff; valaddr_reg:x3; val_offset:14466*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14466*0 + 3*214*FLEN/8, x4, x1, x2)

inst_4823:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000000001fff; valaddr_reg:x3; val_offset:14469*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14469*0 + 3*215*FLEN/8, x4, x1, x2)

inst_4824:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000000003fff; valaddr_reg:x3; val_offset:14472*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14472*0 + 3*216*FLEN/8, x4, x1, x2)

inst_4825:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000000007fff; valaddr_reg:x3; val_offset:14475*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14475*0 + 3*217*FLEN/8, x4, x1, x2)

inst_4826:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000000000ffff; valaddr_reg:x3; val_offset:14478*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14478*0 + 3*218*FLEN/8, x4, x1, x2)

inst_4827:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000000001ffff; valaddr_reg:x3; val_offset:14481*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14481*0 + 3*219*FLEN/8, x4, x1, x2)

inst_4828:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000000003ffff; valaddr_reg:x3; val_offset:14484*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14484*0 + 3*220*FLEN/8, x4, x1, x2)

inst_4829:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000000007ffff; valaddr_reg:x3; val_offset:14487*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14487*0 + 3*221*FLEN/8, x4, x1, x2)

inst_4830:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00000000fffff; valaddr_reg:x3; val_offset:14490*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14490*0 + 3*222*FLEN/8, x4, x1, x2)

inst_4831:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00000001fffff; valaddr_reg:x3; val_offset:14493*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14493*0 + 3*223*FLEN/8, x4, x1, x2)

inst_4832:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00000003fffff; valaddr_reg:x3; val_offset:14496*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14496*0 + 3*224*FLEN/8, x4, x1, x2)

inst_4833:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00000007fffff; valaddr_reg:x3; val_offset:14499*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14499*0 + 3*225*FLEN/8, x4, x1, x2)

inst_4834:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000000ffffff; valaddr_reg:x3; val_offset:14502*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14502*0 + 3*226*FLEN/8, x4, x1, x2)

inst_4835:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000001ffffff; valaddr_reg:x3; val_offset:14505*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14505*0 + 3*227*FLEN/8, x4, x1, x2)

inst_4836:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000003ffffff; valaddr_reg:x3; val_offset:14508*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14508*0 + 3*228*FLEN/8, x4, x1, x2)

inst_4837:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000007ffffff; valaddr_reg:x3; val_offset:14511*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14511*0 + 3*229*FLEN/8, x4, x1, x2)

inst_4838:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000000fffffff; valaddr_reg:x3; val_offset:14514*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14514*0 + 3*230*FLEN/8, x4, x1, x2)

inst_4839:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000001fffffff; valaddr_reg:x3; val_offset:14517*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14517*0 + 3*231*FLEN/8, x4, x1, x2)

inst_4840:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000003fffffff; valaddr_reg:x3; val_offset:14520*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14520*0 + 3*232*FLEN/8, x4, x1, x2)

inst_4841:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000007fffffff; valaddr_reg:x3; val_offset:14523*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14523*0 + 3*233*FLEN/8, x4, x1, x2)

inst_4842:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00000ffffffff; valaddr_reg:x3; val_offset:14526*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14526*0 + 3*234*FLEN/8, x4, x1, x2)

inst_4843:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00001ffffffff; valaddr_reg:x3; val_offset:14529*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14529*0 + 3*235*FLEN/8, x4, x1, x2)

inst_4844:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00003ffffffff; valaddr_reg:x3; val_offset:14532*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14532*0 + 3*236*FLEN/8, x4, x1, x2)

inst_4845:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00007ffffffff; valaddr_reg:x3; val_offset:14535*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14535*0 + 3*237*FLEN/8, x4, x1, x2)

inst_4846:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0000fffffffff; valaddr_reg:x3; val_offset:14538*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14538*0 + 3*238*FLEN/8, x4, x1, x2)

inst_4847:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0001fffffffff; valaddr_reg:x3; val_offset:14541*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14541*0 + 3*239*FLEN/8, x4, x1, x2)

inst_4848:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0003fffffffff; valaddr_reg:x3; val_offset:14544*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14544*0 + 3*240*FLEN/8, x4, x1, x2)

inst_4849:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0007fffffffff; valaddr_reg:x3; val_offset:14547*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14547*0 + 3*241*FLEN/8, x4, x1, x2)

inst_4850:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f000ffffffffff; valaddr_reg:x3; val_offset:14550*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14550*0 + 3*242*FLEN/8, x4, x1, x2)

inst_4851:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f001ffffffffff; valaddr_reg:x3; val_offset:14553*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14553*0 + 3*243*FLEN/8, x4, x1, x2)

inst_4852:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f003ffffffffff; valaddr_reg:x3; val_offset:14556*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14556*0 + 3*244*FLEN/8, x4, x1, x2)

inst_4853:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f007ffffffffff; valaddr_reg:x3; val_offset:14559*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14559*0 + 3*245*FLEN/8, x4, x1, x2)

inst_4854:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f00fffffffffff; valaddr_reg:x3; val_offset:14562*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14562*0 + 3*246*FLEN/8, x4, x1, x2)

inst_4855:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f01fffffffffff; valaddr_reg:x3; val_offset:14565*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14565*0 + 3*247*FLEN/8, x4, x1, x2)

inst_4856:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f03fffffffffff; valaddr_reg:x3; val_offset:14568*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14568*0 + 3*248*FLEN/8, x4, x1, x2)

inst_4857:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f07fffffffffff; valaddr_reg:x3; val_offset:14571*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14571*0 + 3*249*FLEN/8, x4, x1, x2)

inst_4858:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f0ffffffffffff; valaddr_reg:x3; val_offset:14574*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14574*0 + 3*250*FLEN/8, x4, x1, x2)

inst_4859:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f1ffffffffffff; valaddr_reg:x3; val_offset:14577*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14577*0 + 3*251*FLEN/8, x4, x1, x2)

inst_4860:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f3ffffffffffff; valaddr_reg:x3; val_offset:14580*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14580*0 + 3*252*FLEN/8, x4, x1, x2)

inst_4861:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f7ffffffffffff; valaddr_reg:x3; val_offset:14583*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14583*0 + 3*253*FLEN/8, x4, x1, x2)

inst_4862:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83f8000000000000; valaddr_reg:x3; val_offset:14586*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14586*0 + 3*254*FLEN/8, x4, x1, x2)

inst_4863:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fc000000000000; valaddr_reg:x3; val_offset:14589*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14589*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_4864:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fe000000000000; valaddr_reg:x3; val_offset:14592*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14592*0 + 3*256*FLEN/8, x4, x1, x2)

inst_4865:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ff000000000000; valaddr_reg:x3; val_offset:14595*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14595*0 + 3*257*FLEN/8, x4, x1, x2)

inst_4866:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ff800000000000; valaddr_reg:x3; val_offset:14598*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14598*0 + 3*258*FLEN/8, x4, x1, x2)

inst_4867:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffc00000000000; valaddr_reg:x3; val_offset:14601*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14601*0 + 3*259*FLEN/8, x4, x1, x2)

inst_4868:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffe00000000000; valaddr_reg:x3; val_offset:14604*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14604*0 + 3*260*FLEN/8, x4, x1, x2)

inst_4869:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fff00000000000; valaddr_reg:x3; val_offset:14607*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14607*0 + 3*261*FLEN/8, x4, x1, x2)

inst_4870:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fff80000000000; valaddr_reg:x3; val_offset:14610*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14610*0 + 3*262*FLEN/8, x4, x1, x2)

inst_4871:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffc0000000000; valaddr_reg:x3; val_offset:14613*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14613*0 + 3*263*FLEN/8, x4, x1, x2)

inst_4872:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffe0000000000; valaddr_reg:x3; val_offset:14616*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14616*0 + 3*264*FLEN/8, x4, x1, x2)

inst_4873:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffff0000000000; valaddr_reg:x3; val_offset:14619*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14619*0 + 3*265*FLEN/8, x4, x1, x2)

inst_4874:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffff8000000000; valaddr_reg:x3; val_offset:14622*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14622*0 + 3*266*FLEN/8, x4, x1, x2)

inst_4875:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffc000000000; valaddr_reg:x3; val_offset:14625*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14625*0 + 3*267*FLEN/8, x4, x1, x2)

inst_4876:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffe000000000; valaddr_reg:x3; val_offset:14628*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14628*0 + 3*268*FLEN/8, x4, x1, x2)

inst_4877:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffff000000000; valaddr_reg:x3; val_offset:14631*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14631*0 + 3*269*FLEN/8, x4, x1, x2)

inst_4878:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffff800000000; valaddr_reg:x3; val_offset:14634*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14634*0 + 3*270*FLEN/8, x4, x1, x2)

inst_4879:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffc00000000; valaddr_reg:x3; val_offset:14637*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14637*0 + 3*271*FLEN/8, x4, x1, x2)

inst_4880:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffe00000000; valaddr_reg:x3; val_offset:14640*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14640*0 + 3*272*FLEN/8, x4, x1, x2)

inst_4881:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffff00000000; valaddr_reg:x3; val_offset:14643*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14643*0 + 3*273*FLEN/8, x4, x1, x2)

inst_4882:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffff80000000; valaddr_reg:x3; val_offset:14646*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14646*0 + 3*274*FLEN/8, x4, x1, x2)

inst_4883:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffc0000000; valaddr_reg:x3; val_offset:14649*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14649*0 + 3*275*FLEN/8, x4, x1, x2)

inst_4884:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffe0000000; valaddr_reg:x3; val_offset:14652*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14652*0 + 3*276*FLEN/8, x4, x1, x2)

inst_4885:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffff0000000; valaddr_reg:x3; val_offset:14655*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14655*0 + 3*277*FLEN/8, x4, x1, x2)

inst_4886:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffff8000000; valaddr_reg:x3; val_offset:14658*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14658*0 + 3*278*FLEN/8, x4, x1, x2)

inst_4887:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffc000000; valaddr_reg:x3; val_offset:14661*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14661*0 + 3*279*FLEN/8, x4, x1, x2)

inst_4888:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffe000000; valaddr_reg:x3; val_offset:14664*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14664*0 + 3*280*FLEN/8, x4, x1, x2)

inst_4889:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffff000000; valaddr_reg:x3; val_offset:14667*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14667*0 + 3*281*FLEN/8, x4, x1, x2)

inst_4890:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffff800000; valaddr_reg:x3; val_offset:14670*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14670*0 + 3*282*FLEN/8, x4, x1, x2)

inst_4891:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffc00000; valaddr_reg:x3; val_offset:14673*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14673*0 + 3*283*FLEN/8, x4, x1, x2)

inst_4892:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffe00000; valaddr_reg:x3; val_offset:14676*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14676*0 + 3*284*FLEN/8, x4, x1, x2)

inst_4893:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffff00000; valaddr_reg:x3; val_offset:14679*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14679*0 + 3*285*FLEN/8, x4, x1, x2)

inst_4894:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffff80000; valaddr_reg:x3; val_offset:14682*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14682*0 + 3*286*FLEN/8, x4, x1, x2)

inst_4895:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffc0000; valaddr_reg:x3; val_offset:14685*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14685*0 + 3*287*FLEN/8, x4, x1, x2)

inst_4896:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffe0000; valaddr_reg:x3; val_offset:14688*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14688*0 + 3*288*FLEN/8, x4, x1, x2)

inst_4897:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffff0000; valaddr_reg:x3; val_offset:14691*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14691*0 + 3*289*FLEN/8, x4, x1, x2)

inst_4898:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffff8000; valaddr_reg:x3; val_offset:14694*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14694*0 + 3*290*FLEN/8, x4, x1, x2)

inst_4899:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffffc000; valaddr_reg:x3; val_offset:14697*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14697*0 + 3*291*FLEN/8, x4, x1, x2)

inst_4900:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffffe000; valaddr_reg:x3; val_offset:14700*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14700*0 + 3*292*FLEN/8, x4, x1, x2)

inst_4901:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffff000; valaddr_reg:x3; val_offset:14703*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14703*0 + 3*293*FLEN/8, x4, x1, x2)

inst_4902:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffff800; valaddr_reg:x3; val_offset:14706*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14706*0 + 3*294*FLEN/8, x4, x1, x2)

inst_4903:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffffc00; valaddr_reg:x3; val_offset:14709*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14709*0 + 3*295*FLEN/8, x4, x1, x2)

inst_4904:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffffe00; valaddr_reg:x3; val_offset:14712*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14712*0 + 3*296*FLEN/8, x4, x1, x2)

inst_4905:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffffff00; valaddr_reg:x3; val_offset:14715*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14715*0 + 3*297*FLEN/8, x4, x1, x2)

inst_4906:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffffff80; valaddr_reg:x3; val_offset:14718*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14718*0 + 3*298*FLEN/8, x4, x1, x2)

inst_4907:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffffffc0; valaddr_reg:x3; val_offset:14721*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14721*0 + 3*299*FLEN/8, x4, x1, x2)

inst_4908:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffffffe0; valaddr_reg:x3; val_offset:14724*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14724*0 + 3*300*FLEN/8, x4, x1, x2)

inst_4909:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffffff0; valaddr_reg:x3; val_offset:14727*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14727*0 + 3*301*FLEN/8, x4, x1, x2)

inst_4910:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffffff8; valaddr_reg:x3; val_offset:14730*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14730*0 + 3*302*FLEN/8, x4, x1, x2)

inst_4911:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffffffc; valaddr_reg:x3; val_offset:14733*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14733*0 + 3*303*FLEN/8, x4, x1, x2)

inst_4912:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83fffffffffffffe; valaddr_reg:x3; val_offset:14736*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14736*0 + 3*304*FLEN/8, x4, x1, x2)

inst_4913:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x2f9d33403a65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f62f9d33403a65f; op2val:0x8000;
op3val:0x83ffffffffffffff; valaddr_reg:x3; val_offset:14739*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14739*0 + 3*305*FLEN/8, x4, x1, x2)

inst_4914:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:14742*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14742*0 + 3*306*FLEN/8, x4, x1, x2)

inst_4915:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:14745*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14745*0 + 3*307*FLEN/8, x4, x1, x2)

inst_4916:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:14748*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14748*0 + 3*308*FLEN/8, x4, x1, x2)

inst_4917:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:14751*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14751*0 + 3*309*FLEN/8, x4, x1, x2)

inst_4918:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:14754*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14754*0 + 3*310*FLEN/8, x4, x1, x2)

inst_4919:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:14757*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14757*0 + 3*311*FLEN/8, x4, x1, x2)

inst_4920:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:14760*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14760*0 + 3*312*FLEN/8, x4, x1, x2)

inst_4921:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:14763*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14763*0 + 3*313*FLEN/8, x4, x1, x2)

inst_4922:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:14766*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14766*0 + 3*314*FLEN/8, x4, x1, x2)

inst_4923:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:14769*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14769*0 + 3*315*FLEN/8, x4, x1, x2)

inst_4924:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:14772*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14772*0 + 3*316*FLEN/8, x4, x1, x2)

inst_4925:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:14775*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14775*0 + 3*317*FLEN/8, x4, x1, x2)

inst_4926:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:14778*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14778*0 + 3*318*FLEN/8, x4, x1, x2)

inst_4927:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:14781*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14781*0 + 3*319*FLEN/8, x4, x1, x2)

inst_4928:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:14784*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14784*0 + 3*320*FLEN/8, x4, x1, x2)

inst_4929:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:14787*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14787*0 + 3*321*FLEN/8, x4, x1, x2)

inst_4930:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:14790*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14790*0 + 3*322*FLEN/8, x4, x1, x2)

inst_4931:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:14793*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14793*0 + 3*323*FLEN/8, x4, x1, x2)

inst_4932:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:14796*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14796*0 + 3*324*FLEN/8, x4, x1, x2)

inst_4933:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:14799*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14799*0 + 3*325*FLEN/8, x4, x1, x2)

inst_4934:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:14802*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14802*0 + 3*326*FLEN/8, x4, x1, x2)

inst_4935:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:14805*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14805*0 + 3*327*FLEN/8, x4, x1, x2)

inst_4936:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000000000000; valaddr_reg:x3; val_offset:14808*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14808*0 + 3*328*FLEN/8, x4, x1, x2)

inst_4937:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000000000001; valaddr_reg:x3; val_offset:14811*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14811*0 + 3*329*FLEN/8, x4, x1, x2)

inst_4938:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000000000003; valaddr_reg:x3; val_offset:14814*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14814*0 + 3*330*FLEN/8, x4, x1, x2)

inst_4939:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000000000007; valaddr_reg:x3; val_offset:14817*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14817*0 + 3*331*FLEN/8, x4, x1, x2)

inst_4940:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000000000000f; valaddr_reg:x3; val_offset:14820*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14820*0 + 3*332*FLEN/8, x4, x1, x2)

inst_4941:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000000000001f; valaddr_reg:x3; val_offset:14823*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14823*0 + 3*333*FLEN/8, x4, x1, x2)

inst_4942:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000000000003f; valaddr_reg:x3; val_offset:14826*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14826*0 + 3*334*FLEN/8, x4, x1, x2)

inst_4943:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000000000007f; valaddr_reg:x3; val_offset:14829*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14829*0 + 3*335*FLEN/8, x4, x1, x2)

inst_4944:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00000000000ff; valaddr_reg:x3; val_offset:14832*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14832*0 + 3*336*FLEN/8, x4, x1, x2)

inst_4945:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00000000001ff; valaddr_reg:x3; val_offset:14835*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14835*0 + 3*337*FLEN/8, x4, x1, x2)

inst_4946:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00000000003ff; valaddr_reg:x3; val_offset:14838*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14838*0 + 3*338*FLEN/8, x4, x1, x2)

inst_4947:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00000000007ff; valaddr_reg:x3; val_offset:14841*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14841*0 + 3*339*FLEN/8, x4, x1, x2)

inst_4948:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000000000fff; valaddr_reg:x3; val_offset:14844*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14844*0 + 3*340*FLEN/8, x4, x1, x2)

inst_4949:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000000001fff; valaddr_reg:x3; val_offset:14847*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14847*0 + 3*341*FLEN/8, x4, x1, x2)

inst_4950:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000000003fff; valaddr_reg:x3; val_offset:14850*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14850*0 + 3*342*FLEN/8, x4, x1, x2)

inst_4951:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000000007fff; valaddr_reg:x3; val_offset:14853*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14853*0 + 3*343*FLEN/8, x4, x1, x2)

inst_4952:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000000000ffff; valaddr_reg:x3; val_offset:14856*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14856*0 + 3*344*FLEN/8, x4, x1, x2)

inst_4953:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000000001ffff; valaddr_reg:x3; val_offset:14859*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14859*0 + 3*345*FLEN/8, x4, x1, x2)

inst_4954:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000000003ffff; valaddr_reg:x3; val_offset:14862*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14862*0 + 3*346*FLEN/8, x4, x1, x2)

inst_4955:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000000007ffff; valaddr_reg:x3; val_offset:14865*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14865*0 + 3*347*FLEN/8, x4, x1, x2)

inst_4956:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00000000fffff; valaddr_reg:x3; val_offset:14868*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14868*0 + 3*348*FLEN/8, x4, x1, x2)

inst_4957:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00000001fffff; valaddr_reg:x3; val_offset:14871*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14871*0 + 3*349*FLEN/8, x4, x1, x2)

inst_4958:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00000003fffff; valaddr_reg:x3; val_offset:14874*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14874*0 + 3*350*FLEN/8, x4, x1, x2)

inst_4959:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00000007fffff; valaddr_reg:x3; val_offset:14877*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14877*0 + 3*351*FLEN/8, x4, x1, x2)

inst_4960:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000000ffffff; valaddr_reg:x3; val_offset:14880*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14880*0 + 3*352*FLEN/8, x4, x1, x2)

inst_4961:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000001ffffff; valaddr_reg:x3; val_offset:14883*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14883*0 + 3*353*FLEN/8, x4, x1, x2)

inst_4962:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000003ffffff; valaddr_reg:x3; val_offset:14886*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14886*0 + 3*354*FLEN/8, x4, x1, x2)

inst_4963:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000007ffffff; valaddr_reg:x3; val_offset:14889*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14889*0 + 3*355*FLEN/8, x4, x1, x2)

inst_4964:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000000fffffff; valaddr_reg:x3; val_offset:14892*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14892*0 + 3*356*FLEN/8, x4, x1, x2)

inst_4965:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000001fffffff; valaddr_reg:x3; val_offset:14895*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14895*0 + 3*357*FLEN/8, x4, x1, x2)

inst_4966:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000003fffffff; valaddr_reg:x3; val_offset:14898*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14898*0 + 3*358*FLEN/8, x4, x1, x2)

inst_4967:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000007fffffff; valaddr_reg:x3; val_offset:14901*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14901*0 + 3*359*FLEN/8, x4, x1, x2)

inst_4968:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00000ffffffff; valaddr_reg:x3; val_offset:14904*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14904*0 + 3*360*FLEN/8, x4, x1, x2)

inst_4969:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00001ffffffff; valaddr_reg:x3; val_offset:14907*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14907*0 + 3*361*FLEN/8, x4, x1, x2)

inst_4970:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00003ffffffff; valaddr_reg:x3; val_offset:14910*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14910*0 + 3*362*FLEN/8, x4, x1, x2)

inst_4971:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00007ffffffff; valaddr_reg:x3; val_offset:14913*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14913*0 + 3*363*FLEN/8, x4, x1, x2)

inst_4972:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0000fffffffff; valaddr_reg:x3; val_offset:14916*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14916*0 + 3*364*FLEN/8, x4, x1, x2)

inst_4973:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0001fffffffff; valaddr_reg:x3; val_offset:14919*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14919*0 + 3*365*FLEN/8, x4, x1, x2)

inst_4974:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0003fffffffff; valaddr_reg:x3; val_offset:14922*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14922*0 + 3*366*FLEN/8, x4, x1, x2)

inst_4975:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0007fffffffff; valaddr_reg:x3; val_offset:14925*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14925*0 + 3*367*FLEN/8, x4, x1, x2)

inst_4976:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b000ffffffffff; valaddr_reg:x3; val_offset:14928*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14928*0 + 3*368*FLEN/8, x4, x1, x2)

inst_4977:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b001ffffffffff; valaddr_reg:x3; val_offset:14931*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14931*0 + 3*369*FLEN/8, x4, x1, x2)

inst_4978:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b003ffffffffff; valaddr_reg:x3; val_offset:14934*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14934*0 + 3*370*FLEN/8, x4, x1, x2)

inst_4979:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b007ffffffffff; valaddr_reg:x3; val_offset:14937*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14937*0 + 3*371*FLEN/8, x4, x1, x2)

inst_4980:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b00fffffffffff; valaddr_reg:x3; val_offset:14940*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14940*0 + 3*372*FLEN/8, x4, x1, x2)

inst_4981:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b01fffffffffff; valaddr_reg:x3; val_offset:14943*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14943*0 + 3*373*FLEN/8, x4, x1, x2)

inst_4982:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b03fffffffffff; valaddr_reg:x3; val_offset:14946*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14946*0 + 3*374*FLEN/8, x4, x1, x2)

inst_4983:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b07fffffffffff; valaddr_reg:x3; val_offset:14949*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14949*0 + 3*375*FLEN/8, x4, x1, x2)

inst_4984:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b0ffffffffffff; valaddr_reg:x3; val_offset:14952*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14952*0 + 3*376*FLEN/8, x4, x1, x2)

inst_4985:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b1ffffffffffff; valaddr_reg:x3; val_offset:14955*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14955*0 + 3*377*FLEN/8, x4, x1, x2)

inst_4986:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b3ffffffffffff; valaddr_reg:x3; val_offset:14958*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14958*0 + 3*378*FLEN/8, x4, x1, x2)

inst_4987:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b7ffffffffffff; valaddr_reg:x3; val_offset:14961*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14961*0 + 3*379*FLEN/8, x4, x1, x2)

inst_4988:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2b8000000000000; valaddr_reg:x3; val_offset:14964*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14964*0 + 3*380*FLEN/8, x4, x1, x2)

inst_4989:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bc000000000000; valaddr_reg:x3; val_offset:14967*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14967*0 + 3*381*FLEN/8, x4, x1, x2)

inst_4990:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2be000000000000; valaddr_reg:x3; val_offset:14970*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14970*0 + 3*382*FLEN/8, x4, x1, x2)

inst_4991:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bf000000000000; valaddr_reg:x3; val_offset:14973*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14973*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_4992:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bf800000000000; valaddr_reg:x3; val_offset:14976*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14976*0 + 3*384*FLEN/8, x4, x1, x2)

inst_4993:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfc00000000000; valaddr_reg:x3; val_offset:14979*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14979*0 + 3*385*FLEN/8, x4, x1, x2)

inst_4994:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfe00000000000; valaddr_reg:x3; val_offset:14982*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14982*0 + 3*386*FLEN/8, x4, x1, x2)

inst_4995:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bff00000000000; valaddr_reg:x3; val_offset:14985*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14985*0 + 3*387*FLEN/8, x4, x1, x2)

inst_4996:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bff80000000000; valaddr_reg:x3; val_offset:14988*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14988*0 + 3*388*FLEN/8, x4, x1, x2)

inst_4997:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffc0000000000; valaddr_reg:x3; val_offset:14991*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14991*0 + 3*389*FLEN/8, x4, x1, x2)

inst_4998:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffe0000000000; valaddr_reg:x3; val_offset:14994*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14994*0 + 3*390*FLEN/8, x4, x1, x2)

inst_4999:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfff0000000000; valaddr_reg:x3; val_offset:14997*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 14997*0 + 3*391*FLEN/8, x4, x1, x2)

inst_5000:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfff8000000000; valaddr_reg:x3; val_offset:15000*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15000*0 + 3*392*FLEN/8, x4, x1, x2)

inst_5001:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffc000000000; valaddr_reg:x3; val_offset:15003*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15003*0 + 3*393*FLEN/8, x4, x1, x2)

inst_5002:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffe000000000; valaddr_reg:x3; val_offset:15006*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15006*0 + 3*394*FLEN/8, x4, x1, x2)

inst_5003:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffff000000000; valaddr_reg:x3; val_offset:15009*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15009*0 + 3*395*FLEN/8, x4, x1, x2)

inst_5004:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffff800000000; valaddr_reg:x3; val_offset:15012*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15012*0 + 3*396*FLEN/8, x4, x1, x2)

inst_5005:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffc00000000; valaddr_reg:x3; val_offset:15015*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15015*0 + 3*397*FLEN/8, x4, x1, x2)

inst_5006:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffe00000000; valaddr_reg:x3; val_offset:15018*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15018*0 + 3*398*FLEN/8, x4, x1, x2)

inst_5007:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffff00000000; valaddr_reg:x3; val_offset:15021*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15021*0 + 3*399*FLEN/8, x4, x1, x2)

inst_5008:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffff80000000; valaddr_reg:x3; val_offset:15024*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15024*0 + 3*400*FLEN/8, x4, x1, x2)

inst_5009:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffc0000000; valaddr_reg:x3; val_offset:15027*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15027*0 + 3*401*FLEN/8, x4, x1, x2)

inst_5010:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffe0000000; valaddr_reg:x3; val_offset:15030*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15030*0 + 3*402*FLEN/8, x4, x1, x2)

inst_5011:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffff0000000; valaddr_reg:x3; val_offset:15033*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15033*0 + 3*403*FLEN/8, x4, x1, x2)

inst_5012:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffff8000000; valaddr_reg:x3; val_offset:15036*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15036*0 + 3*404*FLEN/8, x4, x1, x2)

inst_5013:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffc000000; valaddr_reg:x3; val_offset:15039*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15039*0 + 3*405*FLEN/8, x4, x1, x2)

inst_5014:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffe000000; valaddr_reg:x3; val_offset:15042*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15042*0 + 3*406*FLEN/8, x4, x1, x2)

inst_5015:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffff000000; valaddr_reg:x3; val_offset:15045*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15045*0 + 3*407*FLEN/8, x4, x1, x2)

inst_5016:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffff800000; valaddr_reg:x3; val_offset:15048*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15048*0 + 3*408*FLEN/8, x4, x1, x2)

inst_5017:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffc00000; valaddr_reg:x3; val_offset:15051*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15051*0 + 3*409*FLEN/8, x4, x1, x2)

inst_5018:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffe00000; valaddr_reg:x3; val_offset:15054*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15054*0 + 3*410*FLEN/8, x4, x1, x2)

inst_5019:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffff00000; valaddr_reg:x3; val_offset:15057*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15057*0 + 3*411*FLEN/8, x4, x1, x2)

inst_5020:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffff80000; valaddr_reg:x3; val_offset:15060*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15060*0 + 3*412*FLEN/8, x4, x1, x2)

inst_5021:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffc0000; valaddr_reg:x3; val_offset:15063*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15063*0 + 3*413*FLEN/8, x4, x1, x2)

inst_5022:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffe0000; valaddr_reg:x3; val_offset:15066*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15066*0 + 3*414*FLEN/8, x4, x1, x2)

inst_5023:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffff0000; valaddr_reg:x3; val_offset:15069*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15069*0 + 3*415*FLEN/8, x4, x1, x2)

inst_5024:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffff8000; valaddr_reg:x3; val_offset:15072*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15072*0 + 3*416*FLEN/8, x4, x1, x2)

inst_5025:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffffc000; valaddr_reg:x3; val_offset:15075*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15075*0 + 3*417*FLEN/8, x4, x1, x2)

inst_5026:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffffe000; valaddr_reg:x3; val_offset:15078*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15078*0 + 3*418*FLEN/8, x4, x1, x2)

inst_5027:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffff000; valaddr_reg:x3; val_offset:15081*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15081*0 + 3*419*FLEN/8, x4, x1, x2)

inst_5028:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffff800; valaddr_reg:x3; val_offset:15084*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15084*0 + 3*420*FLEN/8, x4, x1, x2)

inst_5029:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffffc00; valaddr_reg:x3; val_offset:15087*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15087*0 + 3*421*FLEN/8, x4, x1, x2)

inst_5030:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffffe00; valaddr_reg:x3; val_offset:15090*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15090*0 + 3*422*FLEN/8, x4, x1, x2)

inst_5031:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffffff00; valaddr_reg:x3; val_offset:15093*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15093*0 + 3*423*FLEN/8, x4, x1, x2)

inst_5032:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffffff80; valaddr_reg:x3; val_offset:15096*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15096*0 + 3*424*FLEN/8, x4, x1, x2)

inst_5033:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffffffc0; valaddr_reg:x3; val_offset:15099*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15099*0 + 3*425*FLEN/8, x4, x1, x2)

inst_5034:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffffffe0; valaddr_reg:x3; val_offset:15102*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15102*0 + 3*426*FLEN/8, x4, x1, x2)

inst_5035:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffffff0; valaddr_reg:x3; val_offset:15105*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15105*0 + 3*427*FLEN/8, x4, x1, x2)

inst_5036:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffffff8; valaddr_reg:x3; val_offset:15108*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15108*0 + 3*428*FLEN/8, x4, x1, x2)

inst_5037:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffffffc; valaddr_reg:x3; val_offset:15111*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15111*0 + 3*429*FLEN/8, x4, x1, x2)

inst_5038:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bffffffffffffe; valaddr_reg:x3; val_offset:15114*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15114*0 + 3*430*FLEN/8, x4, x1, x2)

inst_5039:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x311236e0f6f0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6311236e0f6f0f; op2val:0x0;
op3val:0x2bfffffffffffff; valaddr_reg:x3; val_offset:15117*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15117*0 + 3*431*FLEN/8, x4, x1, x2)

inst_5040:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:15120*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15120*0 + 3*432*FLEN/8, x4, x1, x2)

inst_5041:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:15123*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15123*0 + 3*433*FLEN/8, x4, x1, x2)

inst_5042:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:15126*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15126*0 + 3*434*FLEN/8, x4, x1, x2)

inst_5043:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:15129*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15129*0 + 3*435*FLEN/8, x4, x1, x2)

inst_5044:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:15132*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15132*0 + 3*436*FLEN/8, x4, x1, x2)

inst_5045:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:15135*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15135*0 + 3*437*FLEN/8, x4, x1, x2)

inst_5046:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:15138*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15138*0 + 3*438*FLEN/8, x4, x1, x2)

inst_5047:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:15141*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15141*0 + 3*439*FLEN/8, x4, x1, x2)

inst_5048:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:15144*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15144*0 + 3*440*FLEN/8, x4, x1, x2)

inst_5049:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:15147*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15147*0 + 3*441*FLEN/8, x4, x1, x2)

inst_5050:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:15150*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15150*0 + 3*442*FLEN/8, x4, x1, x2)

inst_5051:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:15153*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15153*0 + 3*443*FLEN/8, x4, x1, x2)

inst_5052:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:15156*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15156*0 + 3*444*FLEN/8, x4, x1, x2)

inst_5053:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:15159*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15159*0 + 3*445*FLEN/8, x4, x1, x2)

inst_5054:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:15162*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15162*0 + 3*446*FLEN/8, x4, x1, x2)

inst_5055:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:15165*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15165*0 + 3*447*FLEN/8, x4, x1, x2)

inst_5056:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:15168*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15168*0 + 3*448*FLEN/8, x4, x1, x2)

inst_5057:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:15171*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15171*0 + 3*449*FLEN/8, x4, x1, x2)

inst_5058:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:15174*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15174*0 + 3*450*FLEN/8, x4, x1, x2)

inst_5059:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:15177*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15177*0 + 3*451*FLEN/8, x4, x1, x2)

inst_5060:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:15180*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15180*0 + 3*452*FLEN/8, x4, x1, x2)

inst_5061:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:15183*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15183*0 + 3*453*FLEN/8, x4, x1, x2)

inst_5062:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000000000000; valaddr_reg:x3; val_offset:15186*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15186*0 + 3*454*FLEN/8, x4, x1, x2)

inst_5063:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000000000001; valaddr_reg:x3; val_offset:15189*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15189*0 + 3*455*FLEN/8, x4, x1, x2)

inst_5064:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000000000003; valaddr_reg:x3; val_offset:15192*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15192*0 + 3*456*FLEN/8, x4, x1, x2)

inst_5065:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000000000007; valaddr_reg:x3; val_offset:15195*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15195*0 + 3*457*FLEN/8, x4, x1, x2)

inst_5066:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000000000000f; valaddr_reg:x3; val_offset:15198*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15198*0 + 3*458*FLEN/8, x4, x1, x2)

inst_5067:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000000000001f; valaddr_reg:x3; val_offset:15201*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15201*0 + 3*459*FLEN/8, x4, x1, x2)

inst_5068:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000000000003f; valaddr_reg:x3; val_offset:15204*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15204*0 + 3*460*FLEN/8, x4, x1, x2)

inst_5069:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000000000007f; valaddr_reg:x3; val_offset:15207*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15207*0 + 3*461*FLEN/8, x4, x1, x2)

inst_5070:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100000000000ff; valaddr_reg:x3; val_offset:15210*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15210*0 + 3*462*FLEN/8, x4, x1, x2)

inst_5071:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100000000001ff; valaddr_reg:x3; val_offset:15213*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15213*0 + 3*463*FLEN/8, x4, x1, x2)

inst_5072:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100000000003ff; valaddr_reg:x3; val_offset:15216*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15216*0 + 3*464*FLEN/8, x4, x1, x2)

inst_5073:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100000000007ff; valaddr_reg:x3; val_offset:15219*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15219*0 + 3*465*FLEN/8, x4, x1, x2)

inst_5074:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000000000fff; valaddr_reg:x3; val_offset:15222*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15222*0 + 3*466*FLEN/8, x4, x1, x2)

inst_5075:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000000001fff; valaddr_reg:x3; val_offset:15225*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15225*0 + 3*467*FLEN/8, x4, x1, x2)

inst_5076:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000000003fff; valaddr_reg:x3; val_offset:15228*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15228*0 + 3*468*FLEN/8, x4, x1, x2)

inst_5077:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000000007fff; valaddr_reg:x3; val_offset:15231*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15231*0 + 3*469*FLEN/8, x4, x1, x2)

inst_5078:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000000000ffff; valaddr_reg:x3; val_offset:15234*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15234*0 + 3*470*FLEN/8, x4, x1, x2)

inst_5079:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000000001ffff; valaddr_reg:x3; val_offset:15237*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15237*0 + 3*471*FLEN/8, x4, x1, x2)

inst_5080:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000000003ffff; valaddr_reg:x3; val_offset:15240*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15240*0 + 3*472*FLEN/8, x4, x1, x2)

inst_5081:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000000007ffff; valaddr_reg:x3; val_offset:15243*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15243*0 + 3*473*FLEN/8, x4, x1, x2)

inst_5082:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100000000fffff; valaddr_reg:x3; val_offset:15246*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15246*0 + 3*474*FLEN/8, x4, x1, x2)

inst_5083:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100000001fffff; valaddr_reg:x3; val_offset:15249*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15249*0 + 3*475*FLEN/8, x4, x1, x2)

inst_5084:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100000003fffff; valaddr_reg:x3; val_offset:15252*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15252*0 + 3*476*FLEN/8, x4, x1, x2)

inst_5085:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100000007fffff; valaddr_reg:x3; val_offset:15255*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15255*0 + 3*477*FLEN/8, x4, x1, x2)

inst_5086:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000000ffffff; valaddr_reg:x3; val_offset:15258*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15258*0 + 3*478*FLEN/8, x4, x1, x2)

inst_5087:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000001ffffff; valaddr_reg:x3; val_offset:15261*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15261*0 + 3*479*FLEN/8, x4, x1, x2)

inst_5088:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000003ffffff; valaddr_reg:x3; val_offset:15264*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15264*0 + 3*480*FLEN/8, x4, x1, x2)

inst_5089:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000007ffffff; valaddr_reg:x3; val_offset:15267*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15267*0 + 3*481*FLEN/8, x4, x1, x2)

inst_5090:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000000fffffff; valaddr_reg:x3; val_offset:15270*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15270*0 + 3*482*FLEN/8, x4, x1, x2)

inst_5091:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000001fffffff; valaddr_reg:x3; val_offset:15273*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15273*0 + 3*483*FLEN/8, x4, x1, x2)

inst_5092:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000003fffffff; valaddr_reg:x3; val_offset:15276*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15276*0 + 3*484*FLEN/8, x4, x1, x2)

inst_5093:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000007fffffff; valaddr_reg:x3; val_offset:15279*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15279*0 + 3*485*FLEN/8, x4, x1, x2)

inst_5094:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100000ffffffff; valaddr_reg:x3; val_offset:15282*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15282*0 + 3*486*FLEN/8, x4, x1, x2)

inst_5095:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100001ffffffff; valaddr_reg:x3; val_offset:15285*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15285*0 + 3*487*FLEN/8, x4, x1, x2)

inst_5096:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100003ffffffff; valaddr_reg:x3; val_offset:15288*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15288*0 + 3*488*FLEN/8, x4, x1, x2)

inst_5097:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100007ffffffff; valaddr_reg:x3; val_offset:15291*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15291*0 + 3*489*FLEN/8, x4, x1, x2)

inst_5098:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310000fffffffff; valaddr_reg:x3; val_offset:15294*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15294*0 + 3*490*FLEN/8, x4, x1, x2)

inst_5099:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310001fffffffff; valaddr_reg:x3; val_offset:15297*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15297*0 + 3*491*FLEN/8, x4, x1, x2)

inst_5100:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310003fffffffff; valaddr_reg:x3; val_offset:15300*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15300*0 + 3*492*FLEN/8, x4, x1, x2)

inst_5101:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310007fffffffff; valaddr_reg:x3; val_offset:15303*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15303*0 + 3*493*FLEN/8, x4, x1, x2)

inst_5102:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831000ffffffffff; valaddr_reg:x3; val_offset:15306*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15306*0 + 3*494*FLEN/8, x4, x1, x2)

inst_5103:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831001ffffffffff; valaddr_reg:x3; val_offset:15309*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15309*0 + 3*495*FLEN/8, x4, x1, x2)

inst_5104:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831003ffffffffff; valaddr_reg:x3; val_offset:15312*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15312*0 + 3*496*FLEN/8, x4, x1, x2)

inst_5105:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831007ffffffffff; valaddr_reg:x3; val_offset:15315*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15315*0 + 3*497*FLEN/8, x4, x1, x2)

inst_5106:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83100fffffffffff; valaddr_reg:x3; val_offset:15318*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15318*0 + 3*498*FLEN/8, x4, x1, x2)

inst_5107:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83101fffffffffff; valaddr_reg:x3; val_offset:15321*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15321*0 + 3*499*FLEN/8, x4, x1, x2)

inst_5108:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83103fffffffffff; valaddr_reg:x3; val_offset:15324*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15324*0 + 3*500*FLEN/8, x4, x1, x2)

inst_5109:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x83107fffffffffff; valaddr_reg:x3; val_offset:15327*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15327*0 + 3*501*FLEN/8, x4, x1, x2)

inst_5110:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8310ffffffffffff; valaddr_reg:x3; val_offset:15330*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15330*0 + 3*502*FLEN/8, x4, x1, x2)

inst_5111:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8311ffffffffffff; valaddr_reg:x3; val_offset:15333*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15333*0 + 3*503*FLEN/8, x4, x1, x2)

inst_5112:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8313ffffffffffff; valaddr_reg:x3; val_offset:15336*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15336*0 + 3*504*FLEN/8, x4, x1, x2)

inst_5113:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8317ffffffffffff; valaddr_reg:x3; val_offset:15339*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15339*0 + 3*505*FLEN/8, x4, x1, x2)

inst_5114:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x8318000000000000; valaddr_reg:x3; val_offset:15342*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15342*0 + 3*506*FLEN/8, x4, x1, x2)

inst_5115:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831c000000000000; valaddr_reg:x3; val_offset:15345*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15345*0 + 3*507*FLEN/8, x4, x1, x2)

inst_5116:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831e000000000000; valaddr_reg:x3; val_offset:15348*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15348*0 + 3*508*FLEN/8, x4, x1, x2)

inst_5117:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831f000000000000; valaddr_reg:x3; val_offset:15351*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15351*0 + 3*509*FLEN/8, x4, x1, x2)

inst_5118:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831f800000000000; valaddr_reg:x3; val_offset:15354*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15354*0 + 3*510*FLEN/8, x4, x1, x2)

inst_5119:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fc00000000000; valaddr_reg:x3; val_offset:15357*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15357*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_5120:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fe00000000000; valaddr_reg:x3; val_offset:15360*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15360*0 + 3*512*FLEN/8, x4, x1, x2)

inst_5121:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ff00000000000; valaddr_reg:x3; val_offset:15363*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15363*0 + 3*513*FLEN/8, x4, x1, x2)

inst_5122:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ff80000000000; valaddr_reg:x3; val_offset:15366*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15366*0 + 3*514*FLEN/8, x4, x1, x2)

inst_5123:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffc0000000000; valaddr_reg:x3; val_offset:15369*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15369*0 + 3*515*FLEN/8, x4, x1, x2)

inst_5124:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffe0000000000; valaddr_reg:x3; val_offset:15372*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15372*0 + 3*516*FLEN/8, x4, x1, x2)

inst_5125:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fff0000000000; valaddr_reg:x3; val_offset:15375*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15375*0 + 3*517*FLEN/8, x4, x1, x2)

inst_5126:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fff8000000000; valaddr_reg:x3; val_offset:15378*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15378*0 + 3*518*FLEN/8, x4, x1, x2)

inst_5127:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffc000000000; valaddr_reg:x3; val_offset:15381*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15381*0 + 3*519*FLEN/8, x4, x1, x2)

inst_5128:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffe000000000; valaddr_reg:x3; val_offset:15384*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15384*0 + 3*520*FLEN/8, x4, x1, x2)

inst_5129:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffff000000000; valaddr_reg:x3; val_offset:15387*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15387*0 + 3*521*FLEN/8, x4, x1, x2)

inst_5130:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffff800000000; valaddr_reg:x3; val_offset:15390*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15390*0 + 3*522*FLEN/8, x4, x1, x2)

inst_5131:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffc00000000; valaddr_reg:x3; val_offset:15393*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15393*0 + 3*523*FLEN/8, x4, x1, x2)

inst_5132:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffe00000000; valaddr_reg:x3; val_offset:15396*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15396*0 + 3*524*FLEN/8, x4, x1, x2)

inst_5133:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffff00000000; valaddr_reg:x3; val_offset:15399*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15399*0 + 3*525*FLEN/8, x4, x1, x2)

inst_5134:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffff80000000; valaddr_reg:x3; val_offset:15402*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15402*0 + 3*526*FLEN/8, x4, x1, x2)

inst_5135:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffc0000000; valaddr_reg:x3; val_offset:15405*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15405*0 + 3*527*FLEN/8, x4, x1, x2)

inst_5136:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffe0000000; valaddr_reg:x3; val_offset:15408*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15408*0 + 3*528*FLEN/8, x4, x1, x2)

inst_5137:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffff0000000; valaddr_reg:x3; val_offset:15411*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15411*0 + 3*529*FLEN/8, x4, x1, x2)

inst_5138:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffff8000000; valaddr_reg:x3; val_offset:15414*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15414*0 + 3*530*FLEN/8, x4, x1, x2)

inst_5139:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffc000000; valaddr_reg:x3; val_offset:15417*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15417*0 + 3*531*FLEN/8, x4, x1, x2)

inst_5140:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffe000000; valaddr_reg:x3; val_offset:15420*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15420*0 + 3*532*FLEN/8, x4, x1, x2)

inst_5141:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffff000000; valaddr_reg:x3; val_offset:15423*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15423*0 + 3*533*FLEN/8, x4, x1, x2)

inst_5142:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffff800000; valaddr_reg:x3; val_offset:15426*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15426*0 + 3*534*FLEN/8, x4, x1, x2)

inst_5143:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffc00000; valaddr_reg:x3; val_offset:15429*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15429*0 + 3*535*FLEN/8, x4, x1, x2)

inst_5144:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffe00000; valaddr_reg:x3; val_offset:15432*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15432*0 + 3*536*FLEN/8, x4, x1, x2)

inst_5145:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffff00000; valaddr_reg:x3; val_offset:15435*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15435*0 + 3*537*FLEN/8, x4, x1, x2)

inst_5146:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffff80000; valaddr_reg:x3; val_offset:15438*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15438*0 + 3*538*FLEN/8, x4, x1, x2)

inst_5147:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffc0000; valaddr_reg:x3; val_offset:15441*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15441*0 + 3*539*FLEN/8, x4, x1, x2)

inst_5148:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffe0000; valaddr_reg:x3; val_offset:15444*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15444*0 + 3*540*FLEN/8, x4, x1, x2)

inst_5149:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffff0000; valaddr_reg:x3; val_offset:15447*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15447*0 + 3*541*FLEN/8, x4, x1, x2)

inst_5150:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffff8000; valaddr_reg:x3; val_offset:15450*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15450*0 + 3*542*FLEN/8, x4, x1, x2)

inst_5151:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffffc000; valaddr_reg:x3; val_offset:15453*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15453*0 + 3*543*FLEN/8, x4, x1, x2)

inst_5152:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffffe000; valaddr_reg:x3; val_offset:15456*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15456*0 + 3*544*FLEN/8, x4, x1, x2)

inst_5153:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffff000; valaddr_reg:x3; val_offset:15459*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15459*0 + 3*545*FLEN/8, x4, x1, x2)

inst_5154:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffff800; valaddr_reg:x3; val_offset:15462*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15462*0 + 3*546*FLEN/8, x4, x1, x2)

inst_5155:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffffc00; valaddr_reg:x3; val_offset:15465*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15465*0 + 3*547*FLEN/8, x4, x1, x2)

inst_5156:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffffe00; valaddr_reg:x3; val_offset:15468*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15468*0 + 3*548*FLEN/8, x4, x1, x2)

inst_5157:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffffff00; valaddr_reg:x3; val_offset:15471*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15471*0 + 3*549*FLEN/8, x4, x1, x2)

inst_5158:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffffff80; valaddr_reg:x3; val_offset:15474*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15474*0 + 3*550*FLEN/8, x4, x1, x2)

inst_5159:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffffffc0; valaddr_reg:x3; val_offset:15477*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15477*0 + 3*551*FLEN/8, x4, x1, x2)

inst_5160:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffffffe0; valaddr_reg:x3; val_offset:15480*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15480*0 + 3*552*FLEN/8, x4, x1, x2)

inst_5161:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffffff0; valaddr_reg:x3; val_offset:15483*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15483*0 + 3*553*FLEN/8, x4, x1, x2)

inst_5162:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffffff8; valaddr_reg:x3; val_offset:15486*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15486*0 + 3*554*FLEN/8, x4, x1, x2)

inst_5163:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffffffc; valaddr_reg:x3; val_offset:15489*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15489*0 + 3*555*FLEN/8, x4, x1, x2)

inst_5164:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831ffffffffffffe; valaddr_reg:x3; val_offset:15492*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15492*0 + 3*556*FLEN/8, x4, x1, x2)

inst_5165:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x3438f161103cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f63438f161103cf; op2val:0x8000;
op3val:0x831fffffffffffff; valaddr_reg:x3; val_offset:15495*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15495*0 + 3*557*FLEN/8, x4, x1, x2)

inst_5166:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:15498*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15498*0 + 3*558*FLEN/8, x4, x1, x2)

inst_5167:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:15501*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15501*0 + 3*559*FLEN/8, x4, x1, x2)

inst_5168:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:15504*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15504*0 + 3*560*FLEN/8, x4, x1, x2)

inst_5169:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:15507*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15507*0 + 3*561*FLEN/8, x4, x1, x2)

inst_5170:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:15510*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15510*0 + 3*562*FLEN/8, x4, x1, x2)

inst_5171:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:15513*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15513*0 + 3*563*FLEN/8, x4, x1, x2)

inst_5172:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:15516*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15516*0 + 3*564*FLEN/8, x4, x1, x2)

inst_5173:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:15519*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15519*0 + 3*565*FLEN/8, x4, x1, x2)

inst_5174:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:15522*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15522*0 + 3*566*FLEN/8, x4, x1, x2)

inst_5175:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:15525*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15525*0 + 3*567*FLEN/8, x4, x1, x2)

inst_5176:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:15528*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15528*0 + 3*568*FLEN/8, x4, x1, x2)

inst_5177:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:15531*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15531*0 + 3*569*FLEN/8, x4, x1, x2)

inst_5178:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:15534*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15534*0 + 3*570*FLEN/8, x4, x1, x2)

inst_5179:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:15537*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15537*0 + 3*571*FLEN/8, x4, x1, x2)

inst_5180:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:15540*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15540*0 + 3*572*FLEN/8, x4, x1, x2)

inst_5181:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:15543*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15543*0 + 3*573*FLEN/8, x4, x1, x2)

inst_5182:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:15546*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15546*0 + 3*574*FLEN/8, x4, x1, x2)

inst_5183:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:15549*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15549*0 + 3*575*FLEN/8, x4, x1, x2)

inst_5184:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:15552*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15552*0 + 3*576*FLEN/8, x4, x1, x2)

inst_5185:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:15555*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15555*0 + 3*577*FLEN/8, x4, x1, x2)

inst_5186:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:15558*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15558*0 + 3*578*FLEN/8, x4, x1, x2)

inst_5187:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:15561*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15561*0 + 3*579*FLEN/8, x4, x1, x2)

inst_5188:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000000000000; valaddr_reg:x3; val_offset:15564*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15564*0 + 3*580*FLEN/8, x4, x1, x2)

inst_5189:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000000000001; valaddr_reg:x3; val_offset:15567*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15567*0 + 3*581*FLEN/8, x4, x1, x2)

inst_5190:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000000000003; valaddr_reg:x3; val_offset:15570*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15570*0 + 3*582*FLEN/8, x4, x1, x2)

inst_5191:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000000000007; valaddr_reg:x3; val_offset:15573*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15573*0 + 3*583*FLEN/8, x4, x1, x2)

inst_5192:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000000000000f; valaddr_reg:x3; val_offset:15576*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15576*0 + 3*584*FLEN/8, x4, x1, x2)

inst_5193:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000000000001f; valaddr_reg:x3; val_offset:15579*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15579*0 + 3*585*FLEN/8, x4, x1, x2)

inst_5194:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000000000003f; valaddr_reg:x3; val_offset:15582*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15582*0 + 3*586*FLEN/8, x4, x1, x2)

inst_5195:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000000000007f; valaddr_reg:x3; val_offset:15585*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15585*0 + 3*587*FLEN/8, x4, x1, x2)

inst_5196:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000000000000ff; valaddr_reg:x3; val_offset:15588*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15588*0 + 3*588*FLEN/8, x4, x1, x2)

inst_5197:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000000000001ff; valaddr_reg:x3; val_offset:15591*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15591*0 + 3*589*FLEN/8, x4, x1, x2)

inst_5198:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000000000003ff; valaddr_reg:x3; val_offset:15594*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15594*0 + 3*590*FLEN/8, x4, x1, x2)

inst_5199:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000000000007ff; valaddr_reg:x3; val_offset:15597*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15597*0 + 3*591*FLEN/8, x4, x1, x2)

inst_5200:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000000000fff; valaddr_reg:x3; val_offset:15600*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15600*0 + 3*592*FLEN/8, x4, x1, x2)

inst_5201:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000000001fff; valaddr_reg:x3; val_offset:15603*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15603*0 + 3*593*FLEN/8, x4, x1, x2)

inst_5202:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000000003fff; valaddr_reg:x3; val_offset:15606*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15606*0 + 3*594*FLEN/8, x4, x1, x2)

inst_5203:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000000007fff; valaddr_reg:x3; val_offset:15609*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15609*0 + 3*595*FLEN/8, x4, x1, x2)

inst_5204:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000000000ffff; valaddr_reg:x3; val_offset:15612*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15612*0 + 3*596*FLEN/8, x4, x1, x2)

inst_5205:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000000001ffff; valaddr_reg:x3; val_offset:15615*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15615*0 + 3*597*FLEN/8, x4, x1, x2)

inst_5206:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000000003ffff; valaddr_reg:x3; val_offset:15618*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15618*0 + 3*598*FLEN/8, x4, x1, x2)

inst_5207:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000000007ffff; valaddr_reg:x3; val_offset:15621*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15621*0 + 3*599*FLEN/8, x4, x1, x2)

inst_5208:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000000000fffff; valaddr_reg:x3; val_offset:15624*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15624*0 + 3*600*FLEN/8, x4, x1, x2)

inst_5209:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000000001fffff; valaddr_reg:x3; val_offset:15627*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15627*0 + 3*601*FLEN/8, x4, x1, x2)

inst_5210:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000000003fffff; valaddr_reg:x3; val_offset:15630*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15630*0 + 3*602*FLEN/8, x4, x1, x2)

inst_5211:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000000007fffff; valaddr_reg:x3; val_offset:15633*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15633*0 + 3*603*FLEN/8, x4, x1, x2)

inst_5212:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000000ffffff; valaddr_reg:x3; val_offset:15636*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15636*0 + 3*604*FLEN/8, x4, x1, x2)

inst_5213:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000001ffffff; valaddr_reg:x3; val_offset:15639*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15639*0 + 3*605*FLEN/8, x4, x1, x2)

inst_5214:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000003ffffff; valaddr_reg:x3; val_offset:15642*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15642*0 + 3*606*FLEN/8, x4, x1, x2)

inst_5215:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000007ffffff; valaddr_reg:x3; val_offset:15645*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15645*0 + 3*607*FLEN/8, x4, x1, x2)

inst_5216:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000000fffffff; valaddr_reg:x3; val_offset:15648*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15648*0 + 3*608*FLEN/8, x4, x1, x2)

inst_5217:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000001fffffff; valaddr_reg:x3; val_offset:15651*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15651*0 + 3*609*FLEN/8, x4, x1, x2)

inst_5218:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000003fffffff; valaddr_reg:x3; val_offset:15654*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15654*0 + 3*610*FLEN/8, x4, x1, x2)

inst_5219:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000007fffffff; valaddr_reg:x3; val_offset:15657*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15657*0 + 3*611*FLEN/8, x4, x1, x2)

inst_5220:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000000ffffffff; valaddr_reg:x3; val_offset:15660*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15660*0 + 3*612*FLEN/8, x4, x1, x2)

inst_5221:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000001ffffffff; valaddr_reg:x3; val_offset:15663*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15663*0 + 3*613*FLEN/8, x4, x1, x2)

inst_5222:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000003ffffffff; valaddr_reg:x3; val_offset:15666*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15666*0 + 3*614*FLEN/8, x4, x1, x2)

inst_5223:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000007ffffffff; valaddr_reg:x3; val_offset:15669*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15669*0 + 3*615*FLEN/8, x4, x1, x2)

inst_5224:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300000fffffffff; valaddr_reg:x3; val_offset:15672*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15672*0 + 3*616*FLEN/8, x4, x1, x2)

inst_5225:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300001fffffffff; valaddr_reg:x3; val_offset:15675*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15675*0 + 3*617*FLEN/8, x4, x1, x2)

inst_5226:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300003fffffffff; valaddr_reg:x3; val_offset:15678*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15678*0 + 3*618*FLEN/8, x4, x1, x2)

inst_5227:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300007fffffffff; valaddr_reg:x3; val_offset:15681*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15681*0 + 3*619*FLEN/8, x4, x1, x2)

inst_5228:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30000ffffffffff; valaddr_reg:x3; val_offset:15684*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15684*0 + 3*620*FLEN/8, x4, x1, x2)

inst_5229:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30001ffffffffff; valaddr_reg:x3; val_offset:15687*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15687*0 + 3*621*FLEN/8, x4, x1, x2)

inst_5230:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30003ffffffffff; valaddr_reg:x3; val_offset:15690*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15690*0 + 3*622*FLEN/8, x4, x1, x2)

inst_5231:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30007ffffffffff; valaddr_reg:x3; val_offset:15693*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15693*0 + 3*623*FLEN/8, x4, x1, x2)

inst_5232:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3000fffffffffff; valaddr_reg:x3; val_offset:15696*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15696*0 + 3*624*FLEN/8, x4, x1, x2)

inst_5233:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3001fffffffffff; valaddr_reg:x3; val_offset:15699*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15699*0 + 3*625*FLEN/8, x4, x1, x2)

inst_5234:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3003fffffffffff; valaddr_reg:x3; val_offset:15702*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15702*0 + 3*626*FLEN/8, x4, x1, x2)

inst_5235:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x3007fffffffffff; valaddr_reg:x3; val_offset:15705*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15705*0 + 3*627*FLEN/8, x4, x1, x2)

inst_5236:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x300ffffffffffff; valaddr_reg:x3; val_offset:15708*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15708*0 + 3*628*FLEN/8, x4, x1, x2)

inst_5237:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x301ffffffffffff; valaddr_reg:x3; val_offset:15711*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15711*0 + 3*629*FLEN/8, x4, x1, x2)

inst_5238:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x303ffffffffffff; valaddr_reg:x3; val_offset:15714*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15714*0 + 3*630*FLEN/8, x4, x1, x2)

inst_5239:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x307ffffffffffff; valaddr_reg:x3; val_offset:15717*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15717*0 + 3*631*FLEN/8, x4, x1, x2)

inst_5240:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x308000000000000; valaddr_reg:x3; val_offset:15720*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15720*0 + 3*632*FLEN/8, x4, x1, x2)

inst_5241:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30c000000000000; valaddr_reg:x3; val_offset:15723*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15723*0 + 3*633*FLEN/8, x4, x1, x2)

inst_5242:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30e000000000000; valaddr_reg:x3; val_offset:15726*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15726*0 + 3*634*FLEN/8, x4, x1, x2)

inst_5243:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30f000000000000; valaddr_reg:x3; val_offset:15729*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15729*0 + 3*635*FLEN/8, x4, x1, x2)

inst_5244:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30f800000000000; valaddr_reg:x3; val_offset:15732*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15732*0 + 3*636*FLEN/8, x4, x1, x2)

inst_5245:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fc00000000000; valaddr_reg:x3; val_offset:15735*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15735*0 + 3*637*FLEN/8, x4, x1, x2)

inst_5246:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fe00000000000; valaddr_reg:x3; val_offset:15738*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15738*0 + 3*638*FLEN/8, x4, x1, x2)

inst_5247:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ff00000000000; valaddr_reg:x3; val_offset:15741*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15741*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_5248:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ff80000000000; valaddr_reg:x3; val_offset:15744*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15744*0 + 3*640*FLEN/8, x4, x1, x2)

inst_5249:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffc0000000000; valaddr_reg:x3; val_offset:15747*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15747*0 + 3*641*FLEN/8, x4, x1, x2)

inst_5250:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffe0000000000; valaddr_reg:x3; val_offset:15750*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15750*0 + 3*642*FLEN/8, x4, x1, x2)

inst_5251:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fff0000000000; valaddr_reg:x3; val_offset:15753*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15753*0 + 3*643*FLEN/8, x4, x1, x2)

inst_5252:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fff8000000000; valaddr_reg:x3; val_offset:15756*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15756*0 + 3*644*FLEN/8, x4, x1, x2)

inst_5253:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffc000000000; valaddr_reg:x3; val_offset:15759*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15759*0 + 3*645*FLEN/8, x4, x1, x2)

inst_5254:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffe000000000; valaddr_reg:x3; val_offset:15762*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15762*0 + 3*646*FLEN/8, x4, x1, x2)

inst_5255:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffff000000000; valaddr_reg:x3; val_offset:15765*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15765*0 + 3*647*FLEN/8, x4, x1, x2)

inst_5256:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffff800000000; valaddr_reg:x3; val_offset:15768*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15768*0 + 3*648*FLEN/8, x4, x1, x2)

inst_5257:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffc00000000; valaddr_reg:x3; val_offset:15771*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15771*0 + 3*649*FLEN/8, x4, x1, x2)

inst_5258:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffe00000000; valaddr_reg:x3; val_offset:15774*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15774*0 + 3*650*FLEN/8, x4, x1, x2)

inst_5259:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffff00000000; valaddr_reg:x3; val_offset:15777*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15777*0 + 3*651*FLEN/8, x4, x1, x2)

inst_5260:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffff80000000; valaddr_reg:x3; val_offset:15780*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15780*0 + 3*652*FLEN/8, x4, x1, x2)

inst_5261:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffc0000000; valaddr_reg:x3; val_offset:15783*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15783*0 + 3*653*FLEN/8, x4, x1, x2)

inst_5262:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffe0000000; valaddr_reg:x3; val_offset:15786*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15786*0 + 3*654*FLEN/8, x4, x1, x2)

inst_5263:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffff0000000; valaddr_reg:x3; val_offset:15789*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15789*0 + 3*655*FLEN/8, x4, x1, x2)

inst_5264:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffff8000000; valaddr_reg:x3; val_offset:15792*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15792*0 + 3*656*FLEN/8, x4, x1, x2)

inst_5265:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffc000000; valaddr_reg:x3; val_offset:15795*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15795*0 + 3*657*FLEN/8, x4, x1, x2)

inst_5266:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffe000000; valaddr_reg:x3; val_offset:15798*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15798*0 + 3*658*FLEN/8, x4, x1, x2)

inst_5267:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffff000000; valaddr_reg:x3; val_offset:15801*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15801*0 + 3*659*FLEN/8, x4, x1, x2)

inst_5268:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffff800000; valaddr_reg:x3; val_offset:15804*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15804*0 + 3*660*FLEN/8, x4, x1, x2)

inst_5269:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffc00000; valaddr_reg:x3; val_offset:15807*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15807*0 + 3*661*FLEN/8, x4, x1, x2)

inst_5270:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffe00000; valaddr_reg:x3; val_offset:15810*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15810*0 + 3*662*FLEN/8, x4, x1, x2)

inst_5271:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffff00000; valaddr_reg:x3; val_offset:15813*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15813*0 + 3*663*FLEN/8, x4, x1, x2)

inst_5272:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffff80000; valaddr_reg:x3; val_offset:15816*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15816*0 + 3*664*FLEN/8, x4, x1, x2)

inst_5273:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffc0000; valaddr_reg:x3; val_offset:15819*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15819*0 + 3*665*FLEN/8, x4, x1, x2)

inst_5274:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffe0000; valaddr_reg:x3; val_offset:15822*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15822*0 + 3*666*FLEN/8, x4, x1, x2)

inst_5275:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffff0000; valaddr_reg:x3; val_offset:15825*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15825*0 + 3*667*FLEN/8, x4, x1, x2)

inst_5276:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffff8000; valaddr_reg:x3; val_offset:15828*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15828*0 + 3*668*FLEN/8, x4, x1, x2)

inst_5277:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffffc000; valaddr_reg:x3; val_offset:15831*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15831*0 + 3*669*FLEN/8, x4, x1, x2)

inst_5278:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffffe000; valaddr_reg:x3; val_offset:15834*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15834*0 + 3*670*FLEN/8, x4, x1, x2)

inst_5279:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffff000; valaddr_reg:x3; val_offset:15837*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15837*0 + 3*671*FLEN/8, x4, x1, x2)

inst_5280:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffff800; valaddr_reg:x3; val_offset:15840*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15840*0 + 3*672*FLEN/8, x4, x1, x2)

inst_5281:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffffc00; valaddr_reg:x3; val_offset:15843*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15843*0 + 3*673*FLEN/8, x4, x1, x2)

inst_5282:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffffe00; valaddr_reg:x3; val_offset:15846*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15846*0 + 3*674*FLEN/8, x4, x1, x2)

inst_5283:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffffff00; valaddr_reg:x3; val_offset:15849*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15849*0 + 3*675*FLEN/8, x4, x1, x2)

inst_5284:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffffff80; valaddr_reg:x3; val_offset:15852*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15852*0 + 3*676*FLEN/8, x4, x1, x2)

inst_5285:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffffffc0; valaddr_reg:x3; val_offset:15855*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15855*0 + 3*677*FLEN/8, x4, x1, x2)

inst_5286:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffffffe0; valaddr_reg:x3; val_offset:15858*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15858*0 + 3*678*FLEN/8, x4, x1, x2)

inst_5287:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffffff0; valaddr_reg:x3; val_offset:15861*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15861*0 + 3*679*FLEN/8, x4, x1, x2)

inst_5288:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffffff8; valaddr_reg:x3; val_offset:15864*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15864*0 + 3*680*FLEN/8, x4, x1, x2)

inst_5289:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffffffc; valaddr_reg:x3; val_offset:15867*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15867*0 + 3*681*FLEN/8, x4, x1, x2)

inst_5290:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30ffffffffffffe; valaddr_reg:x3; val_offset:15870*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15870*0 + 3*682*FLEN/8, x4, x1, x2)

inst_5291:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x527a574d5361f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6527a574d5361f; op2val:0x0;
op3val:0x30fffffffffffff; valaddr_reg:x3; val_offset:15873*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15873*0 + 3*683*FLEN/8, x4, x1, x2)

inst_5292:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:15876*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15876*0 + 3*684*FLEN/8, x4, x1, x2)

inst_5293:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:15879*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15879*0 + 3*685*FLEN/8, x4, x1, x2)

inst_5294:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:15882*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15882*0 + 3*686*FLEN/8, x4, x1, x2)

inst_5295:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:15885*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15885*0 + 3*687*FLEN/8, x4, x1, x2)

inst_5296:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:15888*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15888*0 + 3*688*FLEN/8, x4, x1, x2)

inst_5297:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:15891*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15891*0 + 3*689*FLEN/8, x4, x1, x2)

inst_5298:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:15894*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15894*0 + 3*690*FLEN/8, x4, x1, x2)

inst_5299:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:15897*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15897*0 + 3*691*FLEN/8, x4, x1, x2)

inst_5300:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:15900*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15900*0 + 3*692*FLEN/8, x4, x1, x2)

inst_5301:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:15903*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15903*0 + 3*693*FLEN/8, x4, x1, x2)

inst_5302:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:15906*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15906*0 + 3*694*FLEN/8, x4, x1, x2)

inst_5303:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:15909*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15909*0 + 3*695*FLEN/8, x4, x1, x2)

inst_5304:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:15912*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15912*0 + 3*696*FLEN/8, x4, x1, x2)

inst_5305:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:15915*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15915*0 + 3*697*FLEN/8, x4, x1, x2)

inst_5306:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:15918*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15918*0 + 3*698*FLEN/8, x4, x1, x2)

inst_5307:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:15921*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15921*0 + 3*699*FLEN/8, x4, x1, x2)

inst_5308:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:15924*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15924*0 + 3*700*FLEN/8, x4, x1, x2)

inst_5309:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:15927*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15927*0 + 3*701*FLEN/8, x4, x1, x2)

inst_5310:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:15930*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15930*0 + 3*702*FLEN/8, x4, x1, x2)

inst_5311:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:15933*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15933*0 + 3*703*FLEN/8, x4, x1, x2)

inst_5312:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:15936*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15936*0 + 3*704*FLEN/8, x4, x1, x2)

inst_5313:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:15939*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15939*0 + 3*705*FLEN/8, x4, x1, x2)

inst_5314:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000000000000; valaddr_reg:x3; val_offset:15942*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15942*0 + 3*706*FLEN/8, x4, x1, x2)

inst_5315:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000000000001; valaddr_reg:x3; val_offset:15945*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15945*0 + 3*707*FLEN/8, x4, x1, x2)

inst_5316:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000000000003; valaddr_reg:x3; val_offset:15948*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15948*0 + 3*708*FLEN/8, x4, x1, x2)

inst_5317:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000000000007; valaddr_reg:x3; val_offset:15951*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15951*0 + 3*709*FLEN/8, x4, x1, x2)

inst_5318:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000000000000f; valaddr_reg:x3; val_offset:15954*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15954*0 + 3*710*FLEN/8, x4, x1, x2)

inst_5319:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000000000001f; valaddr_reg:x3; val_offset:15957*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15957*0 + 3*711*FLEN/8, x4, x1, x2)

inst_5320:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000000000003f; valaddr_reg:x3; val_offset:15960*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15960*0 + 3*712*FLEN/8, x4, x1, x2)

inst_5321:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000000000007f; valaddr_reg:x3; val_offset:15963*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15963*0 + 3*713*FLEN/8, x4, x1, x2)

inst_5322:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800000000000ff; valaddr_reg:x3; val_offset:15966*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15966*0 + 3*714*FLEN/8, x4, x1, x2)

inst_5323:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800000000001ff; valaddr_reg:x3; val_offset:15969*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15969*0 + 3*715*FLEN/8, x4, x1, x2)

inst_5324:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800000000003ff; valaddr_reg:x3; val_offset:15972*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15972*0 + 3*716*FLEN/8, x4, x1, x2)

inst_5325:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800000000007ff; valaddr_reg:x3; val_offset:15975*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15975*0 + 3*717*FLEN/8, x4, x1, x2)

inst_5326:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000000000fff; valaddr_reg:x3; val_offset:15978*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15978*0 + 3*718*FLEN/8, x4, x1, x2)

inst_5327:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000000001fff; valaddr_reg:x3; val_offset:15981*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15981*0 + 3*719*FLEN/8, x4, x1, x2)

inst_5328:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000000003fff; valaddr_reg:x3; val_offset:15984*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15984*0 + 3*720*FLEN/8, x4, x1, x2)

inst_5329:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000000007fff; valaddr_reg:x3; val_offset:15987*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15987*0 + 3*721*FLEN/8, x4, x1, x2)

inst_5330:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000000000ffff; valaddr_reg:x3; val_offset:15990*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15990*0 + 3*722*FLEN/8, x4, x1, x2)

inst_5331:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000000001ffff; valaddr_reg:x3; val_offset:15993*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15993*0 + 3*723*FLEN/8, x4, x1, x2)

inst_5332:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000000003ffff; valaddr_reg:x3; val_offset:15996*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15996*0 + 3*724*FLEN/8, x4, x1, x2)

inst_5333:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000000007ffff; valaddr_reg:x3; val_offset:15999*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 15999*0 + 3*725*FLEN/8, x4, x1, x2)

inst_5334:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800000000fffff; valaddr_reg:x3; val_offset:16002*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16002*0 + 3*726*FLEN/8, x4, x1, x2)

inst_5335:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800000001fffff; valaddr_reg:x3; val_offset:16005*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16005*0 + 3*727*FLEN/8, x4, x1, x2)

inst_5336:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800000003fffff; valaddr_reg:x3; val_offset:16008*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16008*0 + 3*728*FLEN/8, x4, x1, x2)

inst_5337:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800000007fffff; valaddr_reg:x3; val_offset:16011*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16011*0 + 3*729*FLEN/8, x4, x1, x2)

inst_5338:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000000ffffff; valaddr_reg:x3; val_offset:16014*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16014*0 + 3*730*FLEN/8, x4, x1, x2)

inst_5339:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000001ffffff; valaddr_reg:x3; val_offset:16017*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16017*0 + 3*731*FLEN/8, x4, x1, x2)

inst_5340:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000003ffffff; valaddr_reg:x3; val_offset:16020*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16020*0 + 3*732*FLEN/8, x4, x1, x2)

inst_5341:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000007ffffff; valaddr_reg:x3; val_offset:16023*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16023*0 + 3*733*FLEN/8, x4, x1, x2)

inst_5342:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000000fffffff; valaddr_reg:x3; val_offset:16026*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16026*0 + 3*734*FLEN/8, x4, x1, x2)

inst_5343:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000001fffffff; valaddr_reg:x3; val_offset:16029*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16029*0 + 3*735*FLEN/8, x4, x1, x2)

inst_5344:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000003fffffff; valaddr_reg:x3; val_offset:16032*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16032*0 + 3*736*FLEN/8, x4, x1, x2)

inst_5345:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000007fffffff; valaddr_reg:x3; val_offset:16035*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16035*0 + 3*737*FLEN/8, x4, x1, x2)

inst_5346:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800000ffffffff; valaddr_reg:x3; val_offset:16038*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16038*0 + 3*738*FLEN/8, x4, x1, x2)

inst_5347:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800001ffffffff; valaddr_reg:x3; val_offset:16041*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16041*0 + 3*739*FLEN/8, x4, x1, x2)

inst_5348:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800003ffffffff; valaddr_reg:x3; val_offset:16044*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16044*0 + 3*740*FLEN/8, x4, x1, x2)

inst_5349:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800007ffffffff; valaddr_reg:x3; val_offset:16047*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16047*0 + 3*741*FLEN/8, x4, x1, x2)

inst_5350:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080000fffffffff; valaddr_reg:x3; val_offset:16050*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16050*0 + 3*742*FLEN/8, x4, x1, x2)

inst_5351:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080001fffffffff; valaddr_reg:x3; val_offset:16053*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16053*0 + 3*743*FLEN/8, x4, x1, x2)

inst_5352:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080003fffffffff; valaddr_reg:x3; val_offset:16056*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16056*0 + 3*744*FLEN/8, x4, x1, x2)

inst_5353:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080007fffffffff; valaddr_reg:x3; val_offset:16059*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16059*0 + 3*745*FLEN/8, x4, x1, x2)

inst_5354:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808000ffffffffff; valaddr_reg:x3; val_offset:16062*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16062*0 + 3*746*FLEN/8, x4, x1, x2)

inst_5355:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808001ffffffffff; valaddr_reg:x3; val_offset:16065*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16065*0 + 3*747*FLEN/8, x4, x1, x2)

inst_5356:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808003ffffffffff; valaddr_reg:x3; val_offset:16068*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16068*0 + 3*748*FLEN/8, x4, x1, x2)

inst_5357:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808007ffffffffff; valaddr_reg:x3; val_offset:16071*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16071*0 + 3*749*FLEN/8, x4, x1, x2)

inst_5358:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80800fffffffffff; valaddr_reg:x3; val_offset:16074*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16074*0 + 3*750*FLEN/8, x4, x1, x2)

inst_5359:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80801fffffffffff; valaddr_reg:x3; val_offset:16077*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16077*0 + 3*751*FLEN/8, x4, x1, x2)

inst_5360:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80803fffffffffff; valaddr_reg:x3; val_offset:16080*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16080*0 + 3*752*FLEN/8, x4, x1, x2)

inst_5361:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x80807fffffffffff; valaddr_reg:x3; val_offset:16083*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16083*0 + 3*753*FLEN/8, x4, x1, x2)

inst_5362:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8080ffffffffffff; valaddr_reg:x3; val_offset:16086*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16086*0 + 3*754*FLEN/8, x4, x1, x2)

inst_5363:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8081ffffffffffff; valaddr_reg:x3; val_offset:16089*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16089*0 + 3*755*FLEN/8, x4, x1, x2)

inst_5364:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8083ffffffffffff; valaddr_reg:x3; val_offset:16092*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16092*0 + 3*756*FLEN/8, x4, x1, x2)

inst_5365:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8087ffffffffffff; valaddr_reg:x3; val_offset:16095*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16095*0 + 3*757*FLEN/8, x4, x1, x2)

inst_5366:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x8088000000000000; valaddr_reg:x3; val_offset:16098*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16098*0 + 3*758*FLEN/8, x4, x1, x2)

inst_5367:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808c000000000000; valaddr_reg:x3; val_offset:16101*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16101*0 + 3*759*FLEN/8, x4, x1, x2)

inst_5368:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808e000000000000; valaddr_reg:x3; val_offset:16104*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16104*0 + 3*760*FLEN/8, x4, x1, x2)

inst_5369:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808f000000000000; valaddr_reg:x3; val_offset:16107*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16107*0 + 3*761*FLEN/8, x4, x1, x2)

inst_5370:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808f800000000000; valaddr_reg:x3; val_offset:16110*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16110*0 + 3*762*FLEN/8, x4, x1, x2)

inst_5371:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808fc00000000000; valaddr_reg:x3; val_offset:16113*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16113*0 + 3*763*FLEN/8, x4, x1, x2)

inst_5372:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808fe00000000000; valaddr_reg:x3; val_offset:16116*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16116*0 + 3*764*FLEN/8, x4, x1, x2)

inst_5373:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808ff00000000000; valaddr_reg:x3; val_offset:16119*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16119*0 + 3*765*FLEN/8, x4, x1, x2)

inst_5374:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808ff80000000000; valaddr_reg:x3; val_offset:16122*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16122*0 + 3*766*FLEN/8, x4, x1, x2)

inst_5375:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x58f8cdea3010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f658f8cdea3010f; op2val:0x8000;
op3val:0x808ffc0000000000; valaddr_reg:x3; val_offset:16125*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 16125*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9373116724464844799,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687423,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687424,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375368524278530048,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375931474231951360,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376212949208662016,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376353686697017344,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376424055441195008,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376459239813283840,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376476831999328256,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376485628092350464,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376490026138861568,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376492225162117120,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376493324673744896,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376493874429558784,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494149307465728,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494286746419200,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494355465895936,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494389825634304,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494407005503488,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494415595438080,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494419890405376,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494422037889024,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423111630848,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423648501760,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423916937216,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424051154944,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424118263808,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424151818240,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424168595456,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424176984064,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424181178368,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424183275520,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424184324096,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424184848384,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185110528,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185241600,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185307136,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185339904,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185356288,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185364480,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185368576,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185370624,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185371648,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372160,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372416,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372544,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372608,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372640,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372656,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372664,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372668,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372670,64,FLEN)
NAN_BOXED(6873264911596031855,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372671,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370496,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370623,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370751,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371007,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371519,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627372543,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627374591,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627378687,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627386879,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627403263,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627436031,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627501567,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627632639,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627894783,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599628419071,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599629467647,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599631564799,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599635759103,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599644147711,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599660924927,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599694479359,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599761588223,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599895805951,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600164241407,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600701112319,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503601774854143,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503603922337791,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503608217305087,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503616807239679,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503633987108863,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503668346847231,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503737066323967,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503874505277439,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504149383184383,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504699138998271,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4505798650626047,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4507997673881599,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4512395720392703,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4521191813414911,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4538783999459327,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4573968371548159,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4644337115725823,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4785074604081151,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5066549580791807,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5629499534213119,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055743,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055744,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7881299347898368,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8444249301319680,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8725724278030336,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8866461766385664,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8936830510563328,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8972014882652160,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8989607068696576,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8998403161718784,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9002801208229888,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9005000231485440,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006099743113216,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006649498927104,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006924376834048,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007061815787520,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007130535264256,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007164895002624,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007182074871808,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007190664806400,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007194959773696,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007197107257344,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198180999168,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198717870080,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198986305536,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199120523264,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199187632128,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199221186560,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199237963776,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199246352384,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199250546688,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199252643840,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199253692416,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254216704,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254478848,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254609920,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254675456,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254708224,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254724608,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254732800,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254736896,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254738944,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254739968,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740480,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740736,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740864,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6873287038642531055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740991,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117056,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117057,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117059,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117063,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117071,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117087,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117119,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117183,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117311,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117567,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379118079,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379119103,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379121151,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379125247,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379133439,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379149823,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379182591,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379248127,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379379199,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379641343,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813380165631,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813381214207,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813383311359,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813387505663,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813395894271,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813412671487,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813446225919,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813513334783,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813647552511,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813915987967,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098814452858879,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098815526600703,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098817674084351,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098821969051647,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098830558986239,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098847738855423,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098882098593791,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098950818070527,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099088257023999,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099363134930943,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099912890744831,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507101012402372607,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507103211425628159,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507107609472139263,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507116405565161471,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507133997751205887,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507169182123294719,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507239550867472383,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507380288355827711,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507661763332538367,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9508224713285959679,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802303,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802304,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9510476513099644928,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511039463053066240,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511320938029776896,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511461675518132224,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511532044262309888,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511567228634398720,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511584820820443136,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511593616913465344,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511598014959976448,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511600213983232000,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601313494859776,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601863250673664,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602138128580608,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602275567534080,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602344287010816,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602378646749184,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602395826618368,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602404416552960,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602408711520256,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602410859003904,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602411932745728,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412469616640,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412738052096,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412872269824,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412939378688,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412972933120,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412989710336,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412998098944,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413002293248,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413004390400,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005438976,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005963264,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006225408,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006356480,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006422016,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006454784,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006471168,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006479360,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006483456,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006485504,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006486528,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487040,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487296,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487424,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487488,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487520,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487536,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487544,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487548,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487550,64,FLEN)
NAN_BOXED(6873330666826868319,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487551,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931328,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931329,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931331,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931335,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931343,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931359,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931391,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931455,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931583,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931839,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976932351,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976933375,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976935423,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976939519,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976947711,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976964095,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976996863,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977062399,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977193471,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977455615,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783977979903,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783979028479,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783981125631,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783985319935,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783993708543,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784010485759,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784044040191,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784111149055,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784245366783,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654784513802239,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654785050673151,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654786124414975,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654788271898623,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654792566865919,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654801156800511,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654818336669695,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654852696408063,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654921415884799,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655058854838271,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655333732745215,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193655883488559103,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193656983000186879,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193659182023442431,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193663580069953535,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193672376162975743,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193689968349020159,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193725152721108991,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193795521465286655,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193936258953641983,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194217733930352639,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(194780683883773951,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616575,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(195906583790616576,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197032483697459200,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197595433650880512,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(197876908627591168,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198017646115946496,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198088014860124160,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198123199232212992,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198140791418257408,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198149587511279616,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198153985557790720,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198156184581046272,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157284092674048,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157833848487936,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158108726394880,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158246165348352,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158314884825088,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158349244563456,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158366424432640,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158375014367232,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158379309334528,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158381456818176,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158382530560000,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383067430912,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383335866368,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383470084096,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383537192960,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383570747392,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383587524608,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383595913216,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383600107520,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383602204672,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603253248,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603777536,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604039680,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604170752,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604236288,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604269056,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604285440,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604293632,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604297728,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604299776,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604300800,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301312,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301568,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301696,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301760,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301792,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301808,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301816,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301820,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301822,64,FLEN)
NAN_BOXED(6873356300165541647,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301823,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930112,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930113,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930115,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930119,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930127,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930143,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930175,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930239,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930367,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930623,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595931135,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595932159,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595934207,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595938303,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595946495,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595962879,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595995647,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596061183,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596192255,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596454399,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596978687,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418598027263,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418600124415,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418604318719,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418612707327,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418629484543,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418663038975,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418730147839,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418864365567,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419132801023,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419669671935,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048420743413759,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048422890897407,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048427185864703,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048435775799295,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048452955668479,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048487315406847,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048556034883583,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048693473837055,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048968351743999,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444049518107557887,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444050617619185663,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444052816642441215,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444057214688952319,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444066010781974527,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444083602968018943,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444118787340107775,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444189156084285439,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444329893572640767,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444611368549351423,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9445174318502772735,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615359,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615360,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447426118316457984,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447989068269879296,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448270543246589952,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448411280734945280,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448481649479122944,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448516833851211776,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448534426037256192,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448543222130278400,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448547620176789504,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448549819200045056,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448550918711672832,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551468467486720,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551743345393664,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551880784347136,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551949503823872,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551983863562240,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552001043431424,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552009633366016,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552013928333312,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552016075816960,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017149558784,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017686429696,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017954865152,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018089082880,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018156191744,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018189746176,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018206523392,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018214912000,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018219106304,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018221203456,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222252032,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222776320,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223038464,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223169536,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223235072,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223267840,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223284224,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223292416,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223296512,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223298560,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223299584,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300096,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300352,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300480,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300544,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300576,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300592,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300600,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300604,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300606,64,FLEN)
NAN_BOXED(6873411738127107023,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300607,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783808,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783809,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783811,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783815,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783823,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783839,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783871,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783935,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784063,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784319,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784831,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113785855,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113787903,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113791999,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113800191,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113816575,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113849343,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113914879,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782114045951,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782114308095,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782114832383,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782115880959,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782117978111,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782122172415,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782130561023,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782147338239,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782180892671,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782248001535,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782382219263,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782650654719,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172783187525631,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172784261267455,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172786408751103,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172790703718399,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172799293652991,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172816473522175,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172850833260543,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172919552737279,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216173056991690751,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216173331869597695,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216173881625411583,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216174981137039359,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216177180160294911,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216181578206806015,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216190374299828223,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216207966485872639,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216243150857961471,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216313519602139135,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216454257090494463,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216735732067205119,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(217298682020626431,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(218424581927469055,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(218424581927469056,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(219550481834311680,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220113431787732992,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220394906764443648,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220535644252798976,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220606012996976640,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220641197369065472,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220658789555109888,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220667585648132096,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220671983694643200,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220674182717898752,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220675282229526528,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220675831985340416,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676106863247360,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676244302200832,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676313021677568,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676347381415936,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676364561285120,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676373151219712,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676377446187008,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676379593670656,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676380667412480,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381204283392,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381472718848,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381606936576,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381674045440,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381707599872,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381724377088,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381732765696,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381736960000,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381739057152,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381740105728,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381740630016,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381740892160,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741023232,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741088768,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741121536,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741137920,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741146112,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741150208,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741152256,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741153280,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741153792,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154048,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154176,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154240,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154272,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154288,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154296,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154300,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154302,64,FLEN)
NAN_BOXED(6873943997834147359,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154303,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739776,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739777,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739779,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739783,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739791,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739807,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739839,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739903,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873740031,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873740287,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873740799,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873741823,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873743871,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873747967,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873756159,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873772543,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873805311,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873870847,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833874001919,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833874264063,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833874788351,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833875836927,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833877934079,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833882128383,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833890516991,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833907294207,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833940848639,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834007957503,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834142175231,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834410610687,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834947481599,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400836021223423,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400838168707071,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400842463674367,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400851053608959,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400868233478143,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400902593216511,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400971312693247,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259401108751646719,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259401383629553663,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259401933385367551,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259403032896995327,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259405231920250879,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259409629966761983,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259418426059784191,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259436018245828607,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259471202617917439,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259541571362095103,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259682308850450431,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259963783827161087,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9260526733780582399,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9261652633687425023,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9261652633687425024,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9262778533594267648,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263341483547688960,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263622958524399616,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263763696012754944,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263834064756932608,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263869249129021440,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263886841315065856,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263895637408088064,64,FLEN)
NAN_BOXED(6874058241444348175,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263900035454599168,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
